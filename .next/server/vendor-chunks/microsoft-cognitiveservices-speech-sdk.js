"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/microsoft-cognitiveservices-speech-sdk";
exports.ids = ["vendor-chunks/microsoft-cognitiveservices-speech-sdk"];
exports.modules = {

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/microsoft.cognitiveservices.speech.sdk.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/microsoft.cognitiveservices.speech.sdk.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nconst Exports_js_1 = __webpack_require__(/*! ./src/common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\n// Note: this instantiation ensures the above import isn't\n// removed on compile. The import being absent causes an error on running\nvoid new Exports_js_1.AgentConfig();\n// Speech SDK API\n__exportStar(__webpack_require__(/*! ./src/sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\"), exports);\n\n//# sourceMappingURL=microsoft.cognitiveservices.speech.sdk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvbWljcm9zb2Z0LmNvZ25pdGl2ZXNlcnZpY2VzLnNwZWVjaC5zZGsuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsbUNBQW1DLG9DQUFvQyxnQkFBZ0I7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixtQkFBTyxDQUFDLDRJQUFnQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyx3SEFBc0I7O0FBRTNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvbWljcm9zb2Z0LmNvZ25pdGl2ZXNlcnZpY2VzLnNwZWVjaC5zZGsuanM/YzRkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi9zcmMvY29tbW9uLnNwZWVjaC9FeHBvcnRzLmpzXCIpO1xuLy8gTm90ZTogdGhpcyBpbnN0YW50aWF0aW9uIGVuc3VyZXMgdGhlIGFib3ZlIGltcG9ydCBpc24ndFxuLy8gcmVtb3ZlZCBvbiBjb21waWxlLiBUaGUgaW1wb3J0IGJlaW5nIGFic2VudCBjYXVzZXMgYW4gZXJyb3Igb24gcnVubmluZ1xudm9pZCBuZXcgRXhwb3J0c19qc18xLkFnZW50Q29uZmlnKCk7XG4vLyBTcGVlY2ggU0RLIEFQSVxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NyYy9zZGsvRXhwb3J0cy5qc1wiKSwgZXhwb3J0cyk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pY3Jvc29mdC5jb2duaXRpdmVzZXJ2aWNlcy5zcGVlY2guc2RrLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/microsoft.cognitiveservices.speech.sdk.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ConsoleLoggingListener.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ConsoleLoggingListener.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConsoleLoggingListener = void 0;\nconst fs = __importStar(__webpack_require__(/*! fs */ \"fs\"));\nconst LogLevel_js_1 = __webpack_require__(/*! ../sdk/LogLevel.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LogLevel.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../sdk/Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nclass ConsoleLoggingListener {\n    constructor(logLevelFilter = LogLevel_js_1.LogLevel.None) {\n        this.privLogPath = undefined;\n        this.privEnableConsoleOutput = true;\n        this.privLogLevelFilter = logLevelFilter;\n    }\n    set logPath(path) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available\");\n        this.privLogPath = path;\n    }\n    set enableConsoleOutput(enableOutput) {\n        this.privEnableConsoleOutput = enableOutput;\n    }\n    onEvent(event) {\n        if (event.eventType >= this.privLogLevelFilter) {\n            const log = this.toString(event);\n            if (!!this.logCallback) {\n                this.logCallback(log);\n            }\n            if (!!this.privLogPath) {\n                fs.writeFileSync(this.privLogPath, log + \"\\n\", { flag: \"a+\" });\n            }\n            if (this.privEnableConsoleOutput) {\n                switch (event.eventType) {\n                    case LogLevel_js_1.LogLevel.Debug:\n                        // eslint-disable-next-line no-console\n                        console.debug(log);\n                        break;\n                    case LogLevel_js_1.LogLevel.Info:\n                        // eslint-disable-next-line no-console\n                        console.info(log);\n                        break;\n                    case LogLevel_js_1.LogLevel.Warning:\n                        // eslint-disable-next-line no-console\n                        console.warn(log);\n                        break;\n                    case LogLevel_js_1.LogLevel.Error:\n                        // eslint-disable-next-line no-console\n                        console.error(log);\n                        break;\n                    default:\n                        // eslint-disable-next-line no-console\n                        console.log(log);\n                        break;\n                }\n            }\n        }\n    }\n    toString(event) {\n        const logFragments = [\n            `${event.eventTime}`,\n            `${event.name}`,\n        ];\n        const e = event;\n        for (const prop in e) {\n            if (prop && event.hasOwnProperty(prop) &&\n                prop !== \"eventTime\" && prop !== \"eventType\" &&\n                prop !== \"eventId\" && prop !== \"name\" &&\n                prop !== \"constructor\") {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                const value = e[prop];\n                let valueToLog = \"<NULL>\";\n                if (value !== undefined && value !== null) {\n                    if (typeof (value) === \"number\" || typeof (value) === \"string\") {\n                        valueToLog = value.toString();\n                    }\n                    else {\n                        valueToLog = JSON.stringify(value);\n                    }\n                }\n                logFragments.push(`${prop}: ${valueToLog}`);\n            }\n        }\n        return logFragments.join(\" | \");\n    }\n}\nexports.ConsoleLoggingListener = ConsoleLoggingListener;\n\n//# sourceMappingURL=ConsoleLoggingListener.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5icm93c2VyL0NvbnNvbGVMb2dnaW5nTGlzdGVuZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLG9DQUFvQyxnQkFBZ0I7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUIsd0JBQXdCLG1CQUFPLENBQUMsY0FBSTtBQUNwQyxzQkFBc0IsbUJBQU8sQ0FBQyx1SEFBb0I7QUFDbEQsdUJBQXVCLG1CQUFPLENBQUMseUhBQXFCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0I7QUFDL0IsZUFBZSxXQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxLQUFLLElBQUksV0FBVztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCOztBQUU5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uYnJvd3Nlci9Db25zb2xlTG9nZ2luZ0xpc3RlbmVyLmpzPzI4MjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFzc2lnbm1lbnQgKi9cbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29uc29sZUxvZ2dpbmdMaXN0ZW5lciA9IHZvaWQgMDtcbmNvbnN0IGZzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJmc1wiKSk7XG5jb25zdCBMb2dMZXZlbF9qc18xID0gcmVxdWlyZShcIi4uL3Nkay9Mb2dMZXZlbC5qc1wiKTtcbmNvbnN0IENvbnRyYWN0c19qc18xID0gcmVxdWlyZShcIi4uL3Nkay9Db250cmFjdHMuanNcIik7XG5jbGFzcyBDb25zb2xlTG9nZ2luZ0xpc3RlbmVyIHtcbiAgICBjb25zdHJ1Y3Rvcihsb2dMZXZlbEZpbHRlciA9IExvZ0xldmVsX2pzXzEuTG9nTGV2ZWwuTm9uZSkge1xuICAgICAgICB0aGlzLnByaXZMb2dQYXRoID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnByaXZFbmFibGVDb25zb2xlT3V0cHV0ID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5wcml2TG9nTGV2ZWxGaWx0ZXIgPSBsb2dMZXZlbEZpbHRlcjtcbiAgICB9XG4gICAgc2V0IGxvZ1BhdGgocGF0aCkge1xuICAgICAgICBDb250cmFjdHNfanNfMS5Db250cmFjdHMudGhyb3dJZk51bGxPclVuZGVmaW5lZChmcy5vcGVuU3luYywgXCJcXG5GaWxlIFN5c3RlbSBhY2Nlc3Mgbm90IGF2YWlsYWJsZVwiKTtcbiAgICAgICAgdGhpcy5wcml2TG9nUGF0aCA9IHBhdGg7XG4gICAgfVxuICAgIHNldCBlbmFibGVDb25zb2xlT3V0cHV0KGVuYWJsZU91dHB1dCkge1xuICAgICAgICB0aGlzLnByaXZFbmFibGVDb25zb2xlT3V0cHV0ID0gZW5hYmxlT3V0cHV0O1xuICAgIH1cbiAgICBvbkV2ZW50KGV2ZW50KSB7XG4gICAgICAgIGlmIChldmVudC5ldmVudFR5cGUgPj0gdGhpcy5wcml2TG9nTGV2ZWxGaWx0ZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGxvZyA9IHRoaXMudG9TdHJpbmcoZXZlbnQpO1xuICAgICAgICAgICAgaWYgKCEhdGhpcy5sb2dDYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIHRoaXMubG9nQ2FsbGJhY2sobG9nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghIXRoaXMucHJpdkxvZ1BhdGgpIHtcbiAgICAgICAgICAgICAgICBmcy53cml0ZUZpbGVTeW5jKHRoaXMucHJpdkxvZ1BhdGgsIGxvZyArIFwiXFxuXCIsIHsgZmxhZzogXCJhK1wiIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMucHJpdkVuYWJsZUNvbnNvbGVPdXRwdXQpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGV2ZW50LmV2ZW50VHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIExvZ0xldmVsX2pzXzEuTG9nTGV2ZWwuRGVidWc6XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1Zyhsb2cpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgTG9nTGV2ZWxfanNfMS5Mb2dMZXZlbC5JbmZvOlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbyhsb2cpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgTG9nTGV2ZWxfanNfMS5Mb2dMZXZlbC5XYXJuaW5nOlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2Fybihsb2cpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgTG9nTGV2ZWxfanNfMS5Mb2dMZXZlbC5FcnJvcjpcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGxvZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhsb2cpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHRvU3RyaW5nKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IGxvZ0ZyYWdtZW50cyA9IFtcbiAgICAgICAgICAgIGAke2V2ZW50LmV2ZW50VGltZX1gLFxuICAgICAgICAgICAgYCR7ZXZlbnQubmFtZX1gLFxuICAgICAgICBdO1xuICAgICAgICBjb25zdCBlID0gZXZlbnQ7XG4gICAgICAgIGZvciAoY29uc3QgcHJvcCBpbiBlKSB7XG4gICAgICAgICAgICBpZiAocHJvcCAmJiBldmVudC5oYXNPd25Qcm9wZXJ0eShwcm9wKSAmJlxuICAgICAgICAgICAgICAgIHByb3AgIT09IFwiZXZlbnRUaW1lXCIgJiYgcHJvcCAhPT0gXCJldmVudFR5cGVcIiAmJlxuICAgICAgICAgICAgICAgIHByb3AgIT09IFwiZXZlbnRJZFwiICYmIHByb3AgIT09IFwibmFtZVwiICYmXG4gICAgICAgICAgICAgICAgcHJvcCAhPT0gXCJjb25zdHJ1Y3RvclwiKSB7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZVtwcm9wXTtcbiAgICAgICAgICAgICAgICBsZXQgdmFsdWVUb0xvZyA9IFwiPE5VTEw+XCI7XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiAodmFsdWUpID09PSBcIm51bWJlclwiIHx8IHR5cGVvZiAodmFsdWUpID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVRvTG9nID0gdmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlVG9Mb2cgPSBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbG9nRnJhZ21lbnRzLnB1c2goYCR7cHJvcH06ICR7dmFsdWVUb0xvZ31gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbG9nRnJhZ21lbnRzLmpvaW4oXCIgfCBcIik7XG4gICAgfVxufVxuZXhwb3J0cy5Db25zb2xlTG9nZ2luZ0xpc3RlbmVyID0gQ29uc29sZUxvZ2dpbmdMaXN0ZW5lcjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29uc29sZUxvZ2dpbmdMaXN0ZW5lci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ConsoleLoggingListener.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./ConsoleLoggingListener.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ConsoleLoggingListener.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IRecorder.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/IRecorder.js\"), exports);\n__exportStar(__webpack_require__(/*! ./MicAudioSource.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/MicAudioSource.js\"), exports);\n__exportStar(__webpack_require__(/*! ./FileAudioSource.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/FileAudioSource.js\"), exports);\n__exportStar(__webpack_require__(/*! ./PCMRecorder.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/PCMRecorder.js\"), exports);\n__exportStar(__webpack_require__(/*! ./WebsocketConnection.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketConnection.js\"), exports);\n__exportStar(__webpack_require__(/*! ./WebsocketMessageAdapter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketMessageAdapter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ReplayableAudioNode.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ReplayableAudioNode.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ProxyInfo.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ProxyInfo.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RestMessageAdapter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestMessageAdapter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RestConfigBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestConfigBase.js\"), exports);\n\n//# sourceMappingURL=Exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5icm93c2VyL0V4cG9ydHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMseUpBQTZCO0FBQ2xELGFBQWEsbUJBQU8sQ0FBQywrSEFBZ0I7QUFDckMsYUFBYSxtQkFBTyxDQUFDLHlJQUFxQjtBQUMxQyxhQUFhLG1CQUFPLENBQUMsMklBQXNCO0FBQzNDLGFBQWEsbUJBQU8sQ0FBQyxtSUFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLG1KQUEwQjtBQUMvQyxhQUFhLG1CQUFPLENBQUMsMkpBQThCO0FBQ25ELGFBQWEsbUJBQU8sQ0FBQyxtSkFBMEI7QUFDL0MsYUFBYSxtQkFBTyxDQUFDLCtIQUFnQjtBQUNyQyxhQUFhLG1CQUFPLENBQUMsaUpBQXlCO0FBQzlDLGFBQWEsbUJBQU8sQ0FBQyx5SUFBcUI7O0FBRTFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5icm93c2VyL0V4cG9ydHMuanM/MGJlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0NvbnNvbGVMb2dnaW5nTGlzdGVuZXIuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0lSZWNvcmRlci5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vTWljQXVkaW9Tb3VyY2UuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0ZpbGVBdWRpb1NvdXJjZS5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUENNUmVjb3JkZXIuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1dlYnNvY2tldENvbm5lY3Rpb24uanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1dlYnNvY2tldE1lc3NhZ2VBZGFwdGVyLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9SZXBsYXlhYmxlQXVkaW9Ob2RlLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Qcm94eUluZm8uanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1Jlc3RNZXNzYWdlQWRhcHRlci5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUmVzdENvbmZpZ0Jhc2UuanNcIiksIGV4cG9ydHMpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1FeHBvcnRzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/FileAudioSource.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/FileAudioSource.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FileAudioSource = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst AudioStreamFormat_js_1 = __webpack_require__(/*! ../sdk/Audio/AudioStreamFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js\");\nclass FileAudioSource {\n    constructor(file, filename, audioSourceId) {\n        this.privStreams = {};\n        this.privHeaderEnd = 44;\n        this.privId = audioSourceId ? audioSourceId : Exports_js_2.createNoDashGuid();\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privSource = file;\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && this.privSource instanceof Blob) {\n            this.privFilename = file.name;\n        }\n        else {\n            this.privFilename = filename || \"unknown.wav\";\n        }\n        // Read the header.\n        this.privAudioFormatPromise = this.readHeader();\n    }\n    get format() {\n        return this.privAudioFormatPromise;\n    }\n    turnOn() {\n        if (this.privFilename.lastIndexOf(\".wav\") !== this.privFilename.length - 4) {\n            const errorMsg = this.privFilename + \" is not supported. Only WAVE files are allowed at the moment.\";\n            this.onEvent(new Exports_js_2.AudioSourceErrorEvent(errorMsg, \"\"));\n            return Promise.reject(errorMsg);\n        }\n        this.onEvent(new Exports_js_2.AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n        return;\n    }\n    id() {\n        return this.privId;\n    }\n    async attach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        const stream = await this.upload(audioNodeId);\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n        return Promise.resolve({\n            detach: async () => {\n                stream.readEnded();\n                delete this.privStreams[audioNodeId];\n                this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                await this.turnOff();\n            },\n            id: () => audioNodeId,\n            read: () => stream.read(),\n        });\n    }\n    detach(audioNodeId) {\n        if (audioNodeId && this.privStreams[audioNodeId]) {\n            this.privStreams[audioNodeId].close();\n            delete this.privStreams[audioNodeId];\n            this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n        }\n    }\n    turnOff() {\n        for (const streamId in this.privStreams) {\n            if (streamId) {\n                const stream = this.privStreams[streamId];\n                if (stream && !stream.isClosed) {\n                    stream.close();\n                }\n            }\n        }\n        this.onEvent(new Exports_js_2.AudioSourceOffEvent(this.privId)); // no stream now\n        return Promise.resolve();\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return this.privAudioFormatPromise.then((result) => (Promise.resolve({\n            bitspersample: result.bitsPerSample,\n            channelcount: result.channels,\n            connectivity: Exports_js_1.connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: \"File\",\n            samplerate: result.samplesPerSec,\n            type: Exports_js_1.type.File,\n        })));\n    }\n    readHeader() {\n        // Read the wave header.\n        const maxHeaderSize = 4296;\n        const header = this.privSource.slice(0, maxHeaderSize);\n        const headerResult = new Exports_js_2.Deferred();\n        const processHeader = (header) => {\n            const view = new DataView(header);\n            const getWord = (index) => String.fromCharCode(view.getUint8(index), view.getUint8(index + 1), view.getUint8(index + 2), view.getUint8(index + 3));\n            // RIFF 4 bytes.\n            if (\"RIFF\" !== getWord(0)) {\n                headerResult.reject(\"Invalid WAV header in file, RIFF was not found\");\n                return;\n            }\n            // length, 4 bytes\n            // RIFF Type & fmt 8 bytes\n            if (\"WAVE\" !== getWord(8) || \"fmt \" !== getWord(12)) {\n                headerResult.reject(\"Invalid WAV header in file, WAVEfmt was not found\");\n                return;\n            }\n            const formatSize = view.getInt32(16, true);\n            const channelCount = view.getUint16(22, true);\n            const sampleRate = view.getUint32(24, true);\n            const bitsPerSample = view.getUint16(34, true);\n            // Confirm if header is 44 bytes long.\n            let pos = 36 + Math.max(formatSize - 16, 0);\n            for (; getWord(pos) !== \"data\"; pos += 2) {\n                if (pos > maxHeaderSize - 8) {\n                    headerResult.reject(\"Invalid WAV header in file, data block was not found\");\n                    return;\n                }\n            }\n            this.privHeaderEnd = pos + 8;\n            headerResult.resolve(AudioStreamFormat_js_1.AudioStreamFormat.getWaveFormatPCM(sampleRate, bitsPerSample, channelCount));\n        };\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && header instanceof Blob) {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                const header = event.target.result;\n                processHeader(header);\n            };\n            reader.readAsArrayBuffer(header);\n        }\n        else {\n            const h = header;\n            processHeader(h.buffer.slice(h.byteOffset, h.byteOffset + h.byteLength));\n        }\n        return headerResult.promise;\n    }\n    async upload(audioNodeId) {\n        const onerror = (error) => {\n            const errorMsg = `Error occurred while processing '${this.privFilename}'. ${error}`;\n            this.onEvent(new Exports_js_2.AudioStreamNodeErrorEvent(this.privId, audioNodeId, errorMsg));\n            throw new Error(errorMsg);\n        };\n        try {\n            await this.turnOn();\n            const format = await this.privAudioFormatPromise;\n            const stream = new Exports_js_2.ChunkedArrayBufferStream(format.avgBytesPerSec / 10, audioNodeId);\n            this.privStreams[audioNodeId] = stream;\n            const chunk = this.privSource.slice(this.privHeaderEnd);\n            const processFile = (buff) => {\n                if (stream.isClosed) {\n                    return; // output stream was closed (somebody called TurnOff). We're done here.\n                }\n                stream.writeStreamChunk({\n                    buffer: buff,\n                    isEnd: false,\n                    timeReceived: Date.now(),\n                });\n                stream.close();\n            };\n            if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && chunk instanceof Blob) {\n                const reader = new FileReader();\n                reader.onerror = (ev) => onerror(ev.toString());\n                reader.onload = (event) => {\n                    const fileBuffer = event.target.result;\n                    processFile(fileBuffer);\n                };\n                reader.readAsArrayBuffer(chunk);\n            }\n            else {\n                const c = chunk;\n                processFile(c.buffer.slice(c.byteOffset, c.byteOffset + c.byteLength));\n            }\n            return stream;\n        }\n        catch (e) {\n            onerror(e);\n        }\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n}\nexports.FileAudioSource = FileAudioSource;\n\n//# sourceMappingURL=FileAudioSource.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/FileAudioSource.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/IRecorder.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/IRecorder.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=IRecorder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5icm93c2VyL0lSZWNvcmRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5icm93c2VyL0lSZWNvcmRlci5qcz82YTM1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlSZWNvcmRlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/IRecorder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/MicAudioSource.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/MicAudioSource.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MicAudioSource = exports.AudioWorkletSourceURLPropertyName = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst AudioStreamFormat_js_1 = __webpack_require__(/*! ../sdk/Audio/AudioStreamFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js\");\nexports.AudioWorkletSourceURLPropertyName = \"MICROPHONE-WorkletSourceUrl\";\nclass MicAudioSource {\n    constructor(privRecorder, deviceId, audioSourceId, mediaStream) {\n        this.privRecorder = privRecorder;\n        this.deviceId = deviceId;\n        this.privStreams = {};\n        this.privOutputChunkSize = MicAudioSource.AUDIOFORMAT.avgBytesPerSec / 10;\n        this.privId = audioSourceId ? audioSourceId : Exports_js_2.createNoDashGuid();\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privMediaStream = mediaStream || null;\n        this.privIsClosing = false;\n    }\n    get format() {\n        return Promise.resolve(MicAudioSource.AUDIOFORMAT);\n    }\n    turnOn() {\n        if (this.privInitializeDeferral) {\n            return this.privInitializeDeferral.promise;\n        }\n        this.privInitializeDeferral = new Exports_js_2.Deferred();\n        try {\n            this.createAudioContext();\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                const typedError = error;\n                this.privInitializeDeferral.reject(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                this.privInitializeDeferral.reject(error);\n            }\n            return this.privInitializeDeferral.promise;\n        }\n        const nav = window.navigator;\n        let getUserMedia = (\n        // eslint-disable-next-line\n        nav.getUserMedia ||\n            nav.webkitGetUserMedia ||\n            nav.mozGetUserMedia ||\n            nav.msGetUserMedia);\n        if (!!nav.mediaDevices) {\n            getUserMedia = (constraints, successCallback, errorCallback) => {\n                nav.mediaDevices\n                    .getUserMedia(constraints)\n                    .then(successCallback)\n                    .catch(errorCallback);\n            };\n        }\n        if (!getUserMedia) {\n            const errorMsg = \"Browser does not support getUserMedia.\";\n            this.privInitializeDeferral.reject(errorMsg);\n            this.onEvent(new Exports_js_2.AudioSourceErrorEvent(errorMsg, \"\")); // mic initialized error - no streamid at this point\n        }\n        else {\n            const next = () => {\n                this.onEvent(new Exports_js_2.AudioSourceInitializingEvent(this.privId)); // no stream id\n                if (this.privMediaStream && this.privMediaStream.active) {\n                    this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n                    this.privInitializeDeferral.resolve();\n                }\n                else {\n                    getUserMedia({ audio: this.deviceId ? { deviceId: this.deviceId } : true, video: false }, (mediaStream) => {\n                        this.privMediaStream = mediaStream;\n                        this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n                        this.privInitializeDeferral.resolve();\n                    }, (error) => {\n                        const errorMsg = `Error occurred during microphone initialization: ${error}`;\n                        this.privInitializeDeferral.reject(errorMsg);\n                        this.onEvent(new Exports_js_2.AudioSourceErrorEvent(this.privId, errorMsg));\n                    });\n                }\n            };\n            if (this.privContext.state === \"suspended\") {\n                // NOTE: On iOS, the Web Audio API requires sounds to be triggered from an explicit user action.\n                // https://github.com/WebAudio/web-audio-api/issues/790\n                this.privContext.resume()\n                    .then(next)\n                    .catch((reason) => {\n                    this.privInitializeDeferral.reject(`Failed to initialize audio context: ${reason}`);\n                });\n            }\n            else {\n                next();\n            }\n        }\n        return this.privInitializeDeferral.promise;\n    }\n    id() {\n        return this.privId;\n    }\n    attach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        return this.listen(audioNodeId).then((stream) => {\n            this.onEvent(new Exports_js_2.AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n            return {\n                detach: async () => {\n                    stream.readEnded();\n                    delete this.privStreams[audioNodeId];\n                    this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                    return this.turnOff();\n                },\n                id: () => audioNodeId,\n                read: () => stream.read(),\n            };\n        });\n    }\n    detach(audioNodeId) {\n        if (audioNodeId && this.privStreams[audioNodeId]) {\n            this.privStreams[audioNodeId].close();\n            delete this.privStreams[audioNodeId];\n            this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n        }\n    }\n    async turnOff() {\n        for (const streamId in this.privStreams) {\n            if (streamId) {\n                const stream = this.privStreams[streamId];\n                if (stream) {\n                    stream.close();\n                }\n            }\n        }\n        this.onEvent(new Exports_js_2.AudioSourceOffEvent(this.privId)); // no stream now\n        if (this.privInitializeDeferral) {\n            // Correctly handle when browser forces mic off before turnOn() completes\n            // eslint-disable-next-line @typescript-eslint/await-thenable\n            await this.privInitializeDeferral;\n            this.privInitializeDeferral = null;\n        }\n        await this.destroyAudioContext();\n        return;\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return this.getMicrophoneLabel().then((label) => ({\n            bitspersample: MicAudioSource.AUDIOFORMAT.bitsPerSample,\n            channelcount: MicAudioSource.AUDIOFORMAT.channels,\n            connectivity: Exports_js_1.connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: label,\n            samplerate: MicAudioSource.AUDIOFORMAT.samplesPerSec,\n            type: Exports_js_1.type.Microphones,\n        }));\n    }\n    setProperty(name, value) {\n        if (name === exports.AudioWorkletSourceURLPropertyName) {\n            this.privRecorder.setWorkletUrl(value);\n        }\n        else {\n            throw new Error(\"Property '\" + name + \"' is not supported on Microphone.\");\n        }\n    }\n    getMicrophoneLabel() {\n        const defaultMicrophoneName = \"microphone\";\n        // If we did this already, return the value.\n        if (this.privMicrophoneLabel !== undefined) {\n            return Promise.resolve(this.privMicrophoneLabel);\n        }\n        // If the stream isn't currently running, we can't query devices because security.\n        if (this.privMediaStream === undefined || !this.privMediaStream.active) {\n            return Promise.resolve(defaultMicrophoneName);\n        }\n        // Setup a default\n        this.privMicrophoneLabel = defaultMicrophoneName;\n        // Get the id of the device running the audio track.\n        const microphoneDeviceId = this.privMediaStream.getTracks()[0].getSettings().deviceId;\n        // If the browser doesn't support getting the device ID, set a default and return.\n        if (undefined === microphoneDeviceId) {\n            return Promise.resolve(this.privMicrophoneLabel);\n        }\n        const deferred = new Exports_js_2.Deferred();\n        // Enumerate the media devices.\n        navigator.mediaDevices.enumerateDevices().then((devices) => {\n            for (const device of devices) {\n                if (device.deviceId === microphoneDeviceId) {\n                    // Found the device\n                    this.privMicrophoneLabel = device.label;\n                    break;\n                }\n            }\n            deferred.resolve(this.privMicrophoneLabel);\n        }, () => deferred.resolve(this.privMicrophoneLabel));\n        return deferred.promise;\n    }\n    async listen(audioNodeId) {\n        await this.turnOn();\n        const stream = new Exports_js_2.ChunkedArrayBufferStream(this.privOutputChunkSize, audioNodeId);\n        this.privStreams[audioNodeId] = stream;\n        try {\n            this.privRecorder.record(this.privContext, this.privMediaStream, stream);\n        }\n        catch (error) {\n            this.onEvent(new Exports_js_2.AudioStreamNodeErrorEvent(this.privId, audioNodeId, error));\n            throw error;\n        }\n        const result = stream;\n        return result;\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n    createAudioContext() {\n        if (!!this.privContext) {\n            return;\n        }\n        this.privContext = AudioStreamFormat_js_1.AudioStreamFormatImpl.getAudioContext(MicAudioSource.AUDIOFORMAT.samplesPerSec);\n    }\n    async destroyAudioContext() {\n        if (!this.privContext) {\n            return;\n        }\n        this.privRecorder.releaseMediaResources(this.privContext);\n        // This pattern brought to you by a bug in the TypeScript compiler where it\n        // confuses the (\"close\" in this.privContext) with this.privContext always being null as the alternate.\n        // https://github.com/Microsoft/TypeScript/issues/11498\n        let hasClose = false;\n        if (\"close\" in this.privContext) {\n            hasClose = true;\n        }\n        if (hasClose) {\n            if (!this.privIsClosing) {\n                // The audio context close may take enough time that the close is called twice\n                this.privIsClosing = true;\n                await this.privContext.close();\n                this.privContext = null;\n                this.privIsClosing = false;\n            }\n        }\n        else if (null !== this.privContext && this.privContext.state === \"running\") {\n            // Suspend actually takes a callback, but analogous to the\n            // resume method, it'll be only fired if suspend is called\n            // in a direct response to a user action. The later is not always\n            // the case, as TurnOff is also called, when we receive an\n            // end-of-speech message from the service. So, doing a best effort\n            // fire-and-forget here.\n            await this.privContext.suspend();\n        }\n    }\n}\nexports.MicAudioSource = MicAudioSource;\nMicAudioSource.AUDIOFORMAT = AudioStreamFormat_js_1.AudioStreamFormat.getDefaultInputFormat();\n\n//# sourceMappingURL=MicAudioSource.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/MicAudioSource.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/PCMRecorder.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/PCMRecorder.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PcmRecorder = void 0;\nconst Exports_1 = __webpack_require__(/*! ../common/Exports */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nclass PcmRecorder {\n    constructor(stopInputOnRelease) {\n        this.privStopInputOnRelease = stopInputOnRelease;\n    }\n    record(context, mediaStream, outputStream) {\n        const desiredSampleRate = 16000;\n        const waveStreamEncoder = new Exports_1.RiffPcmEncoder(context.sampleRate, desiredSampleRate);\n        const micInput = context.createMediaStreamSource(mediaStream);\n        const attachScriptProcessor = () => {\n            // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n            const scriptNode = (() => {\n                let bufferSize = 0;\n                try {\n                    return context.createScriptProcessor(bufferSize, 1, 1);\n                }\n                catch (error) {\n                    // Webkit (<= version 31) requires a valid bufferSize.\n                    bufferSize = 2048;\n                    let audioSampleRate = context.sampleRate;\n                    while (bufferSize < 16384 && audioSampleRate >= (2 * desiredSampleRate)) {\n                        bufferSize <<= 1;\n                        audioSampleRate >>= 1;\n                    }\n                    return context.createScriptProcessor(bufferSize, 1, 1);\n                }\n            })();\n            scriptNode.onaudioprocess = (event) => {\n                const inputFrame = event.inputBuffer.getChannelData(0);\n                if (outputStream && !outputStream.isClosed) {\n                    const waveFrame = waveStreamEncoder.encode(inputFrame);\n                    if (!!waveFrame) {\n                        outputStream.writeStreamChunk({\n                            buffer: waveFrame,\n                            isEnd: false,\n                            timeReceived: Date.now(),\n                        });\n                    }\n                }\n            };\n            micInput.connect(scriptNode);\n            scriptNode.connect(context.destination);\n            this.privMediaResources = {\n                scriptProcessorNode: scriptNode,\n                source: micInput,\n                stream: mediaStream,\n            };\n        };\n        // https://webaudio.github.io/web-audio-api/#audioworklet\n        // Using AudioWorklet to improve audio quality and avoid audio glitches due to blocking the UI thread\n        const skipAudioWorklet = !!this.privSpeechProcessorScript && this.privSpeechProcessorScript.toLowerCase() === \"ignore\";\n        if (!!context.audioWorklet && !skipAudioWorklet) {\n            if (!this.privSpeechProcessorScript) {\n                const workletScript = `class SP extends AudioWorkletProcessor {\r\n                    constructor(options) {\r\n                      super(options);\r\n                    }\r\n                    process(inputs, outputs) {\r\n                      const input = inputs[0];\r\n                      const output = [];\r\n                      for (let channel = 0; channel < input.length; channel += 1) {\r\n                        output[channel] = input[channel];\r\n                      }\r\n                      this.port.postMessage(output[0]);\r\n                      return true;\r\n                    }\r\n                  }\r\n                  registerProcessor('speech-processor', SP);`;\n                const blob = new Blob([workletScript], { type: \"application/javascript; charset=utf-8\" });\n                this.privSpeechProcessorScript = URL.createObjectURL(blob);\n            }\n            context.audioWorklet\n                .addModule(this.privSpeechProcessorScript)\n                .then(() => {\n                const workletNode = new AudioWorkletNode(context, \"speech-processor\");\n                workletNode.port.onmessage = (ev) => {\n                    const inputFrame = ev.data;\n                    if (outputStream && !outputStream.isClosed) {\n                        const waveFrame = waveStreamEncoder.encode(inputFrame);\n                        if (!!waveFrame) {\n                            outputStream.writeStreamChunk({\n                                buffer: waveFrame,\n                                isEnd: false,\n                                timeReceived: Date.now(),\n                            });\n                        }\n                    }\n                };\n                micInput.connect(workletNode);\n                workletNode.connect(context.destination);\n                this.privMediaResources = {\n                    scriptProcessorNode: workletNode,\n                    source: micInput,\n                    stream: mediaStream,\n                };\n            })\n                .catch(() => {\n                attachScriptProcessor();\n            });\n        }\n        else {\n            try {\n                attachScriptProcessor();\n            }\n            catch (err) {\n                throw new Error(`Unable to start audio worklet node for PCMRecorder: ${err}`);\n            }\n        }\n    }\n    releaseMediaResources(context) {\n        if (this.privMediaResources) {\n            if (this.privMediaResources.scriptProcessorNode) {\n                this.privMediaResources.scriptProcessorNode.disconnect(context.destination);\n                this.privMediaResources.scriptProcessorNode = null;\n            }\n            if (this.privMediaResources.source) {\n                this.privMediaResources.source.disconnect();\n                if (this.privStopInputOnRelease) {\n                    this.privMediaResources.stream.getTracks().forEach((track) => track.stop());\n                }\n                this.privMediaResources.source = null;\n            }\n        }\n    }\n    setWorkletUrl(url) {\n        this.privSpeechProcessorScript = url;\n    }\n}\nexports.PcmRecorder = PcmRecorder;\n\n//# sourceMappingURL=PCMRecorder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/PCMRecorder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ProxyInfo.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ProxyInfo.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ProxyInfo = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nclass ProxyInfo {\n    constructor(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.privProxyHostName = proxyHostName;\n        this.privProxyPort = proxyPort;\n        this.privProxyUserName = proxyUserName;\n        this.privProxyPassword = proxyPassword;\n    }\n    static fromParameters(parameters) {\n        return new ProxyInfo(parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyHostName), parseInt(parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyPort), 10), parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyUserName), parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyPassword));\n    }\n    static fromRecognizerConfig(config) {\n        return this.fromParameters(config.parameters);\n    }\n    get HostName() {\n        return this.privProxyHostName;\n    }\n    get Port() {\n        return this.privProxyPort;\n    }\n    get UserName() {\n        return this.privProxyUserName;\n    }\n    get Password() {\n        return this.privProxyPassword;\n    }\n}\nexports.ProxyInfo = ProxyInfo;\n\n//# sourceMappingURL=ProxyInfo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5icm93c2VyL1Byb3h5SW5mby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLHFCQUFxQixtQkFBTyxDQUFDLHFIQUFtQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCOztBQUVqQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uYnJvd3Nlci9Qcm94eUluZm8uanM/Y2RhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qcm94eUluZm8gPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vc2RrL0V4cG9ydHMuanNcIik7XG5jbGFzcyBQcm94eUluZm8ge1xuICAgIGNvbnN0cnVjdG9yKHByb3h5SG9zdE5hbWUsIHByb3h5UG9ydCwgcHJveHlVc2VyTmFtZSwgcHJveHlQYXNzd29yZCkge1xuICAgICAgICB0aGlzLnByaXZQcm94eUhvc3ROYW1lID0gcHJveHlIb3N0TmFtZTtcbiAgICAgICAgdGhpcy5wcml2UHJveHlQb3J0ID0gcHJveHlQb3J0O1xuICAgICAgICB0aGlzLnByaXZQcm94eVVzZXJOYW1lID0gcHJveHlVc2VyTmFtZTtcbiAgICAgICAgdGhpcy5wcml2UHJveHlQYXNzd29yZCA9IHByb3h5UGFzc3dvcmQ7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tUGFyYW1ldGVycyhwYXJhbWV0ZXJzKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJveHlJbmZvKHBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18xLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fUHJveHlIb3N0TmFtZSksIHBhcnNlSW50KHBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18xLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fUHJveHlQb3J0KSwgMTApLCBwYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX1Byb3h5VXNlck5hbWUpLCBwYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX1Byb3h5UGFzc3dvcmQpKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21SZWNvZ25pemVyQ29uZmlnKGNvbmZpZykge1xuICAgICAgICByZXR1cm4gdGhpcy5mcm9tUGFyYW1ldGVycyhjb25maWcucGFyYW1ldGVycyk7XG4gICAgfVxuICAgIGdldCBIb3N0TmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlByb3h5SG9zdE5hbWU7XG4gICAgfVxuICAgIGdldCBQb3J0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UHJveHlQb3J0O1xuICAgIH1cbiAgICBnZXQgVXNlck5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQcm94eVVzZXJOYW1lO1xuICAgIH1cbiAgICBnZXQgUGFzc3dvcmQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQcm94eVBhc3N3b3JkO1xuICAgIH1cbn1cbmV4cG9ydHMuUHJveHlJbmZvID0gUHJveHlJbmZvO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qcm94eUluZm8uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ProxyInfo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ReplayableAudioNode.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ReplayableAudioNode.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ReplayableAudioNode = void 0;\nclass ReplayableAudioNode {\n    constructor(audioSource, bytesPerSecond) {\n        this.privBuffers = [];\n        this.privReplayOffset = 0;\n        this.privLastShrinkOffset = 0;\n        this.privBufferStartOffset = 0;\n        this.privBufferSerial = 0;\n        this.privBufferedBytes = 0;\n        this.privReplay = false;\n        this.privLastChunkAcquiredTime = 0;\n        this.privAudioNode = audioSource;\n        this.privBytesPerSecond = bytesPerSecond;\n    }\n    id() {\n        return this.privAudioNode.id();\n    }\n    // Reads and returns the next chunk of audio buffer.\n    // If replay of existing buffers are needed, read() will first seek and replay\n    // existing content, and upoin completion it will read new content from the underlying\n    // audio node, saving that content into the replayable buffers.\n    read() {\n        // if there is a replay request to honor.\n        if (!!this.privReplay && this.privBuffers.length !== 0) {\n            // Find the start point in the buffers.\n            // Offsets are in 100ns increments.\n            // So how many bytes do we need to seek to get the right offset?\n            const offsetToSeek = this.privReplayOffset - this.privBufferStartOffset;\n            let bytesToSeek = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\n            if (0 !== (bytesToSeek % 2)) {\n                bytesToSeek++;\n            }\n            let i = 0;\n            while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\n                bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\n            }\n            if (i < this.privBuffers.length) {\n                const retVal = this.privBuffers[i].chunk.buffer.slice(bytesToSeek);\n                this.privReplayOffset += (retVal.byteLength / this.privBytesPerSecond) * 1e+7;\n                // If we've reached the end of the buffers, stop replaying.\n                if (i === this.privBuffers.length - 1) {\n                    this.privReplay = false;\n                }\n                return Promise.resolve({\n                    buffer: retVal,\n                    isEnd: false,\n                    timeReceived: this.privBuffers[i].chunk.timeReceived,\n                });\n            }\n        }\n        return this.privAudioNode.read()\n            .then((result) => {\n            if (result && result.buffer) {\n                this.privBuffers.push(new BufferEntry(result, this.privBufferSerial++, this.privBufferedBytes));\n                this.privBufferedBytes += result.buffer.byteLength;\n            }\n            return result;\n        });\n    }\n    detach() {\n        this.privBuffers = undefined;\n        return this.privAudioNode.detach();\n    }\n    replay() {\n        if (this.privBuffers && 0 !== this.privBuffers.length) {\n            this.privReplay = true;\n            this.privReplayOffset = this.privLastShrinkOffset;\n        }\n    }\n    // Shrinks the existing audio buffers to start at the new offset, or at the\n    // beginning of the buffer closest to the requested offset.\n    // A replay request will start from the last shrink point.\n    shrinkBuffers(offset) {\n        if (this.privBuffers === undefined || this.privBuffers.length === 0) {\n            return;\n        }\n        this.privLastShrinkOffset = offset;\n        // Find the start point in the buffers.\n        // Offsets are in 100ns increments.\n        // So how many bytes do we need to seek to get the right offset?\n        const offsetToSeek = offset - this.privBufferStartOffset;\n        let bytesToSeek = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\n        let i = 0;\n        while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\n            bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\n        }\n        this.privBufferStartOffset = Math.round(offset - ((bytesToSeek / this.privBytesPerSecond) * 1e+7));\n        this.privBuffers = this.privBuffers.slice(i);\n    }\n    // Finds the time a buffer of audio was first seen by offset.\n    findTimeAtOffset(offset) {\n        if (offset < this.privBufferStartOffset || this.privBuffers === undefined) {\n            return 0;\n        }\n        for (const value of this.privBuffers) {\n            const startOffset = (value.byteOffset / this.privBytesPerSecond) * 1e7;\n            const endOffset = startOffset + ((value.chunk.buffer.byteLength / this.privBytesPerSecond) * 1e7);\n            if (offset >= startOffset && offset <= endOffset) {\n                return value.chunk.timeReceived;\n            }\n        }\n        return 0;\n    }\n}\nexports.ReplayableAudioNode = ReplayableAudioNode;\n// Primary use of this class is to help debugging problems with the replay\n// code. If the memory cost of alloc / dealloc gets too much, drop it and just use\n// the ArrayBuffer directly.\nclass BufferEntry {\n    constructor(chunk, serial, byteOffset) {\n        this.chunk = chunk;\n        this.serial = serial;\n        this.byteOffset = byteOffset;\n    }\n}\n\n//# sourceMappingURL=ReplayableAudioNode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/ReplayableAudioNode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestConfigBase.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestConfigBase.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RestConfigBase = void 0;\nclass RestConfigBase {\n    static get requestOptions() {\n        return RestConfigBase.privDefaultRequestOptions;\n    }\n    static get configParams() {\n        return RestConfigBase.privDefaultParams;\n    }\n    static get restErrors() {\n        return RestConfigBase.privRestErrors;\n    }\n}\nexports.RestConfigBase = RestConfigBase;\nRestConfigBase.privDefaultRequestOptions = {\n    headers: {\n        Accept: \"application/json\",\n    },\n    ignoreCache: false,\n    timeout: 10000,\n};\nRestConfigBase.privRestErrors = {\n    authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\n    authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\n    invalidArgs: \"Required input not found: {arg}.\",\n    invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\n    invalidParticipantRequest: \"The requested participant was not found.\",\n    permissionDeniedConnect: \"Required credentials not found.\",\n    permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\n    permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\n    permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\n    permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\n};\nRestConfigBase.privDefaultParams = {\n    apiVersion: \"api-version\",\n    authorization: \"Authorization\",\n    clientAppId: \"X-ClientAppId\",\n    contentTypeKey: \"Content-Type\",\n    correlationId: \"X-CorrelationId\",\n    languageCode: \"language\",\n    nickname: \"nickname\",\n    profanity: \"profanity\",\n    requestId: \"X-RequestId\",\n    roomId: \"roomid\",\n    sessionToken: \"token\",\n    subscriptionKey: \"Ocp-Apim-Subscription-Key\",\n    subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\n    token: \"X-CapitoToken\",\n};\n\n//# sourceMappingURL=RestConfigBase.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5icm93c2VyL1Jlc3RDb25maWdCYXNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLElBQUk7QUFDakQsNEZBQTRGLE9BQU87QUFDbkc7QUFDQTtBQUNBLHlFQUF5RSxTQUFTO0FBQ2xGLHdFQUF3RSxTQUFTO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5icm93c2VyL1Jlc3RDb25maWdCYXNlLmpzPzZkZTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVzdENvbmZpZ0Jhc2UgPSB2b2lkIDA7XG5jbGFzcyBSZXN0Q29uZmlnQmFzZSB7XG4gICAgc3RhdGljIGdldCByZXF1ZXN0T3B0aW9ucygpIHtcbiAgICAgICAgcmV0dXJuIFJlc3RDb25maWdCYXNlLnByaXZEZWZhdWx0UmVxdWVzdE9wdGlvbnM7XG4gICAgfVxuICAgIHN0YXRpYyBnZXQgY29uZmlnUGFyYW1zKCkge1xuICAgICAgICByZXR1cm4gUmVzdENvbmZpZ0Jhc2UucHJpdkRlZmF1bHRQYXJhbXM7XG4gICAgfVxuICAgIHN0YXRpYyBnZXQgcmVzdEVycm9ycygpIHtcbiAgICAgICAgcmV0dXJuIFJlc3RDb25maWdCYXNlLnByaXZSZXN0RXJyb3JzO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVzdENvbmZpZ0Jhc2UgPSBSZXN0Q29uZmlnQmFzZTtcblJlc3RDb25maWdCYXNlLnByaXZEZWZhdWx0UmVxdWVzdE9wdGlvbnMgPSB7XG4gICAgaGVhZGVyczoge1xuICAgICAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIH0sXG4gICAgaWdub3JlQ2FjaGU6IGZhbHNlLFxuICAgIHRpbWVvdXQ6IDEwMDAwLFxufTtcblJlc3RDb25maWdCYXNlLnByaXZSZXN0RXJyb3JzID0ge1xuICAgIGF1dGhJbnZhbGlkU3Vic2NyaXB0aW9uS2V5OiBcIllvdSBtdXN0IHNwZWNpZnkgZWl0aGVyIGFuIGF1dGhlbnRpY2F0aW9uIHRva2VuIHRvIHVzZSwgb3IgYSBDb2duaXRpdmUgU3BlZWNoIHN1YnNjcmlwdGlvbiBrZXkuXCIsXG4gICAgYXV0aEludmFsaWRTdWJzY3JpcHRpb25SZWdpb246IFwiWW91IG11c3Qgc3BlY2lmeSB0aGUgQ29nbml0aXZlIFNwZWVjaCByZWdpb24gdG8gdXNlLlwiLFxuICAgIGludmFsaWRBcmdzOiBcIlJlcXVpcmVkIGlucHV0IG5vdCBmb3VuZDoge2FyZ30uXCIsXG4gICAgaW52YWxpZENyZWF0ZUpvaW5Db252ZXJzYXRpb25SZXNwb25zZTogXCJDcmVhdGluZy9Kb2luaW5nIGNvbnZlcnNhdGlvbiBmYWlsZWQgd2l0aCBIVFRQIHtzdGF0dXN9LlwiLFxuICAgIGludmFsaWRQYXJ0aWNpcGFudFJlcXVlc3Q6IFwiVGhlIHJlcXVlc3RlZCBwYXJ0aWNpcGFudCB3YXMgbm90IGZvdW5kLlwiLFxuICAgIHBlcm1pc3Npb25EZW5pZWRDb25uZWN0OiBcIlJlcXVpcmVkIGNyZWRlbnRpYWxzIG5vdCBmb3VuZC5cIixcbiAgICBwZXJtaXNzaW9uRGVuaWVkQ29udmVyc2F0aW9uOiBcIkludmFsaWQgb3BlcmF0aW9uOiBvbmx5IHRoZSBob3N0IGNhbiB7Y29tbWFuZH0gdGhlIGNvbnZlcnNhdGlvbi5cIixcbiAgICBwZXJtaXNzaW9uRGVuaWVkUGFydGljaXBhbnQ6IFwiSW52YWxpZCBvcGVyYXRpb246IG9ubHkgdGhlIGhvc3QgY2FuIHtjb21tYW5kfSBhIHBhcnRpY2lwYW50LlwiLFxuICAgIHBlcm1pc3Npb25EZW5pZWRTZW5kOiBcIkludmFsaWQgb3BlcmF0aW9uOiB0aGUgY29udmVyc2F0aW9uIGlzIG5vdCBpbiBhIGNvbm5lY3RlZCBzdGF0ZS5cIixcbiAgICBwZXJtaXNzaW9uRGVuaWVkU3RhcnQ6IFwiSW52YWxpZCBvcGVyYXRpb246IHRoZXJlIGlzIGFscmVhZHkgYW4gYWN0aXZlIGNvbnZlcnNhdGlvbi5cIixcbn07XG5SZXN0Q29uZmlnQmFzZS5wcml2RGVmYXVsdFBhcmFtcyA9IHtcbiAgICBhcGlWZXJzaW9uOiBcImFwaS12ZXJzaW9uXCIsXG4gICAgYXV0aG9yaXphdGlvbjogXCJBdXRob3JpemF0aW9uXCIsXG4gICAgY2xpZW50QXBwSWQ6IFwiWC1DbGllbnRBcHBJZFwiLFxuICAgIGNvbnRlbnRUeXBlS2V5OiBcIkNvbnRlbnQtVHlwZVwiLFxuICAgIGNvcnJlbGF0aW9uSWQ6IFwiWC1Db3JyZWxhdGlvbklkXCIsXG4gICAgbGFuZ3VhZ2VDb2RlOiBcImxhbmd1YWdlXCIsXG4gICAgbmlja25hbWU6IFwibmlja25hbWVcIixcbiAgICBwcm9mYW5pdHk6IFwicHJvZmFuaXR5XCIsXG4gICAgcmVxdWVzdElkOiBcIlgtUmVxdWVzdElkXCIsXG4gICAgcm9vbUlkOiBcInJvb21pZFwiLFxuICAgIHNlc3Npb25Ub2tlbjogXCJ0b2tlblwiLFxuICAgIHN1YnNjcmlwdGlvbktleTogXCJPY3AtQXBpbS1TdWJzY3JpcHRpb24tS2V5XCIsXG4gICAgc3Vic2NyaXB0aW9uUmVnaW9uOiBcIk9jcC1BcGltLVN1YnNjcmlwdGlvbi1SZWdpb25cIixcbiAgICB0b2tlbjogXCJYLUNhcGl0b1Rva2VuXCIsXG59O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZXN0Q29uZmlnQmFzZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestConfigBase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestMessageAdapter.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestMessageAdapter.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RestMessageAdapter = exports.RestRequestType = void 0;\nconst bent_1 = __importDefault(__webpack_require__(/*! bent */ \"(rsc)/./node_modules/bent/src/nodejs.js\"));\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nvar RestRequestType;\n(function (RestRequestType) {\n    RestRequestType[\"Get\"] = \"GET\";\n    RestRequestType[\"Post\"] = \"POST\";\n    RestRequestType[\"Delete\"] = \"DELETE\";\n    RestRequestType[\"File\"] = \"file\";\n})(RestRequestType = exports.RestRequestType || (exports.RestRequestType = {}));\n// accept rest operations via request method and return abstracted objects from server response\nclass RestMessageAdapter {\n    constructor(configParams) {\n        if (!configParams) {\n            throw new Exports_js_1.ArgumentNullError(\"configParams\");\n        }\n        this.privHeaders = configParams.headers;\n        this.privIgnoreCache = configParams.ignoreCache;\n    }\n    static extractHeaderValue(headerKey, headers) {\n        let headerValue = \"\";\n        try {\n            const arr = headers.trim().split(/[\\r\\n]+/);\n            const headerMap = {};\n            arr.forEach((line) => {\n                const parts = line.split(\": \");\n                const header = parts.shift().toLowerCase();\n                const value = parts.join(\": \");\n                headerMap[header] = value;\n            });\n            headerValue = headerMap[headerKey.toLowerCase()];\n        }\n        catch (e) {\n            // ignore the error\n        }\n        return headerValue;\n    }\n    set options(configParams) {\n        this.privHeaders = configParams.headers;\n        this.privIgnoreCache = configParams.ignoreCache;\n    }\n    setHeaders(key, value) {\n        this.privHeaders[key] = value;\n    }\n    request(method, uri, queryParams = {}, body = null) {\n        const responseReceivedDeferral = new Exports_js_1.Deferred();\n        const requestCommand = method === RestRequestType.File ? \"POST\" : method;\n        const handleRestResponse = (data, j = {}) => {\n            const d = data;\n            return {\n                data: JSON.stringify(j),\n                headers: JSON.stringify(data.headers),\n                json: j,\n                ok: data.statusCode >= 200 && data.statusCode < 300,\n                status: data.statusCode,\n                statusText: j.error ? j.error.message : d.statusText ? d.statusText : d.statusMessage\n            };\n        };\n        const send = (postData) => {\n            const sendRequest = bent_1.default(uri, requestCommand, this.privHeaders, 200, 201, 202, 204, 400, 401, 402, 403, 404);\n            const params = this.queryParams(queryParams) === \"\" ? \"\" : `?${this.queryParams(queryParams)}`;\n            sendRequest(params, postData).then(async (data) => {\n                if (method === RestRequestType.Delete || data.statusCode === 204) {\n                    // No JSON from Delete and reset (204) operations\n                    responseReceivedDeferral.resolve(handleRestResponse(data));\n                }\n                else {\n                    try {\n                        const j = await data.json();\n                        responseReceivedDeferral.resolve(handleRestResponse(data, j));\n                    }\n                    catch {\n                        responseReceivedDeferral.resolve(handleRestResponse(data));\n                    }\n                }\n            }).catch((error) => {\n                responseReceivedDeferral.reject(error);\n            });\n        };\n        if (this.privIgnoreCache) {\n            this.privHeaders[\"Cache-Control\"] = \"no-cache\";\n        }\n        if (method === RestRequestType.Post && body) {\n            this.privHeaders[\"content-type\"] = \"application/json\";\n            this.privHeaders[\"Content-Type\"] = \"application/json\";\n        }\n        send(body);\n        return responseReceivedDeferral.promise;\n    }\n    queryParams(params = {}) {\n        return Object.keys(params)\n            .map((k) => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\n            .join(\"&\");\n    }\n}\nexports.RestMessageAdapter = RestMessageAdapter;\n\n//# sourceMappingURL=RestMessageAdapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5icm93c2VyL1Jlc3RNZXNzYWdlQWRhcHRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsR0FBRyx1QkFBdUI7QUFDcEQsK0JBQStCLG1CQUFPLENBQUMscURBQU07QUFDN0MscUJBQXFCLG1CQUFPLENBQUMsMkhBQXNCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0RBQWdELHVCQUF1QixLQUFLO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyRUFBMkUsOEJBQThCO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCOztBQUUxQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uYnJvd3Nlci9SZXN0TWVzc2FnZUFkYXB0ZXIuanM/YzU2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZXN0TWVzc2FnZUFkYXB0ZXIgPSBleHBvcnRzLlJlc3RSZXF1ZXN0VHlwZSA9IHZvaWQgMDtcbmNvbnN0IGJlbnRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYmVudFwiKSk7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uL0V4cG9ydHMuanNcIik7XG52YXIgUmVzdFJlcXVlc3RUeXBlO1xuKGZ1bmN0aW9uIChSZXN0UmVxdWVzdFR5cGUpIHtcbiAgICBSZXN0UmVxdWVzdFR5cGVbXCJHZXRcIl0gPSBcIkdFVFwiO1xuICAgIFJlc3RSZXF1ZXN0VHlwZVtcIlBvc3RcIl0gPSBcIlBPU1RcIjtcbiAgICBSZXN0UmVxdWVzdFR5cGVbXCJEZWxldGVcIl0gPSBcIkRFTEVURVwiO1xuICAgIFJlc3RSZXF1ZXN0VHlwZVtcIkZpbGVcIl0gPSBcImZpbGVcIjtcbn0pKFJlc3RSZXF1ZXN0VHlwZSA9IGV4cG9ydHMuUmVzdFJlcXVlc3RUeXBlIHx8IChleHBvcnRzLlJlc3RSZXF1ZXN0VHlwZSA9IHt9KSk7XG4vLyBhY2NlcHQgcmVzdCBvcGVyYXRpb25zIHZpYSByZXF1ZXN0IG1ldGhvZCBhbmQgcmV0dXJuIGFic3RyYWN0ZWQgb2JqZWN0cyBmcm9tIHNlcnZlciByZXNwb25zZVxuY2xhc3MgUmVzdE1lc3NhZ2VBZGFwdGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWdQYXJhbXMpIHtcbiAgICAgICAgaWYgKCFjb25maWdQYXJhbXMpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFeHBvcnRzX2pzXzEuQXJndW1lbnROdWxsRXJyb3IoXCJjb25maWdQYXJhbXNcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcml2SGVhZGVycyA9IGNvbmZpZ1BhcmFtcy5oZWFkZXJzO1xuICAgICAgICB0aGlzLnByaXZJZ25vcmVDYWNoZSA9IGNvbmZpZ1BhcmFtcy5pZ25vcmVDYWNoZTtcbiAgICB9XG4gICAgc3RhdGljIGV4dHJhY3RIZWFkZXJWYWx1ZShoZWFkZXJLZXksIGhlYWRlcnMpIHtcbiAgICAgICAgbGV0IGhlYWRlclZhbHVlID0gXCJcIjtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGFyciA9IGhlYWRlcnMudHJpbSgpLnNwbGl0KC9bXFxyXFxuXSsvKTtcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlck1hcCA9IHt9O1xuICAgICAgICAgICAgYXJyLmZvckVhY2goKGxpbmUpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJ0cyA9IGxpbmUuc3BsaXQoXCI6IFwiKTtcbiAgICAgICAgICAgICAgICBjb25zdCBoZWFkZXIgPSBwYXJ0cy5zaGlmdCgpLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBwYXJ0cy5qb2luKFwiOiBcIik7XG4gICAgICAgICAgICAgICAgaGVhZGVyTWFwW2hlYWRlcl0gPSB2YWx1ZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaGVhZGVyVmFsdWUgPSBoZWFkZXJNYXBbaGVhZGVyS2V5LnRvTG93ZXJDYXNlKCldO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAvLyBpZ25vcmUgdGhlIGVycm9yXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhlYWRlclZhbHVlO1xuICAgIH1cbiAgICBzZXQgb3B0aW9ucyhjb25maWdQYXJhbXMpIHtcbiAgICAgICAgdGhpcy5wcml2SGVhZGVycyA9IGNvbmZpZ1BhcmFtcy5oZWFkZXJzO1xuICAgICAgICB0aGlzLnByaXZJZ25vcmVDYWNoZSA9IGNvbmZpZ1BhcmFtcy5pZ25vcmVDYWNoZTtcbiAgICB9XG4gICAgc2V0SGVhZGVycyhrZXksIHZhbHVlKSB7XG4gICAgICAgIHRoaXMucHJpdkhlYWRlcnNba2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgICByZXF1ZXN0KG1ldGhvZCwgdXJpLCBxdWVyeVBhcmFtcyA9IHt9LCBib2R5ID0gbnVsbCkge1xuICAgICAgICBjb25zdCByZXNwb25zZVJlY2VpdmVkRGVmZXJyYWwgPSBuZXcgRXhwb3J0c19qc18xLkRlZmVycmVkKCk7XG4gICAgICAgIGNvbnN0IHJlcXVlc3RDb21tYW5kID0gbWV0aG9kID09PSBSZXN0UmVxdWVzdFR5cGUuRmlsZSA/IFwiUE9TVFwiIDogbWV0aG9kO1xuICAgICAgICBjb25zdCBoYW5kbGVSZXN0UmVzcG9uc2UgPSAoZGF0YSwgaiA9IHt9KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkID0gZGF0YTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoaiksXG4gICAgICAgICAgICAgICAgaGVhZGVyczogSlNPTi5zdHJpbmdpZnkoZGF0YS5oZWFkZXJzKSxcbiAgICAgICAgICAgICAgICBqc29uOiBqLFxuICAgICAgICAgICAgICAgIG9rOiBkYXRhLnN0YXR1c0NvZGUgPj0gMjAwICYmIGRhdGEuc3RhdHVzQ29kZSA8IDMwMCxcbiAgICAgICAgICAgICAgICBzdGF0dXM6IGRhdGEuc3RhdHVzQ29kZSxcbiAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiBqLmVycm9yID8gai5lcnJvci5tZXNzYWdlIDogZC5zdGF0dXNUZXh0ID8gZC5zdGF0dXNUZXh0IDogZC5zdGF0dXNNZXNzYWdlXG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBzZW5kID0gKHBvc3REYXRhKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBzZW5kUmVxdWVzdCA9IGJlbnRfMS5kZWZhdWx0KHVyaSwgcmVxdWVzdENvbW1hbmQsIHRoaXMucHJpdkhlYWRlcnMsIDIwMCwgMjAxLCAyMDIsIDIwNCwgNDAwLCA0MDEsIDQwMiwgNDAzLCA0MDQpO1xuICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gdGhpcy5xdWVyeVBhcmFtcyhxdWVyeVBhcmFtcykgPT09IFwiXCIgPyBcIlwiIDogYD8ke3RoaXMucXVlcnlQYXJhbXMocXVlcnlQYXJhbXMpfWA7XG4gICAgICAgICAgICBzZW5kUmVxdWVzdChwYXJhbXMsIHBvc3REYXRhKS50aGVuKGFzeW5jIChkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKG1ldGhvZCA9PT0gUmVzdFJlcXVlc3RUeXBlLkRlbGV0ZSB8fCBkYXRhLnN0YXR1c0NvZGUgPT09IDIwNCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBObyBKU09OIGZyb20gRGVsZXRlIGFuZCByZXNldCAoMjA0KSBvcGVyYXRpb25zXG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlUmVjZWl2ZWREZWZlcnJhbC5yZXNvbHZlKGhhbmRsZVJlc3RSZXNwb25zZShkYXRhKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaiA9IGF3YWl0IGRhdGEuanNvbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VSZWNlaXZlZERlZmVycmFsLnJlc29sdmUoaGFuZGxlUmVzdFJlc3BvbnNlKGRhdGEsIGopKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVJlY2VpdmVkRGVmZXJyYWwucmVzb2x2ZShoYW5kbGVSZXN0UmVzcG9uc2UoZGF0YSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2VSZWNlaXZlZERlZmVycmFsLnJlamVjdChlcnJvcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHRoaXMucHJpdklnbm9yZUNhY2hlKSB7XG4gICAgICAgICAgICB0aGlzLnByaXZIZWFkZXJzW1wiQ2FjaGUtQ29udHJvbFwiXSA9IFwibm8tY2FjaGVcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWV0aG9kID09PSBSZXN0UmVxdWVzdFR5cGUuUG9zdCAmJiBib2R5KSB7XG4gICAgICAgICAgICB0aGlzLnByaXZIZWFkZXJzW1wiY29udGVudC10eXBlXCJdID0gXCJhcHBsaWNhdGlvbi9qc29uXCI7XG4gICAgICAgICAgICB0aGlzLnByaXZIZWFkZXJzW1wiQ29udGVudC1UeXBlXCJdID0gXCJhcHBsaWNhdGlvbi9qc29uXCI7XG4gICAgICAgIH1cbiAgICAgICAgc2VuZChib2R5KTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlUmVjZWl2ZWREZWZlcnJhbC5wcm9taXNlO1xuICAgIH1cbiAgICBxdWVyeVBhcmFtcyhwYXJhbXMgPSB7fSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMocGFyYW1zKVxuICAgICAgICAgICAgLm1hcCgoaykgPT4gZW5jb2RlVVJJQ29tcG9uZW50KGspICsgXCI9XCIgKyBlbmNvZGVVUklDb21wb25lbnQocGFyYW1zW2tdKSlcbiAgICAgICAgICAgIC5qb2luKFwiJlwiKTtcbiAgICB9XG59XG5leHBvcnRzLlJlc3RNZXNzYWdlQWRhcHRlciA9IFJlc3RNZXNzYWdlQWRhcHRlcjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmVzdE1lc3NhZ2VBZGFwdGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestMessageAdapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketConnection.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketConnection.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WebsocketConnection = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst WebsocketMessageAdapter_js_1 = __webpack_require__(/*! ./WebsocketMessageAdapter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketMessageAdapter.js\");\nclass WebsocketConnection {\n    constructor(uri, queryParameters, headers, messageFormatter, proxyInfo, enableCompression = false, connectionId) {\n        this.privIsDisposed = false;\n        if (!uri) {\n            throw new Exports_js_1.ArgumentNullError(\"uri\");\n        }\n        if (!messageFormatter) {\n            throw new Exports_js_1.ArgumentNullError(\"messageFormatter\");\n        }\n        this.privMessageFormatter = messageFormatter;\n        let queryParams = \"\";\n        let i = 0;\n        if (queryParameters) {\n            for (const paramName in queryParameters) {\n                if (paramName) {\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\n                    const key = encodeURIComponent(paramName);\n                    queryParams += key;\n                    let val = queryParameters[paramName];\n                    if (val) {\n                        val = encodeURIComponent(val);\n                        queryParams += `=${val}`;\n                    }\n                    i++;\n                }\n            }\n        }\n        if (headers) {\n            for (const headerName in headers) {\n                if (headerName) {\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\n                    const val = encodeURIComponent(headers[headerName]);\n                    queryParams += `${headerName}=${val}`;\n                    i++;\n                }\n            }\n        }\n        this.privUri = uri + queryParams;\n        this.privId = connectionId ? connectionId : Exports_js_1.createNoDashGuid();\n        this.privConnectionMessageAdapter = new WebsocketMessageAdapter_js_1.WebsocketMessageAdapter(this.privUri, this.id, this.privMessageFormatter, proxyInfo, headers, enableCompression);\n    }\n    async dispose() {\n        this.privIsDisposed = true;\n        if (this.privConnectionMessageAdapter) {\n            await this.privConnectionMessageAdapter.close();\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    get id() {\n        return this.privId;\n    }\n    get uri() {\n        return this.privUri;\n    }\n    state() {\n        return this.privConnectionMessageAdapter.state;\n    }\n    open() {\n        return this.privConnectionMessageAdapter.open();\n    }\n    send(message) {\n        return this.privConnectionMessageAdapter.send(message);\n    }\n    read() {\n        return this.privConnectionMessageAdapter.read();\n    }\n    get events() {\n        return this.privConnectionMessageAdapter.events;\n    }\n}\nexports.WebsocketConnection = WebsocketConnection;\n\n//# sourceMappingURL=WebsocketConnection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5icm93c2VyL1dlYnNvY2tldENvbm5lY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQixxQkFBcUIsbUJBQU8sQ0FBQywySEFBc0I7QUFDbkQscUNBQXFDLG1CQUFPLENBQUMsMkpBQThCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxJQUFJO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLFdBQVcsR0FBRyxJQUFJO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjs7QUFFM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLmJyb3dzZXIvV2Vic29ja2V0Q29ubmVjdGlvbi5qcz9lZjUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldlYnNvY2tldENvbm5lY3Rpb24gPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uL0V4cG9ydHMuanNcIik7XG5jb25zdCBXZWJzb2NrZXRNZXNzYWdlQWRhcHRlcl9qc18xID0gcmVxdWlyZShcIi4vV2Vic29ja2V0TWVzc2FnZUFkYXB0ZXIuanNcIik7XG5jbGFzcyBXZWJzb2NrZXRDb25uZWN0aW9uIHtcbiAgICBjb25zdHJ1Y3Rvcih1cmksIHF1ZXJ5UGFyYW1ldGVycywgaGVhZGVycywgbWVzc2FnZUZvcm1hdHRlciwgcHJveHlJbmZvLCBlbmFibGVDb21wcmVzc2lvbiA9IGZhbHNlLCBjb25uZWN0aW9uSWQpIHtcbiAgICAgICAgdGhpcy5wcml2SXNEaXNwb3NlZCA9IGZhbHNlO1xuICAgICAgICBpZiAoIXVyaSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEV4cG9ydHNfanNfMS5Bcmd1bWVudE51bGxFcnJvcihcInVyaVwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIW1lc3NhZ2VGb3JtYXR0ZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFeHBvcnRzX2pzXzEuQXJndW1lbnROdWxsRXJyb3IoXCJtZXNzYWdlRm9ybWF0dGVyXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJpdk1lc3NhZ2VGb3JtYXR0ZXIgPSBtZXNzYWdlRm9ybWF0dGVyO1xuICAgICAgICBsZXQgcXVlcnlQYXJhbXMgPSBcIlwiO1xuICAgICAgICBsZXQgaSA9IDA7XG4gICAgICAgIGlmIChxdWVyeVBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgcGFyYW1OYW1lIGluIHF1ZXJ5UGFyYW1ldGVycykge1xuICAgICAgICAgICAgICAgIGlmIChwYXJhbU5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgcXVlcnlQYXJhbXMgKz0gKChpID09PSAwKSAmJiAodXJpLmluZGV4T2YoXCI/XCIpID09PSAtMSkpID8gXCI/XCIgOiBcIiZcIjtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qga2V5ID0gZW5jb2RlVVJJQ29tcG9uZW50KHBhcmFtTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5UGFyYW1zICs9IGtleTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHZhbCA9IHF1ZXJ5UGFyYW1ldGVyc1twYXJhbU5hbWVdO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWwgPSBlbmNvZGVVUklDb21wb25lbnQodmFsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5UGFyYW1zICs9IGA9JHt2YWx9YDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChoZWFkZXJzKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGhlYWRlck5hbWUgaW4gaGVhZGVycykge1xuICAgICAgICAgICAgICAgIGlmIChoZWFkZXJOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5UGFyYW1zICs9ICgoaSA9PT0gMCkgJiYgKHVyaS5pbmRleE9mKFwiP1wiKSA9PT0gLTEpKSA/IFwiP1wiIDogXCImXCI7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbCA9IGVuY29kZVVSSUNvbXBvbmVudChoZWFkZXJzW2hlYWRlck5hbWVdKTtcbiAgICAgICAgICAgICAgICAgICAgcXVlcnlQYXJhbXMgKz0gYCR7aGVhZGVyTmFtZX09JHt2YWx9YDtcbiAgICAgICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLnByaXZVcmkgPSB1cmkgKyBxdWVyeVBhcmFtcztcbiAgICAgICAgdGhpcy5wcml2SWQgPSBjb25uZWN0aW9uSWQgPyBjb25uZWN0aW9uSWQgOiBFeHBvcnRzX2pzXzEuY3JlYXRlTm9EYXNoR3VpZCgpO1xuICAgICAgICB0aGlzLnByaXZDb25uZWN0aW9uTWVzc2FnZUFkYXB0ZXIgPSBuZXcgV2Vic29ja2V0TWVzc2FnZUFkYXB0ZXJfanNfMS5XZWJzb2NrZXRNZXNzYWdlQWRhcHRlcih0aGlzLnByaXZVcmksIHRoaXMuaWQsIHRoaXMucHJpdk1lc3NhZ2VGb3JtYXR0ZXIsIHByb3h5SW5mbywgaGVhZGVycywgZW5hYmxlQ29tcHJlc3Npb24pO1xuICAgIH1cbiAgICBhc3luYyBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLnByaXZJc0Rpc3Bvc2VkID0gdHJ1ZTtcbiAgICAgICAgaWYgKHRoaXMucHJpdkNvbm5lY3Rpb25NZXNzYWdlQWRhcHRlcikge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5wcml2Q29ubmVjdGlvbk1lc3NhZ2VBZGFwdGVyLmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaXNEaXNwb3NlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdklzRGlzcG9zZWQ7XG4gICAgfVxuICAgIGdldCBpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdklkO1xuICAgIH1cbiAgICBnZXQgdXJpKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VXJpO1xuICAgIH1cbiAgICBzdGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbm5lY3Rpb25NZXNzYWdlQWRhcHRlci5zdGF0ZTtcbiAgICB9XG4gICAgb3BlbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbm5lY3Rpb25NZXNzYWdlQWRhcHRlci5vcGVuKCk7XG4gICAgfVxuICAgIHNlbmQobWVzc2FnZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2Q29ubmVjdGlvbk1lc3NhZ2VBZGFwdGVyLnNlbmQobWVzc2FnZSk7XG4gICAgfVxuICAgIHJlYWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZDb25uZWN0aW9uTWVzc2FnZUFkYXB0ZXIucmVhZCgpO1xuICAgIH1cbiAgICBnZXQgZXZlbnRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2Q29ubmVjdGlvbk1lc3NhZ2VBZGFwdGVyLmV2ZW50cztcbiAgICB9XG59XG5leHBvcnRzLldlYnNvY2tldENvbm5lY3Rpb24gPSBXZWJzb2NrZXRDb25uZWN0aW9uO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1XZWJzb2NrZXRDb25uZWN0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketConnection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketMessageAdapter.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketMessageAdapter.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WebsocketMessageAdapter = void 0;\nconst net = __importStar(__webpack_require__(/*! net */ \"net\"));\nconst tls = __importStar(__webpack_require__(/*! tls */ \"tls\"));\nconst agent_base_1 = __importDefault(__webpack_require__(/*! agent-base */ \"(rsc)/./node_modules/agent-base/dist/src/index.js\"));\nconst https_proxy_agent_1 = __importDefault(__webpack_require__(/*! https-proxy-agent */ \"(rsc)/./node_modules/https-proxy-agent/index.js\"));\nconst ws_1 = __importDefault(__webpack_require__(/*! ws */ \"(rsc)/./node_modules/ws/index.js\"));\nconst HeaderNames_js_1 = __webpack_require__(/*! ../common.speech/HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nclass WebsocketMessageAdapter {\n    constructor(uri, connectionId, messageFormatter, proxyInfo, headers, enableCompression) {\n        if (!uri) {\n            throw new Exports_js_1.ArgumentNullError(\"uri\");\n        }\n        if (!messageFormatter) {\n            throw new Exports_js_1.ArgumentNullError(\"messageFormatter\");\n        }\n        this.proxyInfo = proxyInfo;\n        this.privConnectionEvents = new Exports_js_1.EventSource();\n        this.privConnectionId = connectionId;\n        this.privMessageFormatter = messageFormatter;\n        this.privConnectionState = Exports_js_1.ConnectionState.None;\n        this.privUri = uri;\n        this.privHeaders = headers;\n        this.privEnableCompression = enableCompression;\n        // Add the connection ID to the headers\n        this.privHeaders[HeaderNames_js_1.HeaderNames.ConnectionId] = this.privConnectionId;\n        this.privLastErrorReceived = \"\";\n    }\n    get state() {\n        return this.privConnectionState;\n    }\n    open() {\n        if (this.privConnectionState === Exports_js_1.ConnectionState.Disconnected) {\n            return Promise.reject(`Cannot open a connection that is in ${this.privConnectionState} state`);\n        }\n        if (this.privConnectionEstablishDeferral) {\n            return this.privConnectionEstablishDeferral.promise;\n        }\n        this.privConnectionEstablishDeferral = new Exports_js_1.Deferred();\n        this.privCertificateValidatedDeferral = new Exports_js_1.Deferred();\n        this.privConnectionState = Exports_js_1.ConnectionState.Connecting;\n        try {\n            if (typeof WebSocket !== \"undefined\" && !WebsocketMessageAdapter.forceNpmWebSocket) {\n                // Browser handles cert checks.\n                this.privCertificateValidatedDeferral.resolve();\n                this.privWebsocketClient = new WebSocket(this.privUri);\n            }\n            else {\n                const options = { headers: this.privHeaders, perMessageDeflate: this.privEnableCompression };\n                // The ocsp library will handle validation for us and fail the connection if needed.\n                this.privCertificateValidatedDeferral.resolve();\n                options.agent = this.getAgent();\n                // Workaround for https://github.com/microsoft/cognitive-services-speech-sdk-js/issues/465\n                // Which is root caused by https://github.com/TooTallNate/node-agent-base/issues/61\n                const uri = new URL(this.privUri);\n                let protocol = uri.protocol;\n                if (protocol?.toLocaleLowerCase() === \"wss:\") {\n                    protocol = \"https:\";\n                }\n                else if (protocol?.toLocaleLowerCase() === \"ws:\") {\n                    protocol = \"http:\";\n                }\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                options.agent.protocol = protocol;\n                this.privWebsocketClient = new ws_1.default(this.privUri, options);\n            }\n            this.privWebsocketClient.binaryType = \"arraybuffer\";\n            this.privReceivingMessageQueue = new Exports_js_1.Queue();\n            this.privDisconnectDeferral = new Exports_js_1.Deferred();\n            this.privSendMessageQueue = new Exports_js_1.Queue();\n            this.processSendQueue().catch((reason) => {\n                Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n            });\n        }\n        catch (error) {\n            this.privConnectionEstablishDeferral.resolve(new Exports_js_1.ConnectionOpenResponse(500, error));\n            return this.privConnectionEstablishDeferral.promise;\n        }\n        this.onEvent(new Exports_js_1.ConnectionStartEvent(this.privConnectionId, this.privUri));\n        this.privWebsocketClient.onopen = () => {\n            this.privCertificateValidatedDeferral.promise.then(() => {\n                this.privConnectionState = Exports_js_1.ConnectionState.Connected;\n                this.onEvent(new Exports_js_1.ConnectionEstablishedEvent(this.privConnectionId));\n                this.privConnectionEstablishDeferral.resolve(new Exports_js_1.ConnectionOpenResponse(200, \"\"));\n            }, (error) => {\n                this.privConnectionEstablishDeferral.reject(error);\n            });\n        };\n        this.privWebsocketClient.onerror = (e) => {\n            this.onEvent(new Exports_js_1.ConnectionErrorEvent(this.privConnectionId, e.message, e.type));\n            this.privLastErrorReceived = e.message;\n        };\n        this.privWebsocketClient.onclose = (e) => {\n            if (this.privConnectionState === Exports_js_1.ConnectionState.Connecting) {\n                this.privConnectionState = Exports_js_1.ConnectionState.Disconnected;\n                // this.onEvent(new ConnectionEstablishErrorEvent(this.connectionId, e.code, e.reason));\n                this.privConnectionEstablishDeferral.resolve(new Exports_js_1.ConnectionOpenResponse(e.code, e.reason + \" \" + this.privLastErrorReceived));\n            }\n            else {\n                this.privConnectionState = Exports_js_1.ConnectionState.Disconnected;\n                this.privWebsocketClient = null;\n                this.onEvent(new Exports_js_1.ConnectionClosedEvent(this.privConnectionId, e.code, e.reason));\n            }\n            this.onClose(e.code, e.reason).catch((reason) => {\n                Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n            });\n        };\n        this.privWebsocketClient.onmessage = (e) => {\n            const networkReceivedTime = new Date().toISOString();\n            if (this.privConnectionState === Exports_js_1.ConnectionState.Connected) {\n                const deferred = new Exports_js_1.Deferred();\n                // let id = ++this.idCounter;\n                this.privReceivingMessageQueue.enqueueFromPromise(deferred.promise);\n                if (e.data instanceof ArrayBuffer) {\n                    const rawMessage = new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Binary, e.data);\n                    this.privMessageFormatter\n                        .toConnectionMessage(rawMessage)\n                        .then((connectionMessage) => {\n                        this.onEvent(new Exports_js_1.ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\n                        deferred.resolve(connectionMessage);\n                    }, (error) => {\n                        // TODO: Events for these ?\n                        deferred.reject(`Invalid binary message format. Error: ${error}`);\n                    });\n                }\n                else {\n                    const rawMessage = new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Text, e.data);\n                    this.privMessageFormatter\n                        .toConnectionMessage(rawMessage)\n                        .then((connectionMessage) => {\n                        this.onEvent(new Exports_js_1.ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\n                        deferred.resolve(connectionMessage);\n                    }, (error) => {\n                        // TODO: Events for these ?\n                        deferred.reject(`Invalid text message format. Error: ${error}`);\n                    });\n                }\n            }\n        };\n        return this.privConnectionEstablishDeferral.promise;\n    }\n    send(message) {\n        if (this.privConnectionState !== Exports_js_1.ConnectionState.Connected) {\n            return Promise.reject(`Cannot send on connection that is in ${Exports_js_1.ConnectionState[this.privConnectionState]} state`);\n        }\n        const messageSendStatusDeferral = new Exports_js_1.Deferred();\n        const messageSendDeferral = new Exports_js_1.Deferred();\n        this.privSendMessageQueue.enqueueFromPromise(messageSendDeferral.promise);\n        this.privMessageFormatter\n            .fromConnectionMessage(message)\n            .then((rawMessage) => {\n            messageSendDeferral.resolve({\n                Message: message,\n                RawWebsocketMessage: rawMessage,\n                sendStatusDeferral: messageSendStatusDeferral,\n            });\n        }, (error) => {\n            messageSendDeferral.reject(`Error formatting the message. ${error}`);\n        });\n        return messageSendStatusDeferral.promise;\n    }\n    read() {\n        if (this.privConnectionState !== Exports_js_1.ConnectionState.Connected) {\n            return Promise.reject(`Cannot read on connection that is in ${this.privConnectionState} state`);\n        }\n        return this.privReceivingMessageQueue.dequeue();\n    }\n    close(reason) {\n        if (this.privWebsocketClient) {\n            if (this.privConnectionState !== Exports_js_1.ConnectionState.Disconnected) {\n                this.privWebsocketClient.close(1000, reason ? reason : \"Normal closure by client\");\n            }\n        }\n        else {\n            return Promise.resolve();\n        }\n        return this.privDisconnectDeferral.promise;\n    }\n    get events() {\n        return this.privConnectionEvents;\n    }\n    sendRawMessage(sendItem) {\n        try {\n            // indicates we are draining the queue and it came with no message;\n            if (!sendItem) {\n                return Promise.resolve();\n            }\n            this.onEvent(new Exports_js_1.ConnectionMessageSentEvent(this.privConnectionId, new Date().toISOString(), sendItem.Message));\n            // add a check for the ws readystate in order to stop the red console error 'WebSocket is already in CLOSING or CLOSED state' appearing\n            if (this.isWebsocketOpen) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                this.privWebsocketClient.send(sendItem.RawWebsocketMessage.payload);\n            }\n            else {\n                return Promise.reject(\"websocket send error: Websocket not ready \" + this.privConnectionId + \" \" + sendItem.Message.id + \" \" + new Error().stack);\n            }\n            return Promise.resolve();\n        }\n        catch (e) {\n            return Promise.reject(`websocket send error: ${e}`);\n        }\n    }\n    async onClose(code, reason) {\n        const closeReason = `Connection closed. ${code}: ${reason}`;\n        this.privConnectionState = Exports_js_1.ConnectionState.Disconnected;\n        this.privDisconnectDeferral.resolve();\n        await this.privReceivingMessageQueue.drainAndDispose(() => {\n            // TODO: Events for these ?\n            // Logger.instance.onEvent(new LoggingEvent(LogType.Warning, null, `Failed to process received message. Reason: ${closeReason}, Message: ${JSON.stringify(pendingReceiveItem)}`));\n        }, closeReason);\n        await this.privSendMessageQueue.drainAndDispose((pendingSendItem) => {\n            pendingSendItem.sendStatusDeferral.reject(closeReason);\n        }, closeReason);\n    }\n    async processSendQueue() {\n        while (true) {\n            const itemToSend = this.privSendMessageQueue.dequeue();\n            const sendItem = await itemToSend;\n            // indicates we are draining the queue and it came with no message;\n            if (!sendItem) {\n                return;\n            }\n            try {\n                await this.sendRawMessage(sendItem);\n                sendItem.sendStatusDeferral.resolve();\n            }\n            catch (sendError) {\n                sendItem.sendStatusDeferral.reject(sendError);\n            }\n        }\n    }\n    onEvent(event) {\n        this.privConnectionEvents.onEvent(event);\n        Exports_js_1.Events.instance.onEvent(event);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getAgent() {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        const agent = new agent_base_1.default.Agent(this.createConnection);\n        if (this.proxyInfo !== undefined &&\n            this.proxyInfo.HostName !== undefined &&\n            this.proxyInfo.Port > 0) {\n            agent.proxyInfo = this.proxyInfo;\n        }\n        return agent;\n    }\n    static GetProxyAgent(proxyInfo) {\n        const httpProxyOptions = {\n            host: proxyInfo.HostName,\n            port: proxyInfo.Port,\n        };\n        if (!!proxyInfo.UserName) {\n            httpProxyOptions.headers = {\n                \"Proxy-Authentication\": \"Basic \" + new Buffer(`${proxyInfo.UserName}:${(proxyInfo.Password === undefined) ? \"\" : proxyInfo.Password}`).toString(\"base64\"),\n            };\n        }\n        else {\n            httpProxyOptions.headers = {};\n        }\n        httpProxyOptions.headers.requestOCSP = \"true\";\n        const httpProxyAgent = new https_proxy_agent_1.default(httpProxyOptions);\n        return httpProxyAgent;\n    }\n    createConnection(request, options) {\n        let socketPromise;\n        options = {\n            ...options,\n            ...{\n                requestOCSP: true,\n                servername: options.host\n            }\n        };\n        if (!!this.proxyInfo) {\n            const httpProxyAgent = WebsocketMessageAdapter.GetProxyAgent(this.proxyInfo);\n            const baseAgent = httpProxyAgent;\n            socketPromise = new Promise((resolve, reject) => {\n                baseAgent.callback(request, options, (error, socket) => {\n                    if (!!error) {\n                        reject(error);\n                    }\n                    else {\n                        resolve(socket);\n                    }\n                });\n            });\n        }\n        else {\n            if (!!options.secureEndpoint) {\n                socketPromise = Promise.resolve(tls.connect(options));\n            }\n            else {\n                socketPromise = Promise.resolve(net.connect(options));\n            }\n        }\n        return socketPromise;\n    }\n    get isWebsocketOpen() {\n        return this.privWebsocketClient && this.privWebsocketClient.readyState === this.privWebsocketClient.OPEN;\n    }\n}\nexports.WebsocketMessageAdapter = WebsocketMessageAdapter;\nWebsocketMessageAdapter.forceNpmWebSocket = false;\n\n//# sourceMappingURL=WebsocketMessageAdapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/WebsocketMessageAdapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AddedLmIntent.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AddedLmIntent.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AddedLmIntent = void 0;\n/**\n * @class AddedLmIntent\n */\n// eslint-disable-next-line max-classes-per-file\nclass AddedLmIntent {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param modelImpl - The model.\n     * @param intentName - The intent name.\n     */\n    constructor(modelImpl, intentName) {\n        this.modelImpl = modelImpl;\n        this.intentName = intentName;\n    }\n}\nexports.AddedLmIntent = AddedLmIntent;\n\n//# sourceMappingURL=AddedLmIntent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvQWRkZWRMbUludGVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCOztBQUVyQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL0FkZGVkTG1JbnRlbnQuanM/MDRlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BZGRlZExtSW50ZW50ID0gdm9pZCAwO1xuLyoqXG4gKiBAY2xhc3MgQWRkZWRMbUludGVudFxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LWNsYXNzZXMtcGVyLWZpbGVcbmNsYXNzIEFkZGVkTG1JbnRlbnQge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIG1vZGVsSW1wbCAtIFRoZSBtb2RlbC5cbiAgICAgKiBAcGFyYW0gaW50ZW50TmFtZSAtIFRoZSBpbnRlbnQgbmFtZS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihtb2RlbEltcGwsIGludGVudE5hbWUpIHtcbiAgICAgICAgdGhpcy5tb2RlbEltcGwgPSBtb2RlbEltcGw7XG4gICAgICAgIHRoaXMuaW50ZW50TmFtZSA9IGludGVudE5hbWU7XG4gICAgfVxufVxuZXhwb3J0cy5BZGRlZExtSW50ZW50ID0gQWRkZWRMbUludGVudDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWRkZWRMbUludGVudC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AddedLmIntent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AgentConfig.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AgentConfig.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AgentConfig = void 0;\n/**\n * Represents the JSON used in the agent.config message sent to the speech service.\n */\nclass AgentConfig {\n    toJsonString() {\n        return JSON.stringify(this.iPrivConfig);\n    }\n    get() {\n        return this.iPrivConfig;\n    }\n    /**\n     * Setter for the agent.config object.\n     * @param value a JSON serializable object.\n     */\n    set(value) {\n        this.iPrivConfig = value;\n    }\n}\nexports.AgentConfig = AgentConfig;\n\n//# sourceMappingURL=AgentConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvQWdlbnRDb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7O0FBRW5CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvQWdlbnRDb25maWcuanM/NWVkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BZ2VudENvbmZpZyA9IHZvaWQgMDtcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgSlNPTiB1c2VkIGluIHRoZSBhZ2VudC5jb25maWcgbWVzc2FnZSBzZW50IHRvIHRoZSBzcGVlY2ggc2VydmljZS5cbiAqL1xuY2xhc3MgQWdlbnRDb25maWcge1xuICAgIHRvSnNvblN0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMuaVByaXZDb25maWcpO1xuICAgIH1cbiAgICBnZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlQcml2Q29uZmlnO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXR0ZXIgZm9yIHRoZSBhZ2VudC5jb25maWcgb2JqZWN0LlxuICAgICAqIEBwYXJhbSB2YWx1ZSBhIEpTT04gc2VyaWFsaXphYmxlIG9iamVjdC5cbiAgICAgKi9cbiAgICBzZXQodmFsdWUpIHtcbiAgICAgICAgdGhpcy5pUHJpdkNvbmZpZyA9IHZhbHVlO1xuICAgIH1cbn1cbmV4cG9ydHMuQWdlbnRDb25maWcgPSBBZ2VudENvbmZpZztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWdlbnRDb25maWcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AgentConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AvatarSynthesisAdapter.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AvatarSynthesisAdapter.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AvatarSynthesisAdapter = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nclass AvatarSynthesisAdapter extends Exports_js_2.SynthesisAdapterBase {\n    constructor(authentication, connectionFactory, synthesizerConfig, avatarSynthesizer, avatarConfig) {\n        super(authentication, connectionFactory, synthesizerConfig, undefined);\n        this.privAvatarSynthesizer = avatarSynthesizer;\n        this.privSynthesizer = avatarSynthesizer;\n        this.privAvatarConfig = avatarConfig;\n    }\n    setSynthesisContextSynthesisSection() {\n        this.privSynthesisContext.setSynthesisSection(undefined);\n    }\n    setSpeechConfigSynthesisSection() {\n        this.privSynthesizerConfig.synthesisVideoSection = {\n            format: {\n                bitrate: this.privAvatarConfig.videoFormat?.bitrate,\n                codec: this.privAvatarConfig.videoFormat?.codec,\n                crop: {\n                    bottomRight: {\n                        x: this.privAvatarConfig.videoFormat?.cropRange?.bottomRight?.x,\n                        y: this.privAvatarConfig.videoFormat?.cropRange?.bottomRight?.y,\n                    },\n                    topLeft: {\n                        x: this.privAvatarConfig.videoFormat?.cropRange?.topLeft?.x,\n                        y: this.privAvatarConfig.videoFormat?.cropRange?.topLeft?.y,\n                    },\n                },\n                resolution: {\n                    height: this.privAvatarConfig.videoFormat?.height,\n                    width: this.privAvatarConfig.videoFormat?.width,\n                },\n            },\n            protocol: {\n                name: \"WebRTC\",\n                webrtcConfig: {\n                    clientDescription: btoa(this.privSynthesizerConfig.parameters.getProperty(Exports_js_1.PropertyId.TalkingAvatarService_WebRTC_SDP)),\n                    iceServers: this.privAvatarConfig.remoteIceServers ?? this.privAvatarSynthesizer.iceServers,\n                },\n            },\n            talkingAvatar: {\n                background: {\n                    color: this.privAvatarConfig.backgroundColor,\n                    image: {\n                        url: this.privAvatarConfig.backgroundImage?.toString(),\n                    }\n                },\n                character: this.privAvatarConfig.character,\n                customized: this.privAvatarConfig.customized,\n                style: this.privAvatarConfig.style,\n            }\n        };\n    }\n    onAvatarEvent(metadata) {\n        if (!!this.privAvatarSynthesizer.avatarEventReceived) {\n            const avatarEventArgs = new Exports_js_1.AvatarEventArgs(metadata.Data.Offset, metadata.Data.Name);\n            try {\n                this.privAvatarSynthesizer.avatarEventReceived(this.privAvatarSynthesizer, avatarEventArgs);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n}\nexports.AvatarSynthesisAdapter = AvatarSynthesisAdapter;\n\n//# sourceMappingURL=AvatarSynthesisAdapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvQXZhdGFyU3ludGhlc2lzQWRhcHRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCLHFCQUFxQixtQkFBTyxDQUFDLHFIQUFtQjtBQUNoRCxxQkFBcUIsbUJBQU8sQ0FBQywwSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCOztBQUU5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL0F2YXRhclN5bnRoZXNpc0FkYXB0ZXIuanM/MzQ4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BdmF0YXJTeW50aGVzaXNBZGFwdGVyID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uL3Nkay9FeHBvcnRzLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18yID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbmNsYXNzIEF2YXRhclN5bnRoZXNpc0FkYXB0ZXIgZXh0ZW5kcyBFeHBvcnRzX2pzXzIuU3ludGhlc2lzQWRhcHRlckJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKGF1dGhlbnRpY2F0aW9uLCBjb25uZWN0aW9uRmFjdG9yeSwgc3ludGhlc2l6ZXJDb25maWcsIGF2YXRhclN5bnRoZXNpemVyLCBhdmF0YXJDb25maWcpIHtcbiAgICAgICAgc3VwZXIoYXV0aGVudGljYXRpb24sIGNvbm5lY3Rpb25GYWN0b3J5LCBzeW50aGVzaXplckNvbmZpZywgdW5kZWZpbmVkKTtcbiAgICAgICAgdGhpcy5wcml2QXZhdGFyU3ludGhlc2l6ZXIgPSBhdmF0YXJTeW50aGVzaXplcjtcbiAgICAgICAgdGhpcy5wcml2U3ludGhlc2l6ZXIgPSBhdmF0YXJTeW50aGVzaXplcjtcbiAgICAgICAgdGhpcy5wcml2QXZhdGFyQ29uZmlnID0gYXZhdGFyQ29uZmlnO1xuICAgIH1cbiAgICBzZXRTeW50aGVzaXNDb250ZXh0U3ludGhlc2lzU2VjdGlvbigpIHtcbiAgICAgICAgdGhpcy5wcml2U3ludGhlc2lzQ29udGV4dC5zZXRTeW50aGVzaXNTZWN0aW9uKHVuZGVmaW5lZCk7XG4gICAgfVxuICAgIHNldFNwZWVjaENvbmZpZ1N5bnRoZXNpc1NlY3Rpb24oKSB7XG4gICAgICAgIHRoaXMucHJpdlN5bnRoZXNpemVyQ29uZmlnLnN5bnRoZXNpc1ZpZGVvU2VjdGlvbiA9IHtcbiAgICAgICAgICAgIGZvcm1hdDoge1xuICAgICAgICAgICAgICAgIGJpdHJhdGU6IHRoaXMucHJpdkF2YXRhckNvbmZpZy52aWRlb0Zvcm1hdD8uYml0cmF0ZSxcbiAgICAgICAgICAgICAgICBjb2RlYzogdGhpcy5wcml2QXZhdGFyQ29uZmlnLnZpZGVvRm9ybWF0Py5jb2RlYyxcbiAgICAgICAgICAgICAgICBjcm9wOiB7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbVJpZ2h0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB4OiB0aGlzLnByaXZBdmF0YXJDb25maWcudmlkZW9Gb3JtYXQ/LmNyb3BSYW5nZT8uYm90dG9tUmlnaHQ/LngsXG4gICAgICAgICAgICAgICAgICAgICAgICB5OiB0aGlzLnByaXZBdmF0YXJDb25maWcudmlkZW9Gb3JtYXQ/LmNyb3BSYW5nZT8uYm90dG9tUmlnaHQ/LnksXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHRvcExlZnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHg6IHRoaXMucHJpdkF2YXRhckNvbmZpZy52aWRlb0Zvcm1hdD8uY3JvcFJhbmdlPy50b3BMZWZ0Py54LFxuICAgICAgICAgICAgICAgICAgICAgICAgeTogdGhpcy5wcml2QXZhdGFyQ29uZmlnLnZpZGVvRm9ybWF0Py5jcm9wUmFuZ2U/LnRvcExlZnQ/LnksXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICByZXNvbHV0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogdGhpcy5wcml2QXZhdGFyQ29uZmlnLnZpZGVvRm9ybWF0Py5oZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiB0aGlzLnByaXZBdmF0YXJDb25maWcudmlkZW9Gb3JtYXQ/LndpZHRoLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcHJvdG9jb2w6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIldlYlJUQ1wiLFxuICAgICAgICAgICAgICAgIHdlYnJ0Y0NvbmZpZzoge1xuICAgICAgICAgICAgICAgICAgICBjbGllbnREZXNjcmlwdGlvbjogYnRvYSh0aGlzLnByaXZTeW50aGVzaXplckNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkLlRhbGtpbmdBdmF0YXJTZXJ2aWNlX1dlYlJUQ19TRFApKSxcbiAgICAgICAgICAgICAgICAgICAgaWNlU2VydmVyczogdGhpcy5wcml2QXZhdGFyQ29uZmlnLnJlbW90ZUljZVNlcnZlcnMgPz8gdGhpcy5wcml2QXZhdGFyU3ludGhlc2l6ZXIuaWNlU2VydmVycyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRhbGtpbmdBdmF0YXI6IHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB0aGlzLnByaXZBdmF0YXJDb25maWcuYmFja2dyb3VuZENvbG9yLFxuICAgICAgICAgICAgICAgICAgICBpbWFnZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiB0aGlzLnByaXZBdmF0YXJDb25maWcuYmFja2dyb3VuZEltYWdlPy50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjaGFyYWN0ZXI6IHRoaXMucHJpdkF2YXRhckNvbmZpZy5jaGFyYWN0ZXIsXG4gICAgICAgICAgICAgICAgY3VzdG9taXplZDogdGhpcy5wcml2QXZhdGFyQ29uZmlnLmN1c3RvbWl6ZWQsXG4gICAgICAgICAgICAgICAgc3R5bGU6IHRoaXMucHJpdkF2YXRhckNvbmZpZy5zdHlsZSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgb25BdmF0YXJFdmVudChtZXRhZGF0YSkge1xuICAgICAgICBpZiAoISF0aGlzLnByaXZBdmF0YXJTeW50aGVzaXplci5hdmF0YXJFdmVudFJlY2VpdmVkKSB7XG4gICAgICAgICAgICBjb25zdCBhdmF0YXJFdmVudEFyZ3MgPSBuZXcgRXhwb3J0c19qc18xLkF2YXRhckV2ZW50QXJncyhtZXRhZGF0YS5EYXRhLk9mZnNldCwgbWV0YWRhdGEuRGF0YS5OYW1lKTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wcml2QXZhdGFyU3ludGhlc2l6ZXIuYXZhdGFyRXZlbnRSZWNlaXZlZCh0aGlzLnByaXZBdmF0YXJTeW50aGVzaXplciwgYXZhdGFyRXZlbnRBcmdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIC8vIE5vdCBnb2luZyB0byBsZXQgZXJyb3JzIGluIHRoZSBldmVudCBoYW5kbGVyXG4gICAgICAgICAgICAgICAgLy8gdHJpcCB0aGluZ3MgdXAuXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkF2YXRhclN5bnRoZXNpc0FkYXB0ZXIgPSBBdmF0YXJTeW50aGVzaXNBZGFwdGVyO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdmF0YXJTeW50aGVzaXNBZGFwdGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AvatarSynthesisAdapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveSubscriptionKeyAuthentication.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveSubscriptionKeyAuthentication.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CognitiveSubscriptionKeyAuthentication = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ./HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nconst IAuthentication_js_1 = __webpack_require__(/*! ./IAuthentication.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IAuthentication.js\");\n/**\n * @class\n */\nclass CognitiveSubscriptionKeyAuthentication {\n    /**\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\n     * @constructor\n     * @param {string} subscriptionKey - The subscription key\n     */\n    constructor(subscriptionKey) {\n        if (!subscriptionKey) {\n            throw new Exports_js_1.ArgumentNullError(\"subscriptionKey\");\n        }\n        this.privAuthInfo = new IAuthentication_js_1.AuthInfo(HeaderNames_js_1.HeaderNames.AuthKey, subscriptionKey);\n    }\n    /**\n     * Fetches the subscription key.\n     * @member\n     * @function\n     * @public\n     * @param {string} authFetchEventId - The id to fetch.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    fetch(authFetchEventId) {\n        return Promise.resolve(this.privAuthInfo);\n    }\n    /**\n     * Fetches the subscription key.\n     * @member\n     * @function\n     * @public\n     * @param {string} authFetchEventId - The id to fetch.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    fetchOnExpiry(authFetchEventId) {\n        return Promise.resolve(this.privAuthInfo);\n    }\n}\nexports.CognitiveSubscriptionKeyAuthentication = CognitiveSubscriptionKeyAuthentication;\n\n//# sourceMappingURL=CognitiveSubscriptionKeyAuthentication.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvQ29nbml0aXZlU3Vic2NyaXB0aW9uS2V5QXV0aGVudGljYXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhDQUE4QztBQUM5QyxxQkFBcUIsbUJBQU8sQ0FBQywySEFBc0I7QUFDbkQseUJBQXlCLG1CQUFPLENBQUMsa0lBQWtCO0FBQ25ELDZCQUE2QixtQkFBTyxDQUFDLDBJQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDOztBQUU5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL0NvZ25pdGl2ZVN1YnNjcmlwdGlvbktleUF1dGhlbnRpY2F0aW9uLmpzPzlmZDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29nbml0aXZlU3Vic2NyaXB0aW9uS2V5QXV0aGVudGljYXRpb24gPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uL0V4cG9ydHMuanNcIik7XG5jb25zdCBIZWFkZXJOYW1lc19qc18xID0gcmVxdWlyZShcIi4vSGVhZGVyTmFtZXMuanNcIik7XG5jb25zdCBJQXV0aGVudGljYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuL0lBdXRoZW50aWNhdGlvbi5qc1wiKTtcbi8qKlxuICogQGNsYXNzXG4gKi9cbmNsYXNzIENvZ25pdGl2ZVN1YnNjcmlwdGlvbktleUF1dGhlbnRpY2F0aW9uIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCBpbml0aWFsaXplcyBhbiBpbnN0YW5jZSBvZiB0aGUgQ29nbml0aXZlU3Vic2NyaXB0aW9uS2V5QXV0aGVudGljYXRpb24gY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHN1YnNjcmlwdGlvbktleSAtIFRoZSBzdWJzY3JpcHRpb24ga2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3Ioc3Vic2NyaXB0aW9uS2V5KSB7XG4gICAgICAgIGlmICghc3Vic2NyaXB0aW9uS2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXhwb3J0c19qc18xLkFyZ3VtZW50TnVsbEVycm9yKFwic3Vic2NyaXB0aW9uS2V5XCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJpdkF1dGhJbmZvID0gbmV3IElBdXRoZW50aWNhdGlvbl9qc18xLkF1dGhJbmZvKEhlYWRlck5hbWVzX2pzXzEuSGVhZGVyTmFtZXMuQXV0aEtleSwgc3Vic2NyaXB0aW9uS2V5KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRmV0Y2hlcyB0aGUgc3Vic2NyaXB0aW9uIGtleS5cbiAgICAgKiBAbWVtYmVyXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhdXRoRmV0Y2hFdmVudElkIC0gVGhlIGlkIHRvIGZldGNoLlxuICAgICAqL1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgICBmZXRjaChhdXRoRmV0Y2hFdmVudElkKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5wcml2QXV0aEluZm8pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGZXRjaGVzIHRoZSBzdWJzY3JpcHRpb24ga2V5LlxuICAgICAqIEBtZW1iZXJcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGF1dGhGZXRjaEV2ZW50SWQgLSBUaGUgaWQgdG8gZmV0Y2guXG4gICAgICovXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgIGZldGNoT25FeHBpcnkoYXV0aEZldGNoRXZlbnRJZCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMucHJpdkF1dGhJbmZvKTtcbiAgICB9XG59XG5leHBvcnRzLkNvZ25pdGl2ZVN1YnNjcmlwdGlvbktleUF1dGhlbnRpY2F0aW9uID0gQ29nbml0aXZlU3Vic2NyaXB0aW9uS2V5QXV0aGVudGljYXRpb247XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvZ25pdGl2ZVN1YnNjcmlwdGlvbktleUF1dGhlbnRpY2F0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveSubscriptionKeyAuthentication.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveTokenAuthentication.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveTokenAuthentication.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CognitiveTokenAuthentication = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst IAuthentication_js_1 = __webpack_require__(/*! ./IAuthentication.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IAuthentication.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ./HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nclass CognitiveTokenAuthentication {\n    constructor(fetchCallback, fetchOnExpiryCallback) {\n        if (!fetchCallback) {\n            throw new Exports_js_1.ArgumentNullError(\"fetchCallback\");\n        }\n        if (!fetchOnExpiryCallback) {\n            throw new Exports_js_1.ArgumentNullError(\"fetchOnExpiryCallback\");\n        }\n        this.privFetchCallback = fetchCallback;\n        this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\n    }\n    fetch(authFetchEventId) {\n        return this.privFetchCallback(authFetchEventId).then((token) => new IAuthentication_js_1.AuthInfo(HeaderNames_js_1.HeaderNames.Authorization, token === undefined ? undefined : CognitiveTokenAuthentication.privTokenPrefix + token));\n    }\n    fetchOnExpiry(authFetchEventId) {\n        return this.privFetchOnExpiryCallback(authFetchEventId).then((token) => new IAuthentication_js_1.AuthInfo(HeaderNames_js_1.HeaderNames.Authorization, token === undefined ? undefined : CognitiveTokenAuthentication.privTokenPrefix + token));\n    }\n}\nexports.CognitiveTokenAuthentication = CognitiveTokenAuthentication;\nCognitiveTokenAuthentication.privTokenPrefix = \"Bearer \";\n\n//# sourceMappingURL=CognitiveTokenAuthentication.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvQ29nbml0aXZlVG9rZW5BdXRoZW50aWNhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0NBQW9DO0FBQ3BDLHFCQUFxQixtQkFBTyxDQUFDLDJIQUFzQjtBQUNuRCw2QkFBNkIsbUJBQU8sQ0FBQywwSUFBc0I7QUFDM0QseUJBQXlCLG1CQUFPLENBQUMsa0lBQWtCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQzs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL0NvZ25pdGl2ZVRva2VuQXV0aGVudGljYXRpb24uanM/NzZiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db2duaXRpdmVUb2tlbkF1dGhlbnRpY2F0aW9uID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uL2NvbW1vbi9FeHBvcnRzLmpzXCIpO1xuY29uc3QgSUF1dGhlbnRpY2F0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi9JQXV0aGVudGljYXRpb24uanNcIik7XG5jb25zdCBIZWFkZXJOYW1lc19qc18xID0gcmVxdWlyZShcIi4vSGVhZGVyTmFtZXMuanNcIik7XG5jbGFzcyBDb2duaXRpdmVUb2tlbkF1dGhlbnRpY2F0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihmZXRjaENhbGxiYWNrLCBmZXRjaE9uRXhwaXJ5Q2FsbGJhY2spIHtcbiAgICAgICAgaWYgKCFmZXRjaENhbGxiYWNrKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXhwb3J0c19qc18xLkFyZ3VtZW50TnVsbEVycm9yKFwiZmV0Y2hDYWxsYmFja1wiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWZldGNoT25FeHBpcnlDYWxsYmFjaykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEV4cG9ydHNfanNfMS5Bcmd1bWVudE51bGxFcnJvcihcImZldGNoT25FeHBpcnlDYWxsYmFja1wiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnByaXZGZXRjaENhbGxiYWNrID0gZmV0Y2hDYWxsYmFjaztcbiAgICAgICAgdGhpcy5wcml2RmV0Y2hPbkV4cGlyeUNhbGxiYWNrID0gZmV0Y2hPbkV4cGlyeUNhbGxiYWNrO1xuICAgIH1cbiAgICBmZXRjaChhdXRoRmV0Y2hFdmVudElkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZGZXRjaENhbGxiYWNrKGF1dGhGZXRjaEV2ZW50SWQpLnRoZW4oKHRva2VuKSA9PiBuZXcgSUF1dGhlbnRpY2F0aW9uX2pzXzEuQXV0aEluZm8oSGVhZGVyTmFtZXNfanNfMS5IZWFkZXJOYW1lcy5BdXRob3JpemF0aW9uLCB0b2tlbiA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogQ29nbml0aXZlVG9rZW5BdXRoZW50aWNhdGlvbi5wcml2VG9rZW5QcmVmaXggKyB0b2tlbikpO1xuICAgIH1cbiAgICBmZXRjaE9uRXhwaXJ5KGF1dGhGZXRjaEV2ZW50SWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkZldGNoT25FeHBpcnlDYWxsYmFjayhhdXRoRmV0Y2hFdmVudElkKS50aGVuKCh0b2tlbikgPT4gbmV3IElBdXRoZW50aWNhdGlvbl9qc18xLkF1dGhJbmZvKEhlYWRlck5hbWVzX2pzXzEuSGVhZGVyTmFtZXMuQXV0aG9yaXphdGlvbiwgdG9rZW4gPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IENvZ25pdGl2ZVRva2VuQXV0aGVudGljYXRpb24ucHJpdlRva2VuUHJlZml4ICsgdG9rZW4pKTtcbiAgICB9XG59XG5leHBvcnRzLkNvZ25pdGl2ZVRva2VuQXV0aGVudGljYXRpb24gPSBDb2duaXRpdmVUb2tlbkF1dGhlbnRpY2F0aW9uO1xuQ29nbml0aXZlVG9rZW5BdXRoZW50aWNhdGlvbi5wcml2VG9rZW5QcmVmaXggPSBcIkJlYXJlciBcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29nbml0aXZlVG9rZW5BdXRoZW50aWNhdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveTokenAuthentication.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConnectionFactoryBase = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst QueryParameterNames_js_1 = __webpack_require__(/*! ./QueryParameterNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js\");\nclass ConnectionFactoryBase {\n    static getHostSuffix(region) {\n        if (!!region) {\n            if (region.toLowerCase().startsWith(\"china\")) {\n                return \".azure.cn\";\n            }\n            if (region.toLowerCase().startsWith(\"usgov\")) {\n                return \".azure.us\";\n            }\n        }\n        return \".microsoft.com\";\n    }\n    setCommonUrlParams(config, queryParams, endpoint) {\n        const propertyIdToParameterMap = new Map([\n            [Exports_js_2.PropertyId.Speech_SegmentationSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.SegmentationSilenceTimeoutMs],\n            [Exports_js_2.PropertyId.SpeechServiceConnection_EnableAudioLogging, QueryParameterNames_js_1.QueryParameterNames.EnableAudioLogging],\n            [Exports_js_2.PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.EndSilenceTimeoutMs],\n            [Exports_js_2.PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.InitialSilenceTimeoutMs],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_PostProcessingOption, QueryParameterNames_js_1.QueryParameterNames.Postprocessing],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_ProfanityOption, QueryParameterNames_js_1.QueryParameterNames.Profanity],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, QueryParameterNames_js_1.QueryParameterNames.EnableWordLevelTimestamps],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_StablePartialResultThreshold, QueryParameterNames_js_1.QueryParameterNames.StableIntermediateThreshold],\n        ]);\n        propertyIdToParameterMap.forEach((parameterName, propertyId) => {\n            this.setUrlParameter(propertyId, parameterName, config, queryParams, endpoint);\n        });\n        const serviceProperties = JSON.parse(config.parameters.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n        Object.keys(serviceProperties).forEach((value) => {\n            queryParams[value] = serviceProperties[value];\n        });\n    }\n    setUrlParameter(propId, parameterName, config, queryParams, endpoint) {\n        const value = config.parameters.getProperty(propId, undefined);\n        // FIXME: The .search() check will incorrectly match parameter name anywhere in the string\n        //        including e.g. the path portion, or even as a substring of other query parameters\n        if (value && (!endpoint || endpoint.search(parameterName) === -1)) {\n            queryParams[parameterName] = value.toLocaleLowerCase();\n        }\n    }\n}\nexports.ConnectionFactoryBase = ConnectionFactoryBase;\n\n//# sourceMappingURL=ConnectionFactoryBase.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvQ29ubmVjdGlvbkZhY3RvcnlCYXNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkI7QUFDN0IscUJBQXFCLG1CQUFPLENBQUMseUlBQTZCO0FBQzFELHFCQUFxQixtQkFBTyxDQUFDLHFIQUFtQjtBQUNoRCxpQ0FBaUMsbUJBQU8sQ0FBQyxrSkFBMEI7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsMEhBQTBIO0FBQzFIO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7O0FBRTdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvQ29ubmVjdGlvbkZhY3RvcnlCYXNlLmpzPzJhOWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29ubmVjdGlvbkZhY3RvcnlCYXNlID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uL2NvbW1vbi5zcGVlY2gvRXhwb3J0cy5qc1wiKTtcbmNvbnN0IEV4cG9ydHNfanNfMiA9IHJlcXVpcmUoXCIuLi9zZGsvRXhwb3J0cy5qc1wiKTtcbmNvbnN0IFF1ZXJ5UGFyYW1ldGVyTmFtZXNfanNfMSA9IHJlcXVpcmUoXCIuL1F1ZXJ5UGFyYW1ldGVyTmFtZXMuanNcIik7XG5jbGFzcyBDb25uZWN0aW9uRmFjdG9yeUJhc2Uge1xuICAgIHN0YXRpYyBnZXRIb3N0U3VmZml4KHJlZ2lvbikge1xuICAgICAgICBpZiAoISFyZWdpb24pIHtcbiAgICAgICAgICAgIGlmIChyZWdpb24udG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKFwiY2hpbmFcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCIuYXp1cmUuY25cIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZWdpb24udG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKFwidXNnb3ZcIikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCIuYXp1cmUudXNcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gXCIubWljcm9zb2Z0LmNvbVwiO1xuICAgIH1cbiAgICBzZXRDb21tb25VcmxQYXJhbXMoY29uZmlnLCBxdWVyeVBhcmFtcywgZW5kcG9pbnQpIHtcbiAgICAgICAgY29uc3QgcHJvcGVydHlJZFRvUGFyYW1ldGVyTWFwID0gbmV3IE1hcChbXG4gICAgICAgICAgICBbRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoX1NlZ21lbnRhdGlvblNpbGVuY2VUaW1lb3V0TXMsIFF1ZXJ5UGFyYW1ldGVyTmFtZXNfanNfMS5RdWVyeVBhcmFtZXRlck5hbWVzLlNlZ21lbnRhdGlvblNpbGVuY2VUaW1lb3V0TXNdLFxuICAgICAgICAgICAgW0V4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0VuYWJsZUF1ZGlvTG9nZ2luZywgUXVlcnlQYXJhbWV0ZXJOYW1lc19qc18xLlF1ZXJ5UGFyYW1ldGVyTmFtZXMuRW5hYmxlQXVkaW9Mb2dnaW5nXSxcbiAgICAgICAgICAgIFtFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9FbmRTaWxlbmNlVGltZW91dE1zLCBRdWVyeVBhcmFtZXRlck5hbWVzX2pzXzEuUXVlcnlQYXJhbWV0ZXJOYW1lcy5FbmRTaWxlbmNlVGltZW91dE1zXSxcbiAgICAgICAgICAgIFtFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9Jbml0aWFsU2lsZW5jZVRpbWVvdXRNcywgUXVlcnlQYXJhbWV0ZXJOYW1lc19qc18xLlF1ZXJ5UGFyYW1ldGVyTmFtZXMuSW5pdGlhbFNpbGVuY2VUaW1lb3V0TXNdLFxuICAgICAgICAgICAgW0V4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VSZXNwb25zZV9Qb3N0UHJvY2Vzc2luZ09wdGlvbiwgUXVlcnlQYXJhbWV0ZXJOYW1lc19qc18xLlF1ZXJ5UGFyYW1ldGVyTmFtZXMuUG9zdHByb2Nlc3NpbmddLFxuICAgICAgICAgICAgW0V4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VSZXNwb25zZV9Qcm9mYW5pdHlPcHRpb24sIFF1ZXJ5UGFyYW1ldGVyTmFtZXNfanNfMS5RdWVyeVBhcmFtZXRlck5hbWVzLlByb2Zhbml0eV0sXG4gICAgICAgICAgICBbRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZVJlc3BvbnNlX1JlcXVlc3RXb3JkTGV2ZWxUaW1lc3RhbXBzLCBRdWVyeVBhcmFtZXRlck5hbWVzX2pzXzEuUXVlcnlQYXJhbWV0ZXJOYW1lcy5FbmFibGVXb3JkTGV2ZWxUaW1lc3RhbXBzXSxcbiAgICAgICAgICAgIFtFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlUmVzcG9uc2VfU3RhYmxlUGFydGlhbFJlc3VsdFRocmVzaG9sZCwgUXVlcnlQYXJhbWV0ZXJOYW1lc19qc18xLlF1ZXJ5UGFyYW1ldGVyTmFtZXMuU3RhYmxlSW50ZXJtZWRpYXRlVGhyZXNob2xkXSxcbiAgICAgICAgXSk7XG4gICAgICAgIHByb3BlcnR5SWRUb1BhcmFtZXRlck1hcC5mb3JFYWNoKChwYXJhbWV0ZXJOYW1lLCBwcm9wZXJ0eUlkKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldFVybFBhcmFtZXRlcihwcm9wZXJ0eUlkLCBwYXJhbWV0ZXJOYW1lLCBjb25maWcsIHF1ZXJ5UGFyYW1zLCBlbmRwb2ludCk7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBzZXJ2aWNlUHJvcGVydGllcyA9IEpTT04ucGFyc2UoY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18xLlNlcnZpY2VQcm9wZXJ0aWVzUHJvcGVydHlOYW1lLCBcInt9XCIpKTtcbiAgICAgICAgT2JqZWN0LmtleXMoc2VydmljZVByb3BlcnRpZXMpLmZvckVhY2goKHZhbHVlKSA9PiB7XG4gICAgICAgICAgICBxdWVyeVBhcmFtc1t2YWx1ZV0gPSBzZXJ2aWNlUHJvcGVydGllc1t2YWx1ZV07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzZXRVcmxQYXJhbWV0ZXIocHJvcElkLCBwYXJhbWV0ZXJOYW1lLCBjb25maWcsIHF1ZXJ5UGFyYW1zLCBlbmRwb2ludCkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KHByb3BJZCwgdW5kZWZpbmVkKTtcbiAgICAgICAgLy8gRklYTUU6IFRoZSAuc2VhcmNoKCkgY2hlY2sgd2lsbCBpbmNvcnJlY3RseSBtYXRjaCBwYXJhbWV0ZXIgbmFtZSBhbnl3aGVyZSBpbiB0aGUgc3RyaW5nXG4gICAgICAgIC8vICAgICAgICBpbmNsdWRpbmcgZS5nLiB0aGUgcGF0aCBwb3J0aW9uLCBvciBldmVuIGFzIGEgc3Vic3RyaW5nIG9mIG90aGVyIHF1ZXJ5IHBhcmFtZXRlcnNcbiAgICAgICAgaWYgKHZhbHVlICYmICghZW5kcG9pbnQgfHwgZW5kcG9pbnQuc2VhcmNoKHBhcmFtZXRlck5hbWUpID09PSAtMSkpIHtcbiAgICAgICAgICAgIHF1ZXJ5UGFyYW1zW3BhcmFtZXRlck5hbWVdID0gdmFsdWUudG9Mb2NhbGVMb3dlckNhc2UoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQ29ubmVjdGlvbkZhY3RvcnlCYXNlID0gQ29ubmVjdGlvbkZhY3RvcnlCYXNlO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25uZWN0aW9uRmFjdG9yeUJhc2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationServiceRecognizer.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationServiceRecognizer.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationServiceRecognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nclass ConversationServiceRecognizer extends Exports_js_2.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.handleSpeechPhraseMessage = async (textBody) => this.handleSpeechPhrase(textBody);\n        this.handleSpeechHypothesisMessage = (textBody) => this.handleSpeechHypothesis(textBody);\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        void connectionMessage;\n        return;\n    }\n    handleRecognizedCallback(result, offset, sessionId) {\n        void result;\n        void offset;\n        void sessionId;\n        return;\n    }\n    handleRecognizingCallback(result, duration, sessionId) {\n        void result;\n        void duration;\n        void sessionId;\n        return;\n    }\n    async processSpeechMessages(connectionMessage) {\n        let processed = false;\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n            case \"speech.fragment\":\n                if (!!this.handleSpeechHypothesisMessage) {\n                    this.handleSpeechHypothesisMessage(connectionMessage.textBody);\n                }\n                processed = true;\n                break;\n            case \"speech.phrase\":\n                if (!!this.handleSpeechPhraseMessage) {\n                    await this.handleSpeechPhraseMessage(connectionMessage.textBody);\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        return processed;\n    }\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        // Implementing to allow inheritance\n        void sessionId;\n        void requestId;\n        void cancellationReason;\n        void errorCode;\n        void error;\n    }\n    async handleSpeechPhrase(textBody) {\n        const simple = Exports_js_2.SimpleSpeechPhrase.fromJSON(textBody, this.privRequestSession.currentTurnAudioOffset);\n        const resultReason = Exports_js_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\n        let result;\n        const resultProps = new Exports_js_1.PropertyCollection();\n        resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, textBody);\n        this.privRequestSession.onPhraseRecognized(simple.Offset + simple.Duration);\n        if (Exports_js_1.ResultReason.Canceled === resultReason) {\n            const cancelReason = Exports_js_2.EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\n            const cancellationErrorCode = Exports_js_2.EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\n            await this.cancelRecognitionLocal(cancelReason, cancellationErrorCode, Exports_js_2.EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\n        }\n        else {\n            if (simple.RecognitionStatus !== Exports_js_2.RecognitionStatus.EndOfDictation) {\n                if (this.privRecognizerConfig.parameters.getProperty(Exports_js_2.OutputFormatPropertyName) === Exports_js_1.OutputFormat[Exports_js_1.OutputFormat.Simple]) {\n                    result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, simple.DisplayText, simple.Duration, simple.Offset, simple.Language, simple.LanguageDetectionConfidence, simple.SpeakerId, undefined, simple.asJson(), resultProps);\n                }\n                else {\n                    const detailed = Exports_js_2.DetailedSpeechPhrase.fromJSON(textBody, this.privRequestSession.currentTurnAudioOffset);\n                    result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, detailed.Text, detailed.Duration, detailed.Offset, detailed.Language, detailed.LanguageDetectionConfidence, detailed.SpeakerId, undefined, detailed.asJson(), resultProps);\n                }\n                this.handleRecognizedCallback(result, result.offset, this.privRequestSession.sessionId);\n            }\n        }\n    }\n    handleSpeechHypothesis(textBody) {\n        const hypothesis = Exports_js_2.SpeechHypothesis.fromJSON(textBody, this.privRequestSession.currentTurnAudioOffset);\n        const resultProps = new Exports_js_1.PropertyCollection();\n        resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, textBody);\n        const result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, Exports_js_1.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, hypothesis.SpeakerId, undefined, hypothesis.asJson(), resultProps);\n        this.privRequestSession.onHypothesis(hypothesis.Offset);\n        this.handleRecognizingCallback(result, hypothesis.Duration, this.privRequestSession.sessionId);\n    }\n}\nexports.ConversationServiceRecognizer = ConversationServiceRecognizer;\n\n//# sourceMappingURL=ConversationServiceRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationServiceRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationTranscriberConnectionFactory.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationTranscriberConnectionFactory.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationTranscriberConnectionFactory = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst ConnectionFactoryBase_js_1 = __webpack_require__(/*! ./ConnectionFactoryBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js\");\nconst Exports_js_4 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ./HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nconst QueryParameterNames_js_1 = __webpack_require__(/*! ./QueryParameterNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js\");\nclass ConversationTranscriberConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.universalUri = \"/speech/universal/v2\";\n    }\n    create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, undefined);\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\n        const queryParams = {};\n        const endpointId = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        const language = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n        if (endpointId) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\n            }\n        }\n        else if (language) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.Language) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.Language] = language;\n            }\n        }\n        if (config.autoDetectSourceLanguages !== undefined) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.EnableLanguageId] = \"true\";\n        }\n        this.setV2UrlParams(config, queryParams, endpoint);\n        if (!endpoint) {\n            endpoint = `${host}${this.universalUri}`;\n        }\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        const webSocketConnection = new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_4.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n        // Set the value of SpeechServiceConnection_Url to webSocketConnection.uri (and not to `endpoint`), since this value is the final\n        // URI that was used to make the connection (including query parameters).\n        const uri = webSocketConnection.uri;\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, uri);\n        return webSocketConnection;\n    }\n    setV2UrlParams(config, queryParams, endpoint) {\n        const propertyIdToParameterMap = new Map([\n            [Exports_js_2.PropertyId.Speech_SegmentationSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.SegmentationSilenceTimeoutMs],\n            [Exports_js_2.PropertyId.SpeechServiceConnection_EnableAudioLogging, QueryParameterNames_js_1.QueryParameterNames.EnableAudioLogging],\n            [Exports_js_2.PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.EndSilenceTimeoutMs],\n            [Exports_js_2.PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs, QueryParameterNames_js_1.QueryParameterNames.InitialSilenceTimeoutMs],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_PostProcessingOption, QueryParameterNames_js_1.QueryParameterNames.Postprocessing],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_ProfanityOption, QueryParameterNames_js_1.QueryParameterNames.Profanity],\n            [Exports_js_2.PropertyId.SpeechServiceResponse_StablePartialResultThreshold, QueryParameterNames_js_1.QueryParameterNames.StableIntermediateThreshold],\n        ]);\n        propertyIdToParameterMap.forEach((parameterName, propertyId) => {\n            this.setUrlParameter(propertyId, parameterName, config, queryParams, endpoint);\n        });\n        const serviceProperties = JSON.parse(config.parameters.getProperty(Exports_js_3.ServicePropertiesPropertyName, \"{}\"));\n        Object.keys(serviceProperties).forEach((value) => {\n            queryParams[value] = serviceProperties[value];\n        });\n    }\n}\nexports.ConversationTranscriberConnectionFactory = ConversationTranscriberConnectionFactory;\n\n//# sourceMappingURL=ConversationTranscriberConnectionFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationTranscriberConnectionFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationTranscriptionServiceRecognizer.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationTranscriptionServiceRecognizer.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationTranscriptionServiceRecognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\n// eslint-disable-next-line max-classes-per-file\nclass ConversationTranscriptionServiceRecognizer extends Exports_js_2.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, conversationTranscriber) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, conversationTranscriber);\n        this.privConversationTranscriber = conversationTranscriber;\n        this.setSpeakerDiarizationJson();\n    }\n    setSpeakerDiarizationJson() {\n        if (this.privEnableSpeakerId) {\n            const phraseDetection = this.privSpeechContext.getSection(\"phraseDetection\");\n            phraseDetection.mode = \"Conversation\";\n            const speakerDiarization = {};\n            speakerDiarization.mode = \"Anonymous\";\n            speakerDiarization.audioSessionId = this.privDiarizationSessionId;\n            speakerDiarization.audioOffsetMs = 0;\n            speakerDiarization.diarizeIntermediates = this.privRecognizerConfig.parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_DiarizeIntermediateResults, \"false\") === \"true\";\n            phraseDetection.speakerDiarization = speakerDiarization;\n            this.privSpeechContext.setSection(\"phraseDetection\", phraseDetection);\n        }\n    }\n    async processTypeSpecificMessages(connectionMessage) {\n        let result;\n        const resultProps = new Exports_js_1.PropertyCollection();\n        resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        let processed = false;\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n            case \"speech.fragment\":\n                const hypothesis = Exports_js_2.SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_1.ConversationTranscriptionResult(this.privRequestSession.requestId, Exports_js_1.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, hypothesis.SpeakerId, undefined, hypothesis.asJson(), resultProps);\n                this.privRequestSession.onHypothesis(hypothesis.Offset);\n                const ev = new Exports_js_1.ConversationTranscriptionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\n                if (!!this.privConversationTranscriber.transcribing) {\n                    try {\n                        this.privConversationTranscriber.transcribing(this.privConversationTranscriber, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.phrase\":\n                const simple = Exports_js_2.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                const resultReason = Exports_js_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\n                this.privRequestSession.onPhraseRecognized(simple.Offset + simple.Duration);\n                if (Exports_js_1.ResultReason.Canceled === resultReason) {\n                    const cancelReason = Exports_js_2.EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\n                    const cancellationErrorCode = Exports_js_2.EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\n                    await this.cancelRecognitionLocal(cancelReason, cancellationErrorCode, Exports_js_2.EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\n                }\n                else {\n                    if (!(this.privRequestSession.isSpeechEnded && resultReason === Exports_js_1.ResultReason.NoMatch && simple.RecognitionStatus !== Exports_js_2.RecognitionStatus.InitialSilenceTimeout)) {\n                        if (this.privRecognizerConfig.parameters.getProperty(Exports_js_2.OutputFormatPropertyName) === Exports_js_1.OutputFormat[Exports_js_1.OutputFormat.Simple]) {\n                            result = new Exports_js_1.ConversationTranscriptionResult(this.privRequestSession.requestId, resultReason, simple.DisplayText, simple.Duration, simple.Offset, simple.Language, simple.LanguageDetectionConfidence, simple.SpeakerId, undefined, simple.asJson(), resultProps);\n                        }\n                        else {\n                            const detailed = Exports_js_2.DetailedSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                            result = new Exports_js_1.ConversationTranscriptionResult(this.privRequestSession.requestId, resultReason, detailed.RecognitionStatus === Exports_js_2.RecognitionStatus.Success ? detailed.NBest[0].Display : undefined, detailed.Duration, detailed.Offset, detailed.Language, detailed.LanguageDetectionConfidence, simple.SpeakerId, undefined, detailed.asJson(), resultProps);\n                        }\n                        const event = new Exports_js_1.ConversationTranscriptionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                        if (!!this.privConversationTranscriber.transcribed) {\n                            try {\n                                this.privConversationTranscriber.transcribed(this.privConversationTranscriber, event);\n                                /* eslint-disable no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                    }\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        return processed;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_1.PropertyCollection();\n        properties.setProperty(Exports_js_2.CancellationErrorCodePropertyName, Exports_js_1.CancellationErrorCode[errorCode]);\n        if (!!this.privConversationTranscriber.canceled) {\n            const cancelEvent = new Exports_js_1.ConversationTranscriptionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n            try {\n                this.privConversationTranscriber.canceled(this.privConversationTranscriber, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n}\nexports.ConversationTranscriptionServiceRecognizer = ConversationTranscriptionServiceRecognizer;\n\n//# sourceMappingURL=ConversationTranscriptionServiceRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationTranscriptionServiceRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogConnectorFactory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogConnectorFactory.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DialogConnectionFactory = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = __webpack_require__(/*! ./ConnectionFactoryBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js\");\nconst Exports_js_4 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ./HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nconst QueryParameterNames_js_1 = __webpack_require__(/*! ./QueryParameterNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js\");\nclass DialogConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        const applicationId = config.parameters.getProperty(Exports_js_3.PropertyId.Conversation_ApplicationId, \"\");\n        const dialogType = config.parameters.getProperty(Exports_js_3.PropertyId.Conversation_DialogType);\n        const region = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Region);\n        const language = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\n        const requestTurnStatus = config.parameters.getProperty(Exports_js_3.PropertyId.Conversation_Request_Bot_Status_Messages, \"true\");\n        const queryParams = {};\n        queryParams[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        queryParams[QueryParameterNames_js_1.QueryParameterNames.Format] = config.parameters.getProperty(Exports_js_2.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]).toLowerCase();\n        queryParams[QueryParameterNames_js_1.QueryParameterNames.Language] = language;\n        queryParams[QueryParameterNames_js_1.QueryParameterNames.RequestBotStatusMessages] = requestTurnStatus;\n        if (applicationId) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.BotId] = applicationId;\n            if (dialogType === Exports_js_3.DialogServiceConfig.DialogTypes.CustomCommands) {\n                queryParams[HeaderNames_js_1.HeaderNames.CustomCommandsAppId] = applicationId;\n            }\n        }\n        const resourceInfix = dialogType === Exports_js_3.DialogServiceConfig.DialogTypes.CustomCommands ? \"commands/\"\n            : \"\";\n        const version = dialogType === Exports_js_3.DialogServiceConfig.DialogTypes.CustomCommands ? \"v1\"\n            : dialogType === Exports_js_3.DialogServiceConfig.DialogTypes.BotFramework ? \"v3\"\n                : \"v0\";\n        const headers = {};\n        if (authInfo.token != null && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        // The URL used for connection is chosen in a priority order of specification:\n        //  1. If a custom endpoint is provided, that URL is used verbatim.\n        //  2. If a custom host is provided (e.g. \"wss://my.custom.endpoint.com:1123\"), a URL is constructed from it.\n        //  3. If no custom connection details are provided, a URL is constructed from default values.\n        let endpoint = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Endpoint, \"\");\n        if (!endpoint) {\n            const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n            const host = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Host, `wss://${region}.${DialogConnectionFactory.BaseUrl}${hostSuffix}`);\n            const standardizedHost = host.endsWith(\"/\") ? host : host + \"/\";\n            endpoint = `${standardizedHost}${resourceInfix}${DialogConnectionFactory.ApiKey}/${version}`;\n        }\n        this.setCommonUrlParams(config, queryParams, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_4.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n    }\n}\nexports.DialogConnectionFactory = DialogConnectionFactory;\nDialogConnectionFactory.ApiKey = \"api\";\nDialogConnectionFactory.BaseUrl = \"convai.speech\";\n\n//# sourceMappingURL=DialogConnectorFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvRGlhbG9nQ29ubmVjdG9yRmFjdG9yeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMsMklBQThCO0FBQzNELHFCQUFxQixtQkFBTyxDQUFDLHlJQUE2QjtBQUMxRCxxQkFBcUIsbUJBQU8sQ0FBQyxxSEFBbUI7QUFDaEQsbUNBQW1DLG1CQUFPLENBQUMsc0pBQTRCO0FBQ3ZFLHFCQUFxQixtQkFBTyxDQUFDLDBIQUFjO0FBQzNDLHlCQUF5QixtQkFBTyxDQUFDLGtJQUFrQjtBQUNuRCxpQ0FBaUMsbUJBQU8sQ0FBQyxrSkFBMEI7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzSEFBc0gsT0FBTyxHQUFHLGdDQUFnQyxFQUFFLFdBQVc7QUFDN0s7QUFDQSwwQkFBMEIsaUJBQWlCLEVBQUUsY0FBYyxFQUFFLCtCQUErQixHQUFHLFFBQVE7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9EaWFsb2dDb25uZWN0b3JGYWN0b3J5LmpzPzNmM2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGlhbG9nQ29ubmVjdGlvbkZhY3RvcnkgPSB2b2lkIDA7XG4vKiBlc2xpbnQtZGlzYWJsZSBtYXgtY2xhc3Nlcy1wZXItZmlsZSAqL1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uL2NvbW1vbi5icm93c2VyL0V4cG9ydHMuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzIgPSByZXF1aXJlKFwiLi4vY29tbW9uLnNwZWVjaC9FeHBvcnRzLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18zID0gcmVxdWlyZShcIi4uL3Nkay9FeHBvcnRzLmpzXCIpO1xuY29uc3QgQ29ubmVjdGlvbkZhY3RvcnlCYXNlX2pzXzEgPSByZXF1aXJlKFwiLi9Db25uZWN0aW9uRmFjdG9yeUJhc2UuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzQgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuY29uc3QgSGVhZGVyTmFtZXNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlck5hbWVzLmpzXCIpO1xuY29uc3QgUXVlcnlQYXJhbWV0ZXJOYW1lc19qc18xID0gcmVxdWlyZShcIi4vUXVlcnlQYXJhbWV0ZXJOYW1lcy5qc1wiKTtcbmNsYXNzIERpYWxvZ0Nvbm5lY3Rpb25GYWN0b3J5IGV4dGVuZHMgQ29ubmVjdGlvbkZhY3RvcnlCYXNlX2pzXzEuQ29ubmVjdGlvbkZhY3RvcnlCYXNlIHtcbiAgICBjcmVhdGUoY29uZmlnLCBhdXRoSW5mbywgY29ubmVjdGlvbklkKSB7XG4gICAgICAgIGNvbnN0IGFwcGxpY2F0aW9uSWQgPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzMuUHJvcGVydHlJZC5Db252ZXJzYXRpb25fQXBwbGljYXRpb25JZCwgXCJcIik7XG4gICAgICAgIGNvbnN0IGRpYWxvZ1R5cGUgPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzMuUHJvcGVydHlJZC5Db252ZXJzYXRpb25fRGlhbG9nVHlwZSk7XG4gICAgICAgIGNvbnN0IHJlZ2lvbiA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMy5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX1JlZ2lvbik7XG4gICAgICAgIGNvbnN0IGxhbmd1YWdlID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18zLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fUmVjb0xhbmd1YWdlLCBcImVuLVVTXCIpO1xuICAgICAgICBjb25zdCByZXF1ZXN0VHVyblN0YXR1cyA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMy5Qcm9wZXJ0eUlkLkNvbnZlcnNhdGlvbl9SZXF1ZXN0X0JvdF9TdGF0dXNfTWVzc2FnZXMsIFwidHJ1ZVwiKTtcbiAgICAgICAgY29uc3QgcXVlcnlQYXJhbXMgPSB7fTtcbiAgICAgICAgcXVlcnlQYXJhbXNbSGVhZGVyTmFtZXNfanNfMS5IZWFkZXJOYW1lcy5Db25uZWN0aW9uSWRdID0gY29ubmVjdGlvbklkO1xuICAgICAgICBxdWVyeVBhcmFtc1tRdWVyeVBhcmFtZXRlck5hbWVzX2pzXzEuUXVlcnlQYXJhbWV0ZXJOYW1lcy5Gb3JtYXRdID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18yLk91dHB1dEZvcm1hdFByb3BlcnR5TmFtZSwgRXhwb3J0c19qc18zLk91dHB1dEZvcm1hdFtFeHBvcnRzX2pzXzMuT3V0cHV0Rm9ybWF0LlNpbXBsZV0pLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIHF1ZXJ5UGFyYW1zW1F1ZXJ5UGFyYW1ldGVyTmFtZXNfanNfMS5RdWVyeVBhcmFtZXRlck5hbWVzLkxhbmd1YWdlXSA9IGxhbmd1YWdlO1xuICAgICAgICBxdWVyeVBhcmFtc1tRdWVyeVBhcmFtZXRlck5hbWVzX2pzXzEuUXVlcnlQYXJhbWV0ZXJOYW1lcy5SZXF1ZXN0Qm90U3RhdHVzTWVzc2FnZXNdID0gcmVxdWVzdFR1cm5TdGF0dXM7XG4gICAgICAgIGlmIChhcHBsaWNhdGlvbklkKSB7XG4gICAgICAgICAgICBxdWVyeVBhcmFtc1tRdWVyeVBhcmFtZXRlck5hbWVzX2pzXzEuUXVlcnlQYXJhbWV0ZXJOYW1lcy5Cb3RJZF0gPSBhcHBsaWNhdGlvbklkO1xuICAgICAgICAgICAgaWYgKGRpYWxvZ1R5cGUgPT09IEV4cG9ydHNfanNfMy5EaWFsb2dTZXJ2aWNlQ29uZmlnLkRpYWxvZ1R5cGVzLkN1c3RvbUNvbW1hbmRzKSB7XG4gICAgICAgICAgICAgICAgcXVlcnlQYXJhbXNbSGVhZGVyTmFtZXNfanNfMS5IZWFkZXJOYW1lcy5DdXN0b21Db21tYW5kc0FwcElkXSA9IGFwcGxpY2F0aW9uSWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzb3VyY2VJbmZpeCA9IGRpYWxvZ1R5cGUgPT09IEV4cG9ydHNfanNfMy5EaWFsb2dTZXJ2aWNlQ29uZmlnLkRpYWxvZ1R5cGVzLkN1c3RvbUNvbW1hbmRzID8gXCJjb21tYW5kcy9cIlxuICAgICAgICAgICAgOiBcIlwiO1xuICAgICAgICBjb25zdCB2ZXJzaW9uID0gZGlhbG9nVHlwZSA9PT0gRXhwb3J0c19qc18zLkRpYWxvZ1NlcnZpY2VDb25maWcuRGlhbG9nVHlwZXMuQ3VzdG9tQ29tbWFuZHMgPyBcInYxXCJcbiAgICAgICAgICAgIDogZGlhbG9nVHlwZSA9PT0gRXhwb3J0c19qc18zLkRpYWxvZ1NlcnZpY2VDb25maWcuRGlhbG9nVHlwZXMuQm90RnJhbWV3b3JrID8gXCJ2M1wiXG4gICAgICAgICAgICAgICAgOiBcInYwXCI7XG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7fTtcbiAgICAgICAgaWYgKGF1dGhJbmZvLnRva2VuICE9IG51bGwgJiYgYXV0aEluZm8udG9rZW4gIT09IFwiXCIpIHtcbiAgICAgICAgICAgIGhlYWRlcnNbYXV0aEluZm8uaGVhZGVyTmFtZV0gPSBhdXRoSW5mby50b2tlbjtcbiAgICAgICAgfVxuICAgICAgICAvLyBUaGUgVVJMIHVzZWQgZm9yIGNvbm5lY3Rpb24gaXMgY2hvc2VuIGluIGEgcHJpb3JpdHkgb3JkZXIgb2Ygc3BlY2lmaWNhdGlvbjpcbiAgICAgICAgLy8gIDEuIElmIGEgY3VzdG9tIGVuZHBvaW50IGlzIHByb3ZpZGVkLCB0aGF0IFVSTCBpcyB1c2VkIHZlcmJhdGltLlxuICAgICAgICAvLyAgMi4gSWYgYSBjdXN0b20gaG9zdCBpcyBwcm92aWRlZCAoZS5nLiBcIndzczovL215LmN1c3RvbS5lbmRwb2ludC5jb206MTEyM1wiKSwgYSBVUkwgaXMgY29uc3RydWN0ZWQgZnJvbSBpdC5cbiAgICAgICAgLy8gIDMuIElmIG5vIGN1c3RvbSBjb25uZWN0aW9uIGRldGFpbHMgYXJlIHByb3ZpZGVkLCBhIFVSTCBpcyBjb25zdHJ1Y3RlZCBmcm9tIGRlZmF1bHQgdmFsdWVzLlxuICAgICAgICBsZXQgZW5kcG9pbnQgPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzMuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9FbmRwb2ludCwgXCJcIik7XG4gICAgICAgIGlmICghZW5kcG9pbnQpIHtcbiAgICAgICAgICAgIGNvbnN0IGhvc3RTdWZmaXggPSBDb25uZWN0aW9uRmFjdG9yeUJhc2VfanNfMS5Db25uZWN0aW9uRmFjdG9yeUJhc2UuZ2V0SG9zdFN1ZmZpeChyZWdpb24pO1xuICAgICAgICAgICAgY29uc3QgaG9zdCA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMy5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0hvc3QsIGB3c3M6Ly8ke3JlZ2lvbn0uJHtEaWFsb2dDb25uZWN0aW9uRmFjdG9yeS5CYXNlVXJsfSR7aG9zdFN1ZmZpeH1gKTtcbiAgICAgICAgICAgIGNvbnN0IHN0YW5kYXJkaXplZEhvc3QgPSBob3N0LmVuZHNXaXRoKFwiL1wiKSA/IGhvc3QgOiBob3N0ICsgXCIvXCI7XG4gICAgICAgICAgICBlbmRwb2ludCA9IGAke3N0YW5kYXJkaXplZEhvc3R9JHtyZXNvdXJjZUluZml4fSR7RGlhbG9nQ29ubmVjdGlvbkZhY3RvcnkuQXBpS2V5fS8ke3ZlcnNpb259YDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldENvbW1vblVybFBhcmFtcyhjb25maWcsIHF1ZXJ5UGFyYW1zLCBlbmRwb2ludCk7XG4gICAgICAgIGNvbnN0IGVuYWJsZUNvbXByZXNzaW9uID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoXCJTUEVFQ0gtRW5hYmxlV2Vic29ja2V0Q29tcHJlc3Npb25cIiwgXCJmYWxzZVwiKSA9PT0gXCJ0cnVlXCI7XG4gICAgICAgIHJldHVybiBuZXcgRXhwb3J0c19qc18xLldlYnNvY2tldENvbm5lY3Rpb24oZW5kcG9pbnQsIHF1ZXJ5UGFyYW1zLCBoZWFkZXJzLCBuZXcgRXhwb3J0c19qc180LldlYnNvY2tldE1lc3NhZ2VGb3JtYXR0ZXIoKSwgRXhwb3J0c19qc18xLlByb3h5SW5mby5mcm9tUmVjb2duaXplckNvbmZpZyhjb25maWcpLCBlbmFibGVDb21wcmVzc2lvbiwgY29ubmVjdGlvbklkKTtcbiAgICB9XG59XG5leHBvcnRzLkRpYWxvZ0Nvbm5lY3Rpb25GYWN0b3J5ID0gRGlhbG9nQ29ubmVjdGlvbkZhY3Rvcnk7XG5EaWFsb2dDb25uZWN0aW9uRmFjdG9yeS5BcGlLZXkgPSBcImFwaVwiO1xuRGlhbG9nQ29ubmVjdGlvbkZhY3RvcnkuQmFzZVVybCA9IFwiY29udmFpLnNwZWVjaFwiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1EaWFsb2dDb25uZWN0b3JGYWN0b3J5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogConnectorFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceAdapter.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceAdapter.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DialogServiceAdapter = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst DialogEvents_js_1 = __webpack_require__(/*! ../common/DialogEvents.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DialogEvents.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst AudioOutputFormat_js_1 = __webpack_require__(/*! ../sdk/Audio/AudioOutputFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputFormat.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst DialogServiceTurnStateManager_js_1 = __webpack_require__(/*! ./DialogServiceTurnStateManager.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceTurnStateManager.js\");\nconst Exports_js_4 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst ActivityResponsePayload_js_1 = __webpack_require__(/*! ./ServiceMessages/ActivityResponsePayload.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/ActivityResponsePayload.js\");\nconst SpeechConnectionMessage_Internal_js_1 = __webpack_require__(/*! ./SpeechConnectionMessage.Internal.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionMessage.Internal.js\");\nclass DialogServiceAdapter extends Exports_js_4.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, dialogServiceConnector) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, dialogServiceConnector);\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privDialogServiceConnector = dialogServiceConnector;\n        this.receiveMessageOverride = () => this.receiveDialogMessageOverride();\n        this.privTurnStateManager = new DialogServiceTurnStateManager_js_1.DialogServiceTurnStateManager();\n        this.recognizeOverride =\n            (recoMode, successCallback, errorCallback) => this.listenOnce(recoMode, successCallback, errorCallback);\n        this.postConnectImplOverride = (connection) => this.dialogConnectImpl(connection);\n        this.configConnectionOverride = (connection) => this.configConnection(connection);\n        this.disconnectOverride = () => this.privDisconnect();\n        this.privDialogAudioSource = audioSource;\n        this.agentConfigSent = false;\n        this.privLastResult = null;\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                this.terminateMessageLoop = true;\n            }\n        });\n    }\n    async sendMessage(message) {\n        const interactionGuid = Exports_js_2.createGuid();\n        const requestId = Exports_js_2.createNoDashGuid();\n        const agentMessage = {\n            context: {\n                interactionId: interactionGuid\n            },\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            messagePayload: JSON.parse(message),\n            version: 0.5\n        };\n        const agentMessageJson = JSON.stringify(agentMessage);\n        const connection = await this.fetchConnection();\n        await connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"agent\", requestId, \"application/json\", agentMessageJson));\n    }\n    async privDisconnect() {\n        await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.NoError, \"Disconnecting\");\n        this.terminateMessageLoop = true;\n        this.agentConfigSent = false;\n        return;\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        const resultProps = new Exports_js_3.PropertyCollection();\n        if (connectionMessage.messageType === Exports_js_2.MessageType.Text) {\n            resultProps.setProperty(Exports_js_3.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        let result;\n        let processed;\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.phrase\":\n                const speechPhrase = Exports_js_4.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                this.privRequestSession.onPhraseRecognized(speechPhrase.Offset + speechPhrase.Duration);\n                if (speechPhrase.RecognitionStatus !== Exports_js_4.RecognitionStatus.TooManyRequests && speechPhrase.RecognitionStatus !== Exports_js_4.RecognitionStatus.Error) {\n                    const args = this.fireEventForResult(speechPhrase, resultProps);\n                    this.privLastResult = args.result;\n                    if (!!this.privDialogServiceConnector.recognized) {\n                        try {\n                            this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, args);\n                            /* eslint-disable no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.hypothesis\":\n                const hypothesis = Exports_js_4.SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_3.SpeechRecognitionResult(this.privRequestSession.requestId, Exports_js_3.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, undefined, undefined, hypothesis.asJson(), resultProps);\n                this.privRequestSession.onHypothesis(hypothesis.Offset);\n                const ev = new Exports_js_3.SpeechRecognitionEventArgs(result, hypothesis.Offset, this.privRequestSession.sessionId);\n                if (!!this.privDialogServiceConnector.recognizing) {\n                    try {\n                        this.privDialogServiceConnector.recognizing(this.privDialogServiceConnector, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.keyword\":\n                const keyword = Exports_js_4.SpeechKeyword.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_3.SpeechRecognitionResult(this.privRequestSession.requestId, keyword.Status === \"Accepted\" ? Exports_js_3.ResultReason.RecognizedKeyword : Exports_js_3.ResultReason.NoMatch, keyword.Text, keyword.Duration, keyword.Offset, undefined, undefined, undefined, undefined, keyword.asJson(), resultProps);\n                if (keyword.Status !== \"Accepted\") {\n                    this.privLastResult = result;\n                }\n                const event = new Exports_js_3.SpeechRecognitionEventArgs(result, result.duration, result.resultId);\n                if (!!this.privDialogServiceConnector.recognized) {\n                    try {\n                        this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, event);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"audio\":\n                {\n                    const audioRequestId = connectionMessage.requestId.toUpperCase();\n                    const turn = this.privTurnStateManager.GetTurn(audioRequestId);\n                    try {\n                        // Empty binary message signals end of stream.\n                        if (!connectionMessage.binaryBody) {\n                            turn.endAudioStream();\n                        }\n                        else {\n                            turn.audioStream.write(connectionMessage.binaryBody);\n                        }\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"response\":\n                {\n                    this.handleResponseMessage(connectionMessage);\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        const defferal = new Exports_js_2.Deferred();\n        defferal.resolve(processed);\n        return defferal.promise;\n    }\n    // Cancels recognition.\n    async cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        this.terminateMessageLoop = true;\n        if (!!this.privRequestSession.isRecognizing) {\n            await this.privRequestSession.onStopRecognizing();\n        }\n        if (!!this.privDialogServiceConnector.canceled) {\n            const properties = new Exports_js_3.PropertyCollection();\n            properties.setProperty(Exports_js_4.CancellationErrorCodePropertyName, Exports_js_3.CancellationErrorCode[errorCode]);\n            const cancelEvent = new Exports_js_3.SpeechRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n            try {\n                this.privDialogServiceConnector.canceled(this.privDialogServiceConnector, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n            if (!!this.privSuccessCallback) {\n                const result = new Exports_js_3.SpeechRecognitionResult(undefined, // ResultId\n                Exports_js_3.ResultReason.Canceled, undefined, // Text\n                undefined, // Duration\n                undefined, // Offset\n                undefined, // Language\n                undefined, // Language Detection Confidence\n                undefined, // Speaker Id\n                error, undefined, // Json\n                properties);\n                try {\n                    this.privSuccessCallback(result);\n                    this.privSuccessCallback = undefined;\n                    /* eslint-disable no-empty */\n                }\n                catch { }\n            }\n        }\n    }\n    async listenOnce(recoMode, successCallback, errorCallback) {\n        this.privRecognizerConfig.recognitionMode = recoMode;\n        this.privSuccessCallback = successCallback;\n        this.privErrorCallback = errorCallback;\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privDialogAudioSource.events);\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        const preAudioPromise = this.sendPreAudioMessages();\n        const node = await this.privDialogAudioSource.attach(this.privRequestSession.audioNodeId);\n        const format = await this.privDialogAudioSource.format;\n        const deviceInfo = await this.privDialogAudioSource.deviceInfo;\n        const audioNode = new Exports_js_1.ReplayableAudioNode(node, format.avgBytesPerSec);\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n        try {\n            await conPromise;\n            await preAudioPromise;\n        }\n        catch (error) {\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.ConnectionFailure, error);\n            return Promise.resolve();\n        }\n        const sessionStartEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n        if (!!this.privRecognizer.sessionStarted) {\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n        }\n        const audioSendPromise = this.sendAudio(audioNode);\n        // /* eslint-disable no-empty */\n        audioSendPromise.then(() => { }, async (error) => {\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        });\n    }\n    // Establishes a websocket connection to the end point.\n    dialogConnectImpl(connection) {\n        this.privConnectionLoop = this.startMessageLoop();\n        return connection;\n    }\n    receiveDialogMessageOverride() {\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\n        const communicationCustodian = new Exports_js_2.Deferred();\n        const loop = async () => {\n            try {\n                const isDisposed = this.isDisposed();\n                const terminateMessageLoop = (!this.isDisposed() && this.terminateMessageLoop);\n                if (isDisposed || terminateMessageLoop) {\n                    // We're done.\n                    communicationCustodian.resolve(undefined);\n                    return;\n                }\n                const connection = await this.fetchConnection();\n                const message = await connection.read();\n                if (!message) {\n                    return loop();\n                }\n                const connectionMessage = SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage.fromConnectionMessage(message);\n                switch (connectionMessage.path.toLowerCase()) {\n                    case \"turn.start\":\n                        {\n                            const turnRequestId = connectionMessage.requestId.toUpperCase();\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\n                            // turn started by the service\n                            if (turnRequestId !== audioSessionReqId) {\n                                this.privTurnStateManager.StartTurn(turnRequestId);\n                            }\n                            else {\n                                this.privRequestSession.onServiceTurnStartResponse();\n                            }\n                        }\n                        break;\n                    case \"speech.startdetected\":\n                        const speechStartDetected = Exports_js_4.SpeechDetected.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                        const speechStartEventArgs = new Exports_js_3.RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechStartDetected) {\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\n                        }\n                        break;\n                    case \"speech.enddetected\":\n                        let json;\n                        if (connectionMessage.textBody.length > 0) {\n                            json = connectionMessage.textBody;\n                        }\n                        else {\n                            // If the request was empty, the JSON returned is empty.\n                            json = \"{ Offset: 0 }\";\n                        }\n                        const speechStopDetected = Exports_js_4.SpeechDetected.fromJSON(json, this.privRequestSession.currentTurnAudioOffset);\n                        this.privRequestSession.onServiceRecognized(speechStopDetected.Offset);\n                        const speechStopEventArgs = new Exports_js_3.RecognitionEventArgs(speechStopDetected.Offset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechEndDetected) {\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\n                        }\n                        break;\n                    case \"turn.end\":\n                        {\n                            const turnEndRequestId = connectionMessage.requestId.toUpperCase();\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\n                            // turn started by the service\n                            if (turnEndRequestId !== audioSessionReqId) {\n                                this.privTurnStateManager.CompleteTurn(turnEndRequestId);\n                            }\n                            else {\n                                // Audio session turn\n                                const sessionStopEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n                                await this.privRequestSession.onServiceTurnEndResponse(false);\n                                if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\n                                    if (!!this.privRecognizer.sessionStopped) {\n                                        this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\n                                    }\n                                }\n                                // report result to promise.\n                                if (!!this.privSuccessCallback && this.privLastResult) {\n                                    try {\n                                        this.privSuccessCallback(this.privLastResult);\n                                        this.privLastResult = null;\n                                    }\n                                    catch (e) {\n                                        if (!!this.privErrorCallback) {\n                                            this.privErrorCallback(e);\n                                        }\n                                    }\n                                    // Only invoke the call back once.\n                                    // and if it's successful don't invoke the\n                                    // error after that.\n                                    this.privSuccessCallback = undefined;\n                                    this.privErrorCallback = undefined;\n                                }\n                            }\n                        }\n                        break;\n                    default:\n                        try {\n                            const processed = await this.processTypeSpecificMessages(connectionMessage);\n                            if (!processed) {\n                                if (!!this.serviceEvents) {\n                                    this.serviceEvents.onEvent(new Exports_js_2.ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\n                                }\n                            }\n                        }\n                        catch (e) {\n                            //\n                        }\n                }\n                const ret = loop();\n                return ret;\n            }\n            catch (error) {\n                this.terminateMessageLoop = true;\n                communicationCustodian.resolve();\n            }\n        };\n        loop().catch((reason) => {\n            Exports_js_2.Events.instance.onEvent(new Exports_js_2.BackgroundEvent(reason));\n        });\n        return communicationCustodian.promise;\n    }\n    async startMessageLoop() {\n        this.terminateMessageLoop = false;\n        try {\n            await this.receiveDialogMessageOverride();\n        }\n        catch (error) {\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        }\n        return Promise.resolve();\n    }\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    async configConnection(connection) {\n        if (this.terminateMessageLoop) {\n            this.terminateMessageLoop = false;\n            return Promise.reject(\"Connection to service terminated.\");\n        }\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\n        await this.sendAgentConfig(connection);\n        return connection;\n    }\n    async sendPreAudioMessages() {\n        const connection = await this.fetchConnection();\n        this.addKeywordContextData();\n        await this.sendSpeechContext(connection, true);\n        await this.sendAgentContext(connection);\n        await this.sendWaveHeader(connection);\n    }\n    sendAgentConfig(connection) {\n        if (this.agentConfig && !this.agentConfigSent) {\n            if (this.privRecognizerConfig\n                .parameters\n                .getProperty(Exports_js_3.PropertyId.Conversation_DialogType) === Exports_js_3.DialogServiceConfig.DialogTypes.CustomCommands) {\n                const config = this.agentConfig.get();\n                config.botInfo.commandsCulture = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage, \"en-us\");\n                this.agentConfig.set(config);\n            }\n            this.onEvent(new DialogEvents_js_1.SendingAgentContextMessageEvent(this.agentConfig));\n            const agentConfigJson = this.agentConfig.toJsonString();\n            // guard against sending this multiple times on one connection\n            this.agentConfigSent = true;\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"agent.config\", this.privRequestSession.requestId, \"application/json\", agentConfigJson));\n        }\n        return;\n    }\n    sendAgentContext(connection) {\n        const guid = Exports_js_2.createGuid();\n        const speechActivityTemplate = this.privDialogServiceConnector.properties.getProperty(Exports_js_3.PropertyId.Conversation_Speech_Activity_Template);\n        const agentContext = {\n            channelData: \"\",\n            context: {\n                interactionId: guid\n            },\n            messagePayload: typeof speechActivityTemplate === undefined ? undefined : speechActivityTemplate,\n            version: 0.5\n        };\n        const agentContextJson = JSON.stringify(agentContext);\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speech.agent.context\", this.privRequestSession.requestId, \"application/json\", agentContextJson));\n    }\n    fireEventForResult(serviceResult, properties) {\n        const resultReason = Exports_js_4.EnumTranslation.implTranslateRecognitionResult(serviceResult.RecognitionStatus);\n        const result = new Exports_js_3.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, serviceResult.DisplayText, serviceResult.Duration, serviceResult.Offset, serviceResult.Language, serviceResult.LanguageDetectionConfidence, undefined, undefined, serviceResult.asJson(), properties);\n        const ev = new Exports_js_3.SpeechRecognitionEventArgs(result, serviceResult.Offset, this.privRequestSession.sessionId);\n        return ev;\n    }\n    handleResponseMessage(responseMessage) {\n        // \"response\" messages can contain either \"message\" (activity) or \"MessageStatus\" data. Fire the appropriate\n        // event according to the message type that's specified.\n        const responsePayload = JSON.parse(responseMessage.textBody);\n        switch (responsePayload.messageType.toLowerCase()) {\n            case \"message\":\n                const responseRequestId = responseMessage.requestId.toUpperCase();\n                const activityPayload = ActivityResponsePayload_js_1.ActivityPayloadResponse.fromJSON(responseMessage.textBody);\n                const turn = this.privTurnStateManager.GetTurn(responseRequestId);\n                // update the conversation Id\n                if (activityPayload.conversationId) {\n                    const updateAgentConfig = this.agentConfig.get();\n                    updateAgentConfig.botInfo.conversationId = activityPayload.conversationId;\n                    this.agentConfig.set(updateAgentConfig);\n                }\n                const pullAudioOutputStream = turn.processActivityPayload(activityPayload, AudioOutputFormat_js_1.AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(this.privDialogServiceConnector.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)));\n                const activity = new Exports_js_3.ActivityReceivedEventArgs(activityPayload.messagePayload, pullAudioOutputStream);\n                if (!!this.privDialogServiceConnector.activityReceived) {\n                    try {\n                        this.privDialogServiceConnector.activityReceived(this.privDialogServiceConnector, activity);\n                        /* eslint-disable-next-line no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                break;\n            case \"messagestatus\":\n                if (!!this.privDialogServiceConnector.turnStatusReceived) {\n                    try {\n                        this.privDialogServiceConnector.turnStatusReceived(this.privDialogServiceConnector, new Exports_js_3.TurnStatusReceivedEventArgs(responseMessage.textBody));\n                        /* eslint-disable-next-line no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                break;\n            default:\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.BackgroundEvent(`Unexpected response of type ${responsePayload.messageType}. Ignoring.`));\n                break;\n        }\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n    addKeywordContextData() {\n        const keywordPropertyValue = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-KeywordsToDetect\");\n        if (keywordPropertyValue === undefined) {\n            return;\n        }\n        const keywordOffsetPropertyValue = this.privRecognizerConfig.parameters\n            .getProperty(\"SPEECH-KeywordsToDetect-Offsets\");\n        const keywordDurationPropertyValue = this.privRecognizerConfig.parameters\n            .getProperty(\"SPEECH-KeywordsToDetect-Durations\");\n        const keywords = keywordPropertyValue.split(\";\");\n        const keywordOffsets = keywordOffsetPropertyValue === undefined ? [] : keywordOffsetPropertyValue.split(\";\");\n        const keywordDurations = keywordDurationPropertyValue === undefined ? [] : keywordDurationPropertyValue.split(\";\");\n        const keywordDefinitionArray = [];\n        for (let i = 0; i < keywords.length; i++) {\n            const definition = {};\n            definition.text = keywords[i];\n            if (i < keywordOffsets.length) {\n                definition.offset = Number(keywordOffsets[i]);\n            }\n            if (i < keywordDurations.length) {\n                definition.duration = Number(keywordDurations[i]);\n            }\n            keywordDefinitionArray.push(definition);\n        }\n        this.speechContext.setSection(\"invocationSource\", \"VoiceActivationWithKeyword\");\n        this.speechContext.setSection(\"keywordDetection\", [{\n                clientDetectedKeywords: keywordDefinitionArray,\n                onReject: { action: \"EndOfTurn\" },\n                type: \"startTrigger\"\n            }]);\n    }\n}\nexports.DialogServiceAdapter = DialogServiceAdapter;\n\n//# sourceMappingURL=DialogServiceAdapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceAdapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceTurnState.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceTurnState.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DialogServiceTurnState = void 0;\nconst AudioOutputFormat_js_1 = __webpack_require__(/*! ../sdk/Audio/AudioOutputFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputFormat.js\");\nconst AudioOutputStream_js_1 = __webpack_require__(/*! ../sdk/Audio/AudioOutputStream.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputStream.js\");\nconst ActivityResponsePayload_js_1 = __webpack_require__(/*! ./ServiceMessages/ActivityResponsePayload.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/ActivityResponsePayload.js\");\nclass DialogServiceTurnState {\n    constructor(manager, requestId) {\n        this.privRequestId = requestId;\n        this.privIsCompleted = false;\n        this.privAudioStream = null;\n        this.privTurnManager = manager;\n        this.resetTurnEndTimeout();\n    }\n    get audioStream() {\n        // Called when is needed to stream.\n        this.resetTurnEndTimeout();\n        return this.privAudioStream;\n    }\n    processActivityPayload(payload, audioFormat) {\n        if (payload.messageDataStreamType === ActivityResponsePayload_js_1.MessageDataStreamType.TextToSpeechAudio) {\n            this.privAudioStream = AudioOutputStream_js_1.AudioOutputStream.createPullStream();\n            this.privAudioStream.format = (audioFormat !== undefined) ? audioFormat : AudioOutputFormat_js_1.AudioOutputFormatImpl.getDefaultOutputFormat();\n        }\n        return this.privAudioStream;\n    }\n    endAudioStream() {\n        if (this.privAudioStream !== null && !this.privAudioStream.isClosed) {\n            this.privAudioStream.close();\n        }\n    }\n    complete() {\n        if (this.privTimeoutToken !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            clearTimeout(this.privTimeoutToken);\n        }\n        this.endAudioStream();\n    }\n    resetTurnEndTimeout() {\n        if (this.privTimeoutToken !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            clearTimeout(this.privTimeoutToken);\n        }\n        this.privTimeoutToken = setTimeout(() => {\n            this.privTurnManager.CompleteTurn(this.privRequestId);\n            return;\n        }, 2000);\n    }\n}\nexports.DialogServiceTurnState = DialogServiceTurnState;\n\n//# sourceMappingURL=DialogServiceTurnState.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvRGlhbG9nU2VydmljZVR1cm5TdGF0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCLCtCQUErQixtQkFBTyxDQUFDLHFKQUFtQztBQUMxRSwrQkFBK0IsbUJBQU8sQ0FBQyxxSkFBbUM7QUFDMUUscUNBQXFDLG1CQUFPLENBQUMsMExBQThDO0FBQzNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSw4QkFBOEI7O0FBRTlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvRGlhbG9nU2VydmljZVR1cm5TdGF0ZS5qcz80MDI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRpYWxvZ1NlcnZpY2VUdXJuU3RhdGUgPSB2b2lkIDA7XG5jb25zdCBBdWRpb091dHB1dEZvcm1hdF9qc18xID0gcmVxdWlyZShcIi4uL3Nkay9BdWRpby9BdWRpb091dHB1dEZvcm1hdC5qc1wiKTtcbmNvbnN0IEF1ZGlvT3V0cHV0U3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi4vc2RrL0F1ZGlvL0F1ZGlvT3V0cHV0U3RyZWFtLmpzXCIpO1xuY29uc3QgQWN0aXZpdHlSZXNwb25zZVBheWxvYWRfanNfMSA9IHJlcXVpcmUoXCIuL1NlcnZpY2VNZXNzYWdlcy9BY3Rpdml0eVJlc3BvbnNlUGF5bG9hZC5qc1wiKTtcbmNsYXNzIERpYWxvZ1NlcnZpY2VUdXJuU3RhdGUge1xuICAgIGNvbnN0cnVjdG9yKG1hbmFnZXIsIHJlcXVlc3RJZCkge1xuICAgICAgICB0aGlzLnByaXZSZXF1ZXN0SWQgPSByZXF1ZXN0SWQ7XG4gICAgICAgIHRoaXMucHJpdklzQ29tcGxldGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMucHJpdkF1ZGlvU3RyZWFtID0gbnVsbDtcbiAgICAgICAgdGhpcy5wcml2VHVybk1hbmFnZXIgPSBtYW5hZ2VyO1xuICAgICAgICB0aGlzLnJlc2V0VHVybkVuZFRpbWVvdXQoKTtcbiAgICB9XG4gICAgZ2V0IGF1ZGlvU3RyZWFtKCkge1xuICAgICAgICAvLyBDYWxsZWQgd2hlbiBpcyBuZWVkZWQgdG8gc3RyZWFtLlxuICAgICAgICB0aGlzLnJlc2V0VHVybkVuZFRpbWVvdXQoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkF1ZGlvU3RyZWFtO1xuICAgIH1cbiAgICBwcm9jZXNzQWN0aXZpdHlQYXlsb2FkKHBheWxvYWQsIGF1ZGlvRm9ybWF0KSB7XG4gICAgICAgIGlmIChwYXlsb2FkLm1lc3NhZ2VEYXRhU3RyZWFtVHlwZSA9PT0gQWN0aXZpdHlSZXNwb25zZVBheWxvYWRfanNfMS5NZXNzYWdlRGF0YVN0cmVhbVR5cGUuVGV4dFRvU3BlZWNoQXVkaW8pIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkF1ZGlvU3RyZWFtID0gQXVkaW9PdXRwdXRTdHJlYW1fanNfMS5BdWRpb091dHB1dFN0cmVhbS5jcmVhdGVQdWxsU3RyZWFtKCk7XG4gICAgICAgICAgICB0aGlzLnByaXZBdWRpb1N0cmVhbS5mb3JtYXQgPSAoYXVkaW9Gb3JtYXQgIT09IHVuZGVmaW5lZCkgPyBhdWRpb0Zvcm1hdCA6IEF1ZGlvT3V0cHV0Rm9ybWF0X2pzXzEuQXVkaW9PdXRwdXRGb3JtYXRJbXBsLmdldERlZmF1bHRPdXRwdXRGb3JtYXQoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5wcml2QXVkaW9TdHJlYW07XG4gICAgfVxuICAgIGVuZEF1ZGlvU3RyZWFtKCkge1xuICAgICAgICBpZiAodGhpcy5wcml2QXVkaW9TdHJlYW0gIT09IG51bGwgJiYgIXRoaXMucHJpdkF1ZGlvU3RyZWFtLmlzQ2xvc2VkKSB7XG4gICAgICAgICAgICB0aGlzLnByaXZBdWRpb1N0cmVhbS5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbXBsZXRlKCkge1xuICAgICAgICBpZiAodGhpcy5wcml2VGltZW91dFRva2VuICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFyZ3VtZW50XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5wcml2VGltZW91dFRva2VuKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVuZEF1ZGlvU3RyZWFtKCk7XG4gICAgfVxuICAgIHJlc2V0VHVybkVuZFRpbWVvdXQoKSB7XG4gICAgICAgIGlmICh0aGlzLnByaXZUaW1lb3V0VG9rZW4gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtYXJndW1lbnRcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnByaXZUaW1lb3V0VG9rZW4pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJpdlRpbWVvdXRUb2tlbiA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5wcml2VHVybk1hbmFnZXIuQ29tcGxldGVUdXJuKHRoaXMucHJpdlJlcXVlc3RJZCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0sIDIwMDApO1xuICAgIH1cbn1cbmV4cG9ydHMuRGlhbG9nU2VydmljZVR1cm5TdGF0ZSA9IERpYWxvZ1NlcnZpY2VUdXJuU3RhdGU7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURpYWxvZ1NlcnZpY2VUdXJuU3RhdGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceTurnState.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceTurnStateManager.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceTurnStateManager.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DialogServiceTurnStateManager = void 0;\nconst Error_js_1 = __webpack_require__(/*! ../common/Error.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js\");\nconst DialogServiceTurnState_js_1 = __webpack_require__(/*! ./DialogServiceTurnState.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceTurnState.js\");\nclass DialogServiceTurnStateManager {\n    constructor() {\n        this.privTurnMap = new Map();\n        return;\n    }\n    StartTurn(id) {\n        if (this.privTurnMap.has(id)) {\n            throw new Error_js_1.InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\n        }\n        const turnState = new DialogServiceTurnState_js_1.DialogServiceTurnState(this, id);\n        this.privTurnMap.set(id, turnState);\n        return this.privTurnMap.get(id);\n    }\n    GetTurn(id) {\n        return this.privTurnMap.get(id);\n    }\n    CompleteTurn(id) {\n        if (!this.privTurnMap.has(id)) {\n            throw new Error_js_1.InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\n        }\n        const turnState = this.privTurnMap.get(id);\n        turnState.complete();\n        this.privTurnMap.delete(id);\n        return turnState;\n    }\n}\nexports.DialogServiceTurnStateManager = DialogServiceTurnStateManager;\n\n//# sourceMappingURL=DialogServiceTurnStateManager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvRGlhbG9nU2VydmljZVR1cm5TdGF0ZU1hbmFnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFDQUFxQztBQUNyQyxtQkFBbUIsbUJBQU8sQ0FBQyx1SEFBb0I7QUFDL0Msb0NBQW9DLG1CQUFPLENBQUMsd0pBQTZCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7O0FBRXJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvRGlhbG9nU2VydmljZVR1cm5TdGF0ZU1hbmFnZXIuanM/ODYzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EaWFsb2dTZXJ2aWNlVHVyblN0YXRlTWFuYWdlciA9IHZvaWQgMDtcbmNvbnN0IEVycm9yX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uL0Vycm9yLmpzXCIpO1xuY29uc3QgRGlhbG9nU2VydmljZVR1cm5TdGF0ZV9qc18xID0gcmVxdWlyZShcIi4vRGlhbG9nU2VydmljZVR1cm5TdGF0ZS5qc1wiKTtcbmNsYXNzIERpYWxvZ1NlcnZpY2VUdXJuU3RhdGVNYW5hZ2VyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5wcml2VHVybk1hcCA9IG5ldyBNYXAoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBTdGFydFR1cm4oaWQpIHtcbiAgICAgICAgaWYgKHRoaXMucHJpdlR1cm5NYXAuaGFzKGlkKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yX2pzXzEuSW52YWxpZE9wZXJhdGlvbkVycm9yKFwiU2VydmljZSBlcnJvcjogVGhlcmUgaXMgYWxyZWFkeSBhIHR1cm4gd2l0aCBpZDpcIiArIGlkKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0dXJuU3RhdGUgPSBuZXcgRGlhbG9nU2VydmljZVR1cm5TdGF0ZV9qc18xLkRpYWxvZ1NlcnZpY2VUdXJuU3RhdGUodGhpcywgaWQpO1xuICAgICAgICB0aGlzLnByaXZUdXJuTWFwLnNldChpZCwgdHVyblN0YXRlKTtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlR1cm5NYXAuZ2V0KGlkKTtcbiAgICB9XG4gICAgR2V0VHVybihpZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VHVybk1hcC5nZXQoaWQpO1xuICAgIH1cbiAgICBDb21wbGV0ZVR1cm4oaWQpIHtcbiAgICAgICAgaWYgKCF0aGlzLnByaXZUdXJuTWFwLmhhcyhpZCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcl9qc18xLkludmFsaWRPcGVyYXRpb25FcnJvcihcIlNlcnZpY2UgZXJyb3I6IFJlY2VpdmVkIHR1cm4gZW5kIGZvciBhbiB1bmtub3duIHR1cm4gaWQ6XCIgKyBpZCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdHVyblN0YXRlID0gdGhpcy5wcml2VHVybk1hcC5nZXQoaWQpO1xuICAgICAgICB0dXJuU3RhdGUuY29tcGxldGUoKTtcbiAgICAgICAgdGhpcy5wcml2VHVybk1hcC5kZWxldGUoaWQpO1xuICAgICAgICByZXR1cm4gdHVyblN0YXRlO1xuICAgIH1cbn1cbmV4cG9ydHMuRGlhbG9nU2VydmljZVR1cm5TdGF0ZU1hbmFnZXIgPSBEaWFsb2dTZXJ2aWNlVHVyblN0YXRlTWFuYWdlcjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGlhbG9nU2VydmljZVR1cm5TdGF0ZU1hbmFnZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceTurnStateManager.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DynamicGrammarBuilder.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DynamicGrammarBuilder.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DynamicGrammarBuilder = void 0;\n/**\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\n * @class DynamicGrammarBuilder\n */\nclass DynamicGrammarBuilder {\n    // Adds one more reference phrases to the dynamic grammar to send.\n    // All added phrases are generic phrases.\n    addPhrase(phrase) {\n        if (!this.privPhrases) {\n            this.privPhrases = [];\n        }\n        if (phrase instanceof Array) {\n            this.privPhrases = this.privPhrases.concat(phrase);\n        }\n        else {\n            this.privPhrases.push(phrase);\n        }\n    }\n    // Clears all phrases stored in the current object.\n    clearPhrases() {\n        this.privPhrases = undefined;\n    }\n    // Adds one or more reference grammars to the current grammar.\n    addReferenceGrammar(grammar) {\n        if (!this.privGrammars) {\n            this.privGrammars = [];\n        }\n        if (grammar instanceof Array) {\n            this.privGrammars = this.privGrammars.concat(grammar);\n        }\n        else {\n            this.privGrammars.push(grammar);\n        }\n    }\n    // clears all grammars stored on the recognizer.\n    clearGrammars() {\n        this.privGrammars = undefined;\n    }\n    // Generates an object that represents the dynamic grammar used by the Speech Service.\n    // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\n    // of a DynamicGrammarBuilder\n    generateGrammarObject() {\n        if (this.privGrammars === undefined && this.privPhrases === undefined) {\n            return undefined;\n        }\n        const retObj = {};\n        retObj.ReferenceGrammars = this.privGrammars;\n        if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\n            const retPhrases = [];\n            this.privPhrases.forEach((value) => {\n                retPhrases.push({\n                    Text: value,\n                });\n            });\n            retObj.Groups = [{ Type: \"Generic\", Items: retPhrases }];\n        }\n        return retObj;\n    }\n}\nexports.DynamicGrammarBuilder = DynamicGrammarBuilder;\n\n//# sourceMappingURL=DynamicGrammarBuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvRHluYW1pY0dyYW1tYXJCdWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLCtCQUErQixvQ0FBb0M7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7O0FBRTdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvRHluYW1pY0dyYW1tYXJCdWlsZGVyLmpzP2E2YjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRHluYW1pY0dyYW1tYXJCdWlsZGVyID0gdm9pZCAwO1xuLyoqXG4gKiBSZXNwb25zaWJsZSBmb3IgYnVpbGRpbmcgdGhlIG9iamVjdCB0byBiZSBzZW50IHRvIHRoZSBzcGVlY2ggc2VydmljZSB0byBzdXBwb3J0IGR5bmFtaWMgZ3JhbW1hcnMuXG4gKiBAY2xhc3MgRHluYW1pY0dyYW1tYXJCdWlsZGVyXG4gKi9cbmNsYXNzIER5bmFtaWNHcmFtbWFyQnVpbGRlciB7XG4gICAgLy8gQWRkcyBvbmUgbW9yZSByZWZlcmVuY2UgcGhyYXNlcyB0byB0aGUgZHluYW1pYyBncmFtbWFyIHRvIHNlbmQuXG4gICAgLy8gQWxsIGFkZGVkIHBocmFzZXMgYXJlIGdlbmVyaWMgcGhyYXNlcy5cbiAgICBhZGRQaHJhc2UocGhyYXNlKSB7XG4gICAgICAgIGlmICghdGhpcy5wcml2UGhyYXNlcykge1xuICAgICAgICAgICAgdGhpcy5wcml2UGhyYXNlcyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwaHJhc2UgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgdGhpcy5wcml2UGhyYXNlcyA9IHRoaXMucHJpdlBocmFzZXMuY29uY2F0KHBocmFzZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnByaXZQaHJhc2VzLnB1c2gocGhyYXNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBDbGVhcnMgYWxsIHBocmFzZXMgc3RvcmVkIGluIHRoZSBjdXJyZW50IG9iamVjdC5cbiAgICBjbGVhclBocmFzZXMoKSB7XG4gICAgICAgIHRoaXMucHJpdlBocmFzZXMgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIC8vIEFkZHMgb25lIG9yIG1vcmUgcmVmZXJlbmNlIGdyYW1tYXJzIHRvIHRoZSBjdXJyZW50IGdyYW1tYXIuXG4gICAgYWRkUmVmZXJlbmNlR3JhbW1hcihncmFtbWFyKSB7XG4gICAgICAgIGlmICghdGhpcy5wcml2R3JhbW1hcnMpIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkdyYW1tYXJzID0gW107XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGdyYW1tYXIgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgdGhpcy5wcml2R3JhbW1hcnMgPSB0aGlzLnByaXZHcmFtbWFycy5jb25jYXQoZ3JhbW1hcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnByaXZHcmFtbWFycy5wdXNoKGdyYW1tYXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIGNsZWFycyBhbGwgZ3JhbW1hcnMgc3RvcmVkIG9uIHRoZSByZWNvZ25pemVyLlxuICAgIGNsZWFyR3JhbW1hcnMoKSB7XG4gICAgICAgIHRoaXMucHJpdkdyYW1tYXJzID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAvLyBHZW5lcmF0ZXMgYW4gb2JqZWN0IHRoYXQgcmVwcmVzZW50cyB0aGUgZHluYW1pYyBncmFtbWFyIHVzZWQgYnkgdGhlIFNwZWVjaCBTZXJ2aWNlLlxuICAgIC8vIFRoaXMgaXMgZG9uZSBieSBidWlsZGluZyBhbiBvYmplY3Qgd2l0aCB0aGUgY29ycmVjdCBsYXlvdXQgYmFzZWQgb24gdGhlIHBocmFzZXMgYW5kIHJlZmVyZW5jZSBncmFtbWFycyBhZGRlZCB0byB0aGlzIGluc3RhbmNlXG4gICAgLy8gb2YgYSBEeW5hbWljR3JhbW1hckJ1aWxkZXJcbiAgICBnZW5lcmF0ZUdyYW1tYXJPYmplY3QoKSB7XG4gICAgICAgIGlmICh0aGlzLnByaXZHcmFtbWFycyA9PT0gdW5kZWZpbmVkICYmIHRoaXMucHJpdlBocmFzZXMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXRPYmogPSB7fTtcbiAgICAgICAgcmV0T2JqLlJlZmVyZW5jZUdyYW1tYXJzID0gdGhpcy5wcml2R3JhbW1hcnM7XG4gICAgICAgIGlmICh1bmRlZmluZWQgIT09IHRoaXMucHJpdlBocmFzZXMgJiYgMCAhPT0gdGhpcy5wcml2UGhyYXNlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNvbnN0IHJldFBocmFzZXMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMucHJpdlBocmFzZXMuZm9yRWFjaCgodmFsdWUpID0+IHtcbiAgICAgICAgICAgICAgICByZXRQaHJhc2VzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBUZXh0OiB2YWx1ZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0T2JqLkdyb3VwcyA9IFt7IFR5cGU6IFwiR2VuZXJpY1wiLCBJdGVtczogcmV0UGhyYXNlcyB9XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmV0T2JqO1xuICAgIH1cbn1cbmV4cG9ydHMuRHluYW1pY0dyYW1tYXJCdWlsZGVyID0gRHluYW1pY0dyYW1tYXJCdWlsZGVyO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1EeW5hbWljR3JhbW1hckJ1aWxkZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DynamicGrammarBuilder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DynamicGrammarInterfaces.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DynamicGrammarInterfaces.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=DynamicGrammarInterfaces.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvRHluYW1pY0dyYW1tYXJJbnRlcmZhY2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9EeW5hbWljR3JhbW1hckludGVyZmFjZXMuanM/NzVjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1EeW5hbWljR3JhbW1hckludGVyZmFjZXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DynamicGrammarInterfaces.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/EnumTranslation.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/EnumTranslation.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EnumTranslation = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nclass EnumTranslation {\n    static implTranslateRecognitionResult(recognitionStatus, expectEndOfDictation = false) {\n        let reason = Exports_js_1.ResultReason.Canceled;\n        switch (recognitionStatus) {\n            case Exports_js_2.RecognitionStatus.Success:\n                reason = Exports_js_1.ResultReason.RecognizedSpeech;\n                break;\n            case Exports_js_2.RecognitionStatus.EndOfDictation:\n                // If we need the result in EndOfDictation (typically some session level result),\n                // translate into RecognizedSpeech, otherwise NoMatch\n                reason = expectEndOfDictation ? Exports_js_1.ResultReason.RecognizedSpeech : Exports_js_1.ResultReason.NoMatch;\n                break;\n            case Exports_js_2.RecognitionStatus.NoMatch:\n            case Exports_js_2.RecognitionStatus.InitialSilenceTimeout:\n            case Exports_js_2.RecognitionStatus.BabbleTimeout:\n                reason = Exports_js_1.ResultReason.NoMatch;\n                break;\n            case Exports_js_2.RecognitionStatus.Error:\n            case Exports_js_2.RecognitionStatus.BadRequest:\n            case Exports_js_2.RecognitionStatus.Forbidden:\n            default:\n                reason = Exports_js_1.ResultReason.Canceled;\n                break;\n        }\n        return reason;\n    }\n    static implTranslateCancelResult(recognitionStatus) {\n        let reason = Exports_js_1.CancellationReason.EndOfStream;\n        switch (recognitionStatus) {\n            case Exports_js_2.RecognitionStatus.Success:\n            case Exports_js_2.RecognitionStatus.EndOfDictation:\n            case Exports_js_2.RecognitionStatus.NoMatch:\n                reason = Exports_js_1.CancellationReason.EndOfStream;\n                break;\n            case Exports_js_2.RecognitionStatus.InitialSilenceTimeout:\n            case Exports_js_2.RecognitionStatus.BabbleTimeout:\n            case Exports_js_2.RecognitionStatus.Error:\n            case Exports_js_2.RecognitionStatus.BadRequest:\n            case Exports_js_2.RecognitionStatus.Forbidden:\n            default:\n                reason = Exports_js_1.CancellationReason.Error;\n                break;\n        }\n        return reason;\n    }\n    static implTranslateCancelErrorCode(recognitionStatus) {\n        let reason = Exports_js_1.CancellationErrorCode.NoError;\n        switch (recognitionStatus) {\n            case Exports_js_2.RecognitionStatus.Error:\n                reason = Exports_js_1.CancellationErrorCode.ServiceError;\n                break;\n            case Exports_js_2.RecognitionStatus.TooManyRequests:\n                reason = Exports_js_1.CancellationErrorCode.TooManyRequests;\n                break;\n            case Exports_js_2.RecognitionStatus.BadRequest:\n                reason = Exports_js_1.CancellationErrorCode.BadRequestParameters;\n                break;\n            case Exports_js_2.RecognitionStatus.Forbidden:\n                reason = Exports_js_1.CancellationErrorCode.Forbidden;\n                break;\n            default:\n                reason = Exports_js_1.CancellationErrorCode.NoError;\n                break;\n        }\n        return reason;\n    }\n    static implTranslateErrorDetails(cancellationErrorCode) {\n        let errorDetails = \"The speech service encountered an internal error and could not continue.\";\n        switch (cancellationErrorCode) {\n            case Exports_js_1.CancellationErrorCode.Forbidden:\n                errorDetails = \"The recognizer is using a free subscription that ran out of quota.\";\n                break;\n            case Exports_js_1.CancellationErrorCode.BadRequestParameters:\n                errorDetails = \"Invalid parameter or unsupported audio format in the request.\";\n                break;\n            case Exports_js_1.CancellationErrorCode.TooManyRequests:\n                errorDetails = \"The number of parallel requests exceeded the number of allowed concurrent transcriptions.\";\n                break;\n            default:\n                break;\n        }\n        return errorDetails;\n    }\n}\nexports.EnumTranslation = EnumTranslation;\n\n//# sourceMappingURL=EnumTranslation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvRW51bVRyYW5zbGF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIscUJBQXFCLG1CQUFPLENBQUMscUhBQW1CO0FBQ2hELHFCQUFxQixtQkFBTyxDQUFDLDBIQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qjs7QUFFdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9FbnVtVHJhbnNsYXRpb24uanM/NGQ1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FbnVtVHJhbnNsYXRpb24gPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vc2RrL0V4cG9ydHMuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzIgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuY2xhc3MgRW51bVRyYW5zbGF0aW9uIHtcbiAgICBzdGF0aWMgaW1wbFRyYW5zbGF0ZVJlY29nbml0aW9uUmVzdWx0KHJlY29nbml0aW9uU3RhdHVzLCBleHBlY3RFbmRPZkRpY3RhdGlvbiA9IGZhbHNlKSB7XG4gICAgICAgIGxldCByZWFzb24gPSBFeHBvcnRzX2pzXzEuUmVzdWx0UmVhc29uLkNhbmNlbGVkO1xuICAgICAgICBzd2l0Y2ggKHJlY29nbml0aW9uU3RhdHVzKSB7XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMi5SZWNvZ25pdGlvblN0YXR1cy5TdWNjZXNzOlxuICAgICAgICAgICAgICAgIHJlYXNvbiA9IEV4cG9ydHNfanNfMS5SZXN1bHRSZWFzb24uUmVjb2duaXplZFNwZWVjaDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgRXhwb3J0c19qc18yLlJlY29nbml0aW9uU3RhdHVzLkVuZE9mRGljdGF0aW9uOlxuICAgICAgICAgICAgICAgIC8vIElmIHdlIG5lZWQgdGhlIHJlc3VsdCBpbiBFbmRPZkRpY3RhdGlvbiAodHlwaWNhbGx5IHNvbWUgc2Vzc2lvbiBsZXZlbCByZXN1bHQpLFxuICAgICAgICAgICAgICAgIC8vIHRyYW5zbGF0ZSBpbnRvIFJlY29nbml6ZWRTcGVlY2gsIG90aGVyd2lzZSBOb01hdGNoXG4gICAgICAgICAgICAgICAgcmVhc29uID0gZXhwZWN0RW5kT2ZEaWN0YXRpb24gPyBFeHBvcnRzX2pzXzEuUmVzdWx0UmVhc29uLlJlY29nbml6ZWRTcGVlY2ggOiBFeHBvcnRzX2pzXzEuUmVzdWx0UmVhc29uLk5vTWF0Y2g7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMi5SZWNvZ25pdGlvblN0YXR1cy5Ob01hdGNoOlxuICAgICAgICAgICAgY2FzZSBFeHBvcnRzX2pzXzIuUmVjb2duaXRpb25TdGF0dXMuSW5pdGlhbFNpbGVuY2VUaW1lb3V0OlxuICAgICAgICAgICAgY2FzZSBFeHBvcnRzX2pzXzIuUmVjb2duaXRpb25TdGF0dXMuQmFiYmxlVGltZW91dDpcbiAgICAgICAgICAgICAgICByZWFzb24gPSBFeHBvcnRzX2pzXzEuUmVzdWx0UmVhc29uLk5vTWF0Y2g7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMi5SZWNvZ25pdGlvblN0YXR1cy5FcnJvcjpcbiAgICAgICAgICAgIGNhc2UgRXhwb3J0c19qc18yLlJlY29nbml0aW9uU3RhdHVzLkJhZFJlcXVlc3Q6XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMi5SZWNvZ25pdGlvblN0YXR1cy5Gb3JiaWRkZW46XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJlYXNvbiA9IEV4cG9ydHNfanNfMS5SZXN1bHRSZWFzb24uQ2FuY2VsZWQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlYXNvbjtcbiAgICB9XG4gICAgc3RhdGljIGltcGxUcmFuc2xhdGVDYW5jZWxSZXN1bHQocmVjb2duaXRpb25TdGF0dXMpIHtcbiAgICAgICAgbGV0IHJlYXNvbiA9IEV4cG9ydHNfanNfMS5DYW5jZWxsYXRpb25SZWFzb24uRW5kT2ZTdHJlYW07XG4gICAgICAgIHN3aXRjaCAocmVjb2duaXRpb25TdGF0dXMpIHtcbiAgICAgICAgICAgIGNhc2UgRXhwb3J0c19qc18yLlJlY29nbml0aW9uU3RhdHVzLlN1Y2Nlc3M6XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMi5SZWNvZ25pdGlvblN0YXR1cy5FbmRPZkRpY3RhdGlvbjpcbiAgICAgICAgICAgIGNhc2UgRXhwb3J0c19qc18yLlJlY29nbml0aW9uU3RhdHVzLk5vTWF0Y2g6XG4gICAgICAgICAgICAgICAgcmVhc29uID0gRXhwb3J0c19qc18xLkNhbmNlbGxhdGlvblJlYXNvbi5FbmRPZlN0cmVhbTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgRXhwb3J0c19qc18yLlJlY29nbml0aW9uU3RhdHVzLkluaXRpYWxTaWxlbmNlVGltZW91dDpcbiAgICAgICAgICAgIGNhc2UgRXhwb3J0c19qc18yLlJlY29nbml0aW9uU3RhdHVzLkJhYmJsZVRpbWVvdXQ6XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMi5SZWNvZ25pdGlvblN0YXR1cy5FcnJvcjpcbiAgICAgICAgICAgIGNhc2UgRXhwb3J0c19qc18yLlJlY29nbml0aW9uU3RhdHVzLkJhZFJlcXVlc3Q6XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMi5SZWNvZ25pdGlvblN0YXR1cy5Gb3JiaWRkZW46XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJlYXNvbiA9IEV4cG9ydHNfanNfMS5DYW5jZWxsYXRpb25SZWFzb24uRXJyb3I7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlYXNvbjtcbiAgICB9XG4gICAgc3RhdGljIGltcGxUcmFuc2xhdGVDYW5jZWxFcnJvckNvZGUocmVjb2duaXRpb25TdGF0dXMpIHtcbiAgICAgICAgbGV0IHJlYXNvbiA9IEV4cG9ydHNfanNfMS5DYW5jZWxsYXRpb25FcnJvckNvZGUuTm9FcnJvcjtcbiAgICAgICAgc3dpdGNoIChyZWNvZ25pdGlvblN0YXR1cykge1xuICAgICAgICAgICAgY2FzZSBFeHBvcnRzX2pzXzIuUmVjb2duaXRpb25TdGF0dXMuRXJyb3I6XG4gICAgICAgICAgICAgICAgcmVhc29uID0gRXhwb3J0c19qc18xLkNhbmNlbGxhdGlvbkVycm9yQ29kZS5TZXJ2aWNlRXJyb3I7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMi5SZWNvZ25pdGlvblN0YXR1cy5Ub29NYW55UmVxdWVzdHM6XG4gICAgICAgICAgICAgICAgcmVhc29uID0gRXhwb3J0c19qc18xLkNhbmNlbGxhdGlvbkVycm9yQ29kZS5Ub29NYW55UmVxdWVzdHM7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMi5SZWNvZ25pdGlvblN0YXR1cy5CYWRSZXF1ZXN0OlxuICAgICAgICAgICAgICAgIHJlYXNvbiA9IEV4cG9ydHNfanNfMS5DYW5jZWxsYXRpb25FcnJvckNvZGUuQmFkUmVxdWVzdFBhcmFtZXRlcnM7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMi5SZWNvZ25pdGlvblN0YXR1cy5Gb3JiaWRkZW46XG4gICAgICAgICAgICAgICAgcmVhc29uID0gRXhwb3J0c19qc18xLkNhbmNlbGxhdGlvbkVycm9yQ29kZS5Gb3JiaWRkZW47XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJlYXNvbiA9IEV4cG9ydHNfanNfMS5DYW5jZWxsYXRpb25FcnJvckNvZGUuTm9FcnJvcjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVhc29uO1xuICAgIH1cbiAgICBzdGF0aWMgaW1wbFRyYW5zbGF0ZUVycm9yRGV0YWlscyhjYW5jZWxsYXRpb25FcnJvckNvZGUpIHtcbiAgICAgICAgbGV0IGVycm9yRGV0YWlscyA9IFwiVGhlIHNwZWVjaCBzZXJ2aWNlIGVuY291bnRlcmVkIGFuIGludGVybmFsIGVycm9yIGFuZCBjb3VsZCBub3QgY29udGludWUuXCI7XG4gICAgICAgIHN3aXRjaCAoY2FuY2VsbGF0aW9uRXJyb3JDb2RlKSB7XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMS5DYW5jZWxsYXRpb25FcnJvckNvZGUuRm9yYmlkZGVuOlxuICAgICAgICAgICAgICAgIGVycm9yRGV0YWlscyA9IFwiVGhlIHJlY29nbml6ZXIgaXMgdXNpbmcgYSBmcmVlIHN1YnNjcmlwdGlvbiB0aGF0IHJhbiBvdXQgb2YgcXVvdGEuXCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMS5DYW5jZWxsYXRpb25FcnJvckNvZGUuQmFkUmVxdWVzdFBhcmFtZXRlcnM6XG4gICAgICAgICAgICAgICAgZXJyb3JEZXRhaWxzID0gXCJJbnZhbGlkIHBhcmFtZXRlciBvciB1bnN1cHBvcnRlZCBhdWRpbyBmb3JtYXQgaW4gdGhlIHJlcXVlc3QuXCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMS5DYW5jZWxsYXRpb25FcnJvckNvZGUuVG9vTWFueVJlcXVlc3RzOlxuICAgICAgICAgICAgICAgIGVycm9yRGV0YWlscyA9IFwiVGhlIG51bWJlciBvZiBwYXJhbGxlbCByZXF1ZXN0cyBleGNlZWRlZCB0aGUgbnVtYmVyIG9mIGFsbG93ZWQgY29uY3VycmVudCB0cmFuc2NyaXB0aW9ucy5cIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVycm9yRGV0YWlscztcbiAgICB9XG59XG5leHBvcnRzLkVudW1UcmFuc2xhdGlvbiA9IEVudW1UcmFuc2xhdGlvbjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW51bVRyYW5zbGF0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/EnumTranslation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AutoDetectSourceLanguagesOpenRangeOptionName = exports.ForceDictationPropertyName = exports.ServicePropertiesPropertyName = exports.CancellationErrorCodePropertyName = exports.OutputFormatPropertyName = void 0;\n// Make sure not to export internal modules.\n//\n__exportStar(__webpack_require__(/*! ./CognitiveSubscriptionKeyAuthentication.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveSubscriptionKeyAuthentication.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CognitiveTokenAuthentication.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/CognitiveTokenAuthentication.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IAuthentication.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IAuthentication.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IConnectionFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IConnectionFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ISynthesisConnectionFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ISynthesisConnectionFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IntentConnectionFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentConnectionFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SpeakerRecognitionConnectionFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerRecognitionConnectionFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RecognitionEvents.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognitionEvents.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceRecognizerBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceRecognizerBase.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ConversationServiceRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationServiceRecognizer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RecognizerConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognizerConfig.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SpeechServiceInterfaces.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceInterfaces.js\"), exports);\n__exportStar(__webpack_require__(/*! ./WebsocketMessageFormatter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/WebsocketMessageFormatter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SpeechConnectionFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ConversationTranscriberConnectionFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationTranscriberConnectionFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TranscriberConnectionFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranscriberConnectionFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TranslationConnectionFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationConnectionFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SpeechSynthesisConnectionFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisConnectionFactory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./EnumTranslation.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/EnumTranslation.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceMessages/Enums.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Enums.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceMessages/TranslationSynthesisEnd.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationSynthesisEnd.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceMessages/TranslationHypothesis.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationHypothesis.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceMessages/TranslationPhrase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationPhrase.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TranslationServiceRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationServiceRecognizer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceMessages/SpeechDetected.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechDetected.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceMessages/SpeechHypothesis.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechHypothesis.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceMessages/SpeechKeyword.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechKeyword.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SpeechServiceRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceRecognizer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ConversationTranscriptionServiceRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConversationTranscriptionServiceRecognizer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TranscriptionServiceRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranscriptionServiceRecognizer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceMessages/DetailedSpeechPhrase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/DetailedSpeechPhrase.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceMessages/SimpleSpeechPhrase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SimpleSpeechPhrase.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AddedLmIntent.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AddedLmIntent.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IntentServiceRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentServiceRecognizer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceMessages/IntentResponse.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/IntentResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceMessages/SpeakerResponse.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeakerResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RequestSession.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RequestSession.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SpeechContext.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechContext.js\"), exports);\n__exportStar(__webpack_require__(/*! ./DynamicGrammarBuilder.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DynamicGrammarBuilder.js\"), exports);\n__exportStar(__webpack_require__(/*! ./DynamicGrammarInterfaces.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DynamicGrammarInterfaces.js\"), exports);\n__exportStar(__webpack_require__(/*! ./DialogServiceAdapter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogServiceAdapter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AgentConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AgentConfig.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Transcription/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/Exports.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ServiceMessages/SynthesisAudioMetadata.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SynthesisAudioMetadata.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SynthesisTurn.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisTurn.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SynthesisAdapterBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisAdapterBase.js\"), exports);\nvar AvatarSynthesisAdapter_js_1 = __webpack_require__(/*! ./AvatarSynthesisAdapter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/AvatarSynthesisAdapter.js\");\nObject.defineProperty(exports, \"AvatarSynthesisAdapter\", ({ enumerable: true, get: function () { return AvatarSynthesisAdapter_js_1.AvatarSynthesisAdapter; } }));\nvar SpeechSynthesisAdapter_js_1 = __webpack_require__(/*! ./SpeechSynthesisAdapter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisAdapter.js\");\nObject.defineProperty(exports, \"SpeechSynthesisAdapter\", ({ enumerable: true, get: function () { return SpeechSynthesisAdapter_js_1.SpeechSynthesisAdapter; } }));\n__exportStar(__webpack_require__(/*! ./SynthesisRestAdapter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisRestAdapter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SynthesizerConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesizerConfig.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SynthesisContext.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisContext.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SpeakerRecognitionConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerRecognitionConfig.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SpeakerServiceRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerServiceRecognizer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./VoiceServiceRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/VoiceServiceRecognizer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SpeechServiceConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceConfig.js\"), exports);\nexports.OutputFormatPropertyName = \"OutputFormat\";\nexports.CancellationErrorCodePropertyName = \"CancellationErrorCode\";\nexports.ServicePropertiesPropertyName = \"ServiceProperties\";\nexports.ForceDictationPropertyName = \"ForceDictation\";\nexports.AutoDetectSourceLanguagesOpenRangeOptionName = \"OpenRange\";\n\n//# sourceMappingURL=Exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HeaderNames = void 0;\nclass HeaderNames {\n}\nexports.HeaderNames = HeaderNames;\nHeaderNames.AuthKey = \"Ocp-Apim-Subscription-Key\";\nHeaderNames.Authorization = \"Authorization\";\nHeaderNames.SpIDAuthKey = \"Apim-Subscription-Id\";\nHeaderNames.ConnectionId = \"X-ConnectionId\";\nHeaderNames.ContentType = \"Content-Type\";\nHeaderNames.CustomCommandsAppId = \"X-CommandsAppId\";\nHeaderNames.Path = \"Path\";\nHeaderNames.RequestId = \"X-RequestId\";\nHeaderNames.RequestStreamId = \"X-StreamId\";\nHeaderNames.RequestTimestamp = \"X-Timestamp\";\n\n//# sourceMappingURL=HeaderNames.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvSGVhZGVyTmFtZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvSGVhZGVyTmFtZXMuanM/Nzc4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IZWFkZXJOYW1lcyA9IHZvaWQgMDtcbmNsYXNzIEhlYWRlck5hbWVzIHtcbn1cbmV4cG9ydHMuSGVhZGVyTmFtZXMgPSBIZWFkZXJOYW1lcztcbkhlYWRlck5hbWVzLkF1dGhLZXkgPSBcIk9jcC1BcGltLVN1YnNjcmlwdGlvbi1LZXlcIjtcbkhlYWRlck5hbWVzLkF1dGhvcml6YXRpb24gPSBcIkF1dGhvcml6YXRpb25cIjtcbkhlYWRlck5hbWVzLlNwSURBdXRoS2V5ID0gXCJBcGltLVN1YnNjcmlwdGlvbi1JZFwiO1xuSGVhZGVyTmFtZXMuQ29ubmVjdGlvbklkID0gXCJYLUNvbm5lY3Rpb25JZFwiO1xuSGVhZGVyTmFtZXMuQ29udGVudFR5cGUgPSBcIkNvbnRlbnQtVHlwZVwiO1xuSGVhZGVyTmFtZXMuQ3VzdG9tQ29tbWFuZHNBcHBJZCA9IFwiWC1Db21tYW5kc0FwcElkXCI7XG5IZWFkZXJOYW1lcy5QYXRoID0gXCJQYXRoXCI7XG5IZWFkZXJOYW1lcy5SZXF1ZXN0SWQgPSBcIlgtUmVxdWVzdElkXCI7XG5IZWFkZXJOYW1lcy5SZXF1ZXN0U3RyZWFtSWQgPSBcIlgtU3RyZWFtSWRcIjtcbkhlYWRlck5hbWVzLlJlcXVlc3RUaW1lc3RhbXAgPSBcIlgtVGltZXN0YW1wXCI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUhlYWRlck5hbWVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IAuthentication.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IAuthentication.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AuthInfo = void 0;\nclass AuthInfo {\n    constructor(headerName, token) {\n        this.privHeaderName = headerName;\n        this.privToken = token;\n    }\n    get headerName() {\n        return this.privHeaderName;\n    }\n    get token() {\n        return this.privToken;\n    }\n}\nexports.AuthInfo = AuthInfo;\n\n//# sourceMappingURL=IAuthentication.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvSUF1dGhlbnRpY2F0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCOztBQUVoQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL0lBdXRoZW50aWNhdGlvbi5qcz8wOGJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkF1dGhJbmZvID0gdm9pZCAwO1xuY2xhc3MgQXV0aEluZm8ge1xuICAgIGNvbnN0cnVjdG9yKGhlYWRlck5hbWUsIHRva2VuKSB7XG4gICAgICAgIHRoaXMucHJpdkhlYWRlck5hbWUgPSBoZWFkZXJOYW1lO1xuICAgICAgICB0aGlzLnByaXZUb2tlbiA9IHRva2VuO1xuICAgIH1cbiAgICBnZXQgaGVhZGVyTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkhlYWRlck5hbWU7XG4gICAgfVxuICAgIGdldCB0b2tlbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlRva2VuO1xuICAgIH1cbn1cbmV4cG9ydHMuQXV0aEluZm8gPSBBdXRoSW5mbztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SUF1dGhlbnRpY2F0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IAuthentication.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IConnectionFactory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IConnectionFactory.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=IConnectionFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvSUNvbm5lY3Rpb25GYWN0b3J5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9JQ29ubmVjdGlvbkZhY3RvcnkuanM/ZDY2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1JQ29ubmVjdGlvbkZhY3RvcnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IConnectionFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ISynthesisConnectionFactory.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ISynthesisConnectionFactory.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=ISynthesisConnectionFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvSVN5bnRoZXNpc0Nvbm5lY3Rpb25GYWN0b3J5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9JU3ludGhlc2lzQ29ubmVjdGlvbkZhY3RvcnkuanM/ZTQ3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1JU3ludGhlc2lzQ29ubmVjdGlvbkZhY3RvcnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ISynthesisConnectionFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentConnectionFactory.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentConnectionFactory.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IntentConnectionFactory = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = __webpack_require__(/*! ./ConnectionFactoryBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ./HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nclass IntentConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint);\n        if (!endpoint) {\n            const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_IntentRegion);\n            const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n            const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".sr.speech\" + hostSuffix);\n            endpoint = host + \"/speech/recognition/interactive/cognitiveservices/v1\";\n        }\n        const queryParams = {\n            format: \"simple\",\n            language: config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage),\n        };\n        this.setCommonUrlParams(config, queryParams, endpoint);\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n    }\n    getSpeechRegionFromIntentRegion(intentRegion) {\n        switch (intentRegion) {\n            case \"West US\":\n            case \"US West\":\n            case \"westus\":\n                return \"uswest\";\n            case \"West US 2\":\n            case \"US West 2\":\n            case \"westus2\":\n                return \"uswest2\";\n            case \"South Central US\":\n            case \"US South Central\":\n            case \"southcentralus\":\n                return \"ussouthcentral\";\n            case \"West Central US\":\n            case \"US West Central\":\n            case \"westcentralus\":\n                return \"uswestcentral\";\n            case \"East US\":\n            case \"US East\":\n            case \"eastus\":\n                return \"useast\";\n            case \"East US 2\":\n            case \"US East 2\":\n            case \"eastus2\":\n                return \"useast2\";\n            case \"West Europe\":\n            case \"Europe West\":\n            case \"westeurope\":\n                return \"europewest\";\n            case \"North Europe\":\n            case \"Europe North\":\n            case \"northeurope\":\n                return \"europenorth\";\n            case \"Brazil South\":\n            case \"South Brazil\":\n            case \"southbrazil\":\n                return \"brazilsouth\";\n            case \"Australia East\":\n            case \"East Australia\":\n            case \"eastaustralia\":\n                return \"australiaeast\";\n            case \"Southeast Asia\":\n            case \"Asia Southeast\":\n            case \"southeastasia\":\n                return \"asiasoutheast\";\n            case \"East Asia\":\n            case \"Asia East\":\n            case \"eastasia\":\n                return \"asiaeast\";\n            default:\n                return intentRegion;\n        }\n    }\n}\nexports.IntentConnectionFactory = IntentConnectionFactory;\n\n//# sourceMappingURL=IntentConnectionFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvSW50ZW50Q29ubmVjdGlvbkZhY3RvcnkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQjtBQUMvQixxQkFBcUIsbUJBQU8sQ0FBQywySUFBOEI7QUFDM0QscUJBQXFCLG1CQUFPLENBQUMscUhBQW1CO0FBQ2hELG1DQUFtQyxtQkFBTyxDQUFDLHNKQUE0QjtBQUN2RSxxQkFBcUIsbUJBQU8sQ0FBQywwSEFBYztBQUMzQyx5QkFBeUIsbUJBQU8sQ0FBQyxrSUFBa0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCOztBQUUvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL0ludGVudENvbm5lY3Rpb25GYWN0b3J5LmpzP2ZlOTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW50ZW50Q29ubmVjdGlvbkZhY3RvcnkgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uLmJyb3dzZXIvRXhwb3J0cy5qc1wiKTtcbmNvbnN0IEV4cG9ydHNfanNfMiA9IHJlcXVpcmUoXCIuLi9zZGsvRXhwb3J0cy5qc1wiKTtcbmNvbnN0IENvbm5lY3Rpb25GYWN0b3J5QmFzZV9qc18xID0gcmVxdWlyZShcIi4vQ29ubmVjdGlvbkZhY3RvcnlCYXNlLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18zID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbmNvbnN0IEhlYWRlck5hbWVzX2pzXzEgPSByZXF1aXJlKFwiLi9IZWFkZXJOYW1lcy5qc1wiKTtcbmNsYXNzIEludGVudENvbm5lY3Rpb25GYWN0b3J5IGV4dGVuZHMgQ29ubmVjdGlvbkZhY3RvcnlCYXNlX2pzXzEuQ29ubmVjdGlvbkZhY3RvcnlCYXNlIHtcbiAgICBjcmVhdGUoY29uZmlnLCBhdXRoSW5mbywgY29ubmVjdGlvbklkKSB7XG4gICAgICAgIGxldCBlbmRwb2ludCA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0VuZHBvaW50KTtcbiAgICAgICAgaWYgKCFlbmRwb2ludCkge1xuICAgICAgICAgICAgY29uc3QgcmVnaW9uID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fSW50ZW50UmVnaW9uKTtcbiAgICAgICAgICAgIGNvbnN0IGhvc3RTdWZmaXggPSBDb25uZWN0aW9uRmFjdG9yeUJhc2VfanNfMS5Db25uZWN0aW9uRmFjdG9yeUJhc2UuZ2V0SG9zdFN1ZmZpeChyZWdpb24pO1xuICAgICAgICAgICAgY29uc3QgaG9zdCA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0hvc3QsIFwid3NzOi8vXCIgKyByZWdpb24gKyBcIi5zci5zcGVlY2hcIiArIGhvc3RTdWZmaXgpO1xuICAgICAgICAgICAgZW5kcG9pbnQgPSBob3N0ICsgXCIvc3BlZWNoL3JlY29nbml0aW9uL2ludGVyYWN0aXZlL2NvZ25pdGl2ZXNlcnZpY2VzL3YxXCI7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcXVlcnlQYXJhbXMgPSB7XG4gICAgICAgICAgICBmb3JtYXQ6IFwic2ltcGxlXCIsXG4gICAgICAgICAgICBsYW5ndWFnZTogY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fUmVjb0xhbmd1YWdlKSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5zZXRDb21tb25VcmxQYXJhbXMoY29uZmlnLCBxdWVyeVBhcmFtcywgZW5kcG9pbnQpO1xuICAgICAgICBjb25zdCBoZWFkZXJzID0ge307XG4gICAgICAgIGlmIChhdXRoSW5mby50b2tlbiAhPT0gdW5kZWZpbmVkICYmIGF1dGhJbmZvLnRva2VuICE9PSBcIlwiKSB7XG4gICAgICAgICAgICBoZWFkZXJzW2F1dGhJbmZvLmhlYWRlck5hbWVdID0gYXV0aEluZm8udG9rZW47XG4gICAgICAgIH1cbiAgICAgICAgaGVhZGVyc1tIZWFkZXJOYW1lc19qc18xLkhlYWRlck5hbWVzLkNvbm5lY3Rpb25JZF0gPSBjb25uZWN0aW9uSWQ7XG4gICAgICAgIGNvbmZpZy5wYXJhbWV0ZXJzLnNldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX1VybCwgZW5kcG9pbnQpO1xuICAgICAgICBjb25zdCBlbmFibGVDb21wcmVzc2lvbiA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KFwiU1BFRUNILUVuYWJsZVdlYnNvY2tldENvbXByZXNzaW9uXCIsIFwiZmFsc2VcIikgPT09IFwidHJ1ZVwiO1xuICAgICAgICByZXR1cm4gbmV3IEV4cG9ydHNfanNfMS5XZWJzb2NrZXRDb25uZWN0aW9uKGVuZHBvaW50LCBxdWVyeVBhcmFtcywgaGVhZGVycywgbmV3IEV4cG9ydHNfanNfMy5XZWJzb2NrZXRNZXNzYWdlRm9ybWF0dGVyKCksIEV4cG9ydHNfanNfMS5Qcm94eUluZm8uZnJvbVJlY29nbml6ZXJDb25maWcoY29uZmlnKSwgZW5hYmxlQ29tcHJlc3Npb24sIGNvbm5lY3Rpb25JZCk7XG4gICAgfVxuICAgIGdldFNwZWVjaFJlZ2lvbkZyb21JbnRlbnRSZWdpb24oaW50ZW50UmVnaW9uKSB7XG4gICAgICAgIHN3aXRjaCAoaW50ZW50UmVnaW9uKSB7XG4gICAgICAgICAgICBjYXNlIFwiV2VzdCBVU1wiOlxuICAgICAgICAgICAgY2FzZSBcIlVTIFdlc3RcIjpcbiAgICAgICAgICAgIGNhc2UgXCJ3ZXN0dXNcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ1c3dlc3RcIjtcbiAgICAgICAgICAgIGNhc2UgXCJXZXN0IFVTIDJcIjpcbiAgICAgICAgICAgIGNhc2UgXCJVUyBXZXN0IDJcIjpcbiAgICAgICAgICAgIGNhc2UgXCJ3ZXN0dXMyXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwidXN3ZXN0MlwiO1xuICAgICAgICAgICAgY2FzZSBcIlNvdXRoIENlbnRyYWwgVVNcIjpcbiAgICAgICAgICAgIGNhc2UgXCJVUyBTb3V0aCBDZW50cmFsXCI6XG4gICAgICAgICAgICBjYXNlIFwic291dGhjZW50cmFsdXNcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ1c3NvdXRoY2VudHJhbFwiO1xuICAgICAgICAgICAgY2FzZSBcIldlc3QgQ2VudHJhbCBVU1wiOlxuICAgICAgICAgICAgY2FzZSBcIlVTIFdlc3QgQ2VudHJhbFwiOlxuICAgICAgICAgICAgY2FzZSBcIndlc3RjZW50cmFsdXNcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ1c3dlc3RjZW50cmFsXCI7XG4gICAgICAgICAgICBjYXNlIFwiRWFzdCBVU1wiOlxuICAgICAgICAgICAgY2FzZSBcIlVTIEVhc3RcIjpcbiAgICAgICAgICAgIGNhc2UgXCJlYXN0dXNcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ1c2Vhc3RcIjtcbiAgICAgICAgICAgIGNhc2UgXCJFYXN0IFVTIDJcIjpcbiAgICAgICAgICAgIGNhc2UgXCJVUyBFYXN0IDJcIjpcbiAgICAgICAgICAgIGNhc2UgXCJlYXN0dXMyXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwidXNlYXN0MlwiO1xuICAgICAgICAgICAgY2FzZSBcIldlc3QgRXVyb3BlXCI6XG4gICAgICAgICAgICBjYXNlIFwiRXVyb3BlIFdlc3RcIjpcbiAgICAgICAgICAgIGNhc2UgXCJ3ZXN0ZXVyb3BlXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiZXVyb3Bld2VzdFwiO1xuICAgICAgICAgICAgY2FzZSBcIk5vcnRoIEV1cm9wZVwiOlxuICAgICAgICAgICAgY2FzZSBcIkV1cm9wZSBOb3J0aFwiOlxuICAgICAgICAgICAgY2FzZSBcIm5vcnRoZXVyb3BlXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiZXVyb3Blbm9ydGhcIjtcbiAgICAgICAgICAgIGNhc2UgXCJCcmF6aWwgU291dGhcIjpcbiAgICAgICAgICAgIGNhc2UgXCJTb3V0aCBCcmF6aWxcIjpcbiAgICAgICAgICAgIGNhc2UgXCJzb3V0aGJyYXppbFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBcImJyYXppbHNvdXRoXCI7XG4gICAgICAgICAgICBjYXNlIFwiQXVzdHJhbGlhIEVhc3RcIjpcbiAgICAgICAgICAgIGNhc2UgXCJFYXN0IEF1c3RyYWxpYVwiOlxuICAgICAgICAgICAgY2FzZSBcImVhc3RhdXN0cmFsaWFcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJhdXN0cmFsaWFlYXN0XCI7XG4gICAgICAgICAgICBjYXNlIFwiU291dGhlYXN0IEFzaWFcIjpcbiAgICAgICAgICAgIGNhc2UgXCJBc2lhIFNvdXRoZWFzdFwiOlxuICAgICAgICAgICAgY2FzZSBcInNvdXRoZWFzdGFzaWFcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJhc2lhc291dGhlYXN0XCI7XG4gICAgICAgICAgICBjYXNlIFwiRWFzdCBBc2lhXCI6XG4gICAgICAgICAgICBjYXNlIFwiQXNpYSBFYXN0XCI6XG4gICAgICAgICAgICBjYXNlIFwiZWFzdGFzaWFcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJhc2lhZWFzdFwiO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gaW50ZW50UmVnaW9uO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5JbnRlbnRDb25uZWN0aW9uRmFjdG9yeSA9IEludGVudENvbm5lY3Rpb25GYWN0b3J5O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbnRlbnRDb25uZWN0aW9uRmFjdG9yeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentConnectionFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentServiceRecognizer.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentServiceRecognizer.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IntentServiceRecognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\n// eslint-disable-next-line max-classes-per-file\nclass IntentServiceRecognizer extends Exports_js_3.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.privIntentRecognizer = recognizer;\n        this.privIntentDataSent = false;\n    }\n    setIntents(addedIntents, umbrellaIntent) {\n        this.privAddedLmIntents = addedIntents;\n        this.privUmbrellaIntent = umbrellaIntent;\n        this.privIntentDataSent = true;\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        let result;\n        let ev;\n        let processed = false;\n        const resultProps = new Exports_js_2.PropertyCollection();\n        if (connectionMessage.messageType === Exports_js_1.MessageType.Text) {\n            resultProps.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n                const speechHypothesis = Exports_js_3.SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_2.IntentRecognitionResult(undefined, this.privRequestSession.requestId, Exports_js_2.ResultReason.RecognizingIntent, speechHypothesis.Text, speechHypothesis.Duration, speechHypothesis.Offset, speechHypothesis.Language, speechHypothesis.LanguageDetectionConfidence, undefined, speechHypothesis.asJson(), resultProps);\n                this.privRequestSession.onHypothesis(result.offset);\n                ev = new Exports_js_2.IntentRecognitionEventArgs(result, speechHypothesis.Offset, this.privRequestSession.sessionId);\n                if (!!this.privIntentRecognizer.recognizing) {\n                    try {\n                        this.privIntentRecognizer.recognizing(this.privIntentRecognizer, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.phrase\":\n                const simple = Exports_js_3.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                result = new Exports_js_2.IntentRecognitionResult(undefined, this.privRequestSession.requestId, Exports_js_3.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus), simple.DisplayText, simple.Duration, simple.Offset, simple.Language, simple.LanguageDetectionConfidence, undefined, simple.asJson(), resultProps);\n                ev = new Exports_js_2.IntentRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                const sendEvent = () => {\n                    if (!!this.privIntentRecognizer.recognized) {\n                        try {\n                            this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\n                            /* eslint-disable no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    // report result to promise.\n                    if (!!this.privSuccessCallback) {\n                        try {\n                            this.privSuccessCallback(result);\n                        }\n                        catch (e) {\n                            if (!!this.privErrorCallback) {\n                                this.privErrorCallback(e);\n                            }\n                        }\n                        // Only invoke the call back once.\n                        // and if it's successful don't invoke the\n                        // error after that.\n                        this.privSuccessCallback = undefined;\n                        this.privErrorCallback = undefined;\n                    }\n                };\n                // If intent data was sent, the terminal result for this recognizer is an intent being found.\n                // If no intent data was sent, the terminal event is speech recognition being successful.\n                if (false === this.privIntentDataSent || Exports_js_2.ResultReason.NoMatch === ev.result.reason) {\n                    // Advance the buffers.\n                    this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\n                    sendEvent();\n                }\n                else {\n                    // Squirrel away the args, when the response event arrives it will build upon them\n                    // and then return\n                    this.privPendingIntentArgs = ev;\n                }\n                processed = true;\n                break;\n            case \"response\":\n                // Response from LUIS\n                ev = this.privPendingIntentArgs;\n                this.privPendingIntentArgs = undefined;\n                if (undefined === ev) {\n                    if (\"\" === connectionMessage.textBody) {\n                        // This condition happens if there is nothing but silence in the\n                        // audio sent to the service.\n                        return;\n                    }\n                    // Odd... Not sure this can happen\n                    ev = new Exports_js_2.IntentRecognitionEventArgs(new Exports_js_2.IntentRecognitionResult(), 0, this.privRequestSession.sessionId);\n                }\n                const intentResponse = Exports_js_3.IntentResponse.fromJSON(connectionMessage.textBody);\n                // If LUIS didn't return anything, send the existing event, else\n                // modify it to show the match.\n                // See if the intent found is in the list of intents asked for.\n                if (null !== intentResponse && !!intentResponse.topScoringIntent && !!intentResponse.topScoringIntent.intent) {\n                    let addedIntent = this.privAddedLmIntents[intentResponse.topScoringIntent.intent];\n                    if (this.privUmbrellaIntent !== undefined) {\n                        addedIntent = this.privUmbrellaIntent;\n                    }\n                    if (!!addedIntent) {\n                        const intentId = addedIntent === undefined || addedIntent.intentName === undefined ? intentResponse.topScoringIntent.intent : addedIntent.intentName;\n                        let reason = ev.result.reason;\n                        if (undefined !== intentId) {\n                            reason = Exports_js_2.ResultReason.RecognizedIntent;\n                        }\n                        // make sure, properties is set.\n                        const properties = (undefined !== ev.result.properties) ?\n                            ev.result.properties : new Exports_js_2.PropertyCollection();\n                        properties.setProperty(Exports_js_2.PropertyId.LanguageUnderstandingServiceResponse_JsonResult, connectionMessage.textBody);\n                        ev = new Exports_js_2.IntentRecognitionEventArgs(new Exports_js_2.IntentRecognitionResult(intentId, ev.result.resultId, reason, ev.result.text, ev.result.duration, ev.result.offset, undefined, undefined, ev.result.errorDetails, ev.result.json, properties), ev.offset, ev.sessionId);\n                    }\n                }\n                this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\n                if (!!this.privIntentRecognizer.recognized) {\n                    try {\n                        this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                // report result to promise.\n                if (!!this.privSuccessCallback) {\n                    try {\n                        this.privSuccessCallback(ev.result);\n                    }\n                    catch (e) {\n                        if (!!this.privErrorCallback) {\n                            this.privErrorCallback(e);\n                        }\n                    }\n                    // Only invoke the call back once.\n                    // and if it's successful don't invoke the\n                    // error after that.\n                    this.privSuccessCallback = undefined;\n                    this.privErrorCallback = undefined;\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        const defferal = new Exports_js_1.Deferred();\n        defferal.resolve(processed);\n        return defferal.promise;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_2.PropertyCollection();\n        properties.setProperty(Exports_js_3.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[errorCode]);\n        if (!!this.privIntentRecognizer.canceled) {\n            const cancelEvent = new Exports_js_2.IntentRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, undefined, sessionId);\n            try {\n                this.privIntentRecognizer.canceled(this.privIntentRecognizer, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new Exports_js_2.IntentRecognitionResult(undefined, // Intent Id\n            requestId, Exports_js_2.ResultReason.Canceled, undefined, // Text\n            undefined, // Duration\n            undefined, // Offset\n            undefined, // Language\n            undefined, // LanguageDetectionConfidence\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                this.privSuccessCallback = undefined;\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n}\nexports.IntentServiceRecognizer = IntentServiceRecognizer;\n\n//# sourceMappingURL=IntentServiceRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/IntentServiceRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.QueryParameterNames = void 0;\nclass QueryParameterNames {\n}\nexports.QueryParameterNames = QueryParameterNames;\nQueryParameterNames.BotId = \"botid\";\nQueryParameterNames.CustomSpeechDeploymentId = \"cid\";\nQueryParameterNames.CustomVoiceDeploymentId = \"deploymentId\";\nQueryParameterNames.EnableAudioLogging = \"storeAudio\";\nQueryParameterNames.EnableLanguageId = \"lidEnabled\";\nQueryParameterNames.EnableWordLevelTimestamps = \"wordLevelTimestamps\";\nQueryParameterNames.EndSilenceTimeoutMs = \"endSilenceTimeoutMs\";\nQueryParameterNames.SegmentationSilenceTimeoutMs = \"segmentationSilenceTimeoutMs\";\nQueryParameterNames.SegmentationMaximumTimeMs = \"segmentationMaximumTimeMs\";\nQueryParameterNames.SegmentationStrategy = \"segmentationStrategy\";\nQueryParameterNames.Format = \"format\";\nQueryParameterNames.InitialSilenceTimeoutMs = \"initialSilenceTimeoutMs\";\nQueryParameterNames.Language = \"language\";\nQueryParameterNames.Profanity = \"profanity\";\nQueryParameterNames.RequestBotStatusMessages = \"enableBotMessageStatus\";\nQueryParameterNames.StableIntermediateThreshold = \"stableIntermediateThreshold\";\nQueryParameterNames.StableTranslation = \"stableTranslation\";\nQueryParameterNames.TestHooks = \"testhooks\";\nQueryParameterNames.Postprocessing = \"postprocessing\";\nQueryParameterNames.CtsMeetingId = \"meetingId\";\nQueryParameterNames.CtsDeviceId = \"deviceId\";\nQueryParameterNames.CtsIsParticipant = \"isParticipant\";\nQueryParameterNames.EnableAvatar = \"enableTalkingAvatar\";\n\n//# sourceMappingURL=QueryParameterNames.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvUXVlcnlQYXJhbWV0ZXJOYW1lcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1F1ZXJ5UGFyYW1ldGVyTmFtZXMuanM/MWVmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5RdWVyeVBhcmFtZXRlck5hbWVzID0gdm9pZCAwO1xuY2xhc3MgUXVlcnlQYXJhbWV0ZXJOYW1lcyB7XG59XG5leHBvcnRzLlF1ZXJ5UGFyYW1ldGVyTmFtZXMgPSBRdWVyeVBhcmFtZXRlck5hbWVzO1xuUXVlcnlQYXJhbWV0ZXJOYW1lcy5Cb3RJZCA9IFwiYm90aWRcIjtcblF1ZXJ5UGFyYW1ldGVyTmFtZXMuQ3VzdG9tU3BlZWNoRGVwbG95bWVudElkID0gXCJjaWRcIjtcblF1ZXJ5UGFyYW1ldGVyTmFtZXMuQ3VzdG9tVm9pY2VEZXBsb3ltZW50SWQgPSBcImRlcGxveW1lbnRJZFwiO1xuUXVlcnlQYXJhbWV0ZXJOYW1lcy5FbmFibGVBdWRpb0xvZ2dpbmcgPSBcInN0b3JlQXVkaW9cIjtcblF1ZXJ5UGFyYW1ldGVyTmFtZXMuRW5hYmxlTGFuZ3VhZ2VJZCA9IFwibGlkRW5hYmxlZFwiO1xuUXVlcnlQYXJhbWV0ZXJOYW1lcy5FbmFibGVXb3JkTGV2ZWxUaW1lc3RhbXBzID0gXCJ3b3JkTGV2ZWxUaW1lc3RhbXBzXCI7XG5RdWVyeVBhcmFtZXRlck5hbWVzLkVuZFNpbGVuY2VUaW1lb3V0TXMgPSBcImVuZFNpbGVuY2VUaW1lb3V0TXNcIjtcblF1ZXJ5UGFyYW1ldGVyTmFtZXMuU2VnbWVudGF0aW9uU2lsZW5jZVRpbWVvdXRNcyA9IFwic2VnbWVudGF0aW9uU2lsZW5jZVRpbWVvdXRNc1wiO1xuUXVlcnlQYXJhbWV0ZXJOYW1lcy5TZWdtZW50YXRpb25NYXhpbXVtVGltZU1zID0gXCJzZWdtZW50YXRpb25NYXhpbXVtVGltZU1zXCI7XG5RdWVyeVBhcmFtZXRlck5hbWVzLlNlZ21lbnRhdGlvblN0cmF0ZWd5ID0gXCJzZWdtZW50YXRpb25TdHJhdGVneVwiO1xuUXVlcnlQYXJhbWV0ZXJOYW1lcy5Gb3JtYXQgPSBcImZvcm1hdFwiO1xuUXVlcnlQYXJhbWV0ZXJOYW1lcy5Jbml0aWFsU2lsZW5jZVRpbWVvdXRNcyA9IFwiaW5pdGlhbFNpbGVuY2VUaW1lb3V0TXNcIjtcblF1ZXJ5UGFyYW1ldGVyTmFtZXMuTGFuZ3VhZ2UgPSBcImxhbmd1YWdlXCI7XG5RdWVyeVBhcmFtZXRlck5hbWVzLlByb2Zhbml0eSA9IFwicHJvZmFuaXR5XCI7XG5RdWVyeVBhcmFtZXRlck5hbWVzLlJlcXVlc3RCb3RTdGF0dXNNZXNzYWdlcyA9IFwiZW5hYmxlQm90TWVzc2FnZVN0YXR1c1wiO1xuUXVlcnlQYXJhbWV0ZXJOYW1lcy5TdGFibGVJbnRlcm1lZGlhdGVUaHJlc2hvbGQgPSBcInN0YWJsZUludGVybWVkaWF0ZVRocmVzaG9sZFwiO1xuUXVlcnlQYXJhbWV0ZXJOYW1lcy5TdGFibGVUcmFuc2xhdGlvbiA9IFwic3RhYmxlVHJhbnNsYXRpb25cIjtcblF1ZXJ5UGFyYW1ldGVyTmFtZXMuVGVzdEhvb2tzID0gXCJ0ZXN0aG9va3NcIjtcblF1ZXJ5UGFyYW1ldGVyTmFtZXMuUG9zdHByb2Nlc3NpbmcgPSBcInBvc3Rwcm9jZXNzaW5nXCI7XG5RdWVyeVBhcmFtZXRlck5hbWVzLkN0c01lZXRpbmdJZCA9IFwibWVldGluZ0lkXCI7XG5RdWVyeVBhcmFtZXRlck5hbWVzLkN0c0RldmljZUlkID0gXCJkZXZpY2VJZFwiO1xuUXVlcnlQYXJhbWV0ZXJOYW1lcy5DdHNJc1BhcnRpY2lwYW50ID0gXCJpc1BhcnRpY2lwYW50XCI7XG5RdWVyeVBhcmFtZXRlck5hbWVzLkVuYWJsZUF2YXRhciA9IFwiZW5hYmxlVGFsa2luZ0F2YXRhclwiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1RdWVyeVBhcmFtZXRlck5hbWVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognitionEvents.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognitionEvents.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RecognitionEndedEvent = exports.RecognitionCompletionStatus = exports.RecognitionStartedEvent = exports.ConnectingToServiceEvent = exports.ListeningStartedEvent = exports.RecognitionTriggeredEvent = exports.SpeechRecognitionEvent = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nclass SpeechRecognitionEvent extends Exports_js_1.PlatformEvent {\n    constructor(eventName, requestId, sessionId, eventType = Exports_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privRequestId = requestId;\n        this.privSessionId = sessionId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n}\nexports.SpeechRecognitionEvent = SpeechRecognitionEvent;\nclass RecognitionTriggeredEvent extends SpeechRecognitionEvent {\n    constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n        super(\"RecognitionTriggeredEvent\", requestId, sessionId);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n}\nexports.RecognitionTriggeredEvent = RecognitionTriggeredEvent;\nclass ListeningStartedEvent extends SpeechRecognitionEvent {\n    constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n        super(\"ListeningStartedEvent\", requestId, sessionId);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n}\nexports.ListeningStartedEvent = ListeningStartedEvent;\nclass ConnectingToServiceEvent extends SpeechRecognitionEvent {\n    constructor(requestId, authFetchEventid, sessionId) {\n        super(\"ConnectingToServiceEvent\", requestId, sessionId);\n        this.privAuthFetchEventid = authFetchEventid;\n    }\n    get authFetchEventid() {\n        return this.privAuthFetchEventid;\n    }\n}\nexports.ConnectingToServiceEvent = ConnectingToServiceEvent;\nclass RecognitionStartedEvent extends SpeechRecognitionEvent {\n    constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId) {\n        super(\"RecognitionStartedEvent\", requestId, sessionId);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privAuthFetchEventId = authFetchEventId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n}\nexports.RecognitionStartedEvent = RecognitionStartedEvent;\nvar RecognitionCompletionStatus;\n(function (RecognitionCompletionStatus) {\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceError\"] = 1] = \"AudioSourceError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceTimeout\"] = 2] = \"AudioSourceTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchError\"] = 3] = \"AuthTokenFetchError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchTimeout\"] = 4] = \"AuthTokenFetchTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnAuthorized\"] = 5] = \"UnAuthorized\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectTimeout\"] = 6] = \"ConnectTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectError\"] = 7] = \"ConnectError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ClientRecognitionActivityTimeout\"] = 8] = \"ClientRecognitionActivityTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnknownError\"] = 9] = \"UnknownError\";\n})(RecognitionCompletionStatus = exports.RecognitionCompletionStatus || (exports.RecognitionCompletionStatus = {}));\nclass RecognitionEndedEvent extends SpeechRecognitionEvent {\n    constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId, serviceTag, status, error) {\n        super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? Exports_js_1.EventType.Info : Exports_js_1.EventType.Error);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privAuthFetchEventId = authFetchEventId;\n        this.privStatus = status;\n        this.privError = error;\n        this.privServiceTag = serviceTag;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n    get serviceTag() {\n        return this.privServiceTag;\n    }\n    get status() {\n        return this.privStatus;\n    }\n    get error() {\n        return this.privError;\n    }\n}\nexports.RecognitionEndedEvent = RecognitionEndedEvent;\n\n//# sourceMappingURL=RecognitionEvents.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvUmVjb2duaXRpb25FdmVudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcsbUNBQW1DLEdBQUcsK0JBQStCLEdBQUcsZ0NBQWdDLEdBQUcsNkJBQTZCLEdBQUcsaUNBQWlDLEdBQUcsOEJBQThCO0FBQzdPLHFCQUFxQixtQkFBTyxDQUFDLDJIQUFzQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdFQUF3RSxtQ0FBbUMsS0FBSztBQUNqSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCOztBQUU3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1JlY29nbml0aW9uRXZlbnRzLmpzPzU0OWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8qIGVzbGludC1kaXNhYmxlIG1heC1jbGFzc2VzLXBlci1maWxlICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlY29nbml0aW9uRW5kZWRFdmVudCA9IGV4cG9ydHMuUmVjb2duaXRpb25Db21wbGV0aW9uU3RhdHVzID0gZXhwb3J0cy5SZWNvZ25pdGlvblN0YXJ0ZWRFdmVudCA9IGV4cG9ydHMuQ29ubmVjdGluZ1RvU2VydmljZUV2ZW50ID0gZXhwb3J0cy5MaXN0ZW5pbmdTdGFydGVkRXZlbnQgPSBleHBvcnRzLlJlY29nbml0aW9uVHJpZ2dlcmVkRXZlbnQgPSBleHBvcnRzLlNwZWVjaFJlY29nbml0aW9uRXZlbnQgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uL0V4cG9ydHMuanNcIik7XG5jbGFzcyBTcGVlY2hSZWNvZ25pdGlvbkV2ZW50IGV4dGVuZHMgRXhwb3J0c19qc18xLlBsYXRmb3JtRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKGV2ZW50TmFtZSwgcmVxdWVzdElkLCBzZXNzaW9uSWQsIGV2ZW50VHlwZSA9IEV4cG9ydHNfanNfMS5FdmVudFR5cGUuSW5mbykge1xuICAgICAgICBzdXBlcihldmVudE5hbWUsIGV2ZW50VHlwZSk7XG4gICAgICAgIHRoaXMucHJpdlJlcXVlc3RJZCA9IHJlcXVlc3RJZDtcbiAgICAgICAgdGhpcy5wcml2U2Vzc2lvbklkID0gc2Vzc2lvbklkO1xuICAgIH1cbiAgICBnZXQgcmVxdWVzdElkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVxdWVzdElkO1xuICAgIH1cbiAgICBnZXQgc2Vzc2lvbklkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U2Vzc2lvbklkO1xuICAgIH1cbn1cbmV4cG9ydHMuU3BlZWNoUmVjb2duaXRpb25FdmVudCA9IFNwZWVjaFJlY29nbml0aW9uRXZlbnQ7XG5jbGFzcyBSZWNvZ25pdGlvblRyaWdnZXJlZEV2ZW50IGV4dGVuZHMgU3BlZWNoUmVjb2duaXRpb25FdmVudCB7XG4gICAgY29uc3RydWN0b3IocmVxdWVzdElkLCBzZXNzaW9uSWQsIGF1ZGlvU291cmNlSWQsIGF1ZGlvTm9kZUlkKSB7XG4gICAgICAgIHN1cGVyKFwiUmVjb2duaXRpb25UcmlnZ2VyZWRFdmVudFwiLCByZXF1ZXN0SWQsIHNlc3Npb25JZCk7XG4gICAgICAgIHRoaXMucHJpdkF1ZGlvU291cmNlSWQgPSBhdWRpb1NvdXJjZUlkO1xuICAgICAgICB0aGlzLnByaXZBdWRpb05vZGVJZCA9IGF1ZGlvTm9kZUlkO1xuICAgIH1cbiAgICBnZXQgYXVkaW9Tb3VyY2VJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkF1ZGlvU291cmNlSWQ7XG4gICAgfVxuICAgIGdldCBhdWRpb05vZGVJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkF1ZGlvTm9kZUlkO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVjb2duaXRpb25UcmlnZ2VyZWRFdmVudCA9IFJlY29nbml0aW9uVHJpZ2dlcmVkRXZlbnQ7XG5jbGFzcyBMaXN0ZW5pbmdTdGFydGVkRXZlbnQgZXh0ZW5kcyBTcGVlY2hSZWNvZ25pdGlvbkV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihyZXF1ZXN0SWQsIHNlc3Npb25JZCwgYXVkaW9Tb3VyY2VJZCwgYXVkaW9Ob2RlSWQpIHtcbiAgICAgICAgc3VwZXIoXCJMaXN0ZW5pbmdTdGFydGVkRXZlbnRcIiwgcmVxdWVzdElkLCBzZXNzaW9uSWQpO1xuICAgICAgICB0aGlzLnByaXZBdWRpb1NvdXJjZUlkID0gYXVkaW9Tb3VyY2VJZDtcbiAgICAgICAgdGhpcy5wcml2QXVkaW9Ob2RlSWQgPSBhdWRpb05vZGVJZDtcbiAgICB9XG4gICAgZ2V0IGF1ZGlvU291cmNlSWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZBdWRpb1NvdXJjZUlkO1xuICAgIH1cbiAgICBnZXQgYXVkaW9Ob2RlSWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZBdWRpb05vZGVJZDtcbiAgICB9XG59XG5leHBvcnRzLkxpc3RlbmluZ1N0YXJ0ZWRFdmVudCA9IExpc3RlbmluZ1N0YXJ0ZWRFdmVudDtcbmNsYXNzIENvbm5lY3RpbmdUb1NlcnZpY2VFdmVudCBleHRlbmRzIFNwZWVjaFJlY29nbml0aW9uRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKHJlcXVlc3RJZCwgYXV0aEZldGNoRXZlbnRpZCwgc2Vzc2lvbklkKSB7XG4gICAgICAgIHN1cGVyKFwiQ29ubmVjdGluZ1RvU2VydmljZUV2ZW50XCIsIHJlcXVlc3RJZCwgc2Vzc2lvbklkKTtcbiAgICAgICAgdGhpcy5wcml2QXV0aEZldGNoRXZlbnRpZCA9IGF1dGhGZXRjaEV2ZW50aWQ7XG4gICAgfVxuICAgIGdldCBhdXRoRmV0Y2hFdmVudGlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2QXV0aEZldGNoRXZlbnRpZDtcbiAgICB9XG59XG5leHBvcnRzLkNvbm5lY3RpbmdUb1NlcnZpY2VFdmVudCA9IENvbm5lY3RpbmdUb1NlcnZpY2VFdmVudDtcbmNsYXNzIFJlY29nbml0aW9uU3RhcnRlZEV2ZW50IGV4dGVuZHMgU3BlZWNoUmVjb2duaXRpb25FdmVudCB7XG4gICAgY29uc3RydWN0b3IocmVxdWVzdElkLCBhdWRpb1NvdXJjZUlkLCBhdWRpb05vZGVJZCwgYXV0aEZldGNoRXZlbnRJZCwgc2Vzc2lvbklkKSB7XG4gICAgICAgIHN1cGVyKFwiUmVjb2duaXRpb25TdGFydGVkRXZlbnRcIiwgcmVxdWVzdElkLCBzZXNzaW9uSWQpO1xuICAgICAgICB0aGlzLnByaXZBdWRpb1NvdXJjZUlkID0gYXVkaW9Tb3VyY2VJZDtcbiAgICAgICAgdGhpcy5wcml2QXVkaW9Ob2RlSWQgPSBhdWRpb05vZGVJZDtcbiAgICAgICAgdGhpcy5wcml2QXV0aEZldGNoRXZlbnRJZCA9IGF1dGhGZXRjaEV2ZW50SWQ7XG4gICAgfVxuICAgIGdldCBhdWRpb1NvdXJjZUlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2QXVkaW9Tb3VyY2VJZDtcbiAgICB9XG4gICAgZ2V0IGF1ZGlvTm9kZUlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2QXVkaW9Ob2RlSWQ7XG4gICAgfVxuICAgIGdldCBhdXRoRmV0Y2hFdmVudElkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2QXV0aEZldGNoRXZlbnRJZDtcbiAgICB9XG59XG5leHBvcnRzLlJlY29nbml0aW9uU3RhcnRlZEV2ZW50ID0gUmVjb2duaXRpb25TdGFydGVkRXZlbnQ7XG52YXIgUmVjb2duaXRpb25Db21wbGV0aW9uU3RhdHVzO1xuKGZ1bmN0aW9uIChSZWNvZ25pdGlvbkNvbXBsZXRpb25TdGF0dXMpIHtcbiAgICBSZWNvZ25pdGlvbkNvbXBsZXRpb25TdGF0dXNbUmVjb2duaXRpb25Db21wbGV0aW9uU3RhdHVzW1wiU3VjY2Vzc1wiXSA9IDBdID0gXCJTdWNjZXNzXCI7XG4gICAgUmVjb2duaXRpb25Db21wbGV0aW9uU3RhdHVzW1JlY29nbml0aW9uQ29tcGxldGlvblN0YXR1c1tcIkF1ZGlvU291cmNlRXJyb3JcIl0gPSAxXSA9IFwiQXVkaW9Tb3VyY2VFcnJvclwiO1xuICAgIFJlY29nbml0aW9uQ29tcGxldGlvblN0YXR1c1tSZWNvZ25pdGlvbkNvbXBsZXRpb25TdGF0dXNbXCJBdWRpb1NvdXJjZVRpbWVvdXRcIl0gPSAyXSA9IFwiQXVkaW9Tb3VyY2VUaW1lb3V0XCI7XG4gICAgUmVjb2duaXRpb25Db21wbGV0aW9uU3RhdHVzW1JlY29nbml0aW9uQ29tcGxldGlvblN0YXR1c1tcIkF1dGhUb2tlbkZldGNoRXJyb3JcIl0gPSAzXSA9IFwiQXV0aFRva2VuRmV0Y2hFcnJvclwiO1xuICAgIFJlY29nbml0aW9uQ29tcGxldGlvblN0YXR1c1tSZWNvZ25pdGlvbkNvbXBsZXRpb25TdGF0dXNbXCJBdXRoVG9rZW5GZXRjaFRpbWVvdXRcIl0gPSA0XSA9IFwiQXV0aFRva2VuRmV0Y2hUaW1lb3V0XCI7XG4gICAgUmVjb2duaXRpb25Db21wbGV0aW9uU3RhdHVzW1JlY29nbml0aW9uQ29tcGxldGlvblN0YXR1c1tcIlVuQXV0aG9yaXplZFwiXSA9IDVdID0gXCJVbkF1dGhvcml6ZWRcIjtcbiAgICBSZWNvZ25pdGlvbkNvbXBsZXRpb25TdGF0dXNbUmVjb2duaXRpb25Db21wbGV0aW9uU3RhdHVzW1wiQ29ubmVjdFRpbWVvdXRcIl0gPSA2XSA9IFwiQ29ubmVjdFRpbWVvdXRcIjtcbiAgICBSZWNvZ25pdGlvbkNvbXBsZXRpb25TdGF0dXNbUmVjb2duaXRpb25Db21wbGV0aW9uU3RhdHVzW1wiQ29ubmVjdEVycm9yXCJdID0gN10gPSBcIkNvbm5lY3RFcnJvclwiO1xuICAgIFJlY29nbml0aW9uQ29tcGxldGlvblN0YXR1c1tSZWNvZ25pdGlvbkNvbXBsZXRpb25TdGF0dXNbXCJDbGllbnRSZWNvZ25pdGlvbkFjdGl2aXR5VGltZW91dFwiXSA9IDhdID0gXCJDbGllbnRSZWNvZ25pdGlvbkFjdGl2aXR5VGltZW91dFwiO1xuICAgIFJlY29nbml0aW9uQ29tcGxldGlvblN0YXR1c1tSZWNvZ25pdGlvbkNvbXBsZXRpb25TdGF0dXNbXCJVbmtub3duRXJyb3JcIl0gPSA5XSA9IFwiVW5rbm93bkVycm9yXCI7XG59KShSZWNvZ25pdGlvbkNvbXBsZXRpb25TdGF0dXMgPSBleHBvcnRzLlJlY29nbml0aW9uQ29tcGxldGlvblN0YXR1cyB8fCAoZXhwb3J0cy5SZWNvZ25pdGlvbkNvbXBsZXRpb25TdGF0dXMgPSB7fSkpO1xuY2xhc3MgUmVjb2duaXRpb25FbmRlZEV2ZW50IGV4dGVuZHMgU3BlZWNoUmVjb2duaXRpb25FdmVudCB7XG4gICAgY29uc3RydWN0b3IocmVxdWVzdElkLCBhdWRpb1NvdXJjZUlkLCBhdWRpb05vZGVJZCwgYXV0aEZldGNoRXZlbnRJZCwgc2Vzc2lvbklkLCBzZXJ2aWNlVGFnLCBzdGF0dXMsIGVycm9yKSB7XG4gICAgICAgIHN1cGVyKFwiUmVjb2duaXRpb25FbmRlZEV2ZW50XCIsIHJlcXVlc3RJZCwgc2Vzc2lvbklkLCBzdGF0dXMgPT09IFJlY29nbml0aW9uQ29tcGxldGlvblN0YXR1cy5TdWNjZXNzID8gRXhwb3J0c19qc18xLkV2ZW50VHlwZS5JbmZvIDogRXhwb3J0c19qc18xLkV2ZW50VHlwZS5FcnJvcik7XG4gICAgICAgIHRoaXMucHJpdkF1ZGlvU291cmNlSWQgPSBhdWRpb1NvdXJjZUlkO1xuICAgICAgICB0aGlzLnByaXZBdWRpb05vZGVJZCA9IGF1ZGlvTm9kZUlkO1xuICAgICAgICB0aGlzLnByaXZBdXRoRmV0Y2hFdmVudElkID0gYXV0aEZldGNoRXZlbnRJZDtcbiAgICAgICAgdGhpcy5wcml2U3RhdHVzID0gc3RhdHVzO1xuICAgICAgICB0aGlzLnByaXZFcnJvciA9IGVycm9yO1xuICAgICAgICB0aGlzLnByaXZTZXJ2aWNlVGFnID0gc2VydmljZVRhZztcbiAgICB9XG4gICAgZ2V0IGF1ZGlvU291cmNlSWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZBdWRpb1NvdXJjZUlkO1xuICAgIH1cbiAgICBnZXQgYXVkaW9Ob2RlSWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZBdWRpb05vZGVJZDtcbiAgICB9XG4gICAgZ2V0IGF1dGhGZXRjaEV2ZW50SWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZBdXRoRmV0Y2hFdmVudElkO1xuICAgIH1cbiAgICBnZXQgc2VydmljZVRhZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNlcnZpY2VUYWc7XG4gICAgfVxuICAgIGdldCBzdGF0dXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTdGF0dXM7XG4gICAgfVxuICAgIGdldCBlcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkVycm9yO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVjb2duaXRpb25FbmRlZEV2ZW50ID0gUmVjb2duaXRpb25FbmRlZEV2ZW50O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWNvZ25pdGlvbkV2ZW50cy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognitionEvents.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognizerConfig.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognizerConfig.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RecognizerConfig = exports.SpeechResultFormat = exports.RecognitionMode = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nvar RecognitionMode;\n(function (RecognitionMode) {\n    RecognitionMode[RecognitionMode[\"Interactive\"] = 0] = \"Interactive\";\n    RecognitionMode[RecognitionMode[\"Conversation\"] = 1] = \"Conversation\";\n    RecognitionMode[RecognitionMode[\"Dictation\"] = 2] = \"Dictation\";\n})(RecognitionMode = exports.RecognitionMode || (exports.RecognitionMode = {}));\nvar SpeechResultFormat;\n(function (SpeechResultFormat) {\n    SpeechResultFormat[SpeechResultFormat[\"Simple\"] = 0] = \"Simple\";\n    SpeechResultFormat[SpeechResultFormat[\"Detailed\"] = 1] = \"Detailed\";\n})(SpeechResultFormat = exports.SpeechResultFormat || (exports.SpeechResultFormat = {}));\nclass RecognizerConfig {\n    constructor(speechServiceConfig, parameters) {\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new Exports_js_2.SpeechServiceConfig(new Exports_js_2.Context(null));\n        this.privParameters = parameters;\n        this.privMaxRetryCount = parseInt(parameters.getProperty(\"SPEECH-Error-MaxRetryCount\", \"4\"), 10);\n        this.privLanguageIdMode = parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_LanguageIdMode, undefined);\n        this.privEnableSpeakerId = false;\n    }\n    get parameters() {\n        return this.privParameters;\n    }\n    get recognitionMode() {\n        return this.privRecognitionMode;\n    }\n    set recognitionMode(value) {\n        this.privRecognitionMode = value;\n        this.privRecognitionActivityTimeout = value === RecognitionMode.Interactive ? 8000 : 25000;\n        this.privSpeechServiceConfig.Recognition = RecognitionMode[value];\n    }\n    get SpeechServiceConfig() {\n        return this.privSpeechServiceConfig;\n    }\n    get recognitionActivityTimeout() {\n        return this.privRecognitionActivityTimeout;\n    }\n    get isContinuousRecognition() {\n        return this.privRecognitionMode !== RecognitionMode.Interactive;\n    }\n    get languageIdMode() {\n        return this.privLanguageIdMode;\n    }\n    get autoDetectSourceLanguages() {\n        return this.parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined);\n    }\n    get recognitionEndpointVersion() {\n        return this.parameters.getProperty(Exports_js_1.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, undefined);\n    }\n    get sourceLanguageModels() {\n        const models = [];\n        let modelsExist = false;\n        if (this.autoDetectSourceLanguages !== undefined) {\n            for (const language of this.autoDetectSourceLanguages.split(\",\")) {\n                const customProperty = language + Exports_js_1.PropertyId.SpeechServiceConnection_EndpointId.toString();\n                const modelId = this.parameters.getProperty(customProperty, undefined);\n                if (modelId !== undefined) {\n                    models.push({ language, endpoint: modelId });\n                    modelsExist = true;\n                }\n                else {\n                    models.push({ language, endpoint: \"\" });\n                }\n            }\n        }\n        return modelsExist ? models : undefined;\n    }\n    get maxRetryCount() {\n        return this.privMaxRetryCount;\n    }\n    get isSpeakerDiarizationEnabled() {\n        return this.privEnableSpeakerId;\n    }\n    set isSpeakerDiarizationEnabled(value) {\n        this.privEnableSpeakerId = value;\n    }\n}\nexports.RecognizerConfig = RecognizerConfig;\n\n//# sourceMappingURL=RecognizerConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvUmVjb2duaXplckNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsMEJBQTBCLEdBQUcsdUJBQXVCO0FBQy9FO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMscUhBQW1CO0FBQ2hELHFCQUFxQixtQkFBTyxDQUFDLDBIQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdEQUFnRCx1QkFBdUIsS0FBSztBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0RBQXNELDBCQUEwQixLQUFLO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyw2QkFBNkI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHdCQUF3QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7O0FBRXhCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvUmVjb2duaXplckNvbmZpZy5qcz80MzZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlY29nbml6ZXJDb25maWcgPSBleHBvcnRzLlNwZWVjaFJlc3VsdEZvcm1hdCA9IGV4cG9ydHMuUmVjb2duaXRpb25Nb2RlID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgbWF4LWNsYXNzZXMtcGVyLWZpbGUgKi9cbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi9zZGsvRXhwb3J0cy5qc1wiKTtcbmNvbnN0IEV4cG9ydHNfanNfMiA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG52YXIgUmVjb2duaXRpb25Nb2RlO1xuKGZ1bmN0aW9uIChSZWNvZ25pdGlvbk1vZGUpIHtcbiAgICBSZWNvZ25pdGlvbk1vZGVbUmVjb2duaXRpb25Nb2RlW1wiSW50ZXJhY3RpdmVcIl0gPSAwXSA9IFwiSW50ZXJhY3RpdmVcIjtcbiAgICBSZWNvZ25pdGlvbk1vZGVbUmVjb2duaXRpb25Nb2RlW1wiQ29udmVyc2F0aW9uXCJdID0gMV0gPSBcIkNvbnZlcnNhdGlvblwiO1xuICAgIFJlY29nbml0aW9uTW9kZVtSZWNvZ25pdGlvbk1vZGVbXCJEaWN0YXRpb25cIl0gPSAyXSA9IFwiRGljdGF0aW9uXCI7XG59KShSZWNvZ25pdGlvbk1vZGUgPSBleHBvcnRzLlJlY29nbml0aW9uTW9kZSB8fCAoZXhwb3J0cy5SZWNvZ25pdGlvbk1vZGUgPSB7fSkpO1xudmFyIFNwZWVjaFJlc3VsdEZvcm1hdDtcbihmdW5jdGlvbiAoU3BlZWNoUmVzdWx0Rm9ybWF0KSB7XG4gICAgU3BlZWNoUmVzdWx0Rm9ybWF0W1NwZWVjaFJlc3VsdEZvcm1hdFtcIlNpbXBsZVwiXSA9IDBdID0gXCJTaW1wbGVcIjtcbiAgICBTcGVlY2hSZXN1bHRGb3JtYXRbU3BlZWNoUmVzdWx0Rm9ybWF0W1wiRGV0YWlsZWRcIl0gPSAxXSA9IFwiRGV0YWlsZWRcIjtcbn0pKFNwZWVjaFJlc3VsdEZvcm1hdCA9IGV4cG9ydHMuU3BlZWNoUmVzdWx0Rm9ybWF0IHx8IChleHBvcnRzLlNwZWVjaFJlc3VsdEZvcm1hdCA9IHt9KSk7XG5jbGFzcyBSZWNvZ25pemVyQ29uZmlnIHtcbiAgICBjb25zdHJ1Y3RvcihzcGVlY2hTZXJ2aWNlQ29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgICAgIHRoaXMucHJpdlNwZWVjaFNlcnZpY2VDb25maWcgPSBzcGVlY2hTZXJ2aWNlQ29uZmlnID8gc3BlZWNoU2VydmljZUNvbmZpZyA6IG5ldyBFeHBvcnRzX2pzXzIuU3BlZWNoU2VydmljZUNvbmZpZyhuZXcgRXhwb3J0c19qc18yLkNvbnRleHQobnVsbCkpO1xuICAgICAgICB0aGlzLnByaXZQYXJhbWV0ZXJzID0gcGFyYW1ldGVycztcbiAgICAgICAgdGhpcy5wcml2TWF4UmV0cnlDb3VudCA9IHBhcnNlSW50KHBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoXCJTUEVFQ0gtRXJyb3ItTWF4UmV0cnlDb3VudFwiLCBcIjRcIiksIDEwKTtcbiAgICAgICAgdGhpcy5wcml2TGFuZ3VhZ2VJZE1vZGUgPSBwYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0xhbmd1YWdlSWRNb2RlLCB1bmRlZmluZWQpO1xuICAgICAgICB0aGlzLnByaXZFbmFibGVTcGVha2VySWQgPSBmYWxzZTtcbiAgICB9XG4gICAgZ2V0IHBhcmFtZXRlcnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQYXJhbWV0ZXJzO1xuICAgIH1cbiAgICBnZXQgcmVjb2duaXRpb25Nb2RlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVjb2duaXRpb25Nb2RlO1xuICAgIH1cbiAgICBzZXQgcmVjb2duaXRpb25Nb2RlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMucHJpdlJlY29nbml0aW9uTW9kZSA9IHZhbHVlO1xuICAgICAgICB0aGlzLnByaXZSZWNvZ25pdGlvbkFjdGl2aXR5VGltZW91dCA9IHZhbHVlID09PSBSZWNvZ25pdGlvbk1vZGUuSW50ZXJhY3RpdmUgPyA4MDAwIDogMjUwMDA7XG4gICAgICAgIHRoaXMucHJpdlNwZWVjaFNlcnZpY2VDb25maWcuUmVjb2duaXRpb24gPSBSZWNvZ25pdGlvbk1vZGVbdmFsdWVdO1xuICAgIH1cbiAgICBnZXQgU3BlZWNoU2VydmljZUNvbmZpZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNwZWVjaFNlcnZpY2VDb25maWc7XG4gICAgfVxuICAgIGdldCByZWNvZ25pdGlvbkFjdGl2aXR5VGltZW91dCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlJlY29nbml0aW9uQWN0aXZpdHlUaW1lb3V0O1xuICAgIH1cbiAgICBnZXQgaXNDb250aW51b3VzUmVjb2duaXRpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZSZWNvZ25pdGlvbk1vZGUgIT09IFJlY29nbml0aW9uTW9kZS5JbnRlcmFjdGl2ZTtcbiAgICB9XG4gICAgZ2V0IGxhbmd1YWdlSWRNb2RlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2TGFuZ3VhZ2VJZE1vZGU7XG4gICAgfVxuICAgIGdldCBhdXRvRGV0ZWN0U291cmNlTGFuZ3VhZ2VzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0F1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZXMsIHVuZGVmaW5lZCk7XG4gICAgfVxuICAgIGdldCByZWNvZ25pdGlvbkVuZHBvaW50VmVyc2lvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzEuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9SZWNvZ25pdGlvbkVuZHBvaW50VmVyc2lvbiwgdW5kZWZpbmVkKTtcbiAgICB9XG4gICAgZ2V0IHNvdXJjZUxhbmd1YWdlTW9kZWxzKCkge1xuICAgICAgICBjb25zdCBtb2RlbHMgPSBbXTtcbiAgICAgICAgbGV0IG1vZGVsc0V4aXN0ID0gZmFsc2U7XG4gICAgICAgIGlmICh0aGlzLmF1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZXMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBsYW5ndWFnZSBvZiB0aGlzLmF1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZXMuc3BsaXQoXCIsXCIpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY3VzdG9tUHJvcGVydHkgPSBsYW5ndWFnZSArIEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0VuZHBvaW50SWQudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBtb2RlbElkID0gdGhpcy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KGN1c3RvbVByb3BlcnR5LCB1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgIGlmIChtb2RlbElkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgbW9kZWxzLnB1c2goeyBsYW5ndWFnZSwgZW5kcG9pbnQ6IG1vZGVsSWQgfSk7XG4gICAgICAgICAgICAgICAgICAgIG1vZGVsc0V4aXN0ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG1vZGVscy5wdXNoKHsgbGFuZ3VhZ2UsIGVuZHBvaW50OiBcIlwiIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbW9kZWxzRXhpc3QgPyBtb2RlbHMgOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGdldCBtYXhSZXRyeUNvdW50KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2TWF4UmV0cnlDb3VudDtcbiAgICB9XG4gICAgZ2V0IGlzU3BlYWtlckRpYXJpemF0aW9uRW5hYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkVuYWJsZVNwZWFrZXJJZDtcbiAgICB9XG4gICAgc2V0IGlzU3BlYWtlckRpYXJpemF0aW9uRW5hYmxlZCh2YWx1ZSkge1xuICAgICAgICB0aGlzLnByaXZFbmFibGVTcGVha2VySWQgPSB2YWx1ZTtcbiAgICB9XG59XG5leHBvcnRzLlJlY29nbml6ZXJDb25maWcgPSBSZWNvZ25pemVyQ29uZmlnO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWNvZ25pemVyQ29uZmlnLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognizerConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RequestSession.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RequestSession.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RequestSession = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst RecognitionEvents_js_1 = __webpack_require__(/*! ./RecognitionEvents.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognitionEvents.js\");\nconst ServiceTelemetryListener_Internal_js_1 = __webpack_require__(/*! ./ServiceTelemetryListener.Internal.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceTelemetryListener.Internal.js\");\nclass RequestSession {\n    constructor(audioSourceId) {\n        this.privIsDisposed = false;\n        this.privDetachables = new Array();\n        this.privIsAudioNodeDetached = false;\n        this.privIsRecognizing = false;\n        this.privIsSpeechEnded = false;\n        this.privTurnStartAudioOffset = 0;\n        this.privLastRecoOffset = 0;\n        this.privHypothesisReceived = false;\n        this.privBytesSent = 0;\n        this.privRecognitionBytesSent = 0;\n        this.privRecogNumber = 0;\n        this.privInTurn = false;\n        this.privConnectionAttempts = 0;\n        this.privAudioSourceId = audioSourceId;\n        this.privRequestId = Exports_js_1.createNoDashGuid();\n        this.privAudioNodeId = Exports_js_1.createNoDashGuid();\n        this.privTurnDeferral = new Exports_js_1.Deferred();\n        // We're not in a turn, so resolve.\n        this.privTurnDeferral.resolve();\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n    get turnCompletionPromise() {\n        return this.privTurnDeferral.promise;\n    }\n    get isSpeechEnded() {\n        return this.privIsSpeechEnded;\n    }\n    get isRecognizing() {\n        return this.privIsRecognizing;\n    }\n    get currentTurnAudioOffset() {\n        return this.privTurnStartAudioOffset;\n    }\n    get recogNumber() {\n        return this.privRecogNumber;\n    }\n    get numConnectionAttempts() {\n        return this.privConnectionAttempts;\n    }\n    // The number of bytes sent for the current connection.\n    // Counter is reset to 0 each time a connection is established.\n    get bytesSent() {\n        return this.privBytesSent;\n    }\n    // The number of bytes sent for the current recognition.\n    // Counter is reset to 0 each time recognition is started.\n    get recognitionBytesSent() {\n        return this.privRecognitionBytesSent;\n    }\n    listenForServiceTelemetry(eventSource) {\n        if (!!this.privServiceTelemetryListener) {\n            this.privDetachables.push(eventSource.attachListener(this.privServiceTelemetryListener));\n        }\n    }\n    startNewRecognition() {\n        this.privRecognitionBytesSent = 0;\n        this.privIsSpeechEnded = false;\n        this.privIsRecognizing = true;\n        this.privTurnStartAudioOffset = 0;\n        this.privLastRecoOffset = 0;\n        this.privRecogNumber++;\n        this.privServiceTelemetryListener = new ServiceTelemetryListener_Internal_js_1.ServiceTelemetryListener(this.privRequestId, this.privAudioSourceId, this.privAudioNodeId);\n        this.onEvent(new RecognitionEvents_js_1.RecognitionTriggeredEvent(this.requestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\n    }\n    async onAudioSourceAttachCompleted(audioNode, isError) {\n        this.privAudioNode = audioNode;\n        this.privIsAudioNodeDetached = false;\n        if (isError) {\n            await this.onComplete();\n        }\n        else {\n            this.onEvent(new RecognitionEvents_js_1.ListeningStartedEvent(this.privRequestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\n        }\n    }\n    onPreConnectionStart(authFetchEventId, connectionId) {\n        this.privAuthFetchEventId = authFetchEventId;\n        this.privSessionId = connectionId;\n        this.onEvent(new RecognitionEvents_js_1.ConnectingToServiceEvent(this.privRequestId, this.privAuthFetchEventId, this.privSessionId));\n    }\n    async onAuthCompleted(isError) {\n        if (isError) {\n            await this.onComplete();\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async onConnectionEstablishCompleted(statusCode, reason) {\n        if (statusCode === 200) {\n            this.onEvent(new RecognitionEvents_js_1.RecognitionStartedEvent(this.requestId, this.privAudioSourceId, this.privAudioNodeId, this.privAuthFetchEventId, this.privSessionId));\n            if (!!this.privAudioNode) {\n                this.privAudioNode.replay();\n            }\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\n            this.privBytesSent = 0;\n            return;\n        }\n        else if (statusCode === 403) {\n            await this.onComplete();\n        }\n    }\n    async onServiceTurnEndResponse(continuousRecognition) {\n        this.privTurnDeferral.resolve();\n        if (!continuousRecognition || this.isSpeechEnded) {\n            await this.onComplete();\n            this.privInTurn = false;\n        }\n        else {\n            // Start a new request set.\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\n            this.privAudioNode.replay();\n        }\n    }\n    onSpeechContext() {\n        this.privRequestId = Exports_js_1.createNoDashGuid();\n    }\n    onServiceTurnStartResponse() {\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\n            // What? How are we starting a turn with another not done?\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            this.privTurnDeferral.promise.then().catch(() => { });\n        }\n        this.privInTurn = true;\n        this.privTurnDeferral = new Exports_js_1.Deferred();\n    }\n    onHypothesis(offset) {\n        if (!this.privHypothesisReceived) {\n            this.privHypothesisReceived = true;\n            this.privServiceTelemetryListener.hypothesisReceived(this.privAudioNode.findTimeAtOffset(offset));\n        }\n    }\n    onPhraseRecognized(offset) {\n        this.privServiceTelemetryListener.phraseReceived(this.privAudioNode.findTimeAtOffset(offset));\n        this.onServiceRecognized(offset);\n    }\n    onServiceRecognized(offset) {\n        this.privLastRecoOffset = offset;\n        this.privHypothesisReceived = false;\n        this.privAudioNode.shrinkBuffers(offset);\n        this.privConnectionAttempts = 0;\n    }\n    onAudioSent(bytesSent) {\n        this.privBytesSent += bytesSent;\n        this.privRecognitionBytesSent += bytesSent;\n    }\n    onRetryConnection() {\n        this.privConnectionAttempts++;\n    }\n    async dispose() {\n        if (!this.privIsDisposed) {\n            // we should have completed by now. If we did not its an unknown error.\n            this.privIsDisposed = true;\n            for (const detachable of this.privDetachables) {\n                await detachable.detach();\n            }\n            if (!!this.privServiceTelemetryListener) {\n                this.privServiceTelemetryListener.dispose();\n            }\n            this.privIsRecognizing = false;\n        }\n    }\n    getTelemetry() {\n        if (this.privServiceTelemetryListener.hasTelemetry) {\n            return this.privServiceTelemetryListener.getTelemetry();\n        }\n        else {\n            return null;\n        }\n    }\n    async onStopRecognizing() {\n        await this.onComplete();\n    }\n    // Should be called with the audioNode for this session has indicated that it is out of speech.\n    onSpeechEnded() {\n        this.privIsSpeechEnded = true;\n    }\n    onEvent(event) {\n        if (!!this.privServiceTelemetryListener) {\n            this.privServiceTelemetryListener.onEvent(event);\n        }\n        Exports_js_1.Events.instance.onEvent(event);\n    }\n    async onComplete() {\n        if (!!this.privIsRecognizing) {\n            this.privIsRecognizing = false;\n            await this.detachAudioNode();\n        }\n    }\n    async detachAudioNode() {\n        if (!this.privIsAudioNodeDetached) {\n            this.privIsAudioNodeDetached = true;\n            if (this.privAudioNode) {\n                await this.privAudioNode.detach();\n            }\n        }\n    }\n}\nexports.RequestSession = RequestSession;\n\n//# sourceMappingURL=RequestSession.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RequestSession.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/ActivityResponsePayload.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/ActivityResponsePayload.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// response\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MessageDataStreamType = exports.ActivityPayloadResponse = void 0;\nclass ActivityPayloadResponse {\n    constructor(json) {\n        this.privActivityResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new ActivityPayloadResponse(json);\n    }\n    get conversationId() {\n        return this.privActivityResponse.conversationId;\n    }\n    get messageDataStreamType() {\n        return this.privActivityResponse.messageDataStreamType;\n    }\n    get messagePayload() {\n        return this.privActivityResponse.messagePayload;\n    }\n    get version() {\n        return this.privActivityResponse.version;\n    }\n}\nexports.ActivityPayloadResponse = ActivityPayloadResponse;\nvar MessageDataStreamType;\n(function (MessageDataStreamType) {\n    MessageDataStreamType[MessageDataStreamType[\"None\"] = 0] = \"None\";\n    MessageDataStreamType[MessageDataStreamType[\"TextToSpeechAudio\"] = 1] = \"TextToSpeechAudio\";\n})(MessageDataStreamType = exports.MessageDataStreamType || (exports.MessageDataStreamType = {}));\n\n//# sourceMappingURL=ActivityResponsePayload.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL0FjdGl2aXR5UmVzcG9uc2VQYXlsb2FkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QixHQUFHLCtCQUErQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0REFBNEQsNkJBQTZCLEtBQUs7O0FBRS9GIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL0FjdGl2aXR5UmVzcG9uc2VQYXlsb2FkLmpzPzVkNmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8vIHJlc3BvbnNlXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1lc3NhZ2VEYXRhU3RyZWFtVHlwZSA9IGV4cG9ydHMuQWN0aXZpdHlQYXlsb2FkUmVzcG9uc2UgPSB2b2lkIDA7XG5jbGFzcyBBY3Rpdml0eVBheWxvYWRSZXNwb25zZSB7XG4gICAgY29uc3RydWN0b3IoanNvbikge1xuICAgICAgICB0aGlzLnByaXZBY3Rpdml0eVJlc3BvbnNlID0gSlNPTi5wYXJzZShqc29uKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21KU09OKGpzb24pIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBY3Rpdml0eVBheWxvYWRSZXNwb25zZShqc29uKTtcbiAgICB9XG4gICAgZ2V0IGNvbnZlcnNhdGlvbklkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2QWN0aXZpdHlSZXNwb25zZS5jb252ZXJzYXRpb25JZDtcbiAgICB9XG4gICAgZ2V0IG1lc3NhZ2VEYXRhU3RyZWFtVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkFjdGl2aXR5UmVzcG9uc2UubWVzc2FnZURhdGFTdHJlYW1UeXBlO1xuICAgIH1cbiAgICBnZXQgbWVzc2FnZVBheWxvYWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZBY3Rpdml0eVJlc3BvbnNlLm1lc3NhZ2VQYXlsb2FkO1xuICAgIH1cbiAgICBnZXQgdmVyc2lvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkFjdGl2aXR5UmVzcG9uc2UudmVyc2lvbjtcbiAgICB9XG59XG5leHBvcnRzLkFjdGl2aXR5UGF5bG9hZFJlc3BvbnNlID0gQWN0aXZpdHlQYXlsb2FkUmVzcG9uc2U7XG52YXIgTWVzc2FnZURhdGFTdHJlYW1UeXBlO1xuKGZ1bmN0aW9uIChNZXNzYWdlRGF0YVN0cmVhbVR5cGUpIHtcbiAgICBNZXNzYWdlRGF0YVN0cmVhbVR5cGVbTWVzc2FnZURhdGFTdHJlYW1UeXBlW1wiTm9uZVwiXSA9IDBdID0gXCJOb25lXCI7XG4gICAgTWVzc2FnZURhdGFTdHJlYW1UeXBlW01lc3NhZ2VEYXRhU3RyZWFtVHlwZVtcIlRleHRUb1NwZWVjaEF1ZGlvXCJdID0gMV0gPSBcIlRleHRUb1NwZWVjaEF1ZGlvXCI7XG59KShNZXNzYWdlRGF0YVN0cmVhbVR5cGUgPSBleHBvcnRzLk1lc3NhZ2VEYXRhU3RyZWFtVHlwZSB8fCAoZXhwb3J0cy5NZXNzYWdlRGF0YVN0cmVhbVR5cGUgPSB7fSkpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BY3Rpdml0eVJlc3BvbnNlUGF5bG9hZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/ActivityResponsePayload.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/DetailedSpeechPhrase.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/DetailedSpeechPhrase.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DetailedSpeechPhrase = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nclass DetailedSpeechPhrase {\n    constructor(json, baseOffset) {\n        this.privDetailedSpeechPhrase = JSON.parse(json);\n        this.privDetailedSpeechPhrase.RecognitionStatus = this.mapRecognitionStatus(this.privDetailedSpeechPhrase.RecognitionStatus);\n        this.updateOffsets(baseOffset);\n    }\n    static fromJSON(json, baseOffset) {\n        return new DetailedSpeechPhrase(json, baseOffset);\n    }\n    updateOffsets(baseOffset) {\n        this.privDetailedSpeechPhrase.Offset += baseOffset;\n        if (!!this.privDetailedSpeechPhrase.NBest) {\n            for (const phrase of this.privDetailedSpeechPhrase.NBest) {\n                if (!!phrase.Words) {\n                    for (const word of phrase.Words) {\n                        word.Offset += baseOffset;\n                    }\n                }\n                if (!!phrase.DisplayWords) {\n                    for (const word of phrase.DisplayWords) {\n                        word.Offset += baseOffset;\n                    }\n                }\n            }\n        }\n    }\n    asJson() {\n        const jsonObj = { ...this.privDetailedSpeechPhrase };\n        // Convert the enum value to its string representation for serialization purposes.\n        return JSON.stringify({\n            ...jsonObj,\n            RecognitionStatus: Exports_js_1.RecognitionStatus[jsonObj.RecognitionStatus]\n        });\n    }\n    get RecognitionStatus() {\n        return this.privDetailedSpeechPhrase.RecognitionStatus;\n    }\n    get NBest() {\n        return this.privDetailedSpeechPhrase.NBest;\n    }\n    get Duration() {\n        return this.privDetailedSpeechPhrase.Duration;\n    }\n    get Offset() {\n        return this.privDetailedSpeechPhrase.Offset;\n    }\n    get Language() {\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Language;\n    }\n    get LanguageDetectionConfidence() {\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Confidence;\n    }\n    get Text() {\n        if (!!this.privDetailedSpeechPhrase.NBest && this.privDetailedSpeechPhrase.NBest[0]) {\n            return this.privDetailedSpeechPhrase.NBest[0].Display || this.privDetailedSpeechPhrase.NBest[0].DisplayText;\n        }\n        return this.privDetailedSpeechPhrase.DisplayText;\n    }\n    get SpeakerId() {\n        return this.privDetailedSpeechPhrase.SpeakerId;\n    }\n    mapRecognitionStatus(status) {\n        if (typeof status === \"string\") {\n            return Exports_js_1.RecognitionStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n}\nexports.DetailedSpeechPhrase = DetailedSpeechPhrase;\n\n//# sourceMappingURL=DetailedSpeechPhrase.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL0RldGFpbGVkU3BlZWNoUGhyYXNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUIscUJBQXFCLG1CQUFPLENBQUMsMkhBQWU7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCOztBQUU1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1NlcnZpY2VNZXNzYWdlcy9EZXRhaWxlZFNwZWVjaFBocmFzZS5qcz9iMmIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRldGFpbGVkU3BlZWNoUGhyYXNlID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uL0V4cG9ydHMuanNcIik7XG5jbGFzcyBEZXRhaWxlZFNwZWVjaFBocmFzZSB7XG4gICAgY29uc3RydWN0b3IoanNvbiwgYmFzZU9mZnNldCkge1xuICAgICAgICB0aGlzLnByaXZEZXRhaWxlZFNwZWVjaFBocmFzZSA9IEpTT04ucGFyc2UoanNvbik7XG4gICAgICAgIHRoaXMucHJpdkRldGFpbGVkU3BlZWNoUGhyYXNlLlJlY29nbml0aW9uU3RhdHVzID0gdGhpcy5tYXBSZWNvZ25pdGlvblN0YXR1cyh0aGlzLnByaXZEZXRhaWxlZFNwZWVjaFBocmFzZS5SZWNvZ25pdGlvblN0YXR1cyk7XG4gICAgICAgIHRoaXMudXBkYXRlT2Zmc2V0cyhiYXNlT2Zmc2V0KTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21KU09OKGpzb24sIGJhc2VPZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEZXRhaWxlZFNwZWVjaFBocmFzZShqc29uLCBiYXNlT2Zmc2V0KTtcbiAgICB9XG4gICAgdXBkYXRlT2Zmc2V0cyhiYXNlT2Zmc2V0KSB7XG4gICAgICAgIHRoaXMucHJpdkRldGFpbGVkU3BlZWNoUGhyYXNlLk9mZnNldCArPSBiYXNlT2Zmc2V0O1xuICAgICAgICBpZiAoISF0aGlzLnByaXZEZXRhaWxlZFNwZWVjaFBocmFzZS5OQmVzdCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBwaHJhc2Ugb2YgdGhpcy5wcml2RGV0YWlsZWRTcGVlY2hQaHJhc2UuTkJlc3QpIHtcbiAgICAgICAgICAgICAgICBpZiAoISFwaHJhc2UuV29yZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCB3b3JkIG9mIHBocmFzZS5Xb3Jkcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgd29yZC5PZmZzZXQgKz0gYmFzZU9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoISFwaHJhc2UuRGlzcGxheVdvcmRzKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgd29yZCBvZiBwaHJhc2UuRGlzcGxheVdvcmRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3b3JkLk9mZnNldCArPSBiYXNlT2Zmc2V0O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGFzSnNvbigpIHtcbiAgICAgICAgY29uc3QganNvbk9iaiA9IHsgLi4udGhpcy5wcml2RGV0YWlsZWRTcGVlY2hQaHJhc2UgfTtcbiAgICAgICAgLy8gQ29udmVydCB0aGUgZW51bSB2YWx1ZSB0byBpdHMgc3RyaW5nIHJlcHJlc2VudGF0aW9uIGZvciBzZXJpYWxpemF0aW9uIHB1cnBvc2VzLlxuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgLi4uanNvbk9iaixcbiAgICAgICAgICAgIFJlY29nbml0aW9uU3RhdHVzOiBFeHBvcnRzX2pzXzEuUmVjb2duaXRpb25TdGF0dXNbanNvbk9iai5SZWNvZ25pdGlvblN0YXR1c11cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldCBSZWNvZ25pdGlvblN0YXR1cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkRldGFpbGVkU3BlZWNoUGhyYXNlLlJlY29nbml0aW9uU3RhdHVzO1xuICAgIH1cbiAgICBnZXQgTkJlc3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZEZXRhaWxlZFNwZWVjaFBocmFzZS5OQmVzdDtcbiAgICB9XG4gICAgZ2V0IER1cmF0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RGV0YWlsZWRTcGVlY2hQaHJhc2UuRHVyYXRpb247XG4gICAgfVxuICAgIGdldCBPZmZzZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZEZXRhaWxlZFNwZWVjaFBocmFzZS5PZmZzZXQ7XG4gICAgfVxuICAgIGdldCBMYW5ndWFnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkRldGFpbGVkU3BlZWNoUGhyYXNlLlByaW1hcnlMYW5ndWFnZSA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogdGhpcy5wcml2RGV0YWlsZWRTcGVlY2hQaHJhc2UuUHJpbWFyeUxhbmd1YWdlLkxhbmd1YWdlO1xuICAgIH1cbiAgICBnZXQgTGFuZ3VhZ2VEZXRlY3Rpb25Db25maWRlbmNlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RGV0YWlsZWRTcGVlY2hQaHJhc2UuUHJpbWFyeUxhbmd1YWdlID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiB0aGlzLnByaXZEZXRhaWxlZFNwZWVjaFBocmFzZS5QcmltYXJ5TGFuZ3VhZ2UuQ29uZmlkZW5jZTtcbiAgICB9XG4gICAgZ2V0IFRleHQoKSB7XG4gICAgICAgIGlmICghIXRoaXMucHJpdkRldGFpbGVkU3BlZWNoUGhyYXNlLk5CZXN0ICYmIHRoaXMucHJpdkRldGFpbGVkU3BlZWNoUGhyYXNlLk5CZXN0WzBdKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wcml2RGV0YWlsZWRTcGVlY2hQaHJhc2UuTkJlc3RbMF0uRGlzcGxheSB8fCB0aGlzLnByaXZEZXRhaWxlZFNwZWVjaFBocmFzZS5OQmVzdFswXS5EaXNwbGF5VGV4dDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5wcml2RGV0YWlsZWRTcGVlY2hQaHJhc2UuRGlzcGxheVRleHQ7XG4gICAgfVxuICAgIGdldCBTcGVha2VySWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZEZXRhaWxlZFNwZWVjaFBocmFzZS5TcGVha2VySWQ7XG4gICAgfVxuICAgIG1hcFJlY29nbml0aW9uU3RhdHVzKHN0YXR1cykge1xuICAgICAgICBpZiAodHlwZW9mIHN0YXR1cyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcmV0dXJuIEV4cG9ydHNfanNfMS5SZWNvZ25pdGlvblN0YXR1c1tzdGF0dXNdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBzdGF0dXMgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBzdGF0dXM7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkRldGFpbGVkU3BlZWNoUGhyYXNlID0gRGV0YWlsZWRTcGVlY2hQaHJhc2U7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURldGFpbGVkU3BlZWNoUGhyYXNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/DetailedSpeechPhrase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Enums.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Enums.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RecognitionStatus = exports.SynthesisStatus = void 0;\n/**\n * @class SynthesisStatus\n * @private\n */\nvar SynthesisStatus;\n(function (SynthesisStatus) {\n    /**\n     * The response contains valid audio data.\n     * @member SynthesisStatus.Success\n     */\n    SynthesisStatus[SynthesisStatus[\"Success\"] = 0] = \"Success\";\n    /**\n     * Indicates the end of audio data. No valid audio data is included in the message.\n     * @member SynthesisStatus.SynthesisEnd\n     */\n    SynthesisStatus[SynthesisStatus[\"SynthesisEnd\"] = 1] = \"SynthesisEnd\";\n    /**\n     * Indicates an error occurred during synthesis data processing.\n     * @member SynthesisStatus.Error\n     */\n    SynthesisStatus[SynthesisStatus[\"Error\"] = 2] = \"Error\";\n})(SynthesisStatus = exports.SynthesisStatus || (exports.SynthesisStatus = {}));\nvar RecognitionStatus;\n(function (RecognitionStatus) {\n    RecognitionStatus[RecognitionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionStatus[RecognitionStatus[\"NoMatch\"] = 1] = \"NoMatch\";\n    RecognitionStatus[RecognitionStatus[\"InitialSilenceTimeout\"] = 2] = \"InitialSilenceTimeout\";\n    RecognitionStatus[RecognitionStatus[\"BabbleTimeout\"] = 3] = \"BabbleTimeout\";\n    RecognitionStatus[RecognitionStatus[\"Error\"] = 4] = \"Error\";\n    RecognitionStatus[RecognitionStatus[\"EndOfDictation\"] = 5] = \"EndOfDictation\";\n    RecognitionStatus[RecognitionStatus[\"TooManyRequests\"] = 6] = \"TooManyRequests\";\n    RecognitionStatus[RecognitionStatus[\"BadRequest\"] = 7] = \"BadRequest\";\n    RecognitionStatus[RecognitionStatus[\"Forbidden\"] = 8] = \"Forbidden\";\n})(RecognitionStatus = exports.RecognitionStatus || (exports.RecognitionStatus = {}));\n\n//# sourceMappingURL=Enums.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL0VudW1zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRyx1QkFBdUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnREFBZ0QsdUJBQXVCLEtBQUs7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0RBQW9ELHlCQUF5QixLQUFLOztBQUVuRiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1NlcnZpY2VNZXNzYWdlcy9FbnVtcy5qcz9lYzdlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlY29nbml0aW9uU3RhdHVzID0gZXhwb3J0cy5TeW50aGVzaXNTdGF0dXMgPSB2b2lkIDA7XG4vKipcbiAqIEBjbGFzcyBTeW50aGVzaXNTdGF0dXNcbiAqIEBwcml2YXRlXG4gKi9cbnZhciBTeW50aGVzaXNTdGF0dXM7XG4oZnVuY3Rpb24gKFN5bnRoZXNpc1N0YXR1cykge1xuICAgIC8qKlxuICAgICAqIFRoZSByZXNwb25zZSBjb250YWlucyB2YWxpZCBhdWRpbyBkYXRhLlxuICAgICAqIEBtZW1iZXIgU3ludGhlc2lzU3RhdHVzLlN1Y2Nlc3NcbiAgICAgKi9cbiAgICBTeW50aGVzaXNTdGF0dXNbU3ludGhlc2lzU3RhdHVzW1wiU3VjY2Vzc1wiXSA9IDBdID0gXCJTdWNjZXNzXCI7XG4gICAgLyoqXG4gICAgICogSW5kaWNhdGVzIHRoZSBlbmQgb2YgYXVkaW8gZGF0YS4gTm8gdmFsaWQgYXVkaW8gZGF0YSBpcyBpbmNsdWRlZCBpbiB0aGUgbWVzc2FnZS5cbiAgICAgKiBAbWVtYmVyIFN5bnRoZXNpc1N0YXR1cy5TeW50aGVzaXNFbmRcbiAgICAgKi9cbiAgICBTeW50aGVzaXNTdGF0dXNbU3ludGhlc2lzU3RhdHVzW1wiU3ludGhlc2lzRW5kXCJdID0gMV0gPSBcIlN5bnRoZXNpc0VuZFwiO1xuICAgIC8qKlxuICAgICAqIEluZGljYXRlcyBhbiBlcnJvciBvY2N1cnJlZCBkdXJpbmcgc3ludGhlc2lzIGRhdGEgcHJvY2Vzc2luZy5cbiAgICAgKiBAbWVtYmVyIFN5bnRoZXNpc1N0YXR1cy5FcnJvclxuICAgICAqL1xuICAgIFN5bnRoZXNpc1N0YXR1c1tTeW50aGVzaXNTdGF0dXNbXCJFcnJvclwiXSA9IDJdID0gXCJFcnJvclwiO1xufSkoU3ludGhlc2lzU3RhdHVzID0gZXhwb3J0cy5TeW50aGVzaXNTdGF0dXMgfHwgKGV4cG9ydHMuU3ludGhlc2lzU3RhdHVzID0ge30pKTtcbnZhciBSZWNvZ25pdGlvblN0YXR1cztcbihmdW5jdGlvbiAoUmVjb2duaXRpb25TdGF0dXMpIHtcbiAgICBSZWNvZ25pdGlvblN0YXR1c1tSZWNvZ25pdGlvblN0YXR1c1tcIlN1Y2Nlc3NcIl0gPSAwXSA9IFwiU3VjY2Vzc1wiO1xuICAgIFJlY29nbml0aW9uU3RhdHVzW1JlY29nbml0aW9uU3RhdHVzW1wiTm9NYXRjaFwiXSA9IDFdID0gXCJOb01hdGNoXCI7XG4gICAgUmVjb2duaXRpb25TdGF0dXNbUmVjb2duaXRpb25TdGF0dXNbXCJJbml0aWFsU2lsZW5jZVRpbWVvdXRcIl0gPSAyXSA9IFwiSW5pdGlhbFNpbGVuY2VUaW1lb3V0XCI7XG4gICAgUmVjb2duaXRpb25TdGF0dXNbUmVjb2duaXRpb25TdGF0dXNbXCJCYWJibGVUaW1lb3V0XCJdID0gM10gPSBcIkJhYmJsZVRpbWVvdXRcIjtcbiAgICBSZWNvZ25pdGlvblN0YXR1c1tSZWNvZ25pdGlvblN0YXR1c1tcIkVycm9yXCJdID0gNF0gPSBcIkVycm9yXCI7XG4gICAgUmVjb2duaXRpb25TdGF0dXNbUmVjb2duaXRpb25TdGF0dXNbXCJFbmRPZkRpY3RhdGlvblwiXSA9IDVdID0gXCJFbmRPZkRpY3RhdGlvblwiO1xuICAgIFJlY29nbml0aW9uU3RhdHVzW1JlY29nbml0aW9uU3RhdHVzW1wiVG9vTWFueVJlcXVlc3RzXCJdID0gNl0gPSBcIlRvb01hbnlSZXF1ZXN0c1wiO1xuICAgIFJlY29nbml0aW9uU3RhdHVzW1JlY29nbml0aW9uU3RhdHVzW1wiQmFkUmVxdWVzdFwiXSA9IDddID0gXCJCYWRSZXF1ZXN0XCI7XG4gICAgUmVjb2duaXRpb25TdGF0dXNbUmVjb2duaXRpb25TdGF0dXNbXCJGb3JiaWRkZW5cIl0gPSA4XSA9IFwiRm9yYmlkZGVuXCI7XG59KShSZWNvZ25pdGlvblN0YXR1cyA9IGV4cG9ydHMuUmVjb2duaXRpb25TdGF0dXMgfHwgKGV4cG9ydHMuUmVjb2duaXRpb25TdGF0dXMgPSB7fSkpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1FbnVtcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/Enums.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/IntentResponse.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/IntentResponse.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// response\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IntentResponse = void 0;\nclass IntentResponse {\n    constructor(json) {\n        if (json === \"\") {\n            this.privIntentResponse = {};\n        }\n        else {\n            this.privIntentResponse = JSON.parse(json);\n        }\n    }\n    static fromJSON(json) {\n        return new IntentResponse(json);\n    }\n    get query() {\n        return this.privIntentResponse.query;\n    }\n    get topScoringIntent() {\n        return this.privIntentResponse.topScoringIntent;\n    }\n    get entities() {\n        return this.privIntentResponse.entities;\n    }\n}\nexports.IntentResponse = IntentResponse;\n\n//# sourceMappingURL=IntentResponse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL0ludGVudFJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjs7QUFFdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9TZXJ2aWNlTWVzc2FnZXMvSW50ZW50UmVzcG9uc2UuanM/NjE1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuLy8gcmVzcG9uc2Vcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW50ZW50UmVzcG9uc2UgPSB2b2lkIDA7XG5jbGFzcyBJbnRlbnRSZXNwb25zZSB7XG4gICAgY29uc3RydWN0b3IoanNvbikge1xuICAgICAgICBpZiAoanNvbiA9PT0gXCJcIikge1xuICAgICAgICAgICAgdGhpcy5wcml2SW50ZW50UmVzcG9uc2UgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkludGVudFJlc3BvbnNlID0gSlNPTi5wYXJzZShqc29uKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgZnJvbUpTT04oanNvbikge1xuICAgICAgICByZXR1cm4gbmV3IEludGVudFJlc3BvbnNlKGpzb24pO1xuICAgIH1cbiAgICBnZXQgcXVlcnkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZJbnRlbnRSZXNwb25zZS5xdWVyeTtcbiAgICB9XG4gICAgZ2V0IHRvcFNjb3JpbmdJbnRlbnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZJbnRlbnRSZXNwb25zZS50b3BTY29yaW5nSW50ZW50O1xuICAgIH1cbiAgICBnZXQgZW50aXRpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZJbnRlbnRSZXNwb25zZS5lbnRpdGllcztcbiAgICB9XG59XG5leHBvcnRzLkludGVudFJlc3BvbnNlID0gSW50ZW50UmVzcG9uc2U7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUludGVudFJlc3BvbnNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/IntentResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SimpleSpeechPhrase.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SimpleSpeechPhrase.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SimpleSpeechPhrase = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nclass SimpleSpeechPhrase {\n    constructor(json, baseOffset = 0) {\n        this.privSimpleSpeechPhrase = JSON.parse(json);\n        this.privSimpleSpeechPhrase.RecognitionStatus = this.mapRecognitionStatus(this.privSimpleSpeechPhrase.RecognitionStatus); // RecognitionStatus[this.privSimpleSpeechPhrase.RecognitionStatus as unknown as keyof typeof RecognitionStatus];\n        this.updateOffset(baseOffset);\n    }\n    static fromJSON(json, baseOffset) {\n        return new SimpleSpeechPhrase(json, baseOffset);\n    }\n    updateOffset(baseOffset) {\n        this.privSimpleSpeechPhrase.Offset += baseOffset;\n    }\n    asJson() {\n        const jsonObj = { ...this.privSimpleSpeechPhrase };\n        // Convert the enum value to its string representation for serialization purposes.\n        return JSON.stringify({\n            ...jsonObj,\n            RecognitionStatus: Exports_js_1.RecognitionStatus[jsonObj.RecognitionStatus]\n        });\n    }\n    get RecognitionStatus() {\n        return this.privSimpleSpeechPhrase.RecognitionStatus;\n    }\n    get DisplayText() {\n        return this.privSimpleSpeechPhrase.DisplayText;\n    }\n    get Offset() {\n        return this.privSimpleSpeechPhrase.Offset;\n    }\n    get Duration() {\n        return this.privSimpleSpeechPhrase.Duration;\n    }\n    get Language() {\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Language;\n    }\n    get LanguageDetectionConfidence() {\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Confidence;\n    }\n    get SpeakerId() {\n        return this.privSimpleSpeechPhrase.SpeakerId;\n    }\n    mapRecognitionStatus(status) {\n        if (typeof status === \"string\") {\n            return Exports_js_1.RecognitionStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n}\nexports.SimpleSpeechPhrase = SimpleSpeechPhrase;\n\n//# sourceMappingURL=SimpleSpeechPhrase.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1NpbXBsZVNwZWVjaFBocmFzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLHFCQUFxQixtQkFBTyxDQUFDLDJIQUFlO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLGtJQUFrSTtBQUNsSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7O0FBRTFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1NpbXBsZVNwZWVjaFBocmFzZS5qcz9iZDJjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNpbXBsZVNwZWVjaFBocmFzZSA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi9FeHBvcnRzLmpzXCIpO1xuY2xhc3MgU2ltcGxlU3BlZWNoUGhyYXNlIHtcbiAgICBjb25zdHJ1Y3Rvcihqc29uLCBiYXNlT2Zmc2V0ID0gMCkge1xuICAgICAgICB0aGlzLnByaXZTaW1wbGVTcGVlY2hQaHJhc2UgPSBKU09OLnBhcnNlKGpzb24pO1xuICAgICAgICB0aGlzLnByaXZTaW1wbGVTcGVlY2hQaHJhc2UuUmVjb2duaXRpb25TdGF0dXMgPSB0aGlzLm1hcFJlY29nbml0aW9uU3RhdHVzKHRoaXMucHJpdlNpbXBsZVNwZWVjaFBocmFzZS5SZWNvZ25pdGlvblN0YXR1cyk7IC8vIFJlY29nbml0aW9uU3RhdHVzW3RoaXMucHJpdlNpbXBsZVNwZWVjaFBocmFzZS5SZWNvZ25pdGlvblN0YXR1cyBhcyB1bmtub3duIGFzIGtleW9mIHR5cGVvZiBSZWNvZ25pdGlvblN0YXR1c107XG4gICAgICAgIHRoaXMudXBkYXRlT2Zmc2V0KGJhc2VPZmZzZXQpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUpTT04oanNvbiwgYmFzZU9mZnNldCkge1xuICAgICAgICByZXR1cm4gbmV3IFNpbXBsZVNwZWVjaFBocmFzZShqc29uLCBiYXNlT2Zmc2V0KTtcbiAgICB9XG4gICAgdXBkYXRlT2Zmc2V0KGJhc2VPZmZzZXQpIHtcbiAgICAgICAgdGhpcy5wcml2U2ltcGxlU3BlZWNoUGhyYXNlLk9mZnNldCArPSBiYXNlT2Zmc2V0O1xuICAgIH1cbiAgICBhc0pzb24oKSB7XG4gICAgICAgIGNvbnN0IGpzb25PYmogPSB7IC4uLnRoaXMucHJpdlNpbXBsZVNwZWVjaFBocmFzZSB9O1xuICAgICAgICAvLyBDb252ZXJ0IHRoZSBlbnVtIHZhbHVlIHRvIGl0cyBzdHJpbmcgcmVwcmVzZW50YXRpb24gZm9yIHNlcmlhbGl6YXRpb24gcHVycG9zZXMuXG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAuLi5qc29uT2JqLFxuICAgICAgICAgICAgUmVjb2duaXRpb25TdGF0dXM6IEV4cG9ydHNfanNfMS5SZWNvZ25pdGlvblN0YXR1c1tqc29uT2JqLlJlY29nbml0aW9uU3RhdHVzXVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0IFJlY29nbml0aW9uU3RhdHVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U2ltcGxlU3BlZWNoUGhyYXNlLlJlY29nbml0aW9uU3RhdHVzO1xuICAgIH1cbiAgICBnZXQgRGlzcGxheVRleHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTaW1wbGVTcGVlY2hQaHJhc2UuRGlzcGxheVRleHQ7XG4gICAgfVxuICAgIGdldCBPZmZzZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTaW1wbGVTcGVlY2hQaHJhc2UuT2Zmc2V0O1xuICAgIH1cbiAgICBnZXQgRHVyYXRpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTaW1wbGVTcGVlY2hQaHJhc2UuRHVyYXRpb247XG4gICAgfVxuICAgIGdldCBMYW5ndWFnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNpbXBsZVNwZWVjaFBocmFzZS5QcmltYXJ5TGFuZ3VhZ2UgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHRoaXMucHJpdlNpbXBsZVNwZWVjaFBocmFzZS5QcmltYXJ5TGFuZ3VhZ2UuTGFuZ3VhZ2U7XG4gICAgfVxuICAgIGdldCBMYW5ndWFnZURldGVjdGlvbkNvbmZpZGVuY2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTaW1wbGVTcGVlY2hQaHJhc2UuUHJpbWFyeUxhbmd1YWdlID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiB0aGlzLnByaXZTaW1wbGVTcGVlY2hQaHJhc2UuUHJpbWFyeUxhbmd1YWdlLkNvbmZpZGVuY2U7XG4gICAgfVxuICAgIGdldCBTcGVha2VySWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTaW1wbGVTcGVlY2hQaHJhc2UuU3BlYWtlcklkO1xuICAgIH1cbiAgICBtYXBSZWNvZ25pdGlvblN0YXR1cyhzdGF0dXMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzdGF0dXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBFeHBvcnRzX2pzXzEuUmVjb2duaXRpb25TdGF0dXNbc3RhdHVzXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2Ygc3RhdHVzID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RhdHVzO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5TaW1wbGVTcGVlY2hQaHJhc2UgPSBTaW1wbGVTcGVlY2hQaHJhc2U7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNpbXBsZVNwZWVjaFBocmFzZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SimpleSpeechPhrase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeakerResponse.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeakerResponse.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=SpeakerResponse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1NwZWFrZXJSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9TZXJ2aWNlTWVzc2FnZXMvU3BlYWtlclJlc3BvbnNlLmpzPzNkNmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8qIGVzbGludC1kaXNhYmxlIG1heC1jbGFzc2VzLXBlci1maWxlICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwZWFrZXJSZXNwb25zZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeakerResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechDetected.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechDetected.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechDetected = void 0;\nclass SpeechDetected {\n    constructor(json, baseOffset) {\n        this.privSpeechStartDetected = JSON.parse(json);\n        this.privSpeechStartDetected.Offset += baseOffset;\n    }\n    static fromJSON(json, baseOffset) {\n        return new SpeechDetected(json, baseOffset);\n    }\n    get Offset() {\n        return this.privSpeechStartDetected.Offset;\n    }\n}\nexports.SpeechDetected = SpeechDetected;\n\n//# sourceMappingURL=SpeechDetected.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1NwZWVjaERldGVjdGVkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCOztBQUV0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1NlcnZpY2VNZXNzYWdlcy9TcGVlY2hEZXRlY3RlZC5qcz9hNzcyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNwZWVjaERldGVjdGVkID0gdm9pZCAwO1xuY2xhc3MgU3BlZWNoRGV0ZWN0ZWQge1xuICAgIGNvbnN0cnVjdG9yKGpzb24sIGJhc2VPZmZzZXQpIHtcbiAgICAgICAgdGhpcy5wcml2U3BlZWNoU3RhcnREZXRlY3RlZCA9IEpTT04ucGFyc2UoanNvbik7XG4gICAgICAgIHRoaXMucHJpdlNwZWVjaFN0YXJ0RGV0ZWN0ZWQuT2Zmc2V0ICs9IGJhc2VPZmZzZXQ7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSlNPTihqc29uLCBiYXNlT2Zmc2V0KSB7XG4gICAgICAgIHJldHVybiBuZXcgU3BlZWNoRGV0ZWN0ZWQoanNvbiwgYmFzZU9mZnNldCk7XG4gICAgfVxuICAgIGdldCBPZmZzZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTcGVlY2hTdGFydERldGVjdGVkLk9mZnNldDtcbiAgICB9XG59XG5leHBvcnRzLlNwZWVjaERldGVjdGVkID0gU3BlZWNoRGV0ZWN0ZWQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwZWVjaERldGVjdGVkLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechDetected.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechHypothesis.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechHypothesis.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechHypothesis = void 0;\nclass SpeechHypothesis {\n    constructor(json, baseOffset) {\n        this.privSpeechHypothesis = JSON.parse(json);\n        this.updateOffset(baseOffset);\n    }\n    static fromJSON(json, baseOffset) {\n        return new SpeechHypothesis(json, baseOffset);\n    }\n    updateOffset(baseOffset) {\n        this.privSpeechHypothesis.Offset += baseOffset;\n    }\n    asJson() {\n        return JSON.stringify(this.privSpeechHypothesis);\n    }\n    get Text() {\n        return this.privSpeechHypothesis.Text;\n    }\n    get Offset() {\n        return this.privSpeechHypothesis.Offset;\n    }\n    get Duration() {\n        return this.privSpeechHypothesis.Duration;\n    }\n    get Language() {\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Language;\n    }\n    get LanguageDetectionConfidence() {\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Confidence;\n    }\n    get SpeakerId() {\n        return this.privSpeechHypothesis.SpeakerId;\n    }\n}\nexports.SpeechHypothesis = SpeechHypothesis;\n\n//# sourceMappingURL=SpeechHypothesis.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1NwZWVjaEh5cG90aGVzaXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7O0FBRXhCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1NwZWVjaEh5cG90aGVzaXMuanM/ZGYxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TcGVlY2hIeXBvdGhlc2lzID0gdm9pZCAwO1xuY2xhc3MgU3BlZWNoSHlwb3RoZXNpcyB7XG4gICAgY29uc3RydWN0b3IoanNvbiwgYmFzZU9mZnNldCkge1xuICAgICAgICB0aGlzLnByaXZTcGVlY2hIeXBvdGhlc2lzID0gSlNPTi5wYXJzZShqc29uKTtcbiAgICAgICAgdGhpcy51cGRhdGVPZmZzZXQoYmFzZU9mZnNldCk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSlNPTihqc29uLCBiYXNlT2Zmc2V0KSB7XG4gICAgICAgIHJldHVybiBuZXcgU3BlZWNoSHlwb3RoZXNpcyhqc29uLCBiYXNlT2Zmc2V0KTtcbiAgICB9XG4gICAgdXBkYXRlT2Zmc2V0KGJhc2VPZmZzZXQpIHtcbiAgICAgICAgdGhpcy5wcml2U3BlZWNoSHlwb3RoZXNpcy5PZmZzZXQgKz0gYmFzZU9mZnNldDtcbiAgICB9XG4gICAgYXNKc29uKCkge1xuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcy5wcml2U3BlZWNoSHlwb3RoZXNpcyk7XG4gICAgfVxuICAgIGdldCBUZXh0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3BlZWNoSHlwb3RoZXNpcy5UZXh0O1xuICAgIH1cbiAgICBnZXQgT2Zmc2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3BlZWNoSHlwb3RoZXNpcy5PZmZzZXQ7XG4gICAgfVxuICAgIGdldCBEdXJhdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNwZWVjaEh5cG90aGVzaXMuRHVyYXRpb247XG4gICAgfVxuICAgIGdldCBMYW5ndWFnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNwZWVjaEh5cG90aGVzaXMuUHJpbWFyeUxhbmd1YWdlID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiB0aGlzLnByaXZTcGVlY2hIeXBvdGhlc2lzLlByaW1hcnlMYW5ndWFnZS5MYW5ndWFnZTtcbiAgICB9XG4gICAgZ2V0IExhbmd1YWdlRGV0ZWN0aW9uQ29uZmlkZW5jZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNwZWVjaEh5cG90aGVzaXMuUHJpbWFyeUxhbmd1YWdlID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiB0aGlzLnByaXZTcGVlY2hIeXBvdGhlc2lzLlByaW1hcnlMYW5ndWFnZS5Db25maWRlbmNlO1xuICAgIH1cbiAgICBnZXQgU3BlYWtlcklkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3BlZWNoSHlwb3RoZXNpcy5TcGVha2VySWQ7XG4gICAgfVxufVxuZXhwb3J0cy5TcGVlY2hIeXBvdGhlc2lzID0gU3BlZWNoSHlwb3RoZXNpcztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BlZWNoSHlwb3RoZXNpcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechHypothesis.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechKeyword.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechKeyword.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechKeyword = void 0;\nclass SpeechKeyword {\n    constructor(json, baseOffset) {\n        this.privSpeechKeyword = JSON.parse(json);\n        this.privSpeechKeyword.Offset += baseOffset;\n    }\n    static fromJSON(json, baseOffset) {\n        return new SpeechKeyword(json, baseOffset);\n    }\n    get Status() {\n        return this.privSpeechKeyword.Status;\n    }\n    get Text() {\n        return this.privSpeechKeyword.Text;\n    }\n    get Offset() {\n        return this.privSpeechKeyword.Offset;\n    }\n    get Duration() {\n        return this.privSpeechKeyword.Duration;\n    }\n    asJson() {\n        return JSON.stringify(this.privSpeechKeyword);\n    }\n}\nexports.SpeechKeyword = SpeechKeyword;\n\n//# sourceMappingURL=SpeechKeyword.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1NwZWVjaEtleXdvcmQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7O0FBRXJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1NwZWVjaEtleXdvcmQuanM/MDgyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TcGVlY2hLZXl3b3JkID0gdm9pZCAwO1xuY2xhc3MgU3BlZWNoS2V5d29yZCB7XG4gICAgY29uc3RydWN0b3IoanNvbiwgYmFzZU9mZnNldCkge1xuICAgICAgICB0aGlzLnByaXZTcGVlY2hLZXl3b3JkID0gSlNPTi5wYXJzZShqc29uKTtcbiAgICAgICAgdGhpcy5wcml2U3BlZWNoS2V5d29yZC5PZmZzZXQgKz0gYmFzZU9mZnNldDtcbiAgICB9XG4gICAgc3RhdGljIGZyb21KU09OKGpzb24sIGJhc2VPZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTcGVlY2hLZXl3b3JkKGpzb24sIGJhc2VPZmZzZXQpO1xuICAgIH1cbiAgICBnZXQgU3RhdHVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3BlZWNoS2V5d29yZC5TdGF0dXM7XG4gICAgfVxuICAgIGdldCBUZXh0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3BlZWNoS2V5d29yZC5UZXh0O1xuICAgIH1cbiAgICBnZXQgT2Zmc2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3BlZWNoS2V5d29yZC5PZmZzZXQ7XG4gICAgfVxuICAgIGdldCBEdXJhdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNwZWVjaEtleXdvcmQuRHVyYXRpb247XG4gICAgfVxuICAgIGFzSnNvbigpIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMucHJpdlNwZWVjaEtleXdvcmQpO1xuICAgIH1cbn1cbmV4cG9ydHMuU3BlZWNoS2V5d29yZCA9IFNwZWVjaEtleXdvcmQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwZWVjaEtleXdvcmQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SpeechKeyword.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SynthesisAudioMetadata.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SynthesisAudioMetadata.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SynthesisAudioMetadata = exports.MetadataType = void 0;\nvar MetadataType;\n(function (MetadataType) {\n    MetadataType[\"WordBoundary\"] = \"WordBoundary\";\n    MetadataType[\"Bookmark\"] = \"Bookmark\";\n    MetadataType[\"Viseme\"] = \"Viseme\";\n    MetadataType[\"SentenceBoundary\"] = \"SentenceBoundary\";\n    MetadataType[\"SessionEnd\"] = \"SessionEnd\";\n    MetadataType[\"AvatarSignal\"] = \"TalkingAvatarSignal\";\n})(MetadataType = exports.MetadataType || (exports.MetadataType = {}));\nclass SynthesisAudioMetadata {\n    constructor(json) {\n        this.privSynthesisAudioMetadata = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new SynthesisAudioMetadata(json);\n    }\n    get Metadata() {\n        return this.privSynthesisAudioMetadata.Metadata;\n    }\n}\nexports.SynthesisAudioMetadata = SynthesisAudioMetadata;\n\n//# sourceMappingURL=SynthesisAudioMetadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1N5bnRoZXNpc0F1ZGlvTWV0YWRhdGEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QixHQUFHLG9CQUFvQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwQ0FBMEMsb0JBQW9CLEtBQUs7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qjs7QUFFOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9TZXJ2aWNlTWVzc2FnZXMvU3ludGhlc2lzQXVkaW9NZXRhZGF0YS5qcz8wMjllIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN5bnRoZXNpc0F1ZGlvTWV0YWRhdGEgPSBleHBvcnRzLk1ldGFkYXRhVHlwZSA9IHZvaWQgMDtcbnZhciBNZXRhZGF0YVR5cGU7XG4oZnVuY3Rpb24gKE1ldGFkYXRhVHlwZSkge1xuICAgIE1ldGFkYXRhVHlwZVtcIldvcmRCb3VuZGFyeVwiXSA9IFwiV29yZEJvdW5kYXJ5XCI7XG4gICAgTWV0YWRhdGFUeXBlW1wiQm9va21hcmtcIl0gPSBcIkJvb2ttYXJrXCI7XG4gICAgTWV0YWRhdGFUeXBlW1wiVmlzZW1lXCJdID0gXCJWaXNlbWVcIjtcbiAgICBNZXRhZGF0YVR5cGVbXCJTZW50ZW5jZUJvdW5kYXJ5XCJdID0gXCJTZW50ZW5jZUJvdW5kYXJ5XCI7XG4gICAgTWV0YWRhdGFUeXBlW1wiU2Vzc2lvbkVuZFwiXSA9IFwiU2Vzc2lvbkVuZFwiO1xuICAgIE1ldGFkYXRhVHlwZVtcIkF2YXRhclNpZ25hbFwiXSA9IFwiVGFsa2luZ0F2YXRhclNpZ25hbFwiO1xufSkoTWV0YWRhdGFUeXBlID0gZXhwb3J0cy5NZXRhZGF0YVR5cGUgfHwgKGV4cG9ydHMuTWV0YWRhdGFUeXBlID0ge30pKTtcbmNsYXNzIFN5bnRoZXNpc0F1ZGlvTWV0YWRhdGEge1xuICAgIGNvbnN0cnVjdG9yKGpzb24pIHtcbiAgICAgICAgdGhpcy5wcml2U3ludGhlc2lzQXVkaW9NZXRhZGF0YSA9IEpTT04ucGFyc2UoanNvbik7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSlNPTihqc29uKSB7XG4gICAgICAgIHJldHVybiBuZXcgU3ludGhlc2lzQXVkaW9NZXRhZGF0YShqc29uKTtcbiAgICB9XG4gICAgZ2V0IE1ldGFkYXRhKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3ludGhlc2lzQXVkaW9NZXRhZGF0YS5NZXRhZGF0YTtcbiAgICB9XG59XG5leHBvcnRzLlN5bnRoZXNpc0F1ZGlvTWV0YWRhdGEgPSBTeW50aGVzaXNBdWRpb01ldGFkYXRhO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TeW50aGVzaXNBdWRpb01ldGFkYXRhLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SynthesisAudioMetadata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationHypothesis.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationHypothesis.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranslationHypothesis = void 0;\nconst Contracts_js_1 = __webpack_require__(/*! ../../sdk/Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst TranslationStatus_js_1 = __webpack_require__(/*! ../TranslationStatus.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationStatus.js\");\nclass TranslationHypothesis {\n    constructor(hypothesis, baseOffset) {\n        this.privTranslationHypothesis = hypothesis;\n        this.privTranslationHypothesis.Offset += baseOffset;\n        this.privTranslationHypothesis.Translation.TranslationStatus = this.mapTranslationStatus(this.privTranslationHypothesis.Translation.TranslationStatus);\n    }\n    static fromJSON(json, baseOffset) {\n        return new TranslationHypothesis(JSON.parse(json), baseOffset);\n    }\n    static fromTranslationResponse(translationHypothesis, baseOffset) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(translationHypothesis, \"translationHypothesis\");\n        const hypothesis = translationHypothesis.SpeechHypothesis;\n        translationHypothesis.SpeechHypothesis = undefined;\n        hypothesis.Translation = translationHypothesis;\n        return new TranslationHypothesis(hypothesis, baseOffset);\n    }\n    get Duration() {\n        return this.privTranslationHypothesis.Duration;\n    }\n    get Offset() {\n        return this.privTranslationHypothesis.Offset;\n    }\n    get Text() {\n        return this.privTranslationHypothesis.Text;\n    }\n    get Translation() {\n        return this.privTranslationHypothesis.Translation;\n    }\n    get Language() {\n        return this.privTranslationHypothesis.PrimaryLanguage?.Language;\n    }\n    asJson() {\n        const jsonObj = { ...this.privTranslationHypothesis };\n        // Convert the enum value to its string representation for serialization purposes.\n        return jsonObj.Translation !== undefined ? JSON.stringify({\n            ...jsonObj,\n            TranslationStatus: TranslationStatus_js_1.TranslationStatus[jsonObj.Translation.TranslationStatus]\n        }) : JSON.stringify(jsonObj);\n    }\n    mapTranslationStatus(status) {\n        if (typeof status === \"string\") {\n            return TranslationStatus_js_1.TranslationStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n}\nexports.TranslationHypothesis = TranslationHypothesis;\n\n//# sourceMappingURL=TranslationHypothesis.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1RyYW5zbGF0aW9uSHlwb3RoZXNpcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCLHVCQUF1QixtQkFBTyxDQUFDLDRIQUF3QjtBQUN2RCwrQkFBK0IsbUJBQU8sQ0FBQywrSUFBeUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qjs7QUFFN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9TZXJ2aWNlTWVzc2FnZXMvVHJhbnNsYXRpb25IeXBvdGhlc2lzLmpzPzQ1ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVHJhbnNsYXRpb25IeXBvdGhlc2lzID0gdm9pZCAwO1xuY29uc3QgQ29udHJhY3RzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vc2RrL0NvbnRyYWN0cy5qc1wiKTtcbmNvbnN0IFRyYW5zbGF0aW9uU3RhdHVzX2pzXzEgPSByZXF1aXJlKFwiLi4vVHJhbnNsYXRpb25TdGF0dXMuanNcIik7XG5jbGFzcyBUcmFuc2xhdGlvbkh5cG90aGVzaXMge1xuICAgIGNvbnN0cnVjdG9yKGh5cG90aGVzaXMsIGJhc2VPZmZzZXQpIHtcbiAgICAgICAgdGhpcy5wcml2VHJhbnNsYXRpb25IeXBvdGhlc2lzID0gaHlwb3RoZXNpcztcbiAgICAgICAgdGhpcy5wcml2VHJhbnNsYXRpb25IeXBvdGhlc2lzLk9mZnNldCArPSBiYXNlT2Zmc2V0O1xuICAgICAgICB0aGlzLnByaXZUcmFuc2xhdGlvbkh5cG90aGVzaXMuVHJhbnNsYXRpb24uVHJhbnNsYXRpb25TdGF0dXMgPSB0aGlzLm1hcFRyYW5zbGF0aW9uU3RhdHVzKHRoaXMucHJpdlRyYW5zbGF0aW9uSHlwb3RoZXNpcy5UcmFuc2xhdGlvbi5UcmFuc2xhdGlvblN0YXR1cyk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSlNPTihqc29uLCBiYXNlT2Zmc2V0KSB7XG4gICAgICAgIHJldHVybiBuZXcgVHJhbnNsYXRpb25IeXBvdGhlc2lzKEpTT04ucGFyc2UoanNvbiksIGJhc2VPZmZzZXQpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbVRyYW5zbGF0aW9uUmVzcG9uc2UodHJhbnNsYXRpb25IeXBvdGhlc2lzLCBiYXNlT2Zmc2V0KSB7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yVW5kZWZpbmVkKHRyYW5zbGF0aW9uSHlwb3RoZXNpcywgXCJ0cmFuc2xhdGlvbkh5cG90aGVzaXNcIik7XG4gICAgICAgIGNvbnN0IGh5cG90aGVzaXMgPSB0cmFuc2xhdGlvbkh5cG90aGVzaXMuU3BlZWNoSHlwb3RoZXNpcztcbiAgICAgICAgdHJhbnNsYXRpb25IeXBvdGhlc2lzLlNwZWVjaEh5cG90aGVzaXMgPSB1bmRlZmluZWQ7XG4gICAgICAgIGh5cG90aGVzaXMuVHJhbnNsYXRpb24gPSB0cmFuc2xhdGlvbkh5cG90aGVzaXM7XG4gICAgICAgIHJldHVybiBuZXcgVHJhbnNsYXRpb25IeXBvdGhlc2lzKGh5cG90aGVzaXMsIGJhc2VPZmZzZXQpO1xuICAgIH1cbiAgICBnZXQgRHVyYXRpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZUcmFuc2xhdGlvbkh5cG90aGVzaXMuRHVyYXRpb247XG4gICAgfVxuICAgIGdldCBPZmZzZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZUcmFuc2xhdGlvbkh5cG90aGVzaXMuT2Zmc2V0O1xuICAgIH1cbiAgICBnZXQgVGV4dCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlRyYW5zbGF0aW9uSHlwb3RoZXNpcy5UZXh0O1xuICAgIH1cbiAgICBnZXQgVHJhbnNsYXRpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZUcmFuc2xhdGlvbkh5cG90aGVzaXMuVHJhbnNsYXRpb247XG4gICAgfVxuICAgIGdldCBMYW5ndWFnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlRyYW5zbGF0aW9uSHlwb3RoZXNpcy5QcmltYXJ5TGFuZ3VhZ2U/Lkxhbmd1YWdlO1xuICAgIH1cbiAgICBhc0pzb24oKSB7XG4gICAgICAgIGNvbnN0IGpzb25PYmogPSB7IC4uLnRoaXMucHJpdlRyYW5zbGF0aW9uSHlwb3RoZXNpcyB9O1xuICAgICAgICAvLyBDb252ZXJ0IHRoZSBlbnVtIHZhbHVlIHRvIGl0cyBzdHJpbmcgcmVwcmVzZW50YXRpb24gZm9yIHNlcmlhbGl6YXRpb24gcHVycG9zZXMuXG4gICAgICAgIHJldHVybiBqc29uT2JqLlRyYW5zbGF0aW9uICE9PSB1bmRlZmluZWQgPyBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAuLi5qc29uT2JqLFxuICAgICAgICAgICAgVHJhbnNsYXRpb25TdGF0dXM6IFRyYW5zbGF0aW9uU3RhdHVzX2pzXzEuVHJhbnNsYXRpb25TdGF0dXNbanNvbk9iai5UcmFuc2xhdGlvbi5UcmFuc2xhdGlvblN0YXR1c11cbiAgICAgICAgfSkgOiBKU09OLnN0cmluZ2lmeShqc29uT2JqKTtcbiAgICB9XG4gICAgbWFwVHJhbnNsYXRpb25TdGF0dXMoc3RhdHVzKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc3RhdHVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICByZXR1cm4gVHJhbnNsYXRpb25TdGF0dXNfanNfMS5UcmFuc2xhdGlvblN0YXR1c1tzdGF0dXNdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBzdGF0dXMgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBzdGF0dXM7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlRyYW5zbGF0aW9uSHlwb3RoZXNpcyA9IFRyYW5zbGF0aW9uSHlwb3RoZXNpcztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJhbnNsYXRpb25IeXBvdGhlc2lzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationHypothesis.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationPhrase.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationPhrase.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranslationPhrase = void 0;\nconst Contracts_js_1 = __webpack_require__(/*! ../../sdk/Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_1 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst TranslationStatus_js_1 = __webpack_require__(/*! ../TranslationStatus.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationStatus.js\");\nclass TranslationPhrase {\n    constructor(phrase, baseOffset) {\n        this.privTranslationPhrase = phrase;\n        this.privTranslationPhrase.Offset += baseOffset;\n        this.privTranslationPhrase.RecognitionStatus = this.mapRecognitionStatus(this.privTranslationPhrase.RecognitionStatus);\n        if (this.privTranslationPhrase.Translation !== undefined) {\n            this.privTranslationPhrase.Translation.TranslationStatus = this.mapTranslationStatus(this.privTranslationPhrase.Translation.TranslationStatus);\n        }\n    }\n    static fromJSON(json, baseOffset) {\n        return new TranslationPhrase(JSON.parse(json), baseOffset);\n    }\n    static fromTranslationResponse(translationResponse, baseOffset) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(translationResponse, \"translationResponse\");\n        const phrase = translationResponse.SpeechPhrase;\n        translationResponse.SpeechPhrase = undefined;\n        phrase.Translation = translationResponse;\n        phrase.Text = phrase.DisplayText;\n        return new TranslationPhrase(phrase, baseOffset);\n    }\n    get RecognitionStatus() {\n        return this.privTranslationPhrase.RecognitionStatus;\n    }\n    get Offset() {\n        return this.privTranslationPhrase.Offset;\n    }\n    get Duration() {\n        return this.privTranslationPhrase.Duration;\n    }\n    get Text() {\n        return this.privTranslationPhrase.Text;\n    }\n    get Language() {\n        return this.privTranslationPhrase.PrimaryLanguage?.Language;\n    }\n    get Confidence() {\n        return this.privTranslationPhrase.PrimaryLanguage?.Confidence;\n    }\n    get Translation() {\n        return this.privTranslationPhrase.Translation;\n    }\n    asJson() {\n        const jsonObj = { ...this.privTranslationPhrase };\n        // Convert the enum values to their string representations for serialization\n        const serializedObj = {\n            ...jsonObj,\n            RecognitionStatus: Exports_js_1.RecognitionStatus[jsonObj.RecognitionStatus]\n        };\n        if (jsonObj.Translation) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            serializedObj.Translation = {\n                ...jsonObj.Translation,\n                TranslationStatus: TranslationStatus_js_1.TranslationStatus[jsonObj.Translation.TranslationStatus]\n            };\n        }\n        return JSON.stringify(serializedObj);\n    }\n    mapRecognitionStatus(status) {\n        if (typeof status === \"string\") {\n            return Exports_js_1.RecognitionStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n    mapTranslationStatus(status) {\n        if (typeof status === \"string\") {\n            return TranslationStatus_js_1.TranslationStatus[status];\n        }\n        else if (typeof status === \"number\") {\n            return status;\n        }\n    }\n}\nexports.TranslationPhrase = TranslationPhrase;\n\n//# sourceMappingURL=TranslationPhrase.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1RyYW5zbGF0aW9uUGhyYXNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIsdUJBQXVCLG1CQUFPLENBQUMsNEhBQXdCO0FBQ3ZELHFCQUFxQixtQkFBTyxDQUFDLDJIQUFlO0FBQzVDLCtCQUErQixtQkFBTyxDQUFDLCtJQUF5QjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7O0FBRXpCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1RyYW5zbGF0aW9uUGhyYXNlLmpzPzZjMTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVHJhbnNsYXRpb25QaHJhc2UgPSB2b2lkIDA7XG5jb25zdCBDb250cmFjdHNfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9zZGsvQ29udHJhY3RzLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uL0V4cG9ydHMuanNcIik7XG5jb25zdCBUcmFuc2xhdGlvblN0YXR1c19qc18xID0gcmVxdWlyZShcIi4uL1RyYW5zbGF0aW9uU3RhdHVzLmpzXCIpO1xuY2xhc3MgVHJhbnNsYXRpb25QaHJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKHBocmFzZSwgYmFzZU9mZnNldCkge1xuICAgICAgICB0aGlzLnByaXZUcmFuc2xhdGlvblBocmFzZSA9IHBocmFzZTtcbiAgICAgICAgdGhpcy5wcml2VHJhbnNsYXRpb25QaHJhc2UuT2Zmc2V0ICs9IGJhc2VPZmZzZXQ7XG4gICAgICAgIHRoaXMucHJpdlRyYW5zbGF0aW9uUGhyYXNlLlJlY29nbml0aW9uU3RhdHVzID0gdGhpcy5tYXBSZWNvZ25pdGlvblN0YXR1cyh0aGlzLnByaXZUcmFuc2xhdGlvblBocmFzZS5SZWNvZ25pdGlvblN0YXR1cyk7XG4gICAgICAgIGlmICh0aGlzLnByaXZUcmFuc2xhdGlvblBocmFzZS5UcmFuc2xhdGlvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnByaXZUcmFuc2xhdGlvblBocmFzZS5UcmFuc2xhdGlvbi5UcmFuc2xhdGlvblN0YXR1cyA9IHRoaXMubWFwVHJhbnNsYXRpb25TdGF0dXModGhpcy5wcml2VHJhbnNsYXRpb25QaHJhc2UuVHJhbnNsYXRpb24uVHJhbnNsYXRpb25TdGF0dXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSlNPTihqc29uLCBiYXNlT2Zmc2V0KSB7XG4gICAgICAgIHJldHVybiBuZXcgVHJhbnNsYXRpb25QaHJhc2UoSlNPTi5wYXJzZShqc29uKSwgYmFzZU9mZnNldCk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tVHJhbnNsYXRpb25SZXNwb25zZSh0cmFuc2xhdGlvblJlc3BvbnNlLCBiYXNlT2Zmc2V0KSB7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yVW5kZWZpbmVkKHRyYW5zbGF0aW9uUmVzcG9uc2UsIFwidHJhbnNsYXRpb25SZXNwb25zZVwiKTtcbiAgICAgICAgY29uc3QgcGhyYXNlID0gdHJhbnNsYXRpb25SZXNwb25zZS5TcGVlY2hQaHJhc2U7XG4gICAgICAgIHRyYW5zbGF0aW9uUmVzcG9uc2UuU3BlZWNoUGhyYXNlID0gdW5kZWZpbmVkO1xuICAgICAgICBwaHJhc2UuVHJhbnNsYXRpb24gPSB0cmFuc2xhdGlvblJlc3BvbnNlO1xuICAgICAgICBwaHJhc2UuVGV4dCA9IHBocmFzZS5EaXNwbGF5VGV4dDtcbiAgICAgICAgcmV0dXJuIG5ldyBUcmFuc2xhdGlvblBocmFzZShwaHJhc2UsIGJhc2VPZmZzZXQpO1xuICAgIH1cbiAgICBnZXQgUmVjb2duaXRpb25TdGF0dXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZUcmFuc2xhdGlvblBocmFzZS5SZWNvZ25pdGlvblN0YXR1cztcbiAgICB9XG4gICAgZ2V0IE9mZnNldCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlRyYW5zbGF0aW9uUGhyYXNlLk9mZnNldDtcbiAgICB9XG4gICAgZ2V0IER1cmF0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VHJhbnNsYXRpb25QaHJhc2UuRHVyYXRpb247XG4gICAgfVxuICAgIGdldCBUZXh0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VHJhbnNsYXRpb25QaHJhc2UuVGV4dDtcbiAgICB9XG4gICAgZ2V0IExhbmd1YWdlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VHJhbnNsYXRpb25QaHJhc2UuUHJpbWFyeUxhbmd1YWdlPy5MYW5ndWFnZTtcbiAgICB9XG4gICAgZ2V0IENvbmZpZGVuY2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZUcmFuc2xhdGlvblBocmFzZS5QcmltYXJ5TGFuZ3VhZ2U/LkNvbmZpZGVuY2U7XG4gICAgfVxuICAgIGdldCBUcmFuc2xhdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlRyYW5zbGF0aW9uUGhyYXNlLlRyYW5zbGF0aW9uO1xuICAgIH1cbiAgICBhc0pzb24oKSB7XG4gICAgICAgIGNvbnN0IGpzb25PYmogPSB7IC4uLnRoaXMucHJpdlRyYW5zbGF0aW9uUGhyYXNlIH07XG4gICAgICAgIC8vIENvbnZlcnQgdGhlIGVudW0gdmFsdWVzIHRvIHRoZWlyIHN0cmluZyByZXByZXNlbnRhdGlvbnMgZm9yIHNlcmlhbGl6YXRpb25cbiAgICAgICAgY29uc3Qgc2VyaWFsaXplZE9iaiA9IHtcbiAgICAgICAgICAgIC4uLmpzb25PYmosXG4gICAgICAgICAgICBSZWNvZ25pdGlvblN0YXR1czogRXhwb3J0c19qc18xLlJlY29nbml0aW9uU3RhdHVzW2pzb25PYmouUmVjb2duaXRpb25TdGF0dXNdXG4gICAgICAgIH07XG4gICAgICAgIGlmIChqc29uT2JqLlRyYW5zbGF0aW9uKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gICAgICAgICAgICBzZXJpYWxpemVkT2JqLlRyYW5zbGF0aW9uID0ge1xuICAgICAgICAgICAgICAgIC4uLmpzb25PYmouVHJhbnNsYXRpb24sXG4gICAgICAgICAgICAgICAgVHJhbnNsYXRpb25TdGF0dXM6IFRyYW5zbGF0aW9uU3RhdHVzX2pzXzEuVHJhbnNsYXRpb25TdGF0dXNbanNvbk9iai5UcmFuc2xhdGlvbi5UcmFuc2xhdGlvblN0YXR1c11cbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHNlcmlhbGl6ZWRPYmopO1xuICAgIH1cbiAgICBtYXBSZWNvZ25pdGlvblN0YXR1cyhzdGF0dXMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzdGF0dXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBFeHBvcnRzX2pzXzEuUmVjb2duaXRpb25TdGF0dXNbc3RhdHVzXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2Ygc3RhdHVzID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RhdHVzO1xuICAgICAgICB9XG4gICAgfVxuICAgIG1hcFRyYW5zbGF0aW9uU3RhdHVzKHN0YXR1cykge1xuICAgICAgICBpZiAodHlwZW9mIHN0YXR1cyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcmV0dXJuIFRyYW5zbGF0aW9uU3RhdHVzX2pzXzEuVHJhbnNsYXRpb25TdGF0dXNbc3RhdHVzXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2Ygc3RhdHVzID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RhdHVzO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5UcmFuc2xhdGlvblBocmFzZSA9IFRyYW5zbGF0aW9uUGhyYXNlO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1UcmFuc2xhdGlvblBocmFzZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationPhrase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationSynthesisEnd.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationSynthesisEnd.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranslationSynthesisEnd = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nclass TranslationSynthesisEnd {\n    constructor(json) {\n        this.privSynthesisEnd = JSON.parse(json);\n        if (!!this.privSynthesisEnd.SynthesisStatus) {\n            this.privSynthesisEnd.SynthesisStatus = Exports_js_1.SynthesisStatus[this.privSynthesisEnd.SynthesisStatus];\n        }\n        if (!!this.privSynthesisEnd.Status) {\n            this.privSynthesisEnd.SynthesisStatus = Exports_js_1.SynthesisStatus[this.privSynthesisEnd.Status];\n        }\n    }\n    static fromJSON(json) {\n        return new TranslationSynthesisEnd(json);\n    }\n    get SynthesisStatus() {\n        return this.privSynthesisEnd.SynthesisStatus;\n    }\n    get FailureReason() {\n        return this.privSynthesisEnd.FailureReason;\n    }\n}\nexports.TranslationSynthesisEnd = TranslationSynthesisEnd;\n\n//# sourceMappingURL=TranslationSynthesisEnd.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1RyYW5zbGF0aW9uU3ludGhlc2lzRW5kLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0IscUJBQXFCLG1CQUFPLENBQUMsMkhBQWU7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjs7QUFFL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9TZXJ2aWNlTWVzc2FnZXMvVHJhbnNsYXRpb25TeW50aGVzaXNFbmQuanM/NjdkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmFuc2xhdGlvblN5bnRoZXNpc0VuZCA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi9FeHBvcnRzLmpzXCIpO1xuY2xhc3MgVHJhbnNsYXRpb25TeW50aGVzaXNFbmQge1xuICAgIGNvbnN0cnVjdG9yKGpzb24pIHtcbiAgICAgICAgdGhpcy5wcml2U3ludGhlc2lzRW5kID0gSlNPTi5wYXJzZShqc29uKTtcbiAgICAgICAgaWYgKCEhdGhpcy5wcml2U3ludGhlc2lzRW5kLlN5bnRoZXNpc1N0YXR1cykge1xuICAgICAgICAgICAgdGhpcy5wcml2U3ludGhlc2lzRW5kLlN5bnRoZXNpc1N0YXR1cyA9IEV4cG9ydHNfanNfMS5TeW50aGVzaXNTdGF0dXNbdGhpcy5wcml2U3ludGhlc2lzRW5kLlN5bnRoZXNpc1N0YXR1c107XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCEhdGhpcy5wcml2U3ludGhlc2lzRW5kLlN0YXR1cykge1xuICAgICAgICAgICAgdGhpcy5wcml2U3ludGhlc2lzRW5kLlN5bnRoZXNpc1N0YXR1cyA9IEV4cG9ydHNfanNfMS5TeW50aGVzaXNTdGF0dXNbdGhpcy5wcml2U3ludGhlc2lzRW5kLlN0YXR1c107XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGZyb21KU09OKGpzb24pIHtcbiAgICAgICAgcmV0dXJuIG5ldyBUcmFuc2xhdGlvblN5bnRoZXNpc0VuZChqc29uKTtcbiAgICB9XG4gICAgZ2V0IFN5bnRoZXNpc1N0YXR1cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlN5bnRoZXNpc0VuZC5TeW50aGVzaXNTdGF0dXM7XG4gICAgfVxuICAgIGdldCBGYWlsdXJlUmVhc29uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3ludGhlc2lzRW5kLkZhaWx1cmVSZWFzb247XG4gICAgfVxufVxuZXhwb3J0cy5UcmFuc2xhdGlvblN5bnRoZXNpc0VuZCA9IFRyYW5zbGF0aW9uU3ludGhlc2lzRW5kO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1UcmFuc2xhdGlvblN5bnRoZXNpc0VuZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TranslationSynthesisEnd.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TurnStatusPayload.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TurnStatusPayload.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TurnStatusResponsePayload = void 0;\nclass TurnStatusResponsePayload {\n    constructor(json) {\n        this.privMessageStatusResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new TurnStatusResponsePayload(json);\n    }\n    get interactionId() {\n        return this.privMessageStatusResponse.interactionId;\n    }\n    get conversationId() {\n        return this.privMessageStatusResponse.conversationId;\n    }\n    get statusCode() {\n        // Payloads may contain a limited set of textual representations or a numeric status\n        // code. The textual values are here converted into numeric ones.\n        switch (this.privMessageStatusResponse.statusCode) {\n            case \"Success\":\n                return 200;\n            case \"Failed\":\n                return 400;\n            case \"TimedOut\":\n                return 429;\n            default:\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return this.privMessageStatusResponse.statusCode;\n        }\n    }\n}\nexports.TurnStatusResponsePayload = TurnStatusResponsePayload;\n\n//# sourceMappingURL=TurnStatusPayload.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1R1cm5TdGF0dXNQYXlsb2FkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQzs7QUFFakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9TZXJ2aWNlTWVzc2FnZXMvVHVyblN0YXR1c1BheWxvYWQuanM/YjM5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UdXJuU3RhdHVzUmVzcG9uc2VQYXlsb2FkID0gdm9pZCAwO1xuY2xhc3MgVHVyblN0YXR1c1Jlc3BvbnNlUGF5bG9hZCB7XG4gICAgY29uc3RydWN0b3IoanNvbikge1xuICAgICAgICB0aGlzLnByaXZNZXNzYWdlU3RhdHVzUmVzcG9uc2UgPSBKU09OLnBhcnNlKGpzb24pO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUpTT04oanNvbikge1xuICAgICAgICByZXR1cm4gbmV3IFR1cm5TdGF0dXNSZXNwb25zZVBheWxvYWQoanNvbik7XG4gICAgfVxuICAgIGdldCBpbnRlcmFjdGlvbklkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2TWVzc2FnZVN0YXR1c1Jlc3BvbnNlLmludGVyYWN0aW9uSWQ7XG4gICAgfVxuICAgIGdldCBjb252ZXJzYXRpb25JZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdk1lc3NhZ2VTdGF0dXNSZXNwb25zZS5jb252ZXJzYXRpb25JZDtcbiAgICB9XG4gICAgZ2V0IHN0YXR1c0NvZGUoKSB7XG4gICAgICAgIC8vIFBheWxvYWRzIG1heSBjb250YWluIGEgbGltaXRlZCBzZXQgb2YgdGV4dHVhbCByZXByZXNlbnRhdGlvbnMgb3IgYSBudW1lcmljIHN0YXR1c1xuICAgICAgICAvLyBjb2RlLiBUaGUgdGV4dHVhbCB2YWx1ZXMgYXJlIGhlcmUgY29udmVydGVkIGludG8gbnVtZXJpYyBvbmVzLlxuICAgICAgICBzd2l0Y2ggKHRoaXMucHJpdk1lc3NhZ2VTdGF0dXNSZXNwb25zZS5zdGF0dXNDb2RlKSB7XG4gICAgICAgICAgICBjYXNlIFwiU3VjY2Vzc1wiOlxuICAgICAgICAgICAgICAgIHJldHVybiAyMDA7XG4gICAgICAgICAgICBjYXNlIFwiRmFpbGVkXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDQwMDtcbiAgICAgICAgICAgIGNhc2UgXCJUaW1lZE91dFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiA0Mjk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLXJldHVyblxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnByaXZNZXNzYWdlU3RhdHVzUmVzcG9uc2Uuc3RhdHVzQ29kZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuVHVyblN0YXR1c1Jlc3BvbnNlUGF5bG9hZCA9IFR1cm5TdGF0dXNSZXNwb25zZVBheWxvYWQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVR1cm5TdGF0dXNQYXlsb2FkLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TurnStatusPayload.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceRecognizerBase.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceRecognizerBase.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ServiceRecognizerBase = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_4 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = __webpack_require__(/*! ./SpeechConnectionMessage.Internal.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionMessage.Internal.js\");\nclass ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        // A promise for a configured connection.\n        // Do not consume directly, call fetchConnection instead.\n        this.privConnectionConfigurationPromise = undefined;\n        // A promise for a connection, but one that has not had the speech context sent yet.\n        // Do not consume directly, call fetchConnection instead.\n        this.privConnectionPromise = undefined;\n        this.privSetTimeout = setTimeout;\n        this.privIsLiveAudio = false;\n        this.privAverageBytesPerMs = 0;\n        this.privEnableSpeakerId = false;\n        this.privExpectContentAssessmentResponse = false;\n        this.recognizeOverride = undefined;\n        this.recognizeSpeaker = undefined;\n        this.disconnectOverride = undefined;\n        this.receiveMessageOverride = undefined;\n        this.sendPrePayloadJSONOverride = undefined;\n        this.postConnectImplOverride = undefined;\n        this.configConnectionOverride = undefined;\n        this.handleSpeechPhraseMessage = undefined;\n        this.handleSpeechHypothesisMessage = undefined;\n        if (!authentication) {\n            throw new Exports_js_2.ArgumentNullError(\"authentication\");\n        }\n        if (!connectionFactory) {\n            throw new Exports_js_2.ArgumentNullError(\"connectionFactory\");\n        }\n        if (!audioSource) {\n            throw new Exports_js_2.ArgumentNullError(\"audioSource\");\n        }\n        if (!recognizerConfig) {\n            throw new Exports_js_2.ArgumentNullError(\"recognizerConfig\");\n        }\n        this.privEnableSpeakerId = recognizerConfig.isSpeakerDiarizationEnabled;\n        this.privMustReportEndOfStream = false;\n        this.privAuthentication = authentication;\n        this.privConnectionFactory = connectionFactory;\n        this.privAudioSource = audioSource;\n        this.privRecognizerConfig = recognizerConfig;\n        this.privIsDisposed = false;\n        this.privRecognizer = recognizer;\n        this.privRequestSession = new Exports_js_4.RequestSession(this.privAudioSource.id());\n        this.privConnectionEvents = new Exports_js_2.EventSource();\n        this.privServiceEvents = new Exports_js_2.EventSource();\n        this.privDynamicGrammar = new Exports_js_4.DynamicGrammarBuilder();\n        this.privSpeechContext = new Exports_js_4.SpeechContext(this.privDynamicGrammar);\n        this.privAgentConfig = new Exports_js_4.AgentConfig();\n        const webWorkerLoadType = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.WebWorkerLoadType, \"on\").toLowerCase();\n        if (webWorkerLoadType === \"on\" && typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\n            this.privSetTimeout = Exports_js_2.Timeout.setTimeout;\n        }\n        else {\n            if (typeof window !== \"undefined\") {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privSetTimeout = window.setTimeout.bind(window);\n            }\n            if (typeof globalThis !== \"undefined\") {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privSetTimeout = globalThis.setTimeout.bind(globalThis);\n            }\n        }\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                const connectionClosedEvent = connectionEvent;\n                if (connectionClosedEvent.statusCode === 1003 ||\n                    connectionClosedEvent.statusCode === 1007 ||\n                    connectionClosedEvent.statusCode === 1002 ||\n                    connectionClosedEvent.statusCode === 4000 ||\n                    this.privRequestSession.numConnectionAttempts > this.privRecognizerConfig.maxRetryCount) {\n                    void this.cancelRecognitionLocal(Exports_js_3.CancellationReason.Error, connectionClosedEvent.statusCode === 1007 ? Exports_js_3.CancellationErrorCode.BadRequestParameters : Exports_js_3.CancellationErrorCode.ConnectionFailure, `${connectionClosedEvent.reason} websocket error code: ${connectionClosedEvent.statusCode}`);\n                }\n            }\n        });\n        if (this.privEnableSpeakerId) {\n            this.privDiarizationSessionId = Exports_js_2.createNoDashGuid();\n        }\n        this.setLanguageIdJson();\n        this.setOutputDetailLevelJson();\n    }\n    setTranslationJson() {\n        const targetLanguages = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined);\n        if (targetLanguages !== undefined) {\n            const languages = targetLanguages.split(\",\");\n            const translationVoice = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n            const action = (translationVoice !== undefined) ? \"Synthesize\" : \"None\";\n            this.privSpeechContext.setSection(\"translation\", {\n                onSuccess: { action },\n                output: { interimResults: { mode: \"Always\" } },\n                targetLanguages: languages,\n            });\n            if (translationVoice !== undefined) {\n                const languageToVoiceMap = {};\n                for (const lang of languages) {\n                    languageToVoiceMap[lang] = translationVoice;\n                }\n                this.privSpeechContext.setSection(\"synthesis\", {\n                    defaultVoices: languageToVoiceMap\n                });\n            }\n        }\n    }\n    setSpeechSegmentationTimeoutJson() {\n        const speechSegmentationSilenceTimeoutMs = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.Speech_SegmentationSilenceTimeoutMs, undefined);\n        const speechSegmentationMaximumTimeMs = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.Speech_SegmentationMaximumTimeMs, undefined);\n        const speechSegmentationStrategy = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.Speech_SegmentationStrategy, undefined);\n        const segmentation = {\n            segmentation: {\n                mode: \"\"\n            }\n        };\n        let configuredSegment = false;\n        if (speechSegmentationStrategy !== undefined) {\n            configuredSegment = true;\n            let segMode = \"\";\n            switch (speechSegmentationStrategy.toLowerCase()) {\n                case \"default\":\n                    break;\n                case \"time\":\n                    segMode = \"Custom\";\n                    break;\n                case \"semantic\":\n                    segMode = \"Semantic\";\n                    break;\n            }\n            segmentation.segmentation.mode = segMode;\n        }\n        if (speechSegmentationSilenceTimeoutMs !== undefined) {\n            configuredSegment = true;\n            const segmentationSilenceTimeoutMs = parseInt(speechSegmentationSilenceTimeoutMs, 10);\n            segmentation.segmentation.mode = \"Custom\";\n            segmentation.segmentation.segmentationSilenceTimeoutMs = segmentationSilenceTimeoutMs;\n        }\n        if (speechSegmentationMaximumTimeMs !== undefined) {\n            configuredSegment = true;\n            const segmentationMaximumTimeMs = parseInt(speechSegmentationMaximumTimeMs, 10);\n            segmentation.segmentation.mode = \"Custom\";\n            segmentation.segmentation.segmentationForcedTimeoutMs = segmentationMaximumTimeMs;\n        }\n        if (configuredSegment) {\n            const recoMode = this.recognitionMode === Exports_js_4.RecognitionMode.Conversation ? \"CONVERSATION\" :\n                this.recognitionMode === Exports_js_4.RecognitionMode.Dictation ? \"DICTATION\" : \"INTERACTIVE\";\n            const phraseDetection = this.privSpeechContext.getSection(\"phraseDetection\");\n            phraseDetection.mode = recoMode;\n            phraseDetection[recoMode] = segmentation;\n            this.privSpeechContext.setSection(\"phraseDetection\", phraseDetection);\n        }\n    }\n    setLanguageIdJson() {\n        const phraseDetection = this.privSpeechContext.getSection(\"phraseDetection\");\n        if (this.privRecognizerConfig.autoDetectSourceLanguages !== undefined) {\n            const sourceLanguages = this.privRecognizerConfig.autoDetectSourceLanguages.split(\",\");\n            let speechContextLidMode;\n            if (this.privRecognizerConfig.languageIdMode === \"Continuous\") {\n                speechContextLidMode = \"DetectContinuous\";\n            }\n            else { // recognizerConfig.languageIdMode === \"AtStart\"\n                speechContextLidMode = \"DetectAtAudioStart\";\n            }\n            this.privSpeechContext.setSection(\"languageId\", {\n                Priority: \"PrioritizeLatency\",\n                languages: sourceLanguages,\n                mode: speechContextLidMode,\n                onSuccess: { action: \"Recognize\" },\n                onUnknown: { action: \"None\" }\n            });\n            this.privSpeechContext.setSection(\"phraseOutput\", {\n                interimResults: {\n                    resultType: \"Auto\"\n                },\n                phraseResults: {\n                    resultType: \"Always\"\n                }\n            });\n            const customModels = this.privRecognizerConfig.sourceLanguageModels;\n            if (customModels !== undefined) {\n                phraseDetection.customModels = customModels;\n                phraseDetection.onInterim = { action: \"None\" };\n                phraseDetection.onSuccess = { action: \"None\" };\n            }\n        }\n        const targetLanguages = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined);\n        if (targetLanguages !== undefined) {\n            phraseDetection.onInterim = { action: \"Translate\" };\n            phraseDetection.onSuccess = { action: \"Translate\" };\n            this.privSpeechContext.setSection(\"phraseOutput\", {\n                interimResults: {\n                    resultType: \"None\"\n                },\n                phraseResults: {\n                    resultType: \"None\"\n                }\n            });\n        }\n        this.privSpeechContext.setSection(\"phraseDetection\", phraseDetection);\n    }\n    setOutputDetailLevelJson() {\n        if (this.privEnableSpeakerId) {\n            const requestWordLevelTimestamps = this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"false\").toLowerCase();\n            if (requestWordLevelTimestamps === \"true\") {\n                this.privSpeechContext.setWordLevelTimings();\n            }\n            else {\n                const outputFormat = this.privRecognizerConfig.parameters.getProperty(Exports_js_4.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]).toLowerCase();\n                if (outputFormat === Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Detailed].toLocaleLowerCase()) {\n                    this.privSpeechContext.setDetailedOutputFormat();\n                }\n            }\n        }\n    }\n    get isSpeakerDiarizationEnabled() {\n        return this.privEnableSpeakerId;\n    }\n    get audioSource() {\n        return this.privAudioSource;\n    }\n    get speechContext() {\n        return this.privSpeechContext;\n    }\n    get dynamicGrammar() {\n        return this.privDynamicGrammar;\n    }\n    get agentConfig() {\n        return this.privAgentConfig;\n    }\n    set conversationTranslatorToken(token) {\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.ConversationTranslator_Token, token);\n    }\n    set voiceProfileType(type) {\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SpeakerIdMode, type);\n    }\n    set authentication(auth) {\n        this.privAuthentication = auth;\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    async dispose(reason) {\n        this.privIsDisposed = true;\n        if (this.privConnectionConfigurationPromise !== undefined) {\n            try {\n                const connection = await this.privConnectionConfigurationPromise;\n                await connection.dispose(reason);\n            }\n            catch (error) {\n                // The connection is in a bad state. But we're trying to kill it, so...\n                return;\n            }\n        }\n    }\n    get connectionEvents() {\n        return this.privConnectionEvents;\n    }\n    get serviceEvents() {\n        return this.privServiceEvents;\n    }\n    get recognitionMode() {\n        return this.privRecognizerConfig.recognitionMode;\n    }\n    async recognize(recoMode, successCallback, errorCallBack) {\n        if (this.recognizeOverride !== undefined) {\n            await this.recognizeOverride(recoMode, successCallback, errorCallBack);\n            return;\n        }\n        // Clear the existing configuration promise to force a re-transmission of config and context.\n        this.privConnectionConfigurationPromise = undefined;\n        this.privRecognizerConfig.recognitionMode = recoMode;\n        this.setSpeechSegmentationTimeoutJson();\n        this.setTranslationJson();\n        this.privSuccessCallback = successCallback;\n        this.privErrorCallback = errorCallBack;\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privAudioSource.events);\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        let audioNode;\n        try {\n            const audioStreamNode = await this.audioSource.attach(this.privRequestSession.audioNodeId);\n            const format = await this.audioSource.format;\n            const deviceInfo = await this.audioSource.deviceInfo;\n            this.privIsLiveAudio = deviceInfo.type && deviceInfo.type === Exports_js_4.type.Microphones;\n            audioNode = new Exports_js_1.ReplayableAudioNode(audioStreamNode, format.avgBytesPerSec);\n            await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n            this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n        }\n        catch (error) {\n            await this.privRequestSession.onStopRecognizing();\n            throw error;\n        }\n        try {\n            await conPromise;\n        }\n        catch (error) {\n            await this.cancelRecognitionLocal(Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.ConnectionFailure, error);\n            return;\n        }\n        const sessionStartEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n        if (!!this.privRecognizer.sessionStarted) {\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n        }\n        void this.receiveMessage();\n        const audioSendPromise = this.sendAudio(audioNode);\n        audioSendPromise.catch(async (error) => {\n            await this.cancelRecognitionLocal(Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        });\n        return;\n    }\n    async stopRecognizing() {\n        if (this.privRequestSession.isRecognizing) {\n            try {\n                await this.audioSource.turnOff();\n                await this.sendFinalAudio();\n                await this.privRequestSession.onStopRecognizing();\n                await this.privRequestSession.turnCompletionPromise;\n            }\n            finally {\n                await this.privRequestSession.dispose();\n            }\n        }\n        return;\n    }\n    async connect() {\n        await this.connectImpl();\n        return Promise.resolve();\n    }\n    connectAsync(cb, err) {\n        this.connectImpl().then(() => {\n            try {\n                if (!!cb) {\n                    cb();\n                }\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n        }, (reason) => {\n            try {\n                if (!!err) {\n                    err(reason);\n                }\n                /* eslint-disable no-empty */\n            }\n            catch (error) {\n            }\n        });\n    }\n    async disconnect() {\n        await this.cancelRecognitionLocal(Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.NoError, \"Disconnecting\");\n        if (this.disconnectOverride !== undefined) {\n            await this.disconnectOverride();\n        }\n        if (this.privConnectionPromise !== undefined) {\n            try {\n                await (await this.privConnectionPromise).dispose();\n            }\n            catch (error) {\n            }\n        }\n        this.privConnectionPromise = undefined;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    sendMessage(message) {\n        return;\n    }\n    async sendNetworkMessage(path, payload) {\n        const type = typeof payload === \"string\" ? Exports_js_2.MessageType.Text : Exports_js_2.MessageType.Binary;\n        const contentType = typeof payload === \"string\" ? \"application/json\" : \"\";\n        const connection = await this.fetchConnection();\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(type, path, this.privRequestSession.requestId, contentType, payload));\n    }\n    set activityTemplate(messagePayload) {\n        this.privActivityTemplate = messagePayload;\n    }\n    get activityTemplate() {\n        return this.privActivityTemplate;\n    }\n    set expectContentAssessmentResponse(value) {\n        this.privExpectContentAssessmentResponse = value;\n    }\n    async sendTelemetryData() {\n        const telemetryData = this.privRequestSession.getTelemetry();\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true ||\n            this.privIsDisposed ||\n            null === telemetryData) {\n            return;\n        }\n        if (!!ServiceRecognizerBase.telemetryData) {\n            try {\n                ServiceRecognizerBase.telemetryData(telemetryData);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n        const connection = await this.fetchConnection();\n        await connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"telemetry\", this.privRequestSession.requestId, \"application/json\", telemetryData));\n    }\n    // Cancels recognition.\n    async cancelRecognitionLocal(cancellationReason, errorCode, error) {\n        if (!!this.privRequestSession.isRecognizing) {\n            await this.privRequestSession.onStopRecognizing();\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, cancellationReason, errorCode, error);\n        }\n    }\n    async receiveMessage() {\n        try {\n            if (this.privIsDisposed) {\n                // We're done.\n                return;\n            }\n            let connection = await this.fetchConnection();\n            const message = await connection.read();\n            if (this.receiveMessageOverride !== undefined) {\n                return this.receiveMessageOverride();\n            }\n            // indicates we are draining the queue and it came with no message;\n            if (!message) {\n                return this.receiveMessage();\n            }\n            this.privServiceHasSentMessage = true;\n            const connectionMessage = SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage.fromConnectionMessage(message);\n            if (connectionMessage.requestId.toLowerCase() === this.privRequestSession.requestId.toLowerCase()) {\n                switch (connectionMessage.path.toLowerCase()) {\n                    case \"turn.start\":\n                        this.privMustReportEndOfStream = true;\n                        this.privRequestSession.onServiceTurnStartResponse();\n                        break;\n                    case \"speech.startdetected\":\n                        const speechStartDetected = Exports_js_4.SpeechDetected.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                        const speechStartEventArgs = new Exports_js_3.RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechStartDetected) {\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\n                        }\n                        break;\n                    case \"speech.enddetected\":\n                        let json;\n                        if (connectionMessage.textBody.length > 0) {\n                            json = connectionMessage.textBody;\n                        }\n                        else {\n                            // If the request was empty, the JSON returned is empty.\n                            json = \"{ Offset: 0 }\";\n                        }\n                        const speechStopDetected = Exports_js_4.SpeechDetected.fromJSON(json, this.privRequestSession.currentTurnAudioOffset);\n                        const speechStopEventArgs = new Exports_js_3.RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechEndDetected) {\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\n                        }\n                        break;\n                    case \"turn.end\":\n                        await this.sendTelemetryData();\n                        if (this.privRequestSession.isSpeechEnded && this.privMustReportEndOfStream) {\n                            this.privMustReportEndOfStream = false;\n                            await this.cancelRecognitionLocal(Exports_js_3.CancellationReason.EndOfStream, Exports_js_3.CancellationErrorCode.NoError, undefined);\n                        }\n                        const sessionStopEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n                        await this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition);\n                        if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\n                            if (!!this.privRecognizer.sessionStopped) {\n                                this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\n                            }\n                            return;\n                        }\n                        else {\n                            connection = await this.fetchConnection();\n                            await this.sendPrePayloadJSON(connection);\n                        }\n                        break;\n                    default:\n                        if (!await this.processTypeSpecificMessages(connectionMessage)) {\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\n                            if (!!this.privServiceEvents) {\n                                this.serviceEvents.onEvent(new Exports_js_2.ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\n                            }\n                        }\n                }\n            }\n            return this.receiveMessage();\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    updateSpeakerDiarizationAudioOffset() {\n        const bytesSent = this.privRequestSession.recognitionBytesSent;\n        const audioOffsetMs = this.privAverageBytesPerMs !== 0 ? bytesSent / this.privAverageBytesPerMs : 0;\n        this.privSpeechContext.setSpeakerDiarizationAudioOffsetMs(audioOffsetMs);\n    }\n    sendSpeechContext(connection, generateNewRequestId) {\n        if (this.privEnableSpeakerId) {\n            this.updateSpeakerDiarizationAudioOffset();\n        }\n        const speechContextJson = this.speechContext.toJSON();\n        if (generateNewRequestId) {\n            this.privRequestSession.onSpeechContext();\n        }\n        if (speechContextJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speech.context\", this.privRequestSession.requestId, \"application/json\", speechContextJson));\n        }\n        return;\n    }\n    noOp() {\n        // operation not supported\n        return;\n    }\n    // Encapsulated for derived service recognizers that need to send additional JSON\n    async sendPrePayloadJSON(connection, generateNewRequestId = true) {\n        if (this.sendPrePayloadJSONOverride !== undefined) {\n            return this.sendPrePayloadJSONOverride(connection);\n        }\n        await this.sendSpeechContext(connection, generateNewRequestId);\n        await this.sendWaveHeader(connection);\n        return;\n    }\n    async sendWaveHeader(connection) {\n        const format = await this.audioSource.format;\n        // this.writeBufferToConsole(format.header);\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Binary, \"audio\", this.privRequestSession.requestId, \"audio/x-wav\", format.header));\n    }\n    // Establishes a websocket connection to the end point.\n    connectImpl() {\n        if (this.privConnectionPromise !== undefined) {\n            return this.privConnectionPromise.then((connection) => {\n                if (connection.state() === Exports_js_2.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionPromise = undefined;\n                    this.privServiceHasSentMessage = false;\n                    return this.connectImpl();\n                }\n                return this.privConnectionPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionPromise = undefined;\n                this.privServiceHasSentMessage = false;\n                return this.connectImpl();\n            });\n        }\n        this.privConnectionPromise = this.retryableConnect();\n        // Attach an empty handler to allow the promise to run in the background while\n        // other startup events happen. It'll eventually be awaited on.\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.privConnectionPromise.catch(() => { });\n        if (this.postConnectImplOverride !== undefined) {\n            return this.postConnectImplOverride(this.privConnectionPromise);\n        }\n        return this.privConnectionPromise;\n    }\n    sendSpeechServiceConfig(connection, requestSession, SpeechServiceConfigJson) {\n        requestSession.onSpeechContext();\n        // filter out anything that is not required for the service to work.\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true) {\n            const withTelemetry = JSON.parse(SpeechServiceConfigJson);\n            const replacement = {\n                context: {\n                    system: withTelemetry.context.system,\n                },\n            };\n            SpeechServiceConfigJson = JSON.stringify(replacement);\n        }\n        if (this.privRecognizerConfig.parameters.getProperty(\"f0f5debc-f8c9-4892-ac4b-90a7ab359fd2\", \"false\").toLowerCase() === \"true\") {\n            const json = JSON.parse(SpeechServiceConfigJson);\n            json.context.DisableReferenceChannel = \"True\";\n            json.context.MicSpec = \"1_0_0\";\n            SpeechServiceConfigJson = JSON.stringify(json);\n        }\n        if (SpeechServiceConfigJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speech.config\", requestSession.requestId, \"application/json\", SpeechServiceConfigJson));\n        }\n        return;\n    }\n    async fetchConnection() {\n        if (this.privConnectionConfigurationPromise !== undefined) {\n            return this.privConnectionConfigurationPromise.then((connection) => {\n                if (connection.state() === Exports_js_2.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionConfigurationPromise = undefined;\n                    this.privServiceHasSentMessage = false;\n                    return this.fetchConnection();\n                }\n                return this.privConnectionConfigurationPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionConfigurationPromise = undefined;\n                this.privServiceHasSentMessage = false;\n                return this.fetchConnection();\n            });\n        }\n        this.privConnectionConfigurationPromise = this.configureConnection();\n        return await this.privConnectionConfigurationPromise;\n    }\n    async sendAudio(audioStreamNode) {\n        const audioFormat = await this.audioSource.format;\n        this.privAverageBytesPerMs = audioFormat.avgBytesPerSec / 1000;\n        // The time we last sent data to the service.\n        let nextSendTime = Date.now();\n        // Max amount to send before we start to throttle\n        const fastLaneSizeMs = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-TransmitLengthBeforThrottleMs\", \"5000\");\n        const maxSendUnthrottledBytes = audioFormat.avgBytesPerSec / 1000 * parseInt(fastLaneSizeMs, 10);\n        const startRecogNumber = this.privRequestSession.recogNumber;\n        const readAndUploadCycle = async () => {\n            // If speech is done, stop sending audio.\n            if (!this.privIsDisposed &&\n                !this.privRequestSession.isSpeechEnded &&\n                this.privRequestSession.isRecognizing &&\n                this.privRequestSession.recogNumber === startRecogNumber) {\n                const connection = await this.fetchConnection();\n                const audioStreamChunk = await audioStreamNode.read();\n                // we have a new audio chunk to upload.\n                if (this.privRequestSession.isSpeechEnded) {\n                    // If service already recognized audio end then don't send any more audio\n                    return;\n                }\n                let payload;\n                let sendDelay;\n                if (!audioStreamChunk || audioStreamChunk.isEnd) {\n                    payload = null;\n                    sendDelay = 0;\n                }\n                else {\n                    payload = audioStreamChunk.buffer;\n                    this.privRequestSession.onAudioSent(payload.byteLength);\n                    if (maxSendUnthrottledBytes >= this.privRequestSession.bytesSent) {\n                        sendDelay = 0;\n                    }\n                    else {\n                        sendDelay = Math.max(0, nextSendTime - Date.now());\n                    }\n                }\n                if (0 !== sendDelay) {\n                    await this.delay(sendDelay);\n                }\n                if (payload !== null) {\n                    nextSendTime = Date.now() + (payload.byteLength * 1000 / (audioFormat.avgBytesPerSec * 2));\n                }\n                // Are we still alive?\n                if (!this.privIsDisposed &&\n                    !this.privRequestSession.isSpeechEnded &&\n                    this.privRequestSession.isRecognizing &&\n                    this.privRequestSession.recogNumber === startRecogNumber) {\n                    connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, payload)).catch(() => {\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition).catch(() => { });\n                    });\n                    if (!audioStreamChunk?.isEnd) {\n                        // this.writeBufferToConsole(payload);\n                        // Regardless of success or failure, schedule the next upload.\n                        // If the underlying connection was broken, the next cycle will\n                        // get a new connection and re-transmit missing audio automatically.\n                        return readAndUploadCycle();\n                    }\n                    else {\n                        // the audio stream has been closed, no need to schedule next\n                        // read-upload cycle.\n                        if (!this.privIsLiveAudio) {\n                            this.privRequestSession.onSpeechEnded();\n                        }\n                    }\n                }\n            }\n        };\n        return readAndUploadCycle();\n    }\n    async retryableConnect() {\n        let isUnAuthorized = false;\n        this.privAuthFetchEventId = Exports_js_2.createNoDashGuid();\n        const sessionId = this.privRequestSession.sessionId;\n        this.privConnectionId = (sessionId !== undefined) ? sessionId : Exports_js_2.createNoDashGuid();\n        this.privRequestSession.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\n        let lastStatusCode = 0;\n        let lastReason = \"\";\n        while (this.privRequestSession.numConnectionAttempts <= this.privRecognizerConfig.maxRetryCount) {\n            // Get the auth information for the connection. This is a bit of overkill for the current API surface, but leaving the plumbing in place to be able to raise a developer-customer\n            // facing event when a connection fails to let them try and provide new auth information.\n            const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\n            const auth = await authPromise;\n            await this.privRequestSession.onAuthCompleted(false);\n            // Create the connection\n            const connection = this.privConnectionFactory.create(this.privRecognizerConfig, auth, this.privConnectionId);\n            // Attach the telemetry handlers.\n            this.privRequestSession.listenForServiceTelemetry(connection.events);\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\n            // it'll stop sending events.\n            connection.events.attach((event) => {\n                this.connectionEvents.onEvent(event);\n            });\n            const response = await connection.open();\n            // 200 == everything is fine.\n            if (response.statusCode === 200) {\n                await this.privRequestSession.onConnectionEstablishCompleted(response.statusCode);\n                return Promise.resolve(connection);\n            }\n            else if (response.statusCode === 1006) {\n                isUnAuthorized = true;\n            }\n            lastStatusCode = response.statusCode;\n            lastReason = response.reason;\n            this.privRequestSession.onRetryConnection();\n        }\n        await this.privRequestSession.onConnectionEstablishCompleted(lastStatusCode, lastReason);\n        return Promise.reject(`Unable to contact server. StatusCode: ${lastStatusCode}, ${this.privRecognizerConfig.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${lastReason}`);\n    }\n    delay(delayMs) {\n        return new Promise((resolve) => this.privSetTimeout(resolve, delayMs));\n    }\n    writeBufferToConsole(buffer) {\n        let out = \"Buffer Size: \";\n        if (null === buffer) {\n            out += \"null\";\n        }\n        else {\n            const readView = new Uint8Array(buffer);\n            out += `${buffer.byteLength}\\r\\n`;\n            for (let i = 0; i < buffer.byteLength; i++) {\n                out += readView[i].toString(16).padStart(2, \"0\") + \" \";\n                if (((i + 1) % 16) === 0) {\n                    // eslint-disable-next-line no-console\n                    console.info(out);\n                    out = \"\";\n                }\n            }\n        }\n        // eslint-disable-next-line no-console\n        console.info(out);\n    }\n    async sendFinalAudio() {\n        const connection = await this.fetchConnection();\n        await connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, null));\n        return;\n    }\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    async configureConnection() {\n        const connection = await this.connectImpl();\n        if (this.configConnectionOverride !== undefined) {\n            return this.configConnectionOverride(connection);\n        }\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\n        await this.sendPrePayloadJSON(connection, false);\n        return connection;\n    }\n}\nexports.ServiceRecognizerBase = ServiceRecognizerBase;\nServiceRecognizerBase.telemetryDataEnabled = true;\n\n//# sourceMappingURL=ServiceRecognizerBase.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceRecognizerBase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceTelemetryListener.Internal.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceTelemetryListener.Internal.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ServiceTelemetryListener = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst RecognitionEvents_js_1 = __webpack_require__(/*! ./RecognitionEvents.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/RecognitionEvents.js\");\nclass ServiceTelemetryListener {\n    constructor(requestId, audioSourceId, audioNodeId) {\n        this.privIsDisposed = false;\n        this.privListeningTriggerMetric = null;\n        this.privMicMetric = null;\n        this.privConnectionEstablishMetric = null;\n        this.privRequestId = requestId;\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privReceivedMessages = {};\n        this.privPhraseLatencies = [];\n        this.privHypothesisLatencies = [];\n    }\n    phraseReceived(audioReceivedTime) {\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\n            this.privPhraseLatencies.push(Date.now() - audioReceivedTime);\n        }\n    }\n    hypothesisReceived(audioReceivedTime) {\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\n            this.privHypothesisLatencies.push(Date.now() - audioReceivedTime);\n        }\n    }\n    onEvent(e) {\n        if (this.privIsDisposed) {\n            return;\n        }\n        if (e instanceof RecognitionEvents_js_1.RecognitionTriggeredEvent && e.requestId === this.privRequestId) {\n            this.privListeningTriggerMetric = {\n                End: e.eventTime,\n                Name: \"ListeningTrigger\",\n                Start: e.eventTime,\n            };\n        }\n        if (e instanceof Exports_js_1.AudioStreamNodeAttachingEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n            this.privMicStartTime = e.eventTime;\n        }\n        if (e instanceof Exports_js_1.AudioStreamNodeAttachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n            this.privMicStartTime = e.eventTime;\n        }\n        if (e instanceof Exports_js_1.AudioSourceErrorEvent && e.audioSourceId === this.privAudioSourceId) {\n            if (!this.privMicMetric) {\n                this.privMicMetric = {\n                    End: e.eventTime,\n                    Error: e.error,\n                    Name: \"Microphone\",\n                    Start: this.privMicStartTime,\n                };\n            }\n        }\n        if (e instanceof Exports_js_1.AudioStreamNodeErrorEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n            if (!this.privMicMetric) {\n                this.privMicMetric = {\n                    End: e.eventTime,\n                    Error: e.error,\n                    Name: \"Microphone\",\n                    Start: this.privMicStartTime,\n                };\n            }\n        }\n        if (e instanceof Exports_js_1.AudioStreamNodeDetachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n            if (!this.privMicMetric) {\n                this.privMicMetric = {\n                    End: e.eventTime,\n                    Name: \"Microphone\",\n                    Start: this.privMicStartTime,\n                };\n            }\n        }\n        if (e instanceof RecognitionEvents_js_1.ConnectingToServiceEvent && e.requestId === this.privRequestId) {\n            this.privConnectionId = e.sessionId;\n        }\n        if (e instanceof Exports_js_1.ConnectionStartEvent && e.connectionId === this.privConnectionId) {\n            this.privConnectionStartTime = e.eventTime;\n        }\n        if (e instanceof Exports_js_1.ConnectionEstablishedEvent && e.connectionId === this.privConnectionId) {\n            if (!this.privConnectionEstablishMetric) {\n                this.privConnectionEstablishMetric = {\n                    End: e.eventTime,\n                    Id: this.privConnectionId,\n                    Name: \"Connection\",\n                    Start: this.privConnectionStartTime,\n                };\n            }\n        }\n        if (e instanceof Exports_js_1.ConnectionEstablishErrorEvent && e.connectionId === this.privConnectionId) {\n            if (!this.privConnectionEstablishMetric) {\n                this.privConnectionEstablishMetric = {\n                    End: e.eventTime,\n                    Error: this.getConnectionError(e.statusCode),\n                    Id: this.privConnectionId,\n                    Name: \"Connection\",\n                    Start: this.privConnectionStartTime,\n                };\n            }\n        }\n        if (e instanceof Exports_js_1.ConnectionMessageReceivedEvent && e.connectionId === this.privConnectionId) {\n            if (e.message && e.message.headers && e.message.headers.path) {\n                if (!this.privReceivedMessages[e.message.headers.path]) {\n                    this.privReceivedMessages[e.message.headers.path] = new Array();\n                }\n                const maxMessagesToSend = 50;\n                if (this.privReceivedMessages[e.message.headers.path].length < maxMessagesToSend) {\n                    this.privReceivedMessages[e.message.headers.path].push(e.networkReceivedTime);\n                }\n            }\n        }\n    }\n    getTelemetry() {\n        const metrics = new Array();\n        if (this.privListeningTriggerMetric) {\n            metrics.push(this.privListeningTriggerMetric);\n        }\n        if (this.privMicMetric) {\n            metrics.push(this.privMicMetric);\n        }\n        if (this.privConnectionEstablishMetric) {\n            metrics.push(this.privConnectionEstablishMetric);\n        }\n        if (this.privPhraseLatencies.length > 0) {\n            metrics.push({\n                PhraseLatencyMs: this.privPhraseLatencies,\n            });\n        }\n        if (this.privHypothesisLatencies.length > 0) {\n            metrics.push({\n                FirstHypothesisLatencyMs: this.privHypothesisLatencies,\n            });\n        }\n        const telemetry = {\n            Metrics: metrics,\n            ReceivedMessages: this.privReceivedMessages,\n        };\n        const json = JSON.stringify(telemetry);\n        // We dont want to send the same telemetry again. So clean those out.\n        this.privReceivedMessages = {};\n        this.privListeningTriggerMetric = null;\n        this.privMicMetric = null;\n        this.privConnectionEstablishMetric = null;\n        this.privPhraseLatencies = [];\n        this.privHypothesisLatencies = [];\n        return json;\n    }\n    // Determines if there are any telemetry events to send to the service.\n    get hasTelemetry() {\n        return (Object.keys(this.privReceivedMessages).length !== 0 ||\n            this.privListeningTriggerMetric !== null ||\n            this.privMicMetric !== null ||\n            this.privConnectionEstablishMetric !== null ||\n            this.privPhraseLatencies.length !== 0 ||\n            this.privHypothesisLatencies.length !== 0);\n    }\n    dispose() {\n        this.privIsDisposed = true;\n    }\n    getConnectionError(statusCode) {\n        /*\n        -- Websocket status codes --\n        NormalClosure = 1000,\n        EndpointUnavailable = 1001,\n        ProtocolError = 1002,\n        InvalidMessageType = 1003,\n        Empty = 1005,\n        InvalidPayloadData = 1007,\n        PolicyViolation = 1008,\n        MessageTooBig = 1009,\n        MandatoryExtension = 1010,\n        InternalServerError = 1011\n        */\n        switch (statusCode) {\n            case 400:\n            case 1002:\n            case 1003:\n            case 1005:\n            case 1007:\n            case 1008:\n            case 1009: return \"BadRequest\";\n            case 401: return \"Unauthorized\";\n            case 403: return \"Forbidden\";\n            case 503:\n            case 1001: return \"ServerUnavailable\";\n            case 500:\n            case 1011: return \"ServerError\";\n            case 408:\n            case 504: return \"Timeout\";\n            default: return \"statuscode:\" + statusCode.toString();\n        }\n    }\n}\nexports.ServiceTelemetryListener = ServiceTelemetryListener;\n\n//# sourceMappingURL=ServiceTelemetryListener.Internal.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceTelemetryListener.Internal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerRecognitionConfig.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerRecognitionConfig.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeakerRecognitionConfig = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nclass SpeakerRecognitionConfig {\n    constructor(context, parameters) {\n        this.privContext = context ? context : new Exports_js_1.Context(null);\n        this.privParameters = parameters;\n    }\n    get parameters() {\n        return this.privParameters;\n    }\n    get Context() {\n        return this.privContext;\n    }\n}\nexports.SpeakerRecognitionConfig = SpeakerRecognitionConfig;\n\n//# sourceMappingURL=SpeakerRecognitionConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3BlYWtlclJlY29nbml0aW9uQ29uZmlnLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0M7QUFDaEMscUJBQXFCLG1CQUFPLENBQUMsMEhBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDOztBQUVoQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1NwZWFrZXJSZWNvZ25pdGlvbkNvbmZpZy5qcz85ZTk3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNwZWFrZXJSZWNvZ25pdGlvbkNvbmZpZyA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG5jbGFzcyBTcGVha2VyUmVjb2duaXRpb25Db25maWcge1xuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQsIHBhcmFtZXRlcnMpIHtcbiAgICAgICAgdGhpcy5wcml2Q29udGV4dCA9IGNvbnRleHQgPyBjb250ZXh0IDogbmV3IEV4cG9ydHNfanNfMS5Db250ZXh0KG51bGwpO1xuICAgICAgICB0aGlzLnByaXZQYXJhbWV0ZXJzID0gcGFyYW1ldGVycztcbiAgICB9XG4gICAgZ2V0IHBhcmFtZXRlcnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQYXJhbWV0ZXJzO1xuICAgIH1cbiAgICBnZXQgQ29udGV4dCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbnRleHQ7XG4gICAgfVxufVxuZXhwb3J0cy5TcGVha2VyUmVjb2duaXRpb25Db25maWcgPSBTcGVha2VyUmVjb2duaXRpb25Db25maWc7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwZWFrZXJSZWNvZ25pdGlvbkNvbmZpZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerRecognitionConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerRecognitionConnectionFactory.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerRecognitionConnectionFactory.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoiceProfileConnectionFactory = exports.SpeakerRecognitionConnectionFactory = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = __webpack_require__(/*! ./ConnectionFactoryBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ./HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nclass SpeakerRecognitionConnectionFactoryBase extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, endpointPath, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint);\n        if (!endpoint) {\n            const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n            const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n            const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, `wss://${region}.spr-frontend.speech${hostSuffix}`);\n            const scenario = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SpeakerIdMode, \"TextIndependentIdentification\");\n            endpoint = `${host}/speaker/ws/${this.scenarioToPath(scenario)}/${endpointPath}`;\n        }\n        const queryParams = {\n            format: \"simple\",\n            language: config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage),\n        };\n        this.setCommonUrlParams(config, queryParams, endpoint);\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        headers[HeaderNames_js_1.HeaderNames.SpIDAuthKey] = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key);\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n    }\n    scenarioToPath(mode) {\n        switch (mode) {\n            case \"TextIndependentVerification\":\n            case \"2\":\n                return \"verification/text-independent\";\n            case \"TextDependentVerification\":\n            case \"1\":\n                return \"verification/text-dependent\";\n            default:\n                return \"identification/text-independent\";\n        }\n    }\n}\nclass SpeakerRecognitionConnectionFactory extends SpeakerRecognitionConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        return super.create(config, authInfo, \"recognition\", connectionId);\n    }\n}\nexports.SpeakerRecognitionConnectionFactory = SpeakerRecognitionConnectionFactory;\nclass VoiceProfileConnectionFactory extends SpeakerRecognitionConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        return super.create(config, authInfo, \"profile\", connectionId);\n    }\n}\nexports.VoiceProfileConnectionFactory = VoiceProfileConnectionFactory;\n\n//# sourceMappingURL=SpeakerRecognitionConnectionFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3BlYWtlclJlY29nbml0aW9uQ29ubmVjdGlvbkZhY3RvcnkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFDQUFxQyxHQUFHLDJDQUEyQztBQUNuRjtBQUNBLHFCQUFxQixtQkFBTyxDQUFDLDJJQUE4QjtBQUMzRCxxQkFBcUIsbUJBQU8sQ0FBQyxxSEFBbUI7QUFDaEQsbUNBQW1DLG1CQUFPLENBQUMsc0pBQTRCO0FBQ3ZFLHFCQUFxQixtQkFBTyxDQUFDLDBIQUFjO0FBQzNDLHlCQUF5QixtQkFBTyxDQUFDLGtJQUFrQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzSEFBc0gsT0FBTyxzQkFBc0IsV0FBVztBQUM5SjtBQUNBLDBCQUEwQixLQUFLLGNBQWMsOEJBQThCLEdBQUcsYUFBYTtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDOztBQUVyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1NwZWFrZXJSZWNvZ25pdGlvbkNvbm5lY3Rpb25GYWN0b3J5LmpzPzgyMjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVm9pY2VQcm9maWxlQ29ubmVjdGlvbkZhY3RvcnkgPSBleHBvcnRzLlNwZWFrZXJSZWNvZ25pdGlvbkNvbm5lY3Rpb25GYWN0b3J5ID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgbWF4LWNsYXNzZXMtcGVyLWZpbGUgKi9cbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi9jb21tb24uYnJvd3Nlci9FeHBvcnRzLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18yID0gcmVxdWlyZShcIi4uL3Nkay9FeHBvcnRzLmpzXCIpO1xuY29uc3QgQ29ubmVjdGlvbkZhY3RvcnlCYXNlX2pzXzEgPSByZXF1aXJlKFwiLi9Db25uZWN0aW9uRmFjdG9yeUJhc2UuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzMgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuY29uc3QgSGVhZGVyTmFtZXNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlck5hbWVzLmpzXCIpO1xuY2xhc3MgU3BlYWtlclJlY29nbml0aW9uQ29ubmVjdGlvbkZhY3RvcnlCYXNlIGV4dGVuZHMgQ29ubmVjdGlvbkZhY3RvcnlCYXNlX2pzXzEuQ29ubmVjdGlvbkZhY3RvcnlCYXNlIHtcbiAgICBjcmVhdGUoY29uZmlnLCBhdXRoSW5mbywgZW5kcG9pbnRQYXRoLCBjb25uZWN0aW9uSWQpIHtcbiAgICAgICAgbGV0IGVuZHBvaW50ID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fRW5kcG9pbnQpO1xuICAgICAgICBpZiAoIWVuZHBvaW50KSB7XG4gICAgICAgICAgICBjb25zdCByZWdpb24gPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9SZWdpb24pO1xuICAgICAgICAgICAgY29uc3QgaG9zdFN1ZmZpeCA9IENvbm5lY3Rpb25GYWN0b3J5QmFzZV9qc18xLkNvbm5lY3Rpb25GYWN0b3J5QmFzZS5nZXRIb3N0U3VmZml4KHJlZ2lvbik7XG4gICAgICAgICAgICBjb25zdCBob3N0ID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fSG9zdCwgYHdzczovLyR7cmVnaW9ufS5zcHItZnJvbnRlbmQuc3BlZWNoJHtob3N0U3VmZml4fWApO1xuICAgICAgICAgICAgY29uc3Qgc2NlbmFyaW8gPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9TcGVha2VySWRNb2RlLCBcIlRleHRJbmRlcGVuZGVudElkZW50aWZpY2F0aW9uXCIpO1xuICAgICAgICAgICAgZW5kcG9pbnQgPSBgJHtob3N0fS9zcGVha2VyL3dzLyR7dGhpcy5zY2VuYXJpb1RvUGF0aChzY2VuYXJpbyl9LyR7ZW5kcG9pbnRQYXRofWA7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcXVlcnlQYXJhbXMgPSB7XG4gICAgICAgICAgICBmb3JtYXQ6IFwic2ltcGxlXCIsXG4gICAgICAgICAgICBsYW5ndWFnZTogY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fUmVjb0xhbmd1YWdlKSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5zZXRDb21tb25VcmxQYXJhbXMoY29uZmlnLCBxdWVyeVBhcmFtcywgZW5kcG9pbnQpO1xuICAgICAgICBjb25zdCBoZWFkZXJzID0ge307XG4gICAgICAgIGlmIChhdXRoSW5mby50b2tlbiAhPT0gdW5kZWZpbmVkICYmIGF1dGhJbmZvLnRva2VuICE9PSBcIlwiKSB7XG4gICAgICAgICAgICBoZWFkZXJzW2F1dGhJbmZvLmhlYWRlck5hbWVdID0gYXV0aEluZm8udG9rZW47XG4gICAgICAgIH1cbiAgICAgICAgaGVhZGVyc1tIZWFkZXJOYW1lc19qc18xLkhlYWRlck5hbWVzLkNvbm5lY3Rpb25JZF0gPSBjb25uZWN0aW9uSWQ7XG4gICAgICAgIGhlYWRlcnNbSGVhZGVyTmFtZXNfanNfMS5IZWFkZXJOYW1lcy5TcElEQXV0aEtleV0gPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9LZXkpO1xuICAgICAgICBjb25maWcucGFyYW1ldGVycy5zZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9VcmwsIGVuZHBvaW50KTtcbiAgICAgICAgY29uc3QgZW5hYmxlQ29tcHJlc3Npb24gPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShcIlNQRUVDSC1FbmFibGVXZWJzb2NrZXRDb21wcmVzc2lvblwiLCBcImZhbHNlXCIpID09PSBcInRydWVcIjtcbiAgICAgICAgcmV0dXJuIG5ldyBFeHBvcnRzX2pzXzEuV2Vic29ja2V0Q29ubmVjdGlvbihlbmRwb2ludCwgcXVlcnlQYXJhbXMsIGhlYWRlcnMsIG5ldyBFeHBvcnRzX2pzXzMuV2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlcigpLCBFeHBvcnRzX2pzXzEuUHJveHlJbmZvLmZyb21SZWNvZ25pemVyQ29uZmlnKGNvbmZpZyksIGVuYWJsZUNvbXByZXNzaW9uLCBjb25uZWN0aW9uSWQpO1xuICAgIH1cbiAgICBzY2VuYXJpb1RvUGF0aChtb2RlKSB7XG4gICAgICAgIHN3aXRjaCAobW9kZSkge1xuICAgICAgICAgICAgY2FzZSBcIlRleHRJbmRlcGVuZGVudFZlcmlmaWNhdGlvblwiOlxuICAgICAgICAgICAgY2FzZSBcIjJcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ2ZXJpZmljYXRpb24vdGV4dC1pbmRlcGVuZGVudFwiO1xuICAgICAgICAgICAgY2FzZSBcIlRleHREZXBlbmRlbnRWZXJpZmljYXRpb25cIjpcbiAgICAgICAgICAgIGNhc2UgXCIxXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwidmVyaWZpY2F0aW9uL3RleHQtZGVwZW5kZW50XCI7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBcImlkZW50aWZpY2F0aW9uL3RleHQtaW5kZXBlbmRlbnRcIjtcbiAgICAgICAgfVxuICAgIH1cbn1cbmNsYXNzIFNwZWFrZXJSZWNvZ25pdGlvbkNvbm5lY3Rpb25GYWN0b3J5IGV4dGVuZHMgU3BlYWtlclJlY29nbml0aW9uQ29ubmVjdGlvbkZhY3RvcnlCYXNlIHtcbiAgICBjcmVhdGUoY29uZmlnLCBhdXRoSW5mbywgY29ubmVjdGlvbklkKSB7XG4gICAgICAgIHJldHVybiBzdXBlci5jcmVhdGUoY29uZmlnLCBhdXRoSW5mbywgXCJyZWNvZ25pdGlvblwiLCBjb25uZWN0aW9uSWQpO1xuICAgIH1cbn1cbmV4cG9ydHMuU3BlYWtlclJlY29nbml0aW9uQ29ubmVjdGlvbkZhY3RvcnkgPSBTcGVha2VyUmVjb2duaXRpb25Db25uZWN0aW9uRmFjdG9yeTtcbmNsYXNzIFZvaWNlUHJvZmlsZUNvbm5lY3Rpb25GYWN0b3J5IGV4dGVuZHMgU3BlYWtlclJlY29nbml0aW9uQ29ubmVjdGlvbkZhY3RvcnlCYXNlIHtcbiAgICBjcmVhdGUoY29uZmlnLCBhdXRoSW5mbywgY29ubmVjdGlvbklkKSB7XG4gICAgICAgIHJldHVybiBzdXBlci5jcmVhdGUoY29uZmlnLCBhdXRoSW5mbywgXCJwcm9maWxlXCIsIGNvbm5lY3Rpb25JZCk7XG4gICAgfVxufVxuZXhwb3J0cy5Wb2ljZVByb2ZpbGVDb25uZWN0aW9uRmFjdG9yeSA9IFZvaWNlUHJvZmlsZUNvbm5lY3Rpb25GYWN0b3J5O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TcGVha2VyUmVjb2duaXRpb25Db25uZWN0aW9uRmFjdG9yeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerRecognitionConnectionFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerServiceRecognizer.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerServiceRecognizer.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeakerServiceRecognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_4 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = __webpack_require__(/*! ./SpeechConnectionMessage.Internal.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionMessage.Internal.js\");\n// eslint-disable-next-line max-classes-per-file\nclass SpeakerServiceRecognizer extends Exports_js_4.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.privSpeakerRecognizer = recognizer;\n        this.privSpeakerAudioSource = audioSource;\n        this.recognizeSpeaker = (model) => this.recognizeSpeakerOnce(model);\n        this.sendPrePayloadJSONOverride = () => this.noOp();\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        let processed = false;\n        const resultProps = new Exports_js_3.PropertyCollection();\n        if (connectionMessage.messageType === Exports_js_2.MessageType.Text) {\n            resultProps.setProperty(Exports_js_3.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speaker.response\":\n                const response = JSON.parse(connectionMessage.textBody);\n                let result;\n                if (response.status.statusCode.toLowerCase() !== \"success\") {\n                    result = new Exports_js_3.SpeakerRecognitionResult(response, Exports_js_3.ResultReason.Canceled, Exports_js_3.CancellationErrorCode.ServiceError, response.status.reason);\n                }\n                else {\n                    result = new Exports_js_3.SpeakerRecognitionResult(response, Exports_js_3.ResultReason.RecognizedSpeaker);\n                }\n                if (!!this.privResultDeferral) {\n                    this.privResultDeferral.resolve(result);\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        const defferal = new Exports_js_2.Deferred();\n        defferal.resolve(processed);\n        return defferal.promise;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_3.PropertyCollection();\n        properties.setProperty(Exports_js_4.CancellationErrorCodePropertyName, Exports_js_3.CancellationErrorCode[errorCode]);\n        if (!!this.privResultDeferral) {\n            const result = new Exports_js_3.SpeakerRecognitionResult({\n                scenario: this.privSpeakerModel.scenario,\n                status: { statusCode: error, reason: error }\n            }, Exports_js_3.ResultReason.Canceled, errorCode, error);\n            try {\n                this.privResultDeferral.resolve(result);\n            }\n            catch (error) {\n                this.privResultDeferral.reject(error);\n            }\n        }\n    }\n    async recognizeSpeakerOnce(model) {\n        this.privSpeakerModel = model;\n        this.voiceProfileType = model.scenario;\n        if (!this.privResultDeferral) {\n            this.privResultDeferral = new Exports_js_2.Deferred();\n        }\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privSpeakerAudioSource.events);\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        const preAudioPromise = this.sendPreAudioMessages(this.extractSpeakerContext(model));\n        const node = await this.privSpeakerAudioSource.attach(this.privRequestSession.audioNodeId);\n        const format = await this.privSpeakerAudioSource.format;\n        const deviceInfo = await this.privSpeakerAudioSource.deviceInfo;\n        const audioNode = new Exports_js_1.ReplayableAudioNode(node, format.avgBytesPerSec);\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n        try {\n            await conPromise;\n            await preAudioPromise;\n        }\n        catch (err) {\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.ConnectionFailure, err);\n        }\n        const sessionStartEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n        if (!!this.privRecognizer.sessionStarted) {\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n        }\n        void this.receiveMessage();\n        const audioSendPromise = this.sendAudio(audioNode);\n        // /* eslint-disable no-empty */\n        audioSendPromise.then(() => { }, (error) => {\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        });\n        return this.privResultDeferral.promise;\n    }\n    async sendPreAudioMessages(context) {\n        const connection = await this.fetchConnection();\n        await this.sendSpeakerRecognition(connection, context);\n        // await this.sendWaveHeader(connection);\n    }\n    async sendSpeakerRecognition(connection, context) {\n        const speakerContextJson = JSON.stringify(context);\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speaker.context\", this.privRequestSession.requestId, \"application/json; charset=utf-8\", speakerContextJson));\n    }\n    extractSpeakerContext(model) {\n        return {\n            features: {\n                interimResult: \"enabled\",\n                progressiveDetection: \"disabled\",\n            },\n            profileIds: model.profileIds,\n            scenario: model.scenario,\n        };\n    }\n}\nexports.SpeakerServiceRecognizer = SpeakerServiceRecognizer;\n\n//# sourceMappingURL=SpeakerServiceRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeakerServiceRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionFactory.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionFactory.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechConnectionFactory = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = __webpack_require__(/*! ./ConnectionFactoryBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js\");\nconst Exports_js_4 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ./HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nconst QueryParameterNames_js_1 = __webpack_require__(/*! ./QueryParameterNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js\");\nclass SpeechConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.interactiveRelativeUri = \"/speech/recognition/interactive/cognitiveservices/v1\";\n        this.conversationRelativeUri = \"/speech/recognition/conversation/cognitiveservices/v1\";\n        this.dictationRelativeUri = \"/speech/recognition/dictation/cognitiveservices/v1\";\n        this.universalUri = \"/speech/universal/v\";\n    }\n    create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        const region = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Region, undefined);\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        const host = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\n        const queryParams = {};\n        const endpointId = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        const language = config.parameters.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n        if (endpointId) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\n            }\n        }\n        else if (language) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.Language) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.Language] = language;\n            }\n        }\n        if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.Format) === -1) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.Format] = config.parameters.getProperty(Exports_js_2.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]).toLowerCase();\n        }\n        if (config.autoDetectSourceLanguages !== undefined) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.EnableLanguageId] = \"true\";\n        }\n        this.setCommonUrlParams(config, queryParams, endpoint);\n        if (!endpoint) {\n            switch (config.recognitionMode) {\n                case Exports_js_4.RecognitionMode.Conversation:\n                    if (config.parameters.getProperty(Exports_js_2.ForceDictationPropertyName, \"false\") === \"true\") {\n                        endpoint = host + this.dictationRelativeUri;\n                    }\n                    else {\n                        if (config.recognitionEndpointVersion !== undefined && parseInt(config.recognitionEndpointVersion, 10) > 1) {\n                            endpoint = `${host}${this.universalUri}${config.recognitionEndpointVersion}`;\n                        }\n                        else {\n                            endpoint = host + this.conversationRelativeUri;\n                        }\n                    }\n                    break;\n                case Exports_js_4.RecognitionMode.Dictation:\n                    endpoint = host + this.dictationRelativeUri;\n                    break;\n                default:\n                    if (config.recognitionEndpointVersion !== undefined && parseInt(config.recognitionEndpointVersion, 10) > 1) {\n                        endpoint = `${host}${this.universalUri}${config.recognitionEndpointVersion}`;\n                    }\n                    else {\n                        endpoint = host + this.interactiveRelativeUri; // default is interactive\n                    }\n                    break;\n            }\n        }\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        const webSocketConnection = new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_4.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n        // Set the value of SpeechServiceConnection_Url to webSocketConnection.uri (and not to `endpoint`), since this value is the final\n        // URI that was used to make the connection (including query parameters).\n        const uri = webSocketConnection.uri;\n        config.parameters.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Url, uri);\n        return webSocketConnection;\n    }\n}\nexports.SpeechConnectionFactory = SpeechConnectionFactory;\n\n//# sourceMappingURL=SpeechConnectionFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionMessage.Internal.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionMessage.Internal.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechConnectionMessage = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ./HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nclass SpeechConnectionMessage extends Exports_js_1.ConnectionMessage {\n    constructor(messageType, path, requestId, contentType, body, streamId, additionalHeaders, id) {\n        if (!path) {\n            throw new Exports_js_1.ArgumentNullError(\"path\");\n        }\n        if (!requestId) {\n            throw new Exports_js_1.ArgumentNullError(\"requestId\");\n        }\n        const headers = {};\n        headers[HeaderNames_js_1.HeaderNames.Path] = path;\n        headers[HeaderNames_js_1.HeaderNames.RequestId] = requestId;\n        headers[HeaderNames_js_1.HeaderNames.RequestTimestamp] = new Date().toISOString();\n        if (contentType) {\n            headers[HeaderNames_js_1.HeaderNames.ContentType] = contentType;\n        }\n        if (streamId) {\n            headers[HeaderNames_js_1.HeaderNames.RequestStreamId] = streamId;\n        }\n        if (additionalHeaders) {\n            for (const headerName in additionalHeaders) {\n                if (headerName) {\n                    headers[headerName] = additionalHeaders[headerName];\n                }\n            }\n        }\n        if (id) {\n            super(messageType, body, headers, id);\n        }\n        else {\n            super(messageType, body, headers);\n        }\n        this.privPath = path;\n        this.privRequestId = requestId;\n        this.privContentType = contentType;\n        this.privStreamId = streamId;\n        this.privAdditionalHeaders = additionalHeaders;\n    }\n    get path() {\n        return this.privPath;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get contentType() {\n        return this.privContentType;\n    }\n    get streamId() {\n        return this.privStreamId;\n    }\n    get additionalHeaders() {\n        return this.privAdditionalHeaders;\n    }\n    static fromConnectionMessage(message) {\n        let path = null;\n        let requestId = null;\n        let contentType = null;\n        // let requestTimestamp = null;\n        let streamId = null;\n        const additionalHeaders = {};\n        if (message.headers) {\n            for (const headerName in message.headers) {\n                if (headerName) {\n                    if (headerName.toLowerCase() === HeaderNames_js_1.HeaderNames.Path.toLowerCase()) {\n                        path = message.headers[headerName];\n                    }\n                    else if (headerName.toLowerCase() === HeaderNames_js_1.HeaderNames.RequestId.toLowerCase()) {\n                        requestId = message.headers[headerName];\n                        // } else if (headerName.toLowerCase() === HeaderNames.RequestTimestamp.toLowerCase()) {\n                        //  requestTimestamp = message.headers[headerName];\n                    }\n                    else if (headerName.toLowerCase() === HeaderNames_js_1.HeaderNames.ContentType.toLowerCase()) {\n                        contentType = message.headers[headerName];\n                    }\n                    else if (headerName.toLowerCase() === HeaderNames_js_1.HeaderNames.RequestStreamId.toLowerCase()) {\n                        streamId = message.headers[headerName];\n                    }\n                    else {\n                        additionalHeaders[headerName] = message.headers[headerName];\n                    }\n                }\n            }\n        }\n        return new SpeechConnectionMessage(message.messageType, path, requestId, contentType, message.body, streamId, additionalHeaders, message.id);\n    }\n}\nexports.SpeechConnectionMessage = SpeechConnectionMessage;\n\n//# sourceMappingURL=SpeechConnectionMessage.Internal.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3BlZWNoQ29ubmVjdGlvbk1lc3NhZ2UuSW50ZXJuYWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQjtBQUMvQixxQkFBcUIsbUJBQU8sQ0FBQywySEFBc0I7QUFDbkQseUJBQXlCLG1CQUFPLENBQUMsa0lBQWtCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7O0FBRS9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3BlZWNoQ29ubmVjdGlvbk1lc3NhZ2UuSW50ZXJuYWwuanM/MDAwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TcGVlY2hDb25uZWN0aW9uTWVzc2FnZSA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi9jb21tb24vRXhwb3J0cy5qc1wiKTtcbmNvbnN0IEhlYWRlck5hbWVzX2pzXzEgPSByZXF1aXJlKFwiLi9IZWFkZXJOYW1lcy5qc1wiKTtcbmNsYXNzIFNwZWVjaENvbm5lY3Rpb25NZXNzYWdlIGV4dGVuZHMgRXhwb3J0c19qc18xLkNvbm5lY3Rpb25NZXNzYWdlIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlVHlwZSwgcGF0aCwgcmVxdWVzdElkLCBjb250ZW50VHlwZSwgYm9keSwgc3RyZWFtSWQsIGFkZGl0aW9uYWxIZWFkZXJzLCBpZCkge1xuICAgICAgICBpZiAoIXBhdGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFeHBvcnRzX2pzXzEuQXJndW1lbnROdWxsRXJyb3IoXCJwYXRoXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghcmVxdWVzdElkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXhwb3J0c19qc18xLkFyZ3VtZW50TnVsbEVycm9yKFwicmVxdWVzdElkXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7fTtcbiAgICAgICAgaGVhZGVyc1tIZWFkZXJOYW1lc19qc18xLkhlYWRlck5hbWVzLlBhdGhdID0gcGF0aDtcbiAgICAgICAgaGVhZGVyc1tIZWFkZXJOYW1lc19qc18xLkhlYWRlck5hbWVzLlJlcXVlc3RJZF0gPSByZXF1ZXN0SWQ7XG4gICAgICAgIGhlYWRlcnNbSGVhZGVyTmFtZXNfanNfMS5IZWFkZXJOYW1lcy5SZXF1ZXN0VGltZXN0YW1wXSA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcbiAgICAgICAgaWYgKGNvbnRlbnRUeXBlKSB7XG4gICAgICAgICAgICBoZWFkZXJzW0hlYWRlck5hbWVzX2pzXzEuSGVhZGVyTmFtZXMuQ29udGVudFR5cGVdID0gY29udGVudFR5cGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHN0cmVhbUlkKSB7XG4gICAgICAgICAgICBoZWFkZXJzW0hlYWRlck5hbWVzX2pzXzEuSGVhZGVyTmFtZXMuUmVxdWVzdFN0cmVhbUlkXSA9IHN0cmVhbUlkO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhZGRpdGlvbmFsSGVhZGVycykge1xuICAgICAgICAgICAgZm9yIChjb25zdCBoZWFkZXJOYW1lIGluIGFkZGl0aW9uYWxIZWFkZXJzKSB7XG4gICAgICAgICAgICAgICAgaWYgKGhlYWRlck5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1toZWFkZXJOYW1lXSA9IGFkZGl0aW9uYWxIZWFkZXJzW2hlYWRlck5hbWVdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoaWQpIHtcbiAgICAgICAgICAgIHN1cGVyKG1lc3NhZ2VUeXBlLCBib2R5LCBoZWFkZXJzLCBpZCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzdXBlcihtZXNzYWdlVHlwZSwgYm9keSwgaGVhZGVycyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcml2UGF0aCA9IHBhdGg7XG4gICAgICAgIHRoaXMucHJpdlJlcXVlc3RJZCA9IHJlcXVlc3RJZDtcbiAgICAgICAgdGhpcy5wcml2Q29udGVudFR5cGUgPSBjb250ZW50VHlwZTtcbiAgICAgICAgdGhpcy5wcml2U3RyZWFtSWQgPSBzdHJlYW1JZDtcbiAgICAgICAgdGhpcy5wcml2QWRkaXRpb25hbEhlYWRlcnMgPSBhZGRpdGlvbmFsSGVhZGVycztcbiAgICB9XG4gICAgZ2V0IHBhdGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQYXRoO1xuICAgIH1cbiAgICBnZXQgcmVxdWVzdElkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVxdWVzdElkO1xuICAgIH1cbiAgICBnZXQgY29udGVudFR5cGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZDb250ZW50VHlwZTtcbiAgICB9XG4gICAgZ2V0IHN0cmVhbUlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3RyZWFtSWQ7XG4gICAgfVxuICAgIGdldCBhZGRpdGlvbmFsSGVhZGVycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkFkZGl0aW9uYWxIZWFkZXJzO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUNvbm5lY3Rpb25NZXNzYWdlKG1lc3NhZ2UpIHtcbiAgICAgICAgbGV0IHBhdGggPSBudWxsO1xuICAgICAgICBsZXQgcmVxdWVzdElkID0gbnVsbDtcbiAgICAgICAgbGV0IGNvbnRlbnRUeXBlID0gbnVsbDtcbiAgICAgICAgLy8gbGV0IHJlcXVlc3RUaW1lc3RhbXAgPSBudWxsO1xuICAgICAgICBsZXQgc3RyZWFtSWQgPSBudWxsO1xuICAgICAgICBjb25zdCBhZGRpdGlvbmFsSGVhZGVycyA9IHt9O1xuICAgICAgICBpZiAobWVzc2FnZS5oZWFkZXJzKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGhlYWRlck5hbWUgaW4gbWVzc2FnZS5oZWFkZXJzKSB7XG4gICAgICAgICAgICAgICAgaWYgKGhlYWRlck5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGhlYWRlck5hbWUudG9Mb3dlckNhc2UoKSA9PT0gSGVhZGVyTmFtZXNfanNfMS5IZWFkZXJOYW1lcy5QYXRoLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGggPSBtZXNzYWdlLmhlYWRlcnNbaGVhZGVyTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoaGVhZGVyTmFtZS50b0xvd2VyQ2FzZSgpID09PSBIZWFkZXJOYW1lc19qc18xLkhlYWRlck5hbWVzLlJlcXVlc3RJZC50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0SWQgPSBtZXNzYWdlLmhlYWRlcnNbaGVhZGVyTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB9IGVsc2UgaWYgKGhlYWRlck5hbWUudG9Mb3dlckNhc2UoKSA9PT0gSGVhZGVyTmFtZXMuUmVxdWVzdFRpbWVzdGFtcC50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgcmVxdWVzdFRpbWVzdGFtcCA9IG1lc3NhZ2UuaGVhZGVyc1toZWFkZXJOYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChoZWFkZXJOYW1lLnRvTG93ZXJDYXNlKCkgPT09IEhlYWRlck5hbWVzX2pzXzEuSGVhZGVyTmFtZXMuQ29udGVudFR5cGUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudFR5cGUgPSBtZXNzYWdlLmhlYWRlcnNbaGVhZGVyTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoaGVhZGVyTmFtZS50b0xvd2VyQ2FzZSgpID09PSBIZWFkZXJOYW1lc19qc18xLkhlYWRlck5hbWVzLlJlcXVlc3RTdHJlYW1JZC50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJlYW1JZCA9IG1lc3NhZ2UuaGVhZGVyc1toZWFkZXJOYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZGl0aW9uYWxIZWFkZXJzW2hlYWRlck5hbWVdID0gbWVzc2FnZS5oZWFkZXJzW2hlYWRlck5hbWVdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgU3BlZWNoQ29ubmVjdGlvbk1lc3NhZ2UobWVzc2FnZS5tZXNzYWdlVHlwZSwgcGF0aCwgcmVxdWVzdElkLCBjb250ZW50VHlwZSwgbWVzc2FnZS5ib2R5LCBzdHJlYW1JZCwgYWRkaXRpb25hbEhlYWRlcnMsIG1lc3NhZ2UuaWQpO1xuICAgIH1cbn1cbmV4cG9ydHMuU3BlZWNoQ29ubmVjdGlvbk1lc3NhZ2UgPSBTcGVlY2hDb25uZWN0aW9uTWVzc2FnZTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BlZWNoQ29ubmVjdGlvbk1lc3NhZ2UuSW50ZXJuYWwuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionMessage.Internal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechContext.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechContext.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechContext = void 0;\n/**\n * Represents the JSON used in the speech.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\nclass SpeechContext {\n    constructor(dynamicGrammar) {\n        this.privContext = {};\n        this.privDynamicGrammar = dynamicGrammar;\n    }\n    /**\n     * Gets a section of the speech.context object.\n     * @param sectionName Name of the section to get.\n     * @return string or Context JSON serializable object that represents the value.\n     */\n    getSection(sectionName) {\n        return (this.privContext[sectionName] || {});\n    }\n    /**\n     * Adds a section to the speech.context object.\n     * @param sectionName Name of the section to add.\n     * @param value JSON serializable object that represents the value.\n     */\n    setSection(sectionName, value) {\n        this.privContext[sectionName] = value;\n    }\n    /**\n     * @Internal\n     * This is only used by pronunciation assessment config.\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    setPronunciationAssessmentParams(params, contentAssessmentTopic, isSpeakerDiarizationEnabled = false) {\n        if (this.privContext.phraseDetection === undefined) {\n            this.privContext.phraseDetection = {\n                enrichment: {\n                    pronunciationAssessment: {}\n                }\n            };\n        }\n        if (this.privContext.phraseDetection.enrichment === undefined) {\n            this.privContext.phraseDetection.enrichment = {\n                pronunciationAssessment: {}\n            };\n        }\n        this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params);\n        if (isSpeakerDiarizationEnabled) {\n            this.privContext.phraseDetection.mode = \"Conversation\";\n        }\n        this.setWordLevelTimings();\n        this.privContext.phraseOutput.detailed.options.push(\"PronunciationAssessment\");\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"SNR\") === -1) {\n            this.privContext.phraseOutput.detailed.options.push(\"SNR\");\n        }\n        if (!!contentAssessmentTopic) {\n            this.privContext.phraseDetection.enrichment.contentAssessment = {\n                topic: contentAssessmentTopic\n            };\n            this.privContext.phraseOutput.detailed.options.push(\"ContentAssessment\");\n        }\n    }\n    setDetailedOutputFormat() {\n        if (this.privContext.phraseOutput === undefined) {\n            this.privContext.phraseOutput = {\n                detailed: {\n                    options: []\n                },\n                format: {}\n            };\n        }\n        if (this.privContext.phraseOutput.detailed === undefined) {\n            this.privContext.phraseOutput.detailed = {\n                options: []\n            };\n        }\n        this.privContext.phraseOutput.format = \"Detailed\";\n    }\n    setWordLevelTimings() {\n        if (this.privContext.phraseOutput === undefined) {\n            this.privContext.phraseOutput = {\n                detailed: {\n                    options: []\n                },\n                format: {}\n            };\n        }\n        if (this.privContext.phraseOutput.detailed === undefined) {\n            this.privContext.phraseOutput.detailed = {\n                options: []\n            };\n        }\n        this.privContext.phraseOutput.format = \"Detailed\";\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"WordTimings\") === -1) {\n            this.privContext.phraseOutput.detailed.options.push(\"WordTimings\");\n        }\n    }\n    setSpeakerDiarizationAudioOffsetMs(audioOffsetMs) {\n        this.privContext.phraseDetection.speakerDiarization.audioOffsetMs = audioOffsetMs;\n    }\n    toJSON() {\n        const dgi = this.privDynamicGrammar.generateGrammarObject();\n        this.setSection(\"dgi\", dgi);\n        const ret = JSON.stringify(this.privContext);\n        return ret;\n    }\n}\nexports.SpeechContext = SpeechContext;\n\n//# sourceMappingURL=SpeechContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3BlZWNoQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7O0FBRXJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3BlZWNoQ29udGV4dC5qcz8xNzY5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNwZWVjaENvbnRleHQgPSB2b2lkIDA7XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIEpTT04gdXNlZCBpbiB0aGUgc3BlZWNoLmNvbnRleHQgbWVzc2FnZSBzZW50IHRvIHRoZSBzcGVlY2ggc2VydmljZS5cbiAqIFRoZSBkeW5hbWljIGdyYW1tYXIgaXMgYWx3YXlzIHJlZnJlc2hlZCBmcm9tIHRoZSBlbmNhcHN1bGF0ZWQgZHluYW1pYyBncmFtbWFyIG9iamVjdC5cbiAqL1xuY2xhc3MgU3BlZWNoQ29udGV4dCB7XG4gICAgY29uc3RydWN0b3IoZHluYW1pY0dyYW1tYXIpIHtcbiAgICAgICAgdGhpcy5wcml2Q29udGV4dCA9IHt9O1xuICAgICAgICB0aGlzLnByaXZEeW5hbWljR3JhbW1hciA9IGR5bmFtaWNHcmFtbWFyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIGEgc2VjdGlvbiBvZiB0aGUgc3BlZWNoLmNvbnRleHQgb2JqZWN0LlxuICAgICAqIEBwYXJhbSBzZWN0aW9uTmFtZSBOYW1lIG9mIHRoZSBzZWN0aW9uIHRvIGdldC5cbiAgICAgKiBAcmV0dXJuIHN0cmluZyBvciBDb250ZXh0IEpTT04gc2VyaWFsaXphYmxlIG9iamVjdCB0aGF0IHJlcHJlc2VudHMgdGhlIHZhbHVlLlxuICAgICAqL1xuICAgIGdldFNlY3Rpb24oc2VjdGlvbk5hbWUpIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLnByaXZDb250ZXh0W3NlY3Rpb25OYW1lXSB8fCB7fSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFkZHMgYSBzZWN0aW9uIHRvIHRoZSBzcGVlY2guY29udGV4dCBvYmplY3QuXG4gICAgICogQHBhcmFtIHNlY3Rpb25OYW1lIE5hbWUgb2YgdGhlIHNlY3Rpb24gdG8gYWRkLlxuICAgICAqIEBwYXJhbSB2YWx1ZSBKU09OIHNlcmlhbGl6YWJsZSBvYmplY3QgdGhhdCByZXByZXNlbnRzIHRoZSB2YWx1ZS5cbiAgICAgKi9cbiAgICBzZXRTZWN0aW9uKHNlY3Rpb25OYW1lLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLnByaXZDb250ZXh0W3NlY3Rpb25OYW1lXSA9IHZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBASW50ZXJuYWxcbiAgICAgKiBUaGlzIGlzIG9ubHkgdXNlZCBieSBwcm9udW5jaWF0aW9uIGFzc2Vzc21lbnQgY29uZmlnLlxuICAgICAqIERvIG5vdCB1c2UgZXh0ZXJuYWxseSwgb2JqZWN0IHJldHVybmVkIHdpbGwgY2hhbmdlIHdpdGhvdXQgd2FybmluZyBvciBub3RpY2UuXG4gICAgICovXG4gICAgc2V0UHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRQYXJhbXMocGFyYW1zLCBjb250ZW50QXNzZXNzbWVudFRvcGljLCBpc1NwZWFrZXJEaWFyaXphdGlvbkVuYWJsZWQgPSBmYWxzZSkge1xuICAgICAgICBpZiAodGhpcy5wcml2Q29udGV4dC5waHJhc2VEZXRlY3Rpb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5wcml2Q29udGV4dC5waHJhc2VEZXRlY3Rpb24gPSB7XG4gICAgICAgICAgICAgICAgZW5yaWNobWVudDoge1xuICAgICAgICAgICAgICAgICAgICBwcm9udW5jaWF0aW9uQXNzZXNzbWVudDoge31cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnByaXZDb250ZXh0LnBocmFzZURldGVjdGlvbi5lbnJpY2htZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkNvbnRleHQucGhyYXNlRGV0ZWN0aW9uLmVucmljaG1lbnQgPSB7XG4gICAgICAgICAgICAgICAgcHJvbnVuY2lhdGlvbkFzc2Vzc21lbnQ6IHt9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJpdkNvbnRleHQucGhyYXNlRGV0ZWN0aW9uLmVucmljaG1lbnQucHJvbnVuY2lhdGlvbkFzc2Vzc21lbnQgPSBKU09OLnBhcnNlKHBhcmFtcyk7XG4gICAgICAgIGlmIChpc1NwZWFrZXJEaWFyaXphdGlvbkVuYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkNvbnRleHQucGhyYXNlRGV0ZWN0aW9uLm1vZGUgPSBcIkNvbnZlcnNhdGlvblwiO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2V0V29yZExldmVsVGltaW5ncygpO1xuICAgICAgICB0aGlzLnByaXZDb250ZXh0LnBocmFzZU91dHB1dC5kZXRhaWxlZC5vcHRpb25zLnB1c2goXCJQcm9udW5jaWF0aW9uQXNzZXNzbWVudFwiKTtcbiAgICAgICAgaWYgKHRoaXMucHJpdkNvbnRleHQucGhyYXNlT3V0cHV0LmRldGFpbGVkLm9wdGlvbnMuaW5kZXhPZihcIlNOUlwiKSA9PT0gLTEpIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkNvbnRleHQucGhyYXNlT3V0cHV0LmRldGFpbGVkLm9wdGlvbnMucHVzaChcIlNOUlwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoISFjb250ZW50QXNzZXNzbWVudFRvcGljKSB7XG4gICAgICAgICAgICB0aGlzLnByaXZDb250ZXh0LnBocmFzZURldGVjdGlvbi5lbnJpY2htZW50LmNvbnRlbnRBc3Nlc3NtZW50ID0ge1xuICAgICAgICAgICAgICAgIHRvcGljOiBjb250ZW50QXNzZXNzbWVudFRvcGljXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5wcml2Q29udGV4dC5waHJhc2VPdXRwdXQuZGV0YWlsZWQub3B0aW9ucy5wdXNoKFwiQ29udGVudEFzc2Vzc21lbnRcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2V0RGV0YWlsZWRPdXRwdXRGb3JtYXQoKSB7XG4gICAgICAgIGlmICh0aGlzLnByaXZDb250ZXh0LnBocmFzZU91dHB1dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnByaXZDb250ZXh0LnBocmFzZU91dHB1dCA9IHtcbiAgICAgICAgICAgICAgICBkZXRhaWxlZDoge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zOiBbXVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZm9ybWF0OiB7fVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wcml2Q29udGV4dC5waHJhc2VPdXRwdXQuZGV0YWlsZWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5wcml2Q29udGV4dC5waHJhc2VPdXRwdXQuZGV0YWlsZWQgPSB7XG4gICAgICAgICAgICAgICAgb3B0aW9uczogW11cbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcml2Q29udGV4dC5waHJhc2VPdXRwdXQuZm9ybWF0ID0gXCJEZXRhaWxlZFwiO1xuICAgIH1cbiAgICBzZXRXb3JkTGV2ZWxUaW1pbmdzKCkge1xuICAgICAgICBpZiAodGhpcy5wcml2Q29udGV4dC5waHJhc2VPdXRwdXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5wcml2Q29udGV4dC5waHJhc2VPdXRwdXQgPSB7XG4gICAgICAgICAgICAgICAgZGV0YWlsZWQ6IHtcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uczogW11cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZvcm1hdDoge31cbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucHJpdkNvbnRleHQucGhyYXNlT3V0cHV0LmRldGFpbGVkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkNvbnRleHQucGhyYXNlT3V0cHV0LmRldGFpbGVkID0ge1xuICAgICAgICAgICAgICAgIG9wdGlvbnM6IFtdXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJpdkNvbnRleHQucGhyYXNlT3V0cHV0LmZvcm1hdCA9IFwiRGV0YWlsZWRcIjtcbiAgICAgICAgaWYgKHRoaXMucHJpdkNvbnRleHQucGhyYXNlT3V0cHV0LmRldGFpbGVkLm9wdGlvbnMuaW5kZXhPZihcIldvcmRUaW1pbmdzXCIpID09PSAtMSkge1xuICAgICAgICAgICAgdGhpcy5wcml2Q29udGV4dC5waHJhc2VPdXRwdXQuZGV0YWlsZWQub3B0aW9ucy5wdXNoKFwiV29yZFRpbWluZ3NcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2V0U3BlYWtlckRpYXJpemF0aW9uQXVkaW9PZmZzZXRNcyhhdWRpb09mZnNldE1zKSB7XG4gICAgICAgIHRoaXMucHJpdkNvbnRleHQucGhyYXNlRGV0ZWN0aW9uLnNwZWFrZXJEaWFyaXphdGlvbi5hdWRpb09mZnNldE1zID0gYXVkaW9PZmZzZXRNcztcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICBjb25zdCBkZ2kgPSB0aGlzLnByaXZEeW5hbWljR3JhbW1hci5nZW5lcmF0ZUdyYW1tYXJPYmplY3QoKTtcbiAgICAgICAgdGhpcy5zZXRTZWN0aW9uKFwiZGdpXCIsIGRnaSk7XG4gICAgICAgIGNvbnN0IHJldCA9IEpTT04uc3RyaW5naWZ5KHRoaXMucHJpdkNvbnRleHQpO1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH1cbn1cbmV4cG9ydHMuU3BlZWNoQ29udGV4dCA9IFNwZWVjaENvbnRleHQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwZWVjaENvbnRleHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceConfig.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceConfig.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.type = exports.connectivity = exports.Device = exports.OS = exports.System = exports.Context = exports.SpeechServiceConfig = void 0;\n/* eslint-disable max-classes-per-file */\n// The config is serialized and sent as the Speech.Config\nclass SpeechServiceConfig {\n    constructor(context) {\n        this.context = context;\n    }\n    serialize() {\n        return JSON.stringify(this, (key, value) => {\n            if (value && typeof value === \"object\" && !Array.isArray(value)) {\n                const replacement = {};\n                for (const k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\n                    }\n                }\n                return replacement;\n            }\n            return value;\n        });\n    }\n    get Context() {\n        return this.context;\n    }\n    get Recognition() {\n        return this.recognition;\n    }\n    set Recognition(value) {\n        this.recognition = value.toLowerCase();\n    }\n}\nexports.SpeechServiceConfig = SpeechServiceConfig;\nclass Context {\n    constructor(os) {\n        this.system = new System();\n        this.os = os;\n    }\n}\nexports.Context = Context;\nclass System {\n    constructor() {\n        // Note: below will be patched for official builds.\n        const SPEECHSDK_CLIENTSDK_VERSION = \"1.42.0\";\n        this.name = \"SpeechSDK\";\n        this.version = SPEECHSDK_CLIENTSDK_VERSION;\n        this.build = \"JavaScript\";\n        this.lang = \"JavaScript\";\n    }\n}\nexports.System = System;\nclass OS {\n    constructor(platform, name, version) {\n        this.platform = platform;\n        this.name = name;\n        this.version = version;\n    }\n}\nexports.OS = OS;\nclass Device {\n    constructor(manufacturer, model, version) {\n        this.manufacturer = manufacturer;\n        this.model = model;\n        this.version = version;\n    }\n}\nexports.Device = Device;\nvar connectivity;\n(function (connectivity) {\n    connectivity[\"Bluetooth\"] = \"Bluetooth\";\n    connectivity[\"Wired\"] = \"Wired\";\n    connectivity[\"WiFi\"] = \"WiFi\";\n    connectivity[\"Cellular\"] = \"Cellular\";\n    connectivity[\"InBuilt\"] = \"InBuilt\";\n    connectivity[\"Unknown\"] = \"Unknown\";\n})(connectivity = exports.connectivity || (exports.connectivity = {}));\nvar type;\n(function (type) {\n    type[\"Phone\"] = \"Phone\";\n    type[\"Speaker\"] = \"Speaker\";\n    type[\"Car\"] = \"Car\";\n    type[\"Headset\"] = \"Headset\";\n    type[\"Thermostat\"] = \"Thermostat\";\n    type[\"Microphones\"] = \"Microphones\";\n    type[\"Deskphone\"] = \"Deskphone\";\n    type[\"RemoteControl\"] = \"RemoteControl\";\n    type[\"Unknown\"] = \"Unknown\";\n    type[\"File\"] = \"File\";\n    type[\"Stream\"] = \"Stream\";\n})(type = exports.type || (exports.type = {}));\n\n//# sourceMappingURL=SpeechServiceConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3BlZWNoU2VydmljZUNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWSxHQUFHLG9CQUFvQixHQUFHLGNBQWMsR0FBRyxVQUFVLEdBQUcsY0FBYyxHQUFHLGVBQWUsR0FBRywyQkFBMkI7QUFDbEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMENBQTBDLG9CQUFvQixLQUFLO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwQkFBMEIsWUFBWSxLQUFLOztBQUU1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1NwZWVjaFNlcnZpY2VDb25maWcuanM/ZWYzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50eXBlID0gZXhwb3J0cy5jb25uZWN0aXZpdHkgPSBleHBvcnRzLkRldmljZSA9IGV4cG9ydHMuT1MgPSBleHBvcnRzLlN5c3RlbSA9IGV4cG9ydHMuQ29udGV4dCA9IGV4cG9ydHMuU3BlZWNoU2VydmljZUNvbmZpZyA9IHZvaWQgMDtcbi8qIGVzbGludC1kaXNhYmxlIG1heC1jbGFzc2VzLXBlci1maWxlICovXG4vLyBUaGUgY29uZmlnIGlzIHNlcmlhbGl6ZWQgYW5kIHNlbnQgYXMgdGhlIFNwZWVjaC5Db25maWdcbmNsYXNzIFNwZWVjaFNlcnZpY2VDb25maWcge1xuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQpIHtcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcbiAgICB9XG4gICAgc2VyaWFsaXplKCkge1xuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcywgKGtleSwgdmFsdWUpID0+IHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVwbGFjZW1lbnQgPSB7fTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGsgaW4gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBrKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtYXNzaWdubWVudFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVwbGFjZW1lbnRbayAmJiBrLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpICsgay5zdWJzdHJpbmcoMSldID0gdmFsdWVba107XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcGxhY2VtZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0IENvbnRleHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHQ7XG4gICAgfVxuICAgIGdldCBSZWNvZ25pdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVjb2duaXRpb247XG4gICAgfVxuICAgIHNldCBSZWNvZ25pdGlvbih2YWx1ZSkge1xuICAgICAgICB0aGlzLnJlY29nbml0aW9uID0gdmFsdWUudG9Mb3dlckNhc2UoKTtcbiAgICB9XG59XG5leHBvcnRzLlNwZWVjaFNlcnZpY2VDb25maWcgPSBTcGVlY2hTZXJ2aWNlQ29uZmlnO1xuY2xhc3MgQ29udGV4dCB7XG4gICAgY29uc3RydWN0b3Iob3MpIHtcbiAgICAgICAgdGhpcy5zeXN0ZW0gPSBuZXcgU3lzdGVtKCk7XG4gICAgICAgIHRoaXMub3MgPSBvcztcbiAgICB9XG59XG5leHBvcnRzLkNvbnRleHQgPSBDb250ZXh0O1xuY2xhc3MgU3lzdGVtIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLy8gTm90ZTogYmVsb3cgd2lsbCBiZSBwYXRjaGVkIGZvciBvZmZpY2lhbCBidWlsZHMuXG4gICAgICAgIGNvbnN0IFNQRUVDSFNES19DTElFTlRTREtfVkVSU0lPTiA9IFwiMS40Mi4wXCI7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiU3BlZWNoU0RLXCI7XG4gICAgICAgIHRoaXMudmVyc2lvbiA9IFNQRUVDSFNES19DTElFTlRTREtfVkVSU0lPTjtcbiAgICAgICAgdGhpcy5idWlsZCA9IFwiSmF2YVNjcmlwdFwiO1xuICAgICAgICB0aGlzLmxhbmcgPSBcIkphdmFTY3JpcHRcIjtcbiAgICB9XG59XG5leHBvcnRzLlN5c3RlbSA9IFN5c3RlbTtcbmNsYXNzIE9TIHtcbiAgICBjb25zdHJ1Y3RvcihwbGF0Zm9ybSwgbmFtZSwgdmVyc2lvbikge1xuICAgICAgICB0aGlzLnBsYXRmb3JtID0gcGxhdGZvcm07XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMudmVyc2lvbiA9IHZlcnNpb247XG4gICAgfVxufVxuZXhwb3J0cy5PUyA9IE9TO1xuY2xhc3MgRGV2aWNlIHtcbiAgICBjb25zdHJ1Y3RvcihtYW51ZmFjdHVyZXIsIG1vZGVsLCB2ZXJzaW9uKSB7XG4gICAgICAgIHRoaXMubWFudWZhY3R1cmVyID0gbWFudWZhY3R1cmVyO1xuICAgICAgICB0aGlzLm1vZGVsID0gbW9kZWw7XG4gICAgICAgIHRoaXMudmVyc2lvbiA9IHZlcnNpb247XG4gICAgfVxufVxuZXhwb3J0cy5EZXZpY2UgPSBEZXZpY2U7XG52YXIgY29ubmVjdGl2aXR5O1xuKGZ1bmN0aW9uIChjb25uZWN0aXZpdHkpIHtcbiAgICBjb25uZWN0aXZpdHlbXCJCbHVldG9vdGhcIl0gPSBcIkJsdWV0b290aFwiO1xuICAgIGNvbm5lY3Rpdml0eVtcIldpcmVkXCJdID0gXCJXaXJlZFwiO1xuICAgIGNvbm5lY3Rpdml0eVtcIldpRmlcIl0gPSBcIldpRmlcIjtcbiAgICBjb25uZWN0aXZpdHlbXCJDZWxsdWxhclwiXSA9IFwiQ2VsbHVsYXJcIjtcbiAgICBjb25uZWN0aXZpdHlbXCJJbkJ1aWx0XCJdID0gXCJJbkJ1aWx0XCI7XG4gICAgY29ubmVjdGl2aXR5W1wiVW5rbm93blwiXSA9IFwiVW5rbm93blwiO1xufSkoY29ubmVjdGl2aXR5ID0gZXhwb3J0cy5jb25uZWN0aXZpdHkgfHwgKGV4cG9ydHMuY29ubmVjdGl2aXR5ID0ge30pKTtcbnZhciB0eXBlO1xuKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgdHlwZVtcIlBob25lXCJdID0gXCJQaG9uZVwiO1xuICAgIHR5cGVbXCJTcGVha2VyXCJdID0gXCJTcGVha2VyXCI7XG4gICAgdHlwZVtcIkNhclwiXSA9IFwiQ2FyXCI7XG4gICAgdHlwZVtcIkhlYWRzZXRcIl0gPSBcIkhlYWRzZXRcIjtcbiAgICB0eXBlW1wiVGhlcm1vc3RhdFwiXSA9IFwiVGhlcm1vc3RhdFwiO1xuICAgIHR5cGVbXCJNaWNyb3Bob25lc1wiXSA9IFwiTWljcm9waG9uZXNcIjtcbiAgICB0eXBlW1wiRGVza3Bob25lXCJdID0gXCJEZXNrcGhvbmVcIjtcbiAgICB0eXBlW1wiUmVtb3RlQ29udHJvbFwiXSA9IFwiUmVtb3RlQ29udHJvbFwiO1xuICAgIHR5cGVbXCJVbmtub3duXCJdID0gXCJVbmtub3duXCI7XG4gICAgdHlwZVtcIkZpbGVcIl0gPSBcIkZpbGVcIjtcbiAgICB0eXBlW1wiU3RyZWFtXCJdID0gXCJTdHJlYW1cIjtcbn0pKHR5cGUgPSBleHBvcnRzLnR5cGUgfHwgKGV4cG9ydHMudHlwZSA9IHt9KSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwZWVjaFNlcnZpY2VDb25maWcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceInterfaces.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceInterfaces.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=SpeechServiceInterfaces.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3BlZWNoU2VydmljZUludGVyZmFjZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1NwZWVjaFNlcnZpY2VJbnRlcmZhY2VzLmpzPzE0OTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BlZWNoU2VydmljZUludGVyZmFjZXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceInterfaces.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceRecognizer.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceRecognizer.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechServiceRecognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\n// eslint-disable-next-line max-classes-per-file\nclass SpeechServiceRecognizer extends Exports_js_2.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer);\n        this.privSpeechRecognizer = speechRecognizer;\n    }\n    async processTypeSpecificMessages(connectionMessage) {\n        let result;\n        const resultProps = new Exports_js_1.PropertyCollection();\n        let processed = false;\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"speech.hypothesis\":\n            case \"speech.fragment\":\n                const hypothesis = Exports_js_2.SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, hypothesis.asJson());\n                result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, Exports_js_1.ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, hypothesis.Offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, undefined, // Speaker Id\n                undefined, hypothesis.asJson(), resultProps);\n                this.privRequestSession.onHypothesis(hypothesis.Offset);\n                const ev = new Exports_js_1.SpeechRecognitionEventArgs(result, hypothesis.Offset, this.privRequestSession.sessionId);\n                if (!!this.privSpeechRecognizer.recognizing) {\n                    try {\n                        this.privSpeechRecognizer.recognizing(this.privSpeechRecognizer, ev);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                processed = true;\n                break;\n            case \"speech.phrase\":\n                const simple = Exports_js_2.SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, simple.asJson());\n                const resultReason = Exports_js_2.EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus, this.privExpectContentAssessmentResponse);\n                this.privRequestSession.onPhraseRecognized(simple.Offset + simple.Duration);\n                if (Exports_js_1.ResultReason.Canceled === resultReason) {\n                    const cancelReason = Exports_js_2.EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\n                    const cancellationErrorCode = Exports_js_2.EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\n                    await this.cancelRecognitionLocal(cancelReason, cancellationErrorCode, Exports_js_2.EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\n                }\n                else {\n                    // Like the native SDK's, don't event / return an EndOfDictation message.\n                    if (simple.RecognitionStatus === Exports_js_2.RecognitionStatus.EndOfDictation) {\n                        break;\n                    }\n                    if (this.privRecognizerConfig.parameters.getProperty(Exports_js_2.OutputFormatPropertyName) === Exports_js_1.OutputFormat[Exports_js_1.OutputFormat.Simple]) {\n                        result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, simple.DisplayText, simple.Duration, simple.Offset, simple.Language, simple.LanguageDetectionConfidence, undefined, // Speaker Id\n                        undefined, simple.asJson(), resultProps);\n                    }\n                    else {\n                        const detailed = Exports_js_2.DetailedSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\n                        resultProps.setProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult, detailed.asJson());\n                        result = new Exports_js_1.SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, detailed.RecognitionStatus === Exports_js_2.RecognitionStatus.Success ? detailed.NBest[0].Display : \"\", detailed.Duration, detailed.Offset, detailed.Language, detailed.LanguageDetectionConfidence, undefined, // Speaker Id\n                        undefined, detailed.asJson(), resultProps);\n                    }\n                    const event = new Exports_js_1.SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                    if (!!this.privSpeechRecognizer.recognized) {\n                        try {\n                            this.privSpeechRecognizer.recognized(this.privSpeechRecognizer, event);\n                            /* eslint-disable no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    if (!!this.privSuccessCallback) {\n                        try {\n                            this.privSuccessCallback(result);\n                        }\n                        catch (e) {\n                            if (!!this.privErrorCallback) {\n                                this.privErrorCallback(e);\n                            }\n                        }\n                        // Only invoke the call back once.\n                        // and if it's successful don't invoke the\n                        // error after that.\n                        this.privSuccessCallback = undefined;\n                        this.privErrorCallback = undefined;\n                    }\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        return processed;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_1.PropertyCollection();\n        properties.setProperty(Exports_js_2.CancellationErrorCodePropertyName, Exports_js_1.CancellationErrorCode[errorCode]);\n        if (!!this.privSpeechRecognizer.canceled) {\n            const cancelEvent = new Exports_js_1.SpeechRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n            try {\n                this.privSpeechRecognizer.canceled(this.privSpeechRecognizer, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new Exports_js_1.SpeechRecognitionResult(requestId, Exports_js_1.ResultReason.Canceled, undefined, // Text\n            undefined, // Duration\n            undefined, // Offset\n            undefined, // Language\n            undefined, // Language Detection Confidence\n            undefined, // Speaker Id\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                this.privSuccessCallback = undefined;\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n}\nexports.SpeechServiceRecognizer = SpeechServiceRecognizer;\n\n//# sourceMappingURL=SpeechServiceRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechServiceRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisAdapter.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisAdapter.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechSynthesisAdapter = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nclass SpeechSynthesisAdapter extends Exports_js_2.SynthesisAdapterBase {\n    constructor(authentication, connectionFactory, synthesizerConfig, speechSynthesizer, audioDestination) {\n        super(authentication, connectionFactory, synthesizerConfig, audioDestination);\n        this.privSpeechSynthesizer = speechSynthesizer;\n        this.privSynthesizer = speechSynthesizer;\n    }\n    setSynthesisContextSynthesisSection() {\n        this.privSynthesisContext.setSynthesisSection(this.privSpeechSynthesizer);\n    }\n    onSynthesisStarted(requestId) {\n        const synthesisStartEventArgs = new Exports_js_1.SpeechSynthesisEventArgs(new Exports_js_1.SpeechSynthesisResult(requestId, Exports_js_1.ResultReason.SynthesizingAudioStarted));\n        if (!!this.privSpeechSynthesizer.synthesisStarted) {\n            this.privSpeechSynthesizer.synthesisStarted(this.privSpeechSynthesizer, synthesisStartEventArgs);\n        }\n    }\n    onSynthesizing(audio) {\n        if (!!this.privSpeechSynthesizer.synthesizing) {\n            try {\n                const audioWithHeader = this.privSynthesisTurn.audioOutputFormat.addHeader(audio);\n                const ev = new Exports_js_1.SpeechSynthesisEventArgs(new Exports_js_1.SpeechSynthesisResult(this.privSynthesisTurn.requestId, Exports_js_1.ResultReason.SynthesizingAudio, audioWithHeader));\n                this.privSpeechSynthesizer.synthesizing(this.privSpeechSynthesizer, ev);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n    onSynthesisCancelled(result) {\n        if (!!this.privSpeechSynthesizer.SynthesisCanceled) {\n            const cancelEvent = new Exports_js_1.SpeechSynthesisEventArgs(result);\n            try {\n                this.privSpeechSynthesizer.SynthesisCanceled(this.privSpeechSynthesizer, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n    onSynthesisCompleted(result) {\n        if (this.privSpeechSynthesizer.synthesisCompleted) {\n            try {\n                this.privSpeechSynthesizer.synthesisCompleted(this.privSpeechSynthesizer, new Exports_js_1.SpeechSynthesisEventArgs(result));\n            }\n            catch (e) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n    onWordBoundary(wordBoundaryEventArgs) {\n        if (!!this.privSpeechSynthesizer.wordBoundary) {\n            try {\n                this.privSpeechSynthesizer.wordBoundary(this.privSpeechSynthesizer, wordBoundaryEventArgs);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n    onVisemeReceived(visemeEventArgs) {\n        if (!!this.privSpeechSynthesizer.visemeReceived) {\n            try {\n                this.privSpeechSynthesizer.visemeReceived(this.privSpeechSynthesizer, visemeEventArgs);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n    onBookmarkReached(bookmarkEventArgs) {\n        if (!!this.privSpeechSynthesizer.bookmarkReached) {\n            try {\n                this.privSpeechSynthesizer.bookmarkReached(this.privSpeechSynthesizer, bookmarkEventArgs);\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n}\nexports.SpeechSynthesisAdapter = SpeechSynthesisAdapter;\n\n//# sourceMappingURL=SpeechSynthesisAdapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3BlZWNoU3ludGhlc2lzQWRhcHRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCLHFCQUFxQixtQkFBTyxDQUFDLHFIQUFtQjtBQUNoRCxxQkFBcUIsbUJBQU8sQ0FBQywwSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCOztBQUU5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1NwZWVjaFN5bnRoZXNpc0FkYXB0ZXIuanM/NGZiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TcGVlY2hTeW50aGVzaXNBZGFwdGVyID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uL3Nkay9FeHBvcnRzLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18yID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbmNsYXNzIFNwZWVjaFN5bnRoZXNpc0FkYXB0ZXIgZXh0ZW5kcyBFeHBvcnRzX2pzXzIuU3ludGhlc2lzQWRhcHRlckJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKGF1dGhlbnRpY2F0aW9uLCBjb25uZWN0aW9uRmFjdG9yeSwgc3ludGhlc2l6ZXJDb25maWcsIHNwZWVjaFN5bnRoZXNpemVyLCBhdWRpb0Rlc3RpbmF0aW9uKSB7XG4gICAgICAgIHN1cGVyKGF1dGhlbnRpY2F0aW9uLCBjb25uZWN0aW9uRmFjdG9yeSwgc3ludGhlc2l6ZXJDb25maWcsIGF1ZGlvRGVzdGluYXRpb24pO1xuICAgICAgICB0aGlzLnByaXZTcGVlY2hTeW50aGVzaXplciA9IHNwZWVjaFN5bnRoZXNpemVyO1xuICAgICAgICB0aGlzLnByaXZTeW50aGVzaXplciA9IHNwZWVjaFN5bnRoZXNpemVyO1xuICAgIH1cbiAgICBzZXRTeW50aGVzaXNDb250ZXh0U3ludGhlc2lzU2VjdGlvbigpIHtcbiAgICAgICAgdGhpcy5wcml2U3ludGhlc2lzQ29udGV4dC5zZXRTeW50aGVzaXNTZWN0aW9uKHRoaXMucHJpdlNwZWVjaFN5bnRoZXNpemVyKTtcbiAgICB9XG4gICAgb25TeW50aGVzaXNTdGFydGVkKHJlcXVlc3RJZCkge1xuICAgICAgICBjb25zdCBzeW50aGVzaXNTdGFydEV2ZW50QXJncyA9IG5ldyBFeHBvcnRzX2pzXzEuU3BlZWNoU3ludGhlc2lzRXZlbnRBcmdzKG5ldyBFeHBvcnRzX2pzXzEuU3BlZWNoU3ludGhlc2lzUmVzdWx0KHJlcXVlc3RJZCwgRXhwb3J0c19qc18xLlJlc3VsdFJlYXNvbi5TeW50aGVzaXppbmdBdWRpb1N0YXJ0ZWQpKTtcbiAgICAgICAgaWYgKCEhdGhpcy5wcml2U3BlZWNoU3ludGhlc2l6ZXIuc3ludGhlc2lzU3RhcnRlZCkge1xuICAgICAgICAgICAgdGhpcy5wcml2U3BlZWNoU3ludGhlc2l6ZXIuc3ludGhlc2lzU3RhcnRlZCh0aGlzLnByaXZTcGVlY2hTeW50aGVzaXplciwgc3ludGhlc2lzU3RhcnRFdmVudEFyZ3MpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG9uU3ludGhlc2l6aW5nKGF1ZGlvKSB7XG4gICAgICAgIGlmICghIXRoaXMucHJpdlNwZWVjaFN5bnRoZXNpemVyLnN5bnRoZXNpemluZykge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBhdWRpb1dpdGhIZWFkZXIgPSB0aGlzLnByaXZTeW50aGVzaXNUdXJuLmF1ZGlvT3V0cHV0Rm9ybWF0LmFkZEhlYWRlcihhdWRpbyk7XG4gICAgICAgICAgICAgICAgY29uc3QgZXYgPSBuZXcgRXhwb3J0c19qc18xLlNwZWVjaFN5bnRoZXNpc0V2ZW50QXJncyhuZXcgRXhwb3J0c19qc18xLlNwZWVjaFN5bnRoZXNpc1Jlc3VsdCh0aGlzLnByaXZTeW50aGVzaXNUdXJuLnJlcXVlc3RJZCwgRXhwb3J0c19qc18xLlJlc3VsdFJlYXNvbi5TeW50aGVzaXppbmdBdWRpbywgYXVkaW9XaXRoSGVhZGVyKSk7XG4gICAgICAgICAgICAgICAgdGhpcy5wcml2U3BlZWNoU3ludGhlc2l6ZXIuc3ludGhlc2l6aW5nKHRoaXMucHJpdlNwZWVjaFN5bnRoZXNpemVyLCBldik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAvLyBOb3QgZ29pbmcgdG8gbGV0IGVycm9ycyBpbiB0aGUgZXZlbnQgaGFuZGxlclxuICAgICAgICAgICAgICAgIC8vIHRyaXAgdGhpbmdzIHVwLlxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIG9uU3ludGhlc2lzQ2FuY2VsbGVkKHJlc3VsdCkge1xuICAgICAgICBpZiAoISF0aGlzLnByaXZTcGVlY2hTeW50aGVzaXplci5TeW50aGVzaXNDYW5jZWxlZCkge1xuICAgICAgICAgICAgY29uc3QgY2FuY2VsRXZlbnQgPSBuZXcgRXhwb3J0c19qc18xLlNwZWVjaFN5bnRoZXNpc0V2ZW50QXJncyhyZXN1bHQpO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0aGlzLnByaXZTcGVlY2hTeW50aGVzaXplci5TeW50aGVzaXNDYW5jZWxlZCh0aGlzLnByaXZTcGVlY2hTeW50aGVzaXplciwgY2FuY2VsRXZlbnQpO1xuICAgICAgICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWVtcHR5ICovXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCB7IH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBvblN5bnRoZXNpc0NvbXBsZXRlZChyZXN1bHQpIHtcbiAgICAgICAgaWYgKHRoaXMucHJpdlNwZWVjaFN5bnRoZXNpemVyLnN5bnRoZXNpc0NvbXBsZXRlZCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0aGlzLnByaXZTcGVlY2hTeW50aGVzaXplci5zeW50aGVzaXNDb21wbGV0ZWQodGhpcy5wcml2U3BlZWNoU3ludGhlc2l6ZXIsIG5ldyBFeHBvcnRzX2pzXzEuU3BlZWNoU3ludGhlc2lzRXZlbnRBcmdzKHJlc3VsdCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAvLyBOb3QgZ29pbmcgdG8gbGV0IGVycm9ycyBpbiB0aGUgZXZlbnQgaGFuZGxlclxuICAgICAgICAgICAgICAgIC8vIHRyaXAgdGhpbmdzIHVwLlxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIG9uV29yZEJvdW5kYXJ5KHdvcmRCb3VuZGFyeUV2ZW50QXJncykge1xuICAgICAgICBpZiAoISF0aGlzLnByaXZTcGVlY2hTeW50aGVzaXplci53b3JkQm91bmRhcnkpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wcml2U3BlZWNoU3ludGhlc2l6ZXIud29yZEJvdW5kYXJ5KHRoaXMucHJpdlNwZWVjaFN5bnRoZXNpemVyLCB3b3JkQm91bmRhcnlFdmVudEFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgLy8gTm90IGdvaW5nIHRvIGxldCBlcnJvcnMgaW4gdGhlIGV2ZW50IGhhbmRsZXJcbiAgICAgICAgICAgICAgICAvLyB0cmlwIHRoaW5ncyB1cC5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBvblZpc2VtZVJlY2VpdmVkKHZpc2VtZUV2ZW50QXJncykge1xuICAgICAgICBpZiAoISF0aGlzLnByaXZTcGVlY2hTeW50aGVzaXplci52aXNlbWVSZWNlaXZlZCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0aGlzLnByaXZTcGVlY2hTeW50aGVzaXplci52aXNlbWVSZWNlaXZlZCh0aGlzLnByaXZTcGVlY2hTeW50aGVzaXplciwgdmlzZW1lRXZlbnRBcmdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIC8vIE5vdCBnb2luZyB0byBsZXQgZXJyb3JzIGluIHRoZSBldmVudCBoYW5kbGVyXG4gICAgICAgICAgICAgICAgLy8gdHJpcCB0aGluZ3MgdXAuXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25Cb29rbWFya1JlYWNoZWQoYm9va21hcmtFdmVudEFyZ3MpIHtcbiAgICAgICAgaWYgKCEhdGhpcy5wcml2U3BlZWNoU3ludGhlc2l6ZXIuYm9va21hcmtSZWFjaGVkKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHRoaXMucHJpdlNwZWVjaFN5bnRoZXNpemVyLmJvb2ttYXJrUmVhY2hlZCh0aGlzLnByaXZTcGVlY2hTeW50aGVzaXplciwgYm9va21hcmtFdmVudEFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgLy8gTm90IGdvaW5nIHRvIGxldCBlcnJvcnMgaW4gdGhlIGV2ZW50IGhhbmRsZXJcbiAgICAgICAgICAgICAgICAvLyB0cmlwIHRoaW5ncyB1cC5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuU3BlZWNoU3ludGhlc2lzQWRhcHRlciA9IFNwZWVjaFN5bnRoZXNpc0FkYXB0ZXI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwZWVjaFN5bnRoZXNpc0FkYXB0ZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisAdapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisConnectionFactory.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisConnectionFactory.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechSynthesisConnectionFactory = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = __webpack_require__(/*! ./ConnectionFactoryBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ./HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nconst QueryParameterNames_js_1 = __webpack_require__(/*! ./QueryParameterNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js\");\nclass SpeechSynthesisConnectionFactory {\n    constructor() {\n        this.synthesisUri = \"/cognitiveservices/websocket/v1\";\n    }\n    create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, undefined);\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        const endpointId = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        const hostPrefix = (endpointId === undefined) ? \"tts\" : \"voice\";\n        const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".\" + hostPrefix + \".speech\" + hostSuffix);\n        const queryParams = {};\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        if (endpointId !== undefined && endpointId !== \"\") {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.CustomVoiceDeploymentId) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.CustomVoiceDeploymentId] = endpointId;\n            }\n        }\n        if (config.avatarEnabled) {\n            if (!endpoint || endpoint.search(QueryParameterNames_js_1.QueryParameterNames.EnableAvatar) === -1) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.EnableAvatar] = \"true\";\n            }\n        }\n        if (!endpoint) {\n            endpoint = host + this.synthesisUri;\n        }\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromParameters(config.parameters), enableCompression, connectionId);\n    }\n}\nexports.SpeechSynthesisConnectionFactory = SpeechSynthesisConnectionFactory;\n\n//# sourceMappingURL=SpeechSynthesisConnectionFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3BlZWNoU3ludGhlc2lzQ29ubmVjdGlvbkZhY3RvcnkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdDQUF3QztBQUN4QyxxQkFBcUIsbUJBQU8sQ0FBQywySUFBOEI7QUFDM0QscUJBQXFCLG1CQUFPLENBQUMscUhBQW1CO0FBQ2hELG1DQUFtQyxtQkFBTyxDQUFDLHNKQUE0QjtBQUN2RSxxQkFBcUIsbUJBQU8sQ0FBQywwSEFBYztBQUMzQyx5QkFBeUIsbUJBQU8sQ0FBQyxrSUFBa0I7QUFDbkQsaUNBQWlDLG1CQUFPLENBQUMsa0pBQTBCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7O0FBRXhDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3BlZWNoU3ludGhlc2lzQ29ubmVjdGlvbkZhY3RvcnkuanM/YjQzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TcGVlY2hTeW50aGVzaXNDb25uZWN0aW9uRmFjdG9yeSA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi9jb21tb24uYnJvd3Nlci9FeHBvcnRzLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18yID0gcmVxdWlyZShcIi4uL3Nkay9FeHBvcnRzLmpzXCIpO1xuY29uc3QgQ29ubmVjdGlvbkZhY3RvcnlCYXNlX2pzXzEgPSByZXF1aXJlKFwiLi9Db25uZWN0aW9uRmFjdG9yeUJhc2UuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzMgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuY29uc3QgSGVhZGVyTmFtZXNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlck5hbWVzLmpzXCIpO1xuY29uc3QgUXVlcnlQYXJhbWV0ZXJOYW1lc19qc18xID0gcmVxdWlyZShcIi4vUXVlcnlQYXJhbWV0ZXJOYW1lcy5qc1wiKTtcbmNsYXNzIFNwZWVjaFN5bnRoZXNpc0Nvbm5lY3Rpb25GYWN0b3J5IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5zeW50aGVzaXNVcmkgPSBcIi9jb2duaXRpdmVzZXJ2aWNlcy93ZWJzb2NrZXQvdjFcIjtcbiAgICB9XG4gICAgY3JlYXRlKGNvbmZpZywgYXV0aEluZm8sIGNvbm5lY3Rpb25JZCkge1xuICAgICAgICBsZXQgZW5kcG9pbnQgPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9FbmRwb2ludCwgdW5kZWZpbmVkKTtcbiAgICAgICAgY29uc3QgcmVnaW9uID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fUmVnaW9uLCB1bmRlZmluZWQpO1xuICAgICAgICBjb25zdCBob3N0U3VmZml4ID0gQ29ubmVjdGlvbkZhY3RvcnlCYXNlX2pzXzEuQ29ubmVjdGlvbkZhY3RvcnlCYXNlLmdldEhvc3RTdWZmaXgocmVnaW9uKTtcbiAgICAgICAgY29uc3QgZW5kcG9pbnRJZCA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0VuZHBvaW50SWQsIHVuZGVmaW5lZCk7XG4gICAgICAgIGNvbnN0IGhvc3RQcmVmaXggPSAoZW5kcG9pbnRJZCA9PT0gdW5kZWZpbmVkKSA/IFwidHRzXCIgOiBcInZvaWNlXCI7XG4gICAgICAgIGNvbnN0IGhvc3QgPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9Ib3N0LCBcIndzczovL1wiICsgcmVnaW9uICsgXCIuXCIgKyBob3N0UHJlZml4ICsgXCIuc3BlZWNoXCIgKyBob3N0U3VmZml4KTtcbiAgICAgICAgY29uc3QgcXVlcnlQYXJhbXMgPSB7fTtcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IHt9O1xuICAgICAgICBpZiAoYXV0aEluZm8udG9rZW4gIT09IHVuZGVmaW5lZCAmJiBhdXRoSW5mby50b2tlbiAhPT0gXCJcIikge1xuICAgICAgICAgICAgaGVhZGVyc1thdXRoSW5mby5oZWFkZXJOYW1lXSA9IGF1dGhJbmZvLnRva2VuO1xuICAgICAgICB9XG4gICAgICAgIGhlYWRlcnNbSGVhZGVyTmFtZXNfanNfMS5IZWFkZXJOYW1lcy5Db25uZWN0aW9uSWRdID0gY29ubmVjdGlvbklkO1xuICAgICAgICBpZiAoZW5kcG9pbnRJZCAhPT0gdW5kZWZpbmVkICYmIGVuZHBvaW50SWQgIT09IFwiXCIpIHtcbiAgICAgICAgICAgIGlmICghZW5kcG9pbnQgfHwgZW5kcG9pbnQuc2VhcmNoKFF1ZXJ5UGFyYW1ldGVyTmFtZXNfanNfMS5RdWVyeVBhcmFtZXRlck5hbWVzLkN1c3RvbVZvaWNlRGVwbG95bWVudElkKSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICBxdWVyeVBhcmFtc1tRdWVyeVBhcmFtZXRlck5hbWVzX2pzXzEuUXVlcnlQYXJhbWV0ZXJOYW1lcy5DdXN0b21Wb2ljZURlcGxveW1lbnRJZF0gPSBlbmRwb2ludElkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChjb25maWcuYXZhdGFyRW5hYmxlZCkge1xuICAgICAgICAgICAgaWYgKCFlbmRwb2ludCB8fCBlbmRwb2ludC5zZWFyY2goUXVlcnlQYXJhbWV0ZXJOYW1lc19qc18xLlF1ZXJ5UGFyYW1ldGVyTmFtZXMuRW5hYmxlQXZhdGFyKSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICBxdWVyeVBhcmFtc1tRdWVyeVBhcmFtZXRlck5hbWVzX2pzXzEuUXVlcnlQYXJhbWV0ZXJOYW1lcy5FbmFibGVBdmF0YXJdID0gXCJ0cnVlXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFlbmRwb2ludCkge1xuICAgICAgICAgICAgZW5kcG9pbnQgPSBob3N0ICsgdGhpcy5zeW50aGVzaXNVcmk7XG4gICAgICAgIH1cbiAgICAgICAgY29uZmlnLnBhcmFtZXRlcnMuc2V0UHJvcGVydHkoRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fVXJsLCBlbmRwb2ludCk7XG4gICAgICAgIGNvbnN0IGVuYWJsZUNvbXByZXNzaW9uID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoXCJTUEVFQ0gtRW5hYmxlV2Vic29ja2V0Q29tcHJlc3Npb25cIiwgXCJmYWxzZVwiKSA9PT0gXCJ0cnVlXCI7XG4gICAgICAgIHJldHVybiBuZXcgRXhwb3J0c19qc18xLldlYnNvY2tldENvbm5lY3Rpb24oZW5kcG9pbnQsIHF1ZXJ5UGFyYW1zLCBoZWFkZXJzLCBuZXcgRXhwb3J0c19qc18zLldlYnNvY2tldE1lc3NhZ2VGb3JtYXR0ZXIoKSwgRXhwb3J0c19qc18xLlByb3h5SW5mby5mcm9tUGFyYW1ldGVycyhjb25maWcucGFyYW1ldGVycyksIGVuYWJsZUNvbXByZXNzaW9uLCBjb25uZWN0aW9uSWQpO1xuICAgIH1cbn1cbmV4cG9ydHMuU3BlZWNoU3ludGhlc2lzQ29ubmVjdGlvbkZhY3RvcnkgPSBTcGVlY2hTeW50aGVzaXNDb25uZWN0aW9uRmFjdG9yeTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BlZWNoU3ludGhlc2lzQ29ubmVjdGlvbkZhY3RvcnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisConnectionFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisAdapterBase.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisAdapterBase.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SynthesisAdapterBase = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = __webpack_require__(/*! ./SpeechConnectionMessage.Internal.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionMessage.Internal.js\");\nclass SynthesisAdapterBase {\n    constructor(authentication, connectionFactory, synthesizerConfig, audioDestination) {\n        this.speakOverride = undefined;\n        this.receiveMessageOverride = undefined;\n        this.connectImplOverride = undefined;\n        this.configConnectionOverride = undefined;\n        // A promise for a configured connection.\n        // Do not consume directly, call fetchConnection instead.\n        this.privConnectionConfigurationPromise = undefined;\n        if (!authentication) {\n            throw new Exports_js_1.ArgumentNullError(\"authentication\");\n        }\n        if (!connectionFactory) {\n            throw new Exports_js_1.ArgumentNullError(\"connectionFactory\");\n        }\n        if (!synthesizerConfig) {\n            throw new Exports_js_1.ArgumentNullError(\"synthesizerConfig\");\n        }\n        this.privAuthentication = authentication;\n        this.privConnectionFactory = connectionFactory;\n        this.privSynthesizerConfig = synthesizerConfig;\n        this.privIsDisposed = false;\n        this.privSessionAudioDestination = audioDestination;\n        this.privSynthesisTurn = new Exports_js_3.SynthesisTurn();\n        this.privConnectionEvents = new Exports_js_1.EventSource();\n        this.privServiceEvents = new Exports_js_1.EventSource();\n        this.privSynthesisContext = new Exports_js_3.SynthesisContext();\n        this.privAgentConfig = new Exports_js_3.AgentConfig();\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                const connectionClosedEvent = connectionEvent;\n                if (connectionClosedEvent.statusCode !== 1000) {\n                    this.cancelSynthesisLocal(Exports_js_2.CancellationReason.Error, connectionClosedEvent.statusCode === 1007 ? Exports_js_2.CancellationErrorCode.BadRequestParameters : Exports_js_2.CancellationErrorCode.ConnectionFailure, `${connectionClosedEvent.reason} websocket error code: ${connectionClosedEvent.statusCode}`);\n                }\n            }\n        });\n    }\n    get synthesisContext() {\n        return this.privSynthesisContext;\n    }\n    get agentConfig() {\n        return this.privAgentConfig;\n    }\n    get connectionEvents() {\n        return this.privConnectionEvents;\n    }\n    get serviceEvents() {\n        return this.privServiceEvents;\n    }\n    set activityTemplate(messagePayload) {\n        this.privActivityTemplate = messagePayload;\n    }\n    get activityTemplate() {\n        return this.privActivityTemplate;\n    }\n    set audioOutputFormat(format) {\n        this.privAudioOutputFormat = format;\n        this.privSynthesisTurn.audioOutputFormat = format;\n        if (this.privSessionAudioDestination !== undefined) {\n            this.privSessionAudioDestination.format = format;\n        }\n        if (this.synthesisContext !== undefined) {\n            this.synthesisContext.audioOutputFormat = format;\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    async dispose(reason) {\n        this.privIsDisposed = true;\n        if (this.privSessionAudioDestination !== undefined) {\n            this.privSessionAudioDestination.close();\n        }\n        if (this.privConnectionConfigurationPromise !== undefined) {\n            const connection = await this.privConnectionConfigurationPromise;\n            await connection.dispose(reason);\n        }\n    }\n    async connect() {\n        await this.connectImpl();\n    }\n    async sendNetworkMessage(path, payload) {\n        const type = typeof payload === \"string\" ? Exports_js_1.MessageType.Text : Exports_js_1.MessageType.Binary;\n        const contentType = typeof payload === \"string\" ? \"application/json\" : \"\";\n        const connection = await this.fetchConnection();\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(type, path, this.privSynthesisTurn.requestId, contentType, payload));\n    }\n    async Speak(text, isSSML, requestId, successCallback, errorCallBack, audioDestination) {\n        let ssml;\n        if (isSSML) {\n            ssml = text;\n        }\n        else {\n            ssml = this.privSynthesizer.buildSsml(text);\n        }\n        if (this.speakOverride !== undefined) {\n            return this.speakOverride(ssml, requestId, successCallback, errorCallBack);\n        }\n        this.privSuccessCallback = successCallback;\n        this.privErrorCallback = errorCallBack;\n        this.privSynthesisTurn.startNewSynthesis(requestId, text, isSSML, audioDestination);\n        try {\n            await this.connectImpl();\n            const connection = await this.fetchConnection();\n            await this.sendSynthesisContext(connection);\n            await this.sendSsmlMessage(connection, ssml, requestId);\n            this.onSynthesisStarted(requestId);\n            void this.receiveMessage();\n        }\n        catch (e) {\n            this.cancelSynthesisLocal(Exports_js_2.CancellationReason.Error, Exports_js_2.CancellationErrorCode.ConnectionFailure, e);\n            return Promise.reject(e);\n        }\n    }\n    async stopSpeaking() {\n        await this.connectImpl();\n        const connection = await this.fetchConnection();\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"synthesis.control\", this.privSynthesisTurn.requestId, \"application/json\", JSON.stringify({\n            action: \"stop\"\n        })));\n    }\n    // Cancels synthesis.\n    cancelSynthesis(requestId, _cancellationReason, errorCode, error) {\n        const properties = new Exports_js_2.PropertyCollection();\n        properties.setProperty(Exports_js_3.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[errorCode]);\n        const result = new Exports_js_2.SpeechSynthesisResult(requestId, Exports_js_2.ResultReason.Canceled, undefined, error, properties);\n        this.onSynthesisCancelled(result);\n        if (!!this.privSuccessCallback) {\n            try {\n                this.privSuccessCallback(result);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n    // Cancels synthesis.\n    cancelSynthesisLocal(cancellationReason, errorCode, error) {\n        if (!!this.privSynthesisTurn.isSynthesizing) {\n            this.privSynthesisTurn.onStopSynthesizing();\n            this.cancelSynthesis(this.privSynthesisTurn.requestId, cancellationReason, errorCode, error);\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    processTypeSpecificMessages(_connectionMessage) {\n        return true;\n    }\n    async receiveMessage() {\n        try {\n            const connection = await this.fetchConnection();\n            const message = await connection.read();\n            if (this.receiveMessageOverride !== undefined) {\n                return this.receiveMessageOverride();\n            }\n            if (this.privIsDisposed) {\n                // We're done.\n                return;\n            }\n            // indicates we are draining the queue and it came with no message;\n            if (!message) {\n                if (!this.privSynthesisTurn.isSynthesizing) {\n                    return;\n                }\n                else {\n                    return this.receiveMessage();\n                }\n            }\n            const connectionMessage = SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage.fromConnectionMessage(message);\n            if (connectionMessage.requestId.toLowerCase() === this.privSynthesisTurn.requestId.toLowerCase()) {\n                switch (connectionMessage.path.toLowerCase()) {\n                    case \"turn.start\":\n                        this.privSynthesisTurn.onServiceTurnStartResponse(connectionMessage.textBody);\n                        break;\n                    case \"response\":\n                        this.privSynthesisTurn.onServiceResponseMessage(connectionMessage.textBody);\n                        break;\n                    case \"audio\":\n                        if (this.privSynthesisTurn.streamId.toLowerCase() === connectionMessage.streamId.toLowerCase()\n                            && !!connectionMessage.binaryBody) {\n                            this.privSynthesisTurn.onAudioChunkReceived(connectionMessage.binaryBody);\n                            this.onSynthesizing(connectionMessage.binaryBody);\n                            if (this.privSessionAudioDestination !== undefined) {\n                                this.privSessionAudioDestination.write(connectionMessage.binaryBody);\n                            }\n                        }\n                        break;\n                    case \"audio.metadata\":\n                        const metadataList = Exports_js_3.SynthesisAudioMetadata.fromJSON(connectionMessage.textBody).Metadata;\n                        for (const metadata of metadataList) {\n                            switch (metadata.Type) {\n                                case Exports_js_3.MetadataType.WordBoundary:\n                                case Exports_js_3.MetadataType.SentenceBoundary:\n                                    this.privSynthesisTurn.onTextBoundaryEvent(metadata);\n                                    const wordBoundaryEventArgs = new Exports_js_2.SpeechSynthesisWordBoundaryEventArgs(metadata.Data.Offset, metadata.Data.Duration, metadata.Data.text.Text, metadata.Data.text.Length, metadata.Type === Exports_js_3.MetadataType.WordBoundary\n                                        ? this.privSynthesisTurn.currentTextOffset : this.privSynthesisTurn.currentSentenceOffset, metadata.Data.text.BoundaryType);\n                                    this.onWordBoundary(wordBoundaryEventArgs);\n                                    break;\n                                case Exports_js_3.MetadataType.Bookmark:\n                                    const bookmarkEventArgs = new Exports_js_2.SpeechSynthesisBookmarkEventArgs(metadata.Data.Offset, metadata.Data.Bookmark);\n                                    this.onBookmarkReached(bookmarkEventArgs);\n                                    break;\n                                case Exports_js_3.MetadataType.Viseme:\n                                    this.privSynthesisTurn.onVisemeMetadataReceived(metadata);\n                                    if (metadata.Data.IsLastAnimation) {\n                                        const visemeEventArgs = new Exports_js_2.SpeechSynthesisVisemeEventArgs(metadata.Data.Offset, metadata.Data.VisemeId, this.privSynthesisTurn.getAndClearVisemeAnimation());\n                                        this.onVisemeReceived(visemeEventArgs);\n                                    }\n                                    break;\n                                case Exports_js_3.MetadataType.AvatarSignal:\n                                    this.onAvatarEvent(metadata);\n                                    break;\n                                case Exports_js_3.MetadataType.SessionEnd:\n                                    this.privSynthesisTurn.onSessionEnd(metadata);\n                                    break;\n                            }\n                        }\n                        break;\n                    case \"turn.end\":\n                        this.privSynthesisTurn.onServiceTurnEndResponse();\n                        let result;\n                        try {\n                            result = await this.privSynthesisTurn.constructSynthesisResult();\n                            if (!!this.privSuccessCallback) {\n                                this.privSuccessCallback(result);\n                            }\n                        }\n                        catch (error) {\n                            if (!!this.privErrorCallback) {\n                                this.privErrorCallback(error);\n                            }\n                        }\n                        this.onSynthesisCompleted(result);\n                        break;\n                    default:\n                        if (!this.processTypeSpecificMessages(connectionMessage)) {\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\n                            if (!!this.privServiceEvents) {\n                                this.serviceEvents.onEvent(new Exports_js_1.ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\n                            }\n                        }\n                }\n            }\n            return this.receiveMessage();\n        }\n        catch (e) {\n            // TODO: What goes here?\n        }\n    }\n    sendSynthesisContext(connection) {\n        this.setSynthesisContextSynthesisSection();\n        const synthesisContextJson = this.synthesisContext.toJSON();\n        if (synthesisContextJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"synthesis.context\", this.privSynthesisTurn.requestId, \"application/json\", synthesisContextJson));\n        }\n        return;\n    }\n    setSpeechConfigSynthesisSection() {\n        return;\n    }\n    connectImpl(isUnAuthorized = false) {\n        if (this.privConnectionPromise != null) {\n            return this.privConnectionPromise.then((connection) => {\n                if (connection.state() === Exports_js_1.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionPromise = null;\n                    return this.connectImpl();\n                }\n                return this.privConnectionPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionPromise = null;\n                return this.connectImpl();\n            });\n        }\n        this.privAuthFetchEventId = Exports_js_1.createNoDashGuid();\n        this.privConnectionId = Exports_js_1.createNoDashGuid();\n        this.privSynthesisTurn.onPreConnectionStart(this.privAuthFetchEventId);\n        const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\n        this.privConnectionPromise = authPromise.then(async (result) => {\n            this.privSynthesisTurn.onAuthCompleted(false);\n            const connection = this.privConnectionFactory.create(this.privSynthesizerConfig, result, this.privConnectionId);\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\n            // it'll stop sending events.\n            connection.events.attach((event) => {\n                this.connectionEvents.onEvent(event);\n            });\n            const response = await connection.open();\n            if (response.statusCode === 200) {\n                this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\n                return Promise.resolve(connection);\n            }\n            else if (response.statusCode === 403 && !isUnAuthorized) {\n                return this.connectImpl(true);\n            }\n            else {\n                this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\n                return Promise.reject(`Unable to contact server. StatusCode: ${response.statusCode},\r\n                    ${this.privSynthesizerConfig.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url)} Reason: ${response.reason}`);\n            }\n        }, (error) => {\n            this.privSynthesisTurn.onAuthCompleted(true);\n            throw new Error(error);\n        });\n        // Attach an empty handler to allow the promise to run in the background while\n        // other startup events happen. It'll eventually be awaited on.\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.privConnectionPromise.catch(() => { });\n        return this.privConnectionPromise;\n    }\n    sendSpeechServiceConfig(connection, SpeechServiceConfigJson) {\n        if (SpeechServiceConfigJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"speech.config\", this.privSynthesisTurn.requestId, \"application/json\", SpeechServiceConfigJson));\n        }\n    }\n    sendSsmlMessage(connection, ssml, requestId) {\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"ssml\", requestId, \"application/ssml+xml\", ssml));\n    }\n    async fetchConnection() {\n        if (this.privConnectionConfigurationPromise !== undefined) {\n            return this.privConnectionConfigurationPromise.then((connection) => {\n                if (connection.state() === Exports_js_1.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionConfigurationPromise = undefined;\n                    return this.fetchConnection();\n                }\n                return this.privConnectionConfigurationPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionConfigurationPromise = undefined;\n                return this.fetchConnection();\n            });\n        }\n        this.privConnectionConfigurationPromise = this.configureConnection();\n        return await this.privConnectionConfigurationPromise;\n    }\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    async configureConnection() {\n        const connection = await this.connectImpl();\n        if (this.configConnectionOverride !== undefined) {\n            return this.configConnectionOverride(connection);\n        }\n        this.setSpeechConfigSynthesisSection();\n        await this.sendSpeechServiceConfig(connection, this.privSynthesizerConfig.SpeechServiceConfig.serialize());\n        return connection;\n    }\n    onAvatarEvent(_metadata) {\n        return;\n    }\n    onSynthesisStarted(_requestId) {\n        return;\n    }\n    onSynthesizing(_audio) {\n        return;\n    }\n    onSynthesisCancelled(_result) {\n        return;\n    }\n    onSynthesisCompleted(_result) {\n        return;\n    }\n    onWordBoundary(_wordBoundaryEventArgs) {\n        return;\n    }\n    onVisemeReceived(_visemeEventArgs) {\n        return;\n    }\n    onBookmarkReached(_bookmarkEventArgs) {\n        return;\n    }\n}\nexports.SynthesisAdapterBase = SynthesisAdapterBase;\nSynthesisAdapterBase.telemetryDataEnabled = true;\n\n//# sourceMappingURL=SynthesisAdapterBase.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisAdapterBase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisContext.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisContext.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SynthesisContext = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Represents the JSON used in the synthesis.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\nclass SynthesisContext {\n    constructor() {\n        this.privContext = {};\n    }\n    /**\n     * Adds a section to the synthesis.context object.\n     * @param sectionName Name of the section to add.\n     * @param value JSON serializable object that represents the value.\n     */\n    setSection(sectionName, value) {\n        this.privContext[sectionName] = value;\n    }\n    /**\n     * Sets the audio output format for synthesis context generation.\n     * @param format {AudioOutputFormatImpl} the output format\n     */\n    set audioOutputFormat(format) {\n        this.privAudioOutputFormat = format;\n    }\n    toJSON() {\n        return JSON.stringify(this.privContext);\n    }\n    setSynthesisSection(speechSynthesizer) {\n        const synthesisSection = this.buildSynthesisContext(speechSynthesizer);\n        this.setSection(\"synthesis\", synthesisSection);\n    }\n    buildSynthesisContext(speechSynthesizer) {\n        return {\n            audio: {\n                metadataOptions: {\n                    bookmarkEnabled: (!!speechSynthesizer?.bookmarkReached),\n                    punctuationBoundaryEnabled: speechSynthesizer?.properties.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_RequestPunctuationBoundary, (!!speechSynthesizer?.wordBoundary)),\n                    sentenceBoundaryEnabled: speechSynthesizer?.properties.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_RequestSentenceBoundary, false),\n                    sessionEndEnabled: true,\n                    visemeEnabled: (!!speechSynthesizer?.visemeReceived),\n                    wordBoundaryEnabled: speechSynthesizer?.properties.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_RequestWordBoundary, (!!speechSynthesizer?.wordBoundary)),\n                },\n                outputFormat: this.privAudioOutputFormat.requestAudioFormatString,\n            },\n            language: {\n                autoDetection: speechSynthesizer?.autoDetectSourceLanguage\n            }\n        };\n    }\n}\nexports.SynthesisContext = SynthesisContext;\n\n//# sourceMappingURL=SynthesisContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3ludGhlc2lzQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLHFCQUFxQixtQkFBTyxDQUFDLHFIQUFtQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsdUJBQXVCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7O0FBRXhCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3ludGhlc2lzQ29udGV4dC5qcz9jMjFhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN5bnRoZXNpc0NvbnRleHQgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vc2RrL0V4cG9ydHMuanNcIik7XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIEpTT04gdXNlZCBpbiB0aGUgc3ludGhlc2lzLmNvbnRleHQgbWVzc2FnZSBzZW50IHRvIHRoZSBzcGVlY2ggc2VydmljZS5cbiAqIFRoZSBkeW5hbWljIGdyYW1tYXIgaXMgYWx3YXlzIHJlZnJlc2hlZCBmcm9tIHRoZSBlbmNhcHN1bGF0ZWQgZHluYW1pYyBncmFtbWFyIG9iamVjdC5cbiAqL1xuY2xhc3MgU3ludGhlc2lzQ29udGV4dCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucHJpdkNvbnRleHQgPSB7fTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBhIHNlY3Rpb24gdG8gdGhlIHN5bnRoZXNpcy5jb250ZXh0IG9iamVjdC5cbiAgICAgKiBAcGFyYW0gc2VjdGlvbk5hbWUgTmFtZSBvZiB0aGUgc2VjdGlvbiB0byBhZGQuXG4gICAgICogQHBhcmFtIHZhbHVlIEpTT04gc2VyaWFsaXphYmxlIG9iamVjdCB0aGF0IHJlcHJlc2VudHMgdGhlIHZhbHVlLlxuICAgICAqL1xuICAgIHNldFNlY3Rpb24oc2VjdGlvbk5hbWUsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMucHJpdkNvbnRleHRbc2VjdGlvbk5hbWVdID0gdmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIGF1ZGlvIG91dHB1dCBmb3JtYXQgZm9yIHN5bnRoZXNpcyBjb250ZXh0IGdlbmVyYXRpb24uXG4gICAgICogQHBhcmFtIGZvcm1hdCB7QXVkaW9PdXRwdXRGb3JtYXRJbXBsfSB0aGUgb3V0cHV0IGZvcm1hdFxuICAgICAqL1xuICAgIHNldCBhdWRpb091dHB1dEZvcm1hdChmb3JtYXQpIHtcbiAgICAgICAgdGhpcy5wcml2QXVkaW9PdXRwdXRGb3JtYXQgPSBmb3JtYXQ7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMucHJpdkNvbnRleHQpO1xuICAgIH1cbiAgICBzZXRTeW50aGVzaXNTZWN0aW9uKHNwZWVjaFN5bnRoZXNpemVyKSB7XG4gICAgICAgIGNvbnN0IHN5bnRoZXNpc1NlY3Rpb24gPSB0aGlzLmJ1aWxkU3ludGhlc2lzQ29udGV4dChzcGVlY2hTeW50aGVzaXplcik7XG4gICAgICAgIHRoaXMuc2V0U2VjdGlvbihcInN5bnRoZXNpc1wiLCBzeW50aGVzaXNTZWN0aW9uKTtcbiAgICB9XG4gICAgYnVpbGRTeW50aGVzaXNDb250ZXh0KHNwZWVjaFN5bnRoZXNpemVyKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBhdWRpbzoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhT3B0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICBib29rbWFya0VuYWJsZWQ6ICghIXNwZWVjaFN5bnRoZXNpemVyPy5ib29rbWFya1JlYWNoZWQpLFxuICAgICAgICAgICAgICAgICAgICBwdW5jdHVhdGlvbkJvdW5kYXJ5RW5hYmxlZDogc3BlZWNoU3ludGhlc2l6ZXI/LnByb3BlcnRpZXMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18xLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZVJlc3BvbnNlX1JlcXVlc3RQdW5jdHVhdGlvbkJvdW5kYXJ5LCAoISFzcGVlY2hTeW50aGVzaXplcj8ud29yZEJvdW5kYXJ5KSksXG4gICAgICAgICAgICAgICAgICAgIHNlbnRlbmNlQm91bmRhcnlFbmFibGVkOiBzcGVlY2hTeW50aGVzaXplcj8ucHJvcGVydGllcy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzEuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlUmVzcG9uc2VfUmVxdWVzdFNlbnRlbmNlQm91bmRhcnksIGZhbHNlKSxcbiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbkVuZEVuYWJsZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHZpc2VtZUVuYWJsZWQ6ICghIXNwZWVjaFN5bnRoZXNpemVyPy52aXNlbWVSZWNlaXZlZCksXG4gICAgICAgICAgICAgICAgICAgIHdvcmRCb3VuZGFyeUVuYWJsZWQ6IHNwZWVjaFN5bnRoZXNpemVyPy5wcm9wZXJ0aWVzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VSZXNwb25zZV9SZXF1ZXN0V29yZEJvdW5kYXJ5LCAoISFzcGVlY2hTeW50aGVzaXplcj8ud29yZEJvdW5kYXJ5KSksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvdXRwdXRGb3JtYXQ6IHRoaXMucHJpdkF1ZGlvT3V0cHV0Rm9ybWF0LnJlcXVlc3RBdWRpb0Zvcm1hdFN0cmluZyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsYW5ndWFnZToge1xuICAgICAgICAgICAgICAgIGF1dG9EZXRlY3Rpb246IHNwZWVjaFN5bnRoZXNpemVyPy5hdXRvRGV0ZWN0U291cmNlTGFuZ3VhZ2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLlN5bnRoZXNpc0NvbnRleHQgPSBTeW50aGVzaXNDb250ZXh0O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TeW50aGVzaXNDb250ZXh0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisEvents.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisEvents.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SynthesisStartedEvent = exports.ConnectingToSynthesisServiceEvent = exports.SynthesisTriggeredEvent = exports.SpeechSynthesisEvent = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nclass SpeechSynthesisEvent extends Exports_js_1.PlatformEvent {\n    constructor(eventName, requestId, eventType = Exports_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privRequestId = requestId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n}\nexports.SpeechSynthesisEvent = SpeechSynthesisEvent;\nclass SynthesisTriggeredEvent extends SpeechSynthesisEvent {\n    constructor(requestId, sessionAudioDestinationId, turnAudioDestinationId) {\n        super(\"SynthesisTriggeredEvent\", requestId);\n        this.privSessionAudioDestinationId = sessionAudioDestinationId;\n        this.privTurnAudioDestinationId = turnAudioDestinationId;\n    }\n    get audioSessionDestinationId() {\n        return this.privSessionAudioDestinationId;\n    }\n    get audioTurnDestinationId() {\n        return this.privTurnAudioDestinationId;\n    }\n}\nexports.SynthesisTriggeredEvent = SynthesisTriggeredEvent;\nclass ConnectingToSynthesisServiceEvent extends SpeechSynthesisEvent {\n    constructor(requestId, authFetchEventId) {\n        super(\"ConnectingToSynthesisServiceEvent\", requestId);\n        this.privAuthFetchEventId = authFetchEventId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n}\nexports.ConnectingToSynthesisServiceEvent = ConnectingToSynthesisServiceEvent;\nclass SynthesisStartedEvent extends SpeechSynthesisEvent {\n    constructor(requestId, authFetchEventId) {\n        super(\"SynthesisStartedEvent\", requestId);\n        this.privAuthFetchEventId = authFetchEventId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n}\nexports.SynthesisStartedEvent = SynthesisStartedEvent;\n\n//# sourceMappingURL=SynthesisEvents.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3ludGhlc2lzRXZlbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkIsR0FBRyx5Q0FBeUMsR0FBRywrQkFBK0IsR0FBRyw0QkFBNEI7QUFDMUk7QUFDQSxxQkFBcUIsbUJBQU8sQ0FBQywySEFBc0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7O0FBRTdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3ludGhlc2lzRXZlbnRzLmpzPzIyNzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3ludGhlc2lzU3RhcnRlZEV2ZW50ID0gZXhwb3J0cy5Db25uZWN0aW5nVG9TeW50aGVzaXNTZXJ2aWNlRXZlbnQgPSBleHBvcnRzLlN5bnRoZXNpc1RyaWdnZXJlZEV2ZW50ID0gZXhwb3J0cy5TcGVlY2hTeW50aGVzaXNFdmVudCA9IHZvaWQgMDtcbi8qIGVzbGludC1kaXNhYmxlIG1heC1jbGFzc2VzLXBlci1maWxlICovXG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uL0V4cG9ydHMuanNcIik7XG5jbGFzcyBTcGVlY2hTeW50aGVzaXNFdmVudCBleHRlbmRzIEV4cG9ydHNfanNfMS5QbGF0Zm9ybUV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihldmVudE5hbWUsIHJlcXVlc3RJZCwgZXZlbnRUeXBlID0gRXhwb3J0c19qc18xLkV2ZW50VHlwZS5JbmZvKSB7XG4gICAgICAgIHN1cGVyKGV2ZW50TmFtZSwgZXZlbnRUeXBlKTtcbiAgICAgICAgdGhpcy5wcml2UmVxdWVzdElkID0gcmVxdWVzdElkO1xuICAgIH1cbiAgICBnZXQgcmVxdWVzdElkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVxdWVzdElkO1xuICAgIH1cbn1cbmV4cG9ydHMuU3BlZWNoU3ludGhlc2lzRXZlbnQgPSBTcGVlY2hTeW50aGVzaXNFdmVudDtcbmNsYXNzIFN5bnRoZXNpc1RyaWdnZXJlZEV2ZW50IGV4dGVuZHMgU3BlZWNoU3ludGhlc2lzRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKHJlcXVlc3RJZCwgc2Vzc2lvbkF1ZGlvRGVzdGluYXRpb25JZCwgdHVybkF1ZGlvRGVzdGluYXRpb25JZCkge1xuICAgICAgICBzdXBlcihcIlN5bnRoZXNpc1RyaWdnZXJlZEV2ZW50XCIsIHJlcXVlc3RJZCk7XG4gICAgICAgIHRoaXMucHJpdlNlc3Npb25BdWRpb0Rlc3RpbmF0aW9uSWQgPSBzZXNzaW9uQXVkaW9EZXN0aW5hdGlvbklkO1xuICAgICAgICB0aGlzLnByaXZUdXJuQXVkaW9EZXN0aW5hdGlvbklkID0gdHVybkF1ZGlvRGVzdGluYXRpb25JZDtcbiAgICB9XG4gICAgZ2V0IGF1ZGlvU2Vzc2lvbkRlc3RpbmF0aW9uSWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTZXNzaW9uQXVkaW9EZXN0aW5hdGlvbklkO1xuICAgIH1cbiAgICBnZXQgYXVkaW9UdXJuRGVzdGluYXRpb25JZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlR1cm5BdWRpb0Rlc3RpbmF0aW9uSWQ7XG4gICAgfVxufVxuZXhwb3J0cy5TeW50aGVzaXNUcmlnZ2VyZWRFdmVudCA9IFN5bnRoZXNpc1RyaWdnZXJlZEV2ZW50O1xuY2xhc3MgQ29ubmVjdGluZ1RvU3ludGhlc2lzU2VydmljZUV2ZW50IGV4dGVuZHMgU3BlZWNoU3ludGhlc2lzRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKHJlcXVlc3RJZCwgYXV0aEZldGNoRXZlbnRJZCkge1xuICAgICAgICBzdXBlcihcIkNvbm5lY3RpbmdUb1N5bnRoZXNpc1NlcnZpY2VFdmVudFwiLCByZXF1ZXN0SWQpO1xuICAgICAgICB0aGlzLnByaXZBdXRoRmV0Y2hFdmVudElkID0gYXV0aEZldGNoRXZlbnRJZDtcbiAgICB9XG4gICAgZ2V0IGF1dGhGZXRjaEV2ZW50SWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZBdXRoRmV0Y2hFdmVudElkO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29ubmVjdGluZ1RvU3ludGhlc2lzU2VydmljZUV2ZW50ID0gQ29ubmVjdGluZ1RvU3ludGhlc2lzU2VydmljZUV2ZW50O1xuY2xhc3MgU3ludGhlc2lzU3RhcnRlZEV2ZW50IGV4dGVuZHMgU3BlZWNoU3ludGhlc2lzRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKHJlcXVlc3RJZCwgYXV0aEZldGNoRXZlbnRJZCkge1xuICAgICAgICBzdXBlcihcIlN5bnRoZXNpc1N0YXJ0ZWRFdmVudFwiLCByZXF1ZXN0SWQpO1xuICAgICAgICB0aGlzLnByaXZBdXRoRmV0Y2hFdmVudElkID0gYXV0aEZldGNoRXZlbnRJZDtcbiAgICB9XG4gICAgZ2V0IGF1dGhGZXRjaEV2ZW50SWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZBdXRoRmV0Y2hFdmVudElkO1xuICAgIH1cbn1cbmV4cG9ydHMuU3ludGhlc2lzU3RhcnRlZEV2ZW50ID0gU3ludGhlc2lzU3RhcnRlZEV2ZW50O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TeW50aGVzaXNFdmVudHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisEvents.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisRestAdapter.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisRestAdapter.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SynthesisRestAdapter = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = __webpack_require__(/*! ./ConnectionFactoryBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ./HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\n/**\n * Implements methods for speaker recognition classes, sending requests to endpoint\n * and parsing response into expected format\n * @class SynthesisRestAdapter\n */\nclass SynthesisRestAdapter {\n    constructor(config, authentication) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        if (!endpoint) {\n            const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, \"westus\");\n            const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n            endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, `https://${region}.tts.speech${hostSuffix}`);\n        }\n        this.privUri = `${endpoint}/cognitiveservices/voices/list`;\n        const options = Exports_js_1.RestConfigBase.requestOptions;\n        this.privRestAdapter = new Exports_js_1.RestMessageAdapter(options);\n        this.privAuthentication = authentication;\n    }\n    /**\n     * Sends list voices request to endpoint.\n     * @function\n     * @public\n     * @param connectionId - guid for connectionId\n     * @returns {Promise<IRestResponse>} rest response to status request\n     */\n    getVoicesList(connectionId) {\n        this.privRestAdapter.setHeaders(HeaderNames_js_1.HeaderNames.ConnectionId, connectionId);\n        return this.privAuthentication.fetch(connectionId).then((authInfo) => {\n            this.privRestAdapter.setHeaders(authInfo.headerName, authInfo.token);\n            return this.privRestAdapter.request(Exports_js_1.RestRequestType.Get, this.privUri);\n        });\n    }\n}\nexports.SynthesisRestAdapter = SynthesisRestAdapter;\n\n//# sourceMappingURL=SynthesisRestAdapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3ludGhlc2lzUmVzdEFkYXB0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCLHFCQUFxQixtQkFBTyxDQUFDLDJJQUE4QjtBQUMzRCxxQkFBcUIsbUJBQU8sQ0FBQyxxSEFBbUI7QUFDaEQsbUNBQW1DLG1CQUFPLENBQUMsc0pBQTRCO0FBQ3ZFLHlCQUF5QixtQkFBTyxDQUFDLGtJQUFrQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0hBQXNILE9BQU8sYUFBYSxXQUFXO0FBQ3JKO0FBQ0EsMEJBQTBCLFNBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHdCQUF3QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDRCQUE0Qjs7QUFFNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9TeW50aGVzaXNSZXN0QWRhcHRlci5qcz83NGY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TeW50aGVzaXNSZXN0QWRhcHRlciA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi9jb21tb24uYnJvd3Nlci9FeHBvcnRzLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18yID0gcmVxdWlyZShcIi4uL3Nkay9FeHBvcnRzLmpzXCIpO1xuY29uc3QgQ29ubmVjdGlvbkZhY3RvcnlCYXNlX2pzXzEgPSByZXF1aXJlKFwiLi9Db25uZWN0aW9uRmFjdG9yeUJhc2UuanNcIik7XG5jb25zdCBIZWFkZXJOYW1lc19qc18xID0gcmVxdWlyZShcIi4vSGVhZGVyTmFtZXMuanNcIik7XG4vKipcbiAqIEltcGxlbWVudHMgbWV0aG9kcyBmb3Igc3BlYWtlciByZWNvZ25pdGlvbiBjbGFzc2VzLCBzZW5kaW5nIHJlcXVlc3RzIHRvIGVuZHBvaW50XG4gKiBhbmQgcGFyc2luZyByZXNwb25zZSBpbnRvIGV4cGVjdGVkIGZvcm1hdFxuICogQGNsYXNzIFN5bnRoZXNpc1Jlc3RBZGFwdGVyXG4gKi9cbmNsYXNzIFN5bnRoZXNpc1Jlc3RBZGFwdGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcsIGF1dGhlbnRpY2F0aW9uKSB7XG4gICAgICAgIGxldCBlbmRwb2ludCA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0VuZHBvaW50LCB1bmRlZmluZWQpO1xuICAgICAgICBpZiAoIWVuZHBvaW50KSB7XG4gICAgICAgICAgICBjb25zdCByZWdpb24gPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9SZWdpb24sIFwid2VzdHVzXCIpO1xuICAgICAgICAgICAgY29uc3QgaG9zdFN1ZmZpeCA9IENvbm5lY3Rpb25GYWN0b3J5QmFzZV9qc18xLkNvbm5lY3Rpb25GYWN0b3J5QmFzZS5nZXRIb3N0U3VmZml4KHJlZ2lvbik7XG4gICAgICAgICAgICBlbmRwb2ludCA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0hvc3QsIGBodHRwczovLyR7cmVnaW9ufS50dHMuc3BlZWNoJHtob3N0U3VmZml4fWApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJpdlVyaSA9IGAke2VuZHBvaW50fS9jb2duaXRpdmVzZXJ2aWNlcy92b2ljZXMvbGlzdGA7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSBFeHBvcnRzX2pzXzEuUmVzdENvbmZpZ0Jhc2UucmVxdWVzdE9wdGlvbnM7XG4gICAgICAgIHRoaXMucHJpdlJlc3RBZGFwdGVyID0gbmV3IEV4cG9ydHNfanNfMS5SZXN0TWVzc2FnZUFkYXB0ZXIob3B0aW9ucyk7XG4gICAgICAgIHRoaXMucHJpdkF1dGhlbnRpY2F0aW9uID0gYXV0aGVudGljYXRpb247XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlbmRzIGxpc3Qgdm9pY2VzIHJlcXVlc3QgdG8gZW5kcG9pbnQuXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSBjb25uZWN0aW9uSWQgLSBndWlkIGZvciBjb25uZWN0aW9uSWRcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxJUmVzdFJlc3BvbnNlPn0gcmVzdCByZXNwb25zZSB0byBzdGF0dXMgcmVxdWVzdFxuICAgICAqL1xuICAgIGdldFZvaWNlc0xpc3QoY29ubmVjdGlvbklkKSB7XG4gICAgICAgIHRoaXMucHJpdlJlc3RBZGFwdGVyLnNldEhlYWRlcnMoSGVhZGVyTmFtZXNfanNfMS5IZWFkZXJOYW1lcy5Db25uZWN0aW9uSWQsIGNvbm5lY3Rpb25JZCk7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZBdXRoZW50aWNhdGlvbi5mZXRjaChjb25uZWN0aW9uSWQpLnRoZW4oKGF1dGhJbmZvKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnByaXZSZXN0QWRhcHRlci5zZXRIZWFkZXJzKGF1dGhJbmZvLmhlYWRlck5hbWUsIGF1dGhJbmZvLnRva2VuKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByaXZSZXN0QWRhcHRlci5yZXF1ZXN0KEV4cG9ydHNfanNfMS5SZXN0UmVxdWVzdFR5cGUuR2V0LCB0aGlzLnByaXZVcmkpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLlN5bnRoZXNpc1Jlc3RBZGFwdGVyID0gU3ludGhlc2lzUmVzdEFkYXB0ZXI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN5bnRoZXNpc1Jlc3RBZGFwdGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisRestAdapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisTurn.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisTurn.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SynthesisTurn = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst AudioOutputStream_js_1 = __webpack_require__(/*! ../sdk/Audio/AudioOutputStream.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputStream.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst SynthesisAudioMetadata_js_1 = __webpack_require__(/*! ./ServiceMessages/SynthesisAudioMetadata.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/SynthesisAudioMetadata.js\");\nconst SynthesisEvents_js_1 = __webpack_require__(/*! ./SynthesisEvents.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisEvents.js\");\nclass SynthesisTurn {\n    constructor() {\n        this.privIsDisposed = false;\n        this.privIsSynthesizing = false;\n        this.privIsSynthesisEnded = false;\n        this.privBytesReceived = 0;\n        this.privInTurn = false;\n        this.privTextOffset = 0;\n        this.privNextSearchTextIndex = 0;\n        this.privSentenceOffset = 0;\n        this.privNextSearchSentenceIndex = 0;\n        this.privRequestId = Exports_js_1.createNoDashGuid();\n        this.privTurnDeferral = new Exports_js_1.Deferred();\n        // We're not in a turn, so resolve.\n        this.privTurnDeferral.resolve();\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get streamId() {\n        return this.privStreamId;\n    }\n    set streamId(value) {\n        this.privStreamId = value;\n    }\n    get audioOutputFormat() {\n        return this.privAudioOutputFormat;\n    }\n    set audioOutputFormat(format) {\n        this.privAudioOutputFormat = format;\n    }\n    get turnCompletionPromise() {\n        return this.privTurnDeferral.promise;\n    }\n    get isSynthesisEnded() {\n        return this.privIsSynthesisEnded;\n    }\n    get isSynthesizing() {\n        return this.privIsSynthesizing;\n    }\n    get currentTextOffset() {\n        return this.privTextOffset;\n    }\n    get currentSentenceOffset() {\n        return this.privSentenceOffset;\n    }\n    // The number of bytes received for current turn\n    get bytesReceived() {\n        return this.privBytesReceived;\n    }\n    get audioDuration() {\n        return this.privAudioDuration;\n    }\n    get extraProperties() {\n        if (!!this.privWebRTCSDP) {\n            const properties = new Exports_js_2.PropertyCollection();\n            properties.setProperty(Exports_js_2.PropertyId.TalkingAvatarService_WebRTC_SDP, this.privWebRTCSDP);\n            return properties;\n        }\n        return undefined;\n    }\n    async getAllReceivedAudio() {\n        if (!!this.privReceivedAudio) {\n            return Promise.resolve(this.privReceivedAudio);\n        }\n        if (!this.privIsSynthesisEnded) {\n            return null;\n        }\n        await this.readAllAudioFromStream();\n        return Promise.resolve(this.privReceivedAudio);\n    }\n    async getAllReceivedAudioWithHeader() {\n        if (!!this.privReceivedAudioWithHeader) {\n            return this.privReceivedAudioWithHeader;\n        }\n        if (!this.privIsSynthesisEnded) {\n            return null;\n        }\n        if (this.audioOutputFormat.hasHeader) {\n            const audio = await this.getAllReceivedAudio();\n            this.privReceivedAudioWithHeader = this.audioOutputFormat.addHeader(audio);\n            return this.privReceivedAudioWithHeader;\n        }\n        else {\n            return this.getAllReceivedAudio();\n        }\n    }\n    startNewSynthesis(requestId, rawText, isSSML, audioDestination) {\n        this.privIsSynthesisEnded = false;\n        this.privIsSynthesizing = true;\n        this.privRequestId = requestId;\n        this.privRawText = rawText;\n        this.privIsSSML = isSSML;\n        this.privAudioOutputStream = new AudioOutputStream_js_1.PullAudioOutputStreamImpl();\n        this.privAudioOutputStream.format = this.privAudioOutputFormat;\n        this.privReceivedAudio = null;\n        this.privReceivedAudioWithHeader = null;\n        this.privBytesReceived = 0;\n        this.privTextOffset = 0;\n        this.privNextSearchTextIndex = 0;\n        this.privSentenceOffset = 0;\n        this.privNextSearchSentenceIndex = 0;\n        this.privPartialVisemeAnimation = \"\";\n        this.privWebRTCSDP = \"\";\n        if (audioDestination !== undefined) {\n            this.privTurnAudioDestination = audioDestination;\n            this.privTurnAudioDestination.format = this.privAudioOutputFormat;\n        }\n        this.onEvent(new SynthesisEvents_js_1.SynthesisTriggeredEvent(this.requestId, undefined, audioDestination === undefined ? undefined : audioDestination.id()));\n    }\n    onPreConnectionStart(authFetchEventId) {\n        this.privAuthFetchEventId = authFetchEventId;\n        this.onEvent(new SynthesisEvents_js_1.ConnectingToSynthesisServiceEvent(this.privRequestId, this.privAuthFetchEventId));\n    }\n    onAuthCompleted(isError) {\n        if (isError) {\n            this.onComplete();\n        }\n    }\n    onConnectionEstablishCompleted(statusCode) {\n        if (statusCode === 200) {\n            this.onEvent(new SynthesisEvents_js_1.SynthesisStartedEvent(this.requestId, this.privAuthFetchEventId));\n            this.privBytesReceived = 0;\n            return;\n        }\n        else if (statusCode === 403) {\n            this.onComplete();\n        }\n    }\n    onServiceResponseMessage(responseJson) {\n        const response = JSON.parse(responseJson);\n        this.streamId = response.audio.streamId;\n    }\n    onServiceTurnEndResponse() {\n        this.privInTurn = false;\n        this.privTurnDeferral.resolve();\n        this.onComplete();\n    }\n    onServiceTurnStartResponse(responseJson) {\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\n            // What? How are we starting a turn with another not done?\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            this.privTurnDeferral.promise.then().catch(() => { });\n        }\n        this.privInTurn = true;\n        this.privTurnDeferral = new Exports_js_1.Deferred();\n        const response = JSON.parse(responseJson);\n        if (!!response.webrtc) {\n            this.privWebRTCSDP = response.webrtc.connectionString;\n        }\n    }\n    onAudioChunkReceived(data) {\n        if (this.isSynthesizing) {\n            this.privAudioOutputStream.write(data);\n            this.privBytesReceived += data.byteLength;\n            if (this.privTurnAudioDestination !== undefined) {\n                this.privTurnAudioDestination.write(data);\n            }\n        }\n    }\n    onTextBoundaryEvent(metadata) {\n        this.updateTextOffset(metadata.Data.text.Text, metadata.Type);\n    }\n    onVisemeMetadataReceived(metadata) {\n        if (metadata.Data.AnimationChunk !== undefined) {\n            this.privPartialVisemeAnimation += metadata.Data.AnimationChunk;\n        }\n    }\n    onSessionEnd(metadata) {\n        this.privAudioDuration = metadata.Data.Offset;\n    }\n    async constructSynthesisResult() {\n        const audioBuffer = await this.getAllReceivedAudioWithHeader();\n        return new Exports_js_2.SpeechSynthesisResult(this.requestId, Exports_js_2.ResultReason.SynthesizingAudioCompleted, audioBuffer, undefined, this.extraProperties, this.audioDuration);\n    }\n    dispose() {\n        if (!this.privIsDisposed) {\n            // we should have completed by now. If we did not its an unknown error.\n            this.privIsDisposed = true;\n        }\n    }\n    onStopSynthesizing() {\n        this.onComplete();\n    }\n    /**\n     * Gets the viseme animation string (merged from animation chunk), and clears the internal\n     * partial animation.\n     */\n    getAndClearVisemeAnimation() {\n        const animation = this.privPartialVisemeAnimation;\n        this.privPartialVisemeAnimation = \"\";\n        return animation;\n    }\n    onEvent(event) {\n        Exports_js_1.Events.instance.onEvent(event);\n    }\n    /**\n     * Check if the text is an XML(SSML) tag\n     * @param text\n     * @private\n     */\n    static isXmlTag(text) {\n        return text.length >= 2 && text[0] === \"<\" && text[text.length - 1] === \">\";\n    }\n    updateTextOffset(text, type) {\n        if (type === SynthesisAudioMetadata_js_1.MetadataType.WordBoundary) {\n            this.privTextOffset = this.privRawText.indexOf(text, this.privNextSearchTextIndex);\n            if (this.privTextOffset >= 0) {\n                this.privNextSearchTextIndex = this.privTextOffset + text.length;\n                if (this.privIsSSML) {\n                    if (this.withinXmlTag(this.privTextOffset) && !SynthesisTurn.isXmlTag(text)) {\n                        this.updateTextOffset(text, type);\n                    }\n                }\n            }\n        }\n        else {\n            this.privSentenceOffset = this.privRawText.indexOf(text, this.privNextSearchSentenceIndex);\n            if (this.privSentenceOffset >= 0) {\n                this.privNextSearchSentenceIndex = this.privSentenceOffset + text.length;\n                if (this.privIsSSML) {\n                    if (this.withinXmlTag(this.privSentenceOffset) && !SynthesisTurn.isXmlTag(text)) {\n                        this.updateTextOffset(text, type);\n                    }\n                }\n            }\n        }\n    }\n    onComplete() {\n        if (this.privIsSynthesizing) {\n            this.privIsSynthesizing = false;\n            this.privIsSynthesisEnded = true;\n            this.privAudioOutputStream.close();\n            this.privInTurn = false;\n            if (this.privTurnAudioDestination !== undefined) {\n                this.privTurnAudioDestination.close();\n                this.privTurnAudioDestination = undefined;\n            }\n        }\n    }\n    async readAllAudioFromStream() {\n        if (this.privIsSynthesisEnded) {\n            this.privReceivedAudio = new ArrayBuffer(this.bytesReceived);\n            try {\n                await this.privAudioOutputStream.read(this.privReceivedAudio);\n            }\n            catch (e) {\n                this.privReceivedAudio = new ArrayBuffer(0);\n            }\n        }\n    }\n    /**\n     * Check if current idx is in XML(SSML) tag\n     * @param idx\n     * @private\n     */\n    withinXmlTag(idx) {\n        return this.privRawText.indexOf(\"<\", idx + 1) > this.privRawText.indexOf(\">\", idx + 1);\n    }\n}\nexports.SynthesisTurn = SynthesisTurn;\n\n//# sourceMappingURL=SynthesisTurn.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesisTurn.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesizerConfig.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesizerConfig.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SynthesizerConfig = exports.SynthesisServiceType = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nvar SynthesisServiceType;\n(function (SynthesisServiceType) {\n    SynthesisServiceType[SynthesisServiceType[\"Standard\"] = 0] = \"Standard\";\n    SynthesisServiceType[SynthesisServiceType[\"Custom\"] = 1] = \"Custom\";\n})(SynthesisServiceType = exports.SynthesisServiceType || (exports.SynthesisServiceType = {}));\nclass SynthesizerConfig {\n    constructor(speechServiceConfig, parameters) {\n        this.privSynthesisServiceType = SynthesisServiceType.Standard;\n        this.avatarEnabled = false;\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new Exports_js_1.SpeechServiceConfig(new Exports_js_1.Context(null));\n        this.privParameters = parameters;\n    }\n    get parameters() {\n        return this.privParameters;\n    }\n    get synthesisServiceType() {\n        return this.privSynthesisServiceType;\n    }\n    set synthesisServiceType(value) {\n        this.privSynthesisServiceType = value;\n    }\n    set synthesisVideoSection(value) {\n        this.privSpeechServiceConfig.Context.synthesis = {\n            video: value\n        };\n    }\n    get SpeechServiceConfig() {\n        return this.privSpeechServiceConfig;\n    }\n}\nexports.SynthesizerConfig = SynthesizerConfig;\n\n//# sourceMappingURL=SynthesizerConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvU3ludGhlc2l6ZXJDb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QixHQUFHLDRCQUE0QjtBQUN4RCxxQkFBcUIsbUJBQU8sQ0FBQywwSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMERBQTBELDRCQUE0QixLQUFLO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCOztBQUV6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1N5bnRoZXNpemVyQ29uZmlnLmpzP2UwOGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3ludGhlc2l6ZXJDb25maWcgPSBleHBvcnRzLlN5bnRoZXNpc1NlcnZpY2VUeXBlID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbnZhciBTeW50aGVzaXNTZXJ2aWNlVHlwZTtcbihmdW5jdGlvbiAoU3ludGhlc2lzU2VydmljZVR5cGUpIHtcbiAgICBTeW50aGVzaXNTZXJ2aWNlVHlwZVtTeW50aGVzaXNTZXJ2aWNlVHlwZVtcIlN0YW5kYXJkXCJdID0gMF0gPSBcIlN0YW5kYXJkXCI7XG4gICAgU3ludGhlc2lzU2VydmljZVR5cGVbU3ludGhlc2lzU2VydmljZVR5cGVbXCJDdXN0b21cIl0gPSAxXSA9IFwiQ3VzdG9tXCI7XG59KShTeW50aGVzaXNTZXJ2aWNlVHlwZSA9IGV4cG9ydHMuU3ludGhlc2lzU2VydmljZVR5cGUgfHwgKGV4cG9ydHMuU3ludGhlc2lzU2VydmljZVR5cGUgPSB7fSkpO1xuY2xhc3MgU3ludGhlc2l6ZXJDb25maWcge1xuICAgIGNvbnN0cnVjdG9yKHNwZWVjaFNlcnZpY2VDb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICAgICAgdGhpcy5wcml2U3ludGhlc2lzU2VydmljZVR5cGUgPSBTeW50aGVzaXNTZXJ2aWNlVHlwZS5TdGFuZGFyZDtcbiAgICAgICAgdGhpcy5hdmF0YXJFbmFibGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMucHJpdlNwZWVjaFNlcnZpY2VDb25maWcgPSBzcGVlY2hTZXJ2aWNlQ29uZmlnID8gc3BlZWNoU2VydmljZUNvbmZpZyA6IG5ldyBFeHBvcnRzX2pzXzEuU3BlZWNoU2VydmljZUNvbmZpZyhuZXcgRXhwb3J0c19qc18xLkNvbnRleHQobnVsbCkpO1xuICAgICAgICB0aGlzLnByaXZQYXJhbWV0ZXJzID0gcGFyYW1ldGVycztcbiAgICB9XG4gICAgZ2V0IHBhcmFtZXRlcnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQYXJhbWV0ZXJzO1xuICAgIH1cbiAgICBnZXQgc3ludGhlc2lzU2VydmljZVR5cGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTeW50aGVzaXNTZXJ2aWNlVHlwZTtcbiAgICB9XG4gICAgc2V0IHN5bnRoZXNpc1NlcnZpY2VUeXBlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMucHJpdlN5bnRoZXNpc1NlcnZpY2VUeXBlID0gdmFsdWU7XG4gICAgfVxuICAgIHNldCBzeW50aGVzaXNWaWRlb1NlY3Rpb24odmFsdWUpIHtcbiAgICAgICAgdGhpcy5wcml2U3BlZWNoU2VydmljZUNvbmZpZy5Db250ZXh0LnN5bnRoZXNpcyA9IHtcbiAgICAgICAgICAgIHZpZGVvOiB2YWx1ZVxuICAgICAgICB9O1xuICAgIH1cbiAgICBnZXQgU3BlZWNoU2VydmljZUNvbmZpZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNwZWVjaFNlcnZpY2VDb25maWc7XG4gICAgfVxufVxuZXhwb3J0cy5TeW50aGVzaXplckNvbmZpZyA9IFN5bnRoZXNpemVyQ29uZmlnO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TeW50aGVzaXplckNvbmZpZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SynthesizerConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranscriberConnectionFactory.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranscriberConnectionFactory.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranscriberConnectionFactory = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = __webpack_require__(/*! ./ConnectionFactoryBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ./HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nconst QueryParameterNames_js_1 = __webpack_require__(/*! ./QueryParameterNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js\");\nclass TranscriberConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.multiaudioRelativeUri = \"/speech/recognition/multiaudio\";\n    }\n    create(config, authInfo, connectionId) {\n        let endpoint = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, \"centralus\");\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        const hostDefault = \"wss://transcribe.\" + region + \".cts.speech\" + hostSuffix + this.multiaudioRelativeUri;\n        const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, hostDefault);\n        const queryParams = {};\n        this.setQueryParams(queryParams, config, endpoint);\n        if (!endpoint) {\n            endpoint = host;\n        }\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n    }\n    setQueryParams(queryParams, config, endpointUrl) {\n        const endpointId = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, undefined);\n        const language = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n        if (endpointId && !(QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId in queryParams)) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\n        }\n        if (language && !(QueryParameterNames_js_1.QueryParameterNames.Language in queryParams)) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.Language] = language;\n        }\n        const wordLevelTimings = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"false\").toLowerCase() === \"true\";\n        const detailed = config.parameters.getProperty(Exports_js_3.OutputFormatPropertyName, Exports_js_2.OutputFormat[Exports_js_2.OutputFormat.Simple]) !== Exports_js_2.OutputFormat[Exports_js_2.OutputFormat.Simple];\n        if (wordLevelTimings || detailed) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.Format] = Exports_js_2.OutputFormat[Exports_js_2.OutputFormat.Detailed].toLowerCase();\n        }\n        this.setCommonUrlParams(config, queryParams, endpointUrl);\n    }\n}\nexports.TranscriberConnectionFactory = TranscriberConnectionFactory;\n\n//# sourceMappingURL=TranscriberConnectionFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmliZXJDb25uZWN0aW9uRmFjdG9yeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0NBQW9DO0FBQ3BDLHFCQUFxQixtQkFBTyxDQUFDLDJJQUE4QjtBQUMzRCxxQkFBcUIsbUJBQU8sQ0FBQyxxSEFBbUI7QUFDaEQsbUNBQW1DLG1CQUFPLENBQUMsc0pBQTRCO0FBQ3ZFLHFCQUFxQixtQkFBTyxDQUFDLDBIQUFjO0FBQzNDLHlCQUF5QixtQkFBTyxDQUFDLGtJQUFrQjtBQUNuRCxpQ0FBaUMsbUJBQU8sQ0FBQyxrSkFBMEI7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DOztBQUVwQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1RyYW5zY3JpYmVyQ29ubmVjdGlvbkZhY3RvcnkuanM/NzY3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmFuc2NyaWJlckNvbm5lY3Rpb25GYWN0b3J5ID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uL2NvbW1vbi5icm93c2VyL0V4cG9ydHMuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzIgPSByZXF1aXJlKFwiLi4vc2RrL0V4cG9ydHMuanNcIik7XG5jb25zdCBDb25uZWN0aW9uRmFjdG9yeUJhc2VfanNfMSA9IHJlcXVpcmUoXCIuL0Nvbm5lY3Rpb25GYWN0b3J5QmFzZS5qc1wiKTtcbmNvbnN0IEV4cG9ydHNfanNfMyA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG5jb25zdCBIZWFkZXJOYW1lc19qc18xID0gcmVxdWlyZShcIi4vSGVhZGVyTmFtZXMuanNcIik7XG5jb25zdCBRdWVyeVBhcmFtZXRlck5hbWVzX2pzXzEgPSByZXF1aXJlKFwiLi9RdWVyeVBhcmFtZXRlck5hbWVzLmpzXCIpO1xuY2xhc3MgVHJhbnNjcmliZXJDb25uZWN0aW9uRmFjdG9yeSBleHRlbmRzIENvbm5lY3Rpb25GYWN0b3J5QmFzZV9qc18xLkNvbm5lY3Rpb25GYWN0b3J5QmFzZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMubXVsdGlhdWRpb1JlbGF0aXZlVXJpID0gXCIvc3BlZWNoL3JlY29nbml0aW9uL211bHRpYXVkaW9cIjtcbiAgICB9XG4gICAgY3JlYXRlKGNvbmZpZywgYXV0aEluZm8sIGNvbm5lY3Rpb25JZCkge1xuICAgICAgICBsZXQgZW5kcG9pbnQgPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9FbmRwb2ludCwgdW5kZWZpbmVkKTtcbiAgICAgICAgY29uc3QgcmVnaW9uID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fUmVnaW9uLCBcImNlbnRyYWx1c1wiKTtcbiAgICAgICAgY29uc3QgaG9zdFN1ZmZpeCA9IENvbm5lY3Rpb25GYWN0b3J5QmFzZV9qc18xLkNvbm5lY3Rpb25GYWN0b3J5QmFzZS5nZXRIb3N0U3VmZml4KHJlZ2lvbik7XG4gICAgICAgIGNvbnN0IGhvc3REZWZhdWx0ID0gXCJ3c3M6Ly90cmFuc2NyaWJlLlwiICsgcmVnaW9uICsgXCIuY3RzLnNwZWVjaFwiICsgaG9zdFN1ZmZpeCArIHRoaXMubXVsdGlhdWRpb1JlbGF0aXZlVXJpO1xuICAgICAgICBjb25zdCBob3N0ID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fSG9zdCwgaG9zdERlZmF1bHQpO1xuICAgICAgICBjb25zdCBxdWVyeVBhcmFtcyA9IHt9O1xuICAgICAgICB0aGlzLnNldFF1ZXJ5UGFyYW1zKHF1ZXJ5UGFyYW1zLCBjb25maWcsIGVuZHBvaW50KTtcbiAgICAgICAgaWYgKCFlbmRwb2ludCkge1xuICAgICAgICAgICAgZW5kcG9pbnQgPSBob3N0O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7fTtcbiAgICAgICAgaWYgKGF1dGhJbmZvLnRva2VuICE9PSB1bmRlZmluZWQgJiYgYXV0aEluZm8udG9rZW4gIT09IFwiXCIpIHtcbiAgICAgICAgICAgIGhlYWRlcnNbYXV0aEluZm8uaGVhZGVyTmFtZV0gPSBhdXRoSW5mby50b2tlbjtcbiAgICAgICAgfVxuICAgICAgICBoZWFkZXJzW0hlYWRlck5hbWVzX2pzXzEuSGVhZGVyTmFtZXMuQ29ubmVjdGlvbklkXSA9IGNvbm5lY3Rpb25JZDtcbiAgICAgICAgY29uZmlnLnBhcmFtZXRlcnMuc2V0UHJvcGVydHkoRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fVXJsLCBlbmRwb2ludCk7XG4gICAgICAgIGNvbnN0IGVuYWJsZUNvbXByZXNzaW9uID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoXCJTUEVFQ0gtRW5hYmxlV2Vic29ja2V0Q29tcHJlc3Npb25cIiwgXCJmYWxzZVwiKSA9PT0gXCJ0cnVlXCI7XG4gICAgICAgIHJldHVybiBuZXcgRXhwb3J0c19qc18xLldlYnNvY2tldENvbm5lY3Rpb24oZW5kcG9pbnQsIHF1ZXJ5UGFyYW1zLCBoZWFkZXJzLCBuZXcgRXhwb3J0c19qc18zLldlYnNvY2tldE1lc3NhZ2VGb3JtYXR0ZXIoKSwgRXhwb3J0c19qc18xLlByb3h5SW5mby5mcm9tUmVjb2duaXplckNvbmZpZyhjb25maWcpLCBlbmFibGVDb21wcmVzc2lvbiwgY29ubmVjdGlvbklkKTtcbiAgICB9XG4gICAgc2V0UXVlcnlQYXJhbXMocXVlcnlQYXJhbXMsIGNvbmZpZywgZW5kcG9pbnRVcmwpIHtcbiAgICAgICAgY29uc3QgZW5kcG9pbnRJZCA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0VuZHBvaW50SWQsIHVuZGVmaW5lZCk7XG4gICAgICAgIGNvbnN0IGxhbmd1YWdlID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fUmVjb0xhbmd1YWdlLCB1bmRlZmluZWQpO1xuICAgICAgICBpZiAoZW5kcG9pbnRJZCAmJiAhKFF1ZXJ5UGFyYW1ldGVyTmFtZXNfanNfMS5RdWVyeVBhcmFtZXRlck5hbWVzLkN1c3RvbVNwZWVjaERlcGxveW1lbnRJZCBpbiBxdWVyeVBhcmFtcykpIHtcbiAgICAgICAgICAgIHF1ZXJ5UGFyYW1zW1F1ZXJ5UGFyYW1ldGVyTmFtZXNfanNfMS5RdWVyeVBhcmFtZXRlck5hbWVzLkN1c3RvbVNwZWVjaERlcGxveW1lbnRJZF0gPSBlbmRwb2ludElkO1xuICAgICAgICB9XG4gICAgICAgIGlmIChsYW5ndWFnZSAmJiAhKFF1ZXJ5UGFyYW1ldGVyTmFtZXNfanNfMS5RdWVyeVBhcmFtZXRlck5hbWVzLkxhbmd1YWdlIGluIHF1ZXJ5UGFyYW1zKSkge1xuICAgICAgICAgICAgcXVlcnlQYXJhbXNbUXVlcnlQYXJhbWV0ZXJOYW1lc19qc18xLlF1ZXJ5UGFyYW1ldGVyTmFtZXMuTGFuZ3VhZ2VdID0gbGFuZ3VhZ2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgd29yZExldmVsVGltaW5ncyA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VSZXNwb25zZV9SZXF1ZXN0V29yZExldmVsVGltZXN0YW1wcywgXCJmYWxzZVwiKS50b0xvd2VyQ2FzZSgpID09PSBcInRydWVcIjtcbiAgICAgICAgY29uc3QgZGV0YWlsZWQgPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzMuT3V0cHV0Rm9ybWF0UHJvcGVydHlOYW1lLCBFeHBvcnRzX2pzXzIuT3V0cHV0Rm9ybWF0W0V4cG9ydHNfanNfMi5PdXRwdXRGb3JtYXQuU2ltcGxlXSkgIT09IEV4cG9ydHNfanNfMi5PdXRwdXRGb3JtYXRbRXhwb3J0c19qc18yLk91dHB1dEZvcm1hdC5TaW1wbGVdO1xuICAgICAgICBpZiAod29yZExldmVsVGltaW5ncyB8fCBkZXRhaWxlZCkge1xuICAgICAgICAgICAgcXVlcnlQYXJhbXNbUXVlcnlQYXJhbWV0ZXJOYW1lc19qc18xLlF1ZXJ5UGFyYW1ldGVyTmFtZXMuRm9ybWF0XSA9IEV4cG9ydHNfanNfMi5PdXRwdXRGb3JtYXRbRXhwb3J0c19qc18yLk91dHB1dEZvcm1hdC5EZXRhaWxlZF0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldENvbW1vblVybFBhcmFtcyhjb25maWcsIHF1ZXJ5UGFyYW1zLCBlbmRwb2ludFVybCk7XG4gICAgfVxufVxuZXhwb3J0cy5UcmFuc2NyaWJlckNvbm5lY3Rpb25GYWN0b3J5ID0gVHJhbnNjcmliZXJDb25uZWN0aW9uRmFjdG9yeTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJhbnNjcmliZXJDb25uZWN0aW9uRmFjdG9yeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranscriberConnectionFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranscriptionServiceRecognizer.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranscriptionServiceRecognizer.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranscriptionServiceRecognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = __webpack_require__(/*! ./SpeechConnectionMessage.Internal.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionMessage.Internal.js\");\n// eslint-disable-next-line max-classes-per-file\nclass TranscriptionServiceRecognizer extends Exports_js_3.ConversationServiceRecognizer {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, transcriber) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, transcriber);\n        this.privTranscriberRecognizer = transcriber;\n        this.sendPrePayloadJSONOverride = (connection) => this.sendTranscriptionStartJSON(connection);\n        if (this.privRecognizerConfig.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps) === \"true\") {\n            this.privSpeechContext.setWordLevelTimings();\n        }\n    }\n    async sendSpeechEventAsync(info, command) {\n        if (!!this.privRequestSession.isRecognizing) {\n            const connection = await this.fetchConnection();\n            await this.sendSpeechEvent(connection, this.createSpeechEventPayload(info, command));\n        }\n    }\n    async sendMeetingSpeechEventAsync(info, command) {\n        if (!!this.privRequestSession.isRecognizing) {\n            const connection = await this.fetchConnection();\n            await this.sendSpeechEvent(connection, this.createMeetingSpeechEventPayload(info, command));\n        }\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        return this.processSpeechMessages(connectionMessage);\n    }\n    handleRecognizedCallback(result, offset, sessionId) {\n        try {\n            const event = new Exports_js_2.SpeechRecognitionEventArgs(result, offset, sessionId);\n            this.privTranscriberRecognizer.recognized(this.privTranscriberRecognizer, event);\n            if (!!this.privSuccessCallback) {\n                try {\n                    this.privSuccessCallback(result);\n                }\n                catch (e) {\n                    if (!!this.privErrorCallback) {\n                        this.privErrorCallback(e);\n                    }\n                }\n                // Only invoke the call back once.\n                // and if it's successful don't invoke the\n                // error after that.\n                this.privSuccessCallback = undefined;\n                this.privErrorCallback = undefined;\n            }\n            /* eslint-disable no-empty */\n        }\n        catch (error) {\n            // Not going to let errors in the event handler\n            // trip things up.\n        }\n    }\n    handleRecognizingCallback(result, duration, sessionId) {\n        try {\n            const ev = new Exports_js_2.SpeechRecognitionEventArgs(result, duration, sessionId);\n            this.privTranscriberRecognizer.recognizing(this.privTranscriberRecognizer, ev);\n            /* eslint-disable no-empty */\n        }\n        catch (error) {\n            // Not going to let errors in the event handler\n            // trip things up.\n        }\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_2.PropertyCollection();\n        properties.setProperty(Exports_js_3.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[errorCode]);\n        if (this.privTranscriberRecognizer.IsMeetingRecognizer()) {\n            if (!!this.privTranscriberRecognizer.canceled) {\n                const cancelEvent = new Exports_js_2.MeetingTranscriptionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n                try {\n                    this.privTranscriberRecognizer.canceled(this.privTranscriberRecognizer, cancelEvent);\n                    /* eslint-disable no-empty */\n                }\n                catch { }\n            }\n        }\n        else {\n            if (!!this.privTranscriberRecognizer.canceled) {\n                const cancelEvent = new Exports_js_2.ConversationTranscriptionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n                try {\n                    this.privTranscriberRecognizer.canceled(this.privTranscriberRecognizer, cancelEvent);\n                    /* eslint-disable no-empty */\n                }\n                catch { }\n            }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new Exports_js_2.SpeechRecognitionResult(requestId, Exports_js_2.ResultReason.Canceled, undefined, // Text\n            undefined, // Duration\n            undefined, // Offset\n            undefined, // Language\n            undefined, // Language Detection Confidence\n            undefined, // Speaker Id\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                this.privSuccessCallback = undefined;\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n    }\n    // Encapsulated for derived service recognizers that need to send additional JSON\n    async sendTranscriptionStartJSON(connection) {\n        await this.sendSpeechContext(connection, true);\n        if (this.privTranscriberRecognizer.IsMeetingRecognizer()) {\n            const info = this.privTranscriberRecognizer.getMeetingInfo();\n            const payload = this.createMeetingSpeechEventPayload(info, \"start\");\n            await this.sendSpeechEvent(connection, payload);\n        }\n        else {\n            const info = this.privTranscriberRecognizer.getConversationInfo();\n            const payload = this.createSpeechEventPayload(info, \"start\");\n            await this.sendSpeechEvent(connection, payload);\n        }\n        await this.sendWaveHeader(connection);\n        return;\n    }\n    sendSpeechEvent(connection, payload) {\n        const speechEventJson = JSON.stringify(payload);\n        if (speechEventJson) {\n            return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_1.MessageType.Text, \"speech.event\", this.privRequestSession.requestId, \"application/json\", speechEventJson));\n        }\n        return;\n    }\n    createSpeechEventPayload(info, command) {\n        const eventDict = { id: \"meeting\", name: command, meeting: info.conversationProperties };\n        eventDict.meeting.id = info.id;\n        eventDict.meeting.attendees = info.participants;\n        return eventDict;\n    }\n    createMeetingSpeechEventPayload(info, command) {\n        const eventDict = { id: \"meeting\", name: command, meeting: info.meetingProperties };\n        eventDict.meeting.id = info.id;\n        eventDict.meeting.attendees = info.participants;\n        return eventDict;\n    }\n}\nexports.TranscriptionServiceRecognizer = TranscriptionServiceRecognizer;\n\n//# sourceMappingURL=TranscriptionServiceRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranscriptionServiceRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionConfig.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionConfig.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationConnectionConfig = void 0;\nconst RestConfigBase_js_1 = __webpack_require__(/*! ../../common.browser/RestConfigBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/RestConfigBase.js\");\nclass ConversationConnectionConfig extends RestConfigBase_js_1.RestConfigBase {\n    static get host() {\n        return ConversationConnectionConfig.privHost;\n    }\n    static get apiVersion() {\n        return ConversationConnectionConfig.privApiVersion;\n    }\n    static get clientAppId() {\n        return ConversationConnectionConfig.privClientAppId;\n    }\n    static get defaultLanguageCode() {\n        return ConversationConnectionConfig.privDefaultLanguageCode;\n    }\n    static get restPath() {\n        return ConversationConnectionConfig.privRestPath;\n    }\n    static get webSocketPath() {\n        return ConversationConnectionConfig.privWebSocketPath;\n    }\n    static get transcriptionEventKeys() {\n        return ConversationConnectionConfig.privTranscriptionEventKeys;\n    }\n}\nexports.ConversationConnectionConfig = ConversationConnectionConfig;\nConversationConnectionConfig.privHost = \"dev.microsofttranslator.com\";\nConversationConnectionConfig.privRestPath = \"/capito/room\";\nConversationConnectionConfig.privApiVersion = \"2.0\";\nConversationConnectionConfig.privDefaultLanguageCode = \"en-US\";\nConversationConnectionConfig.privClientAppId = \"FC539C22-1767-4F1F-84BC-B4D811114F15\";\nConversationConnectionConfig.privWebSocketPath = \"/capito/translate\";\nConversationConnectionConfig.privTranscriptionEventKeys = [\"iCalUid\", \"callId\", \"organizer\", \"FLAC\", \"MTUri\", \"DifferentiateGuestSpeakers\", \"audiorecording\", \"Threadid\", \"OrganizerMri\", \"OrganizerTenantId\", \"UserToken\"];\n\n//# sourceMappingURL=ConversationConnectionConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQ0FBb0M7QUFDcEMsNEJBQTRCLG1CQUFPLENBQUMsNEpBQXdDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvbkNvbm5lY3Rpb25Db25maWcuanM/MmYyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnID0gdm9pZCAwO1xuY29uc3QgUmVzdENvbmZpZ0Jhc2VfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb24uYnJvd3Nlci9SZXN0Q29uZmlnQmFzZS5qc1wiKTtcbmNsYXNzIENvbnZlcnNhdGlvbkNvbm5lY3Rpb25Db25maWcgZXh0ZW5kcyBSZXN0Q29uZmlnQmFzZV9qc18xLlJlc3RDb25maWdCYXNlIHtcbiAgICBzdGF0aWMgZ2V0IGhvc3QoKSB7XG4gICAgICAgIHJldHVybiBDb252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLnByaXZIb3N0O1xuICAgIH1cbiAgICBzdGF0aWMgZ2V0IGFwaVZlcnNpb24oKSB7XG4gICAgICAgIHJldHVybiBDb252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLnByaXZBcGlWZXJzaW9uO1xuICAgIH1cbiAgICBzdGF0aWMgZ2V0IGNsaWVudEFwcElkKCkge1xuICAgICAgICByZXR1cm4gQ29udmVyc2F0aW9uQ29ubmVjdGlvbkNvbmZpZy5wcml2Q2xpZW50QXBwSWQ7XG4gICAgfVxuICAgIHN0YXRpYyBnZXQgZGVmYXVsdExhbmd1YWdlQ29kZSgpIHtcbiAgICAgICAgcmV0dXJuIENvbnZlcnNhdGlvbkNvbm5lY3Rpb25Db25maWcucHJpdkRlZmF1bHRMYW5ndWFnZUNvZGU7XG4gICAgfVxuICAgIHN0YXRpYyBnZXQgcmVzdFBhdGgoKSB7XG4gICAgICAgIHJldHVybiBDb252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLnByaXZSZXN0UGF0aDtcbiAgICB9XG4gICAgc3RhdGljIGdldCB3ZWJTb2NrZXRQYXRoKCkge1xuICAgICAgICByZXR1cm4gQ29udmVyc2F0aW9uQ29ubmVjdGlvbkNvbmZpZy5wcml2V2ViU29ja2V0UGF0aDtcbiAgICB9XG4gICAgc3RhdGljIGdldCB0cmFuc2NyaXB0aW9uRXZlbnRLZXlzKCkge1xuICAgICAgICByZXR1cm4gQ29udmVyc2F0aW9uQ29ubmVjdGlvbkNvbmZpZy5wcml2VHJhbnNjcmlwdGlvbkV2ZW50S2V5cztcbiAgICB9XG59XG5leHBvcnRzLkNvbnZlcnNhdGlvbkNvbm5lY3Rpb25Db25maWcgPSBDb252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnO1xuQ29udmVyc2F0aW9uQ29ubmVjdGlvbkNvbmZpZy5wcml2SG9zdCA9IFwiZGV2Lm1pY3Jvc29mdHRyYW5zbGF0b3IuY29tXCI7XG5Db252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLnByaXZSZXN0UGF0aCA9IFwiL2NhcGl0by9yb29tXCI7XG5Db252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLnByaXZBcGlWZXJzaW9uID0gXCIyLjBcIjtcbkNvbnZlcnNhdGlvbkNvbm5lY3Rpb25Db25maWcucHJpdkRlZmF1bHRMYW5ndWFnZUNvZGUgPSBcImVuLVVTXCI7XG5Db252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLnByaXZDbGllbnRBcHBJZCA9IFwiRkM1MzlDMjItMTc2Ny00RjFGLTg0QkMtQjREODExMTE0RjE1XCI7XG5Db252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLnByaXZXZWJTb2NrZXRQYXRoID0gXCIvY2FwaXRvL3RyYW5zbGF0ZVwiO1xuQ29udmVyc2F0aW9uQ29ubmVjdGlvbkNvbmZpZy5wcml2VHJhbnNjcmlwdGlvbkV2ZW50S2V5cyA9IFtcImlDYWxVaWRcIiwgXCJjYWxsSWRcIiwgXCJvcmdhbml6ZXJcIiwgXCJGTEFDXCIsIFwiTVRVcmlcIiwgXCJEaWZmZXJlbnRpYXRlR3Vlc3RTcGVha2Vyc1wiLCBcImF1ZGlvcmVjb3JkaW5nXCIsIFwiVGhyZWFkaWRcIiwgXCJPcmdhbml6ZXJNcmlcIiwgXCJPcmdhbml6ZXJUZW5hbnRJZFwiLCBcIlVzZXJUb2tlblwiXTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29udmVyc2F0aW9uQ29ubmVjdGlvbkNvbmZpZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionFactory.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionFactory.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationConnectionFactory = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../../sdk/Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = __webpack_require__(/*! ../ConnectionFactoryBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js\");\nconst ConversationConnectionConfig_js_1 = __webpack_require__(/*! ./ConversationConnectionConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionConfig.js\");\nconst ConversationWebsocketMessageFormatter_js_1 = __webpack_require__(/*! ./ConversationWebsocketMessageFormatter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationWebsocketMessageFormatter.js\");\n/**\n * Create a connection to the Conversation Translator websocket for sending instant messages and commands, and for receiving translated messages.\n * The conversation must already have been started or joined.\n */\nclass ConversationConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        const endpointHost = config.parameters.getProperty(Exports_js_3.PropertyId.ConversationTranslator_Host, ConversationConnectionConfig_js_1.ConversationConnectionConfig.host);\n        const correlationId = config.parameters.getProperty(Exports_js_3.PropertyId.ConversationTranslator_CorrelationId, Exports_js_2.createGuid());\n        const endpoint = `wss://${endpointHost}${ConversationConnectionConfig_js_1.ConversationConnectionConfig.webSocketPath}`;\n        const token = config.parameters.getProperty(Exports_js_3.PropertyId.ConversationTranslator_Token, undefined);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(token, \"token\");\n        const queryParams = {};\n        queryParams[ConversationConnectionConfig_js_1.ConversationConnectionConfig.configParams.apiVersion] = ConversationConnectionConfig_js_1.ConversationConnectionConfig.apiVersion;\n        queryParams[ConversationConnectionConfig_js_1.ConversationConnectionConfig.configParams.token] = token;\n        queryParams[ConversationConnectionConfig_js_1.ConversationConnectionConfig.configParams.correlationId] = correlationId;\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return new Exports_js_1.WebsocketConnection(endpoint, queryParams, {}, new ConversationWebsocketMessageFormatter_js_1.ConversationWebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n    }\n}\nexports.ConversationConnectionFactory = ConversationConnectionFactory;\n\n//# sourceMappingURL=ConversationConnectionFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25Db25uZWN0aW9uRmFjdG9yeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUNBQXFDO0FBQ3JDLHFCQUFxQixtQkFBTyxDQUFDLDhJQUFpQztBQUM5RCxxQkFBcUIsbUJBQU8sQ0FBQyw4SEFBeUI7QUFDdEQsdUJBQXVCLG1CQUFPLENBQUMsNEhBQXdCO0FBQ3ZELHFCQUFxQixtQkFBTyxDQUFDLHdIQUFzQjtBQUNuRCxtQ0FBbUMsbUJBQU8sQ0FBQyx1SkFBNkI7QUFDeEUsMENBQTBDLG1CQUFPLENBQUMsa0xBQW1DO0FBQ3JGLG1EQUFtRCxtQkFBTyxDQUFDLG9NQUE0QztBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGFBQWEsRUFBRSw2RUFBNkU7QUFDOUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkU7QUFDN0U7QUFDQTtBQUNBLHFDQUFxQzs7QUFFckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvbkNvbm5lY3Rpb25GYWN0b3J5LmpzPzk3ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29udmVyc2F0aW9uQ29ubmVjdGlvbkZhY3RvcnkgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vY29tbW9uLmJyb3dzZXIvRXhwb3J0cy5qc1wiKTtcbmNvbnN0IEV4cG9ydHNfanNfMiA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb24vRXhwb3J0cy5qc1wiKTtcbmNvbnN0IENvbnRyYWN0c19qc18xID0gcmVxdWlyZShcIi4uLy4uL3Nkay9Db250cmFjdHMuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzMgPSByZXF1aXJlKFwiLi4vLi4vc2RrL0V4cG9ydHMuanNcIik7XG5jb25zdCBDb25uZWN0aW9uRmFjdG9yeUJhc2VfanNfMSA9IHJlcXVpcmUoXCIuLi9Db25uZWN0aW9uRmFjdG9yeUJhc2UuanNcIik7XG5jb25zdCBDb252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnX2pzXzEgPSByZXF1aXJlKFwiLi9Db252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLmpzXCIpO1xuY29uc3QgQ29udmVyc2F0aW9uV2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlcl9qc18xID0gcmVxdWlyZShcIi4vQ29udmVyc2F0aW9uV2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlci5qc1wiKTtcbi8qKlxuICogQ3JlYXRlIGEgY29ubmVjdGlvbiB0byB0aGUgQ29udmVyc2F0aW9uIFRyYW5zbGF0b3Igd2Vic29ja2V0IGZvciBzZW5kaW5nIGluc3RhbnQgbWVzc2FnZXMgYW5kIGNvbW1hbmRzLCBhbmQgZm9yIHJlY2VpdmluZyB0cmFuc2xhdGVkIG1lc3NhZ2VzLlxuICogVGhlIGNvbnZlcnNhdGlvbiBtdXN0IGFscmVhZHkgaGF2ZSBiZWVuIHN0YXJ0ZWQgb3Igam9pbmVkLlxuICovXG5jbGFzcyBDb252ZXJzYXRpb25Db25uZWN0aW9uRmFjdG9yeSBleHRlbmRzIENvbm5lY3Rpb25GYWN0b3J5QmFzZV9qc18xLkNvbm5lY3Rpb25GYWN0b3J5QmFzZSB7XG4gICAgY3JlYXRlKGNvbmZpZywgYXV0aEluZm8sIGNvbm5lY3Rpb25JZCkge1xuICAgICAgICBjb25zdCBlbmRwb2ludEhvc3QgPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzMuUHJvcGVydHlJZC5Db252ZXJzYXRpb25UcmFuc2xhdG9yX0hvc3QsIENvbnZlcnNhdGlvbkNvbm5lY3Rpb25Db25maWdfanNfMS5Db252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLmhvc3QpO1xuICAgICAgICBjb25zdCBjb3JyZWxhdGlvbklkID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18zLlByb3BlcnR5SWQuQ29udmVyc2F0aW9uVHJhbnNsYXRvcl9Db3JyZWxhdGlvbklkLCBFeHBvcnRzX2pzXzIuY3JlYXRlR3VpZCgpKTtcbiAgICAgICAgY29uc3QgZW5kcG9pbnQgPSBgd3NzOi8vJHtlbmRwb2ludEhvc3R9JHtDb252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnX2pzXzEuQ29udmVyc2F0aW9uQ29ubmVjdGlvbkNvbmZpZy53ZWJTb2NrZXRQYXRofWA7XG4gICAgICAgIGNvbnN0IHRva2VuID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18zLlByb3BlcnR5SWQuQ29udmVyc2F0aW9uVHJhbnNsYXRvcl9Ub2tlbiwgdW5kZWZpbmVkKTtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZOdWxsT3JVbmRlZmluZWQodG9rZW4sIFwidG9rZW5cIik7XG4gICAgICAgIGNvbnN0IHF1ZXJ5UGFyYW1zID0ge307XG4gICAgICAgIHF1ZXJ5UGFyYW1zW0NvbnZlcnNhdGlvbkNvbm5lY3Rpb25Db25maWdfanNfMS5Db252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLmNvbmZpZ1BhcmFtcy5hcGlWZXJzaW9uXSA9IENvbnZlcnNhdGlvbkNvbm5lY3Rpb25Db25maWdfanNfMS5Db252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLmFwaVZlcnNpb247XG4gICAgICAgIHF1ZXJ5UGFyYW1zW0NvbnZlcnNhdGlvbkNvbm5lY3Rpb25Db25maWdfanNfMS5Db252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnLmNvbmZpZ1BhcmFtcy50b2tlbl0gPSB0b2tlbjtcbiAgICAgICAgcXVlcnlQYXJhbXNbQ29udmVyc2F0aW9uQ29ubmVjdGlvbkNvbmZpZ19qc18xLkNvbnZlcnNhdGlvbkNvbm5lY3Rpb25Db25maWcuY29uZmlnUGFyYW1zLmNvcnJlbGF0aW9uSWRdID0gY29ycmVsYXRpb25JZDtcbiAgICAgICAgY29uc3QgZW5hYmxlQ29tcHJlc3Npb24gPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShcIlNQRUVDSC1FbmFibGVXZWJzb2NrZXRDb21wcmVzc2lvblwiLCBcImZhbHNlXCIpID09PSBcInRydWVcIjtcbiAgICAgICAgcmV0dXJuIG5ldyBFeHBvcnRzX2pzXzEuV2Vic29ja2V0Q29ubmVjdGlvbihlbmRwb2ludCwgcXVlcnlQYXJhbXMsIHt9LCBuZXcgQ29udmVyc2F0aW9uV2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlcl9qc18xLkNvbnZlcnNhdGlvbldlYnNvY2tldE1lc3NhZ2VGb3JtYXR0ZXIoKSwgRXhwb3J0c19qc18xLlByb3h5SW5mby5mcm9tUmVjb2duaXplckNvbmZpZyhjb25maWcpLCBlbmFibGVDb21wcmVzc2lvbiwgY29ubmVjdGlvbklkKTtcbiAgICB9XG59XG5leHBvcnRzLkNvbnZlcnNhdGlvbkNvbm5lY3Rpb25GYWN0b3J5ID0gQ29udmVyc2F0aW9uQ29ubmVjdGlvbkZhY3Rvcnk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnZlcnNhdGlvbkNvbm5lY3Rpb25GYWN0b3J5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionMessage.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionMessage.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationConnectionMessage = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nclass ConversationConnectionMessage extends Exports_js_1.ConnectionMessage {\n    constructor(messageType, body, headers, id) {\n        super(messageType, body, headers, id);\n        const json = JSON.parse(this.textBody);\n        if (json.type !== undefined) {\n            this.privConversationMessageType = json.type;\n        }\n    }\n    get conversationMessageType() {\n        return this.privConversationMessageType;\n    }\n}\nexports.ConversationConnectionMessage = ConversationConnectionMessage;\n\n//# sourceMappingURL=ConversationConnectionMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25Db25uZWN0aW9uTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUNBQXFDO0FBQ3JDLHFCQUFxQixtQkFBTyxDQUFDLDhIQUF5QjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7O0FBRXJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25Db25uZWN0aW9uTWVzc2FnZS5qcz8zZDNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnZlcnNhdGlvbkNvbm5lY3Rpb25NZXNzYWdlID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uLy4uL2NvbW1vbi9FeHBvcnRzLmpzXCIpO1xuY2xhc3MgQ29udmVyc2F0aW9uQ29ubmVjdGlvbk1lc3NhZ2UgZXh0ZW5kcyBFeHBvcnRzX2pzXzEuQ29ubmVjdGlvbk1lc3NhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2VUeXBlLCBib2R5LCBoZWFkZXJzLCBpZCkge1xuICAgICAgICBzdXBlcihtZXNzYWdlVHlwZSwgYm9keSwgaGVhZGVycywgaWQpO1xuICAgICAgICBjb25zdCBqc29uID0gSlNPTi5wYXJzZSh0aGlzLnRleHRCb2R5KTtcbiAgICAgICAgaWYgKGpzb24udHlwZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnByaXZDb252ZXJzYXRpb25NZXNzYWdlVHlwZSA9IGpzb24udHlwZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgY29udmVyc2F0aW9uTWVzc2FnZVR5cGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZDb252ZXJzYXRpb25NZXNzYWdlVHlwZTtcbiAgICB9XG59XG5leHBvcnRzLkNvbnZlcnNhdGlvbkNvbm5lY3Rpb25NZXNzYWdlID0gQ29udmVyc2F0aW9uQ29ubmVjdGlvbk1lc3NhZ2U7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnZlcnNhdGlvbkNvbm5lY3Rpb25NZXNzYWdlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionMessage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationManager.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationManager.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationManager = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../../sdk/Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst ConversationConnectionConfig_js_1 = __webpack_require__(/*! ./ConversationConnectionConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionConfig.js\");\nclass ConversationManager {\n    constructor() {\n        //\n        this.privRequestParams = ConversationConnectionConfig_js_1.ConversationConnectionConfig.configParams;\n        this.privErrors = ConversationConnectionConfig_js_1.ConversationConnectionConfig.restErrors;\n        this.privHost = ConversationConnectionConfig_js_1.ConversationConnectionConfig.host;\n        this.privApiVersion = ConversationConnectionConfig_js_1.ConversationConnectionConfig.apiVersion;\n        this.privRestPath = ConversationConnectionConfig_js_1.ConversationConnectionConfig.restPath;\n        this.privRestAdapter = new Exports_js_1.RestMessageAdapter({});\n    }\n    /**\n     * Make a POST request to the Conversation Manager service endpoint to create or join a conversation.\n     * @param args\n     * @param conversationCode\n     * @param callback\n     * @param errorCallback\n     */\n    createOrJoin(args, conversationCode, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(args, \"args\");\n            const languageCode = args.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, ConversationConnectionConfig_js_1.ConversationConnectionConfig.defaultLanguageCode);\n            const nickname = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_Name, \"conversation_host\");\n            const endpointHost = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_Host, this.privHost);\n            const correlationId = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_CorrelationId);\n            const subscriptionKey = args.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key);\n            const subscriptionRegion = args.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n            const authToken = args.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(languageCode, \"languageCode\");\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(endpointHost, \"endpointHost\");\n            const queryParams = {};\n            queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\n            queryParams[this.privRequestParams.languageCode] = languageCode;\n            queryParams[this.privRequestParams.nickname] = nickname;\n            const headers = {};\n            if (correlationId) {\n                headers[this.privRequestParams.correlationId] = correlationId;\n            }\n            headers[this.privRequestParams.clientAppId] = ConversationConnectionConfig_js_1.ConversationConnectionConfig.clientAppId;\n            if (conversationCode !== undefined) {\n                queryParams[this.privRequestParams.roomId] = conversationCode;\n            }\n            else {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(subscriptionRegion, this.privErrors.authInvalidSubscriptionRegion);\n                headers[this.privRequestParams.subscriptionRegion] = subscriptionRegion;\n                if (subscriptionKey) {\n                    headers[this.privRequestParams.subscriptionKey] = subscriptionKey;\n                }\n                else if (authToken) {\n                    headers[this.privRequestParams.authorization] = `Bearer ${authToken}`;\n                }\n                else {\n                    Contracts_js_1.Contracts.throwIfNullOrUndefined(subscriptionKey, this.privErrors.authInvalidSubscriptionKey);\n                }\n            }\n            const config = {};\n            config.headers = headers;\n            this.privRestAdapter.options = config;\n            const endpoint = `https://${endpointHost}${this.privRestPath}`;\n            // TODO: support a proxy and certificate validation\n            this.privRestAdapter.request(Exports_js_1.RestRequestType.Post, endpoint, queryParams, null).then((response) => {\n                const requestId = Exports_js_1.RestMessageAdapter.extractHeaderValue(this.privRequestParams.requestId, response.headers);\n                if (!response.ok) {\n                    if (!!err) {\n                        // get the error\n                        let errorMessage = this.privErrors.invalidCreateJoinConversationResponse.replace(\"{status}\", response.status.toString());\n                        let errMessageRaw;\n                        try {\n                            errMessageRaw = JSON.parse(response.data);\n                            errorMessage += ` [${errMessageRaw.error.code}: ${errMessageRaw.error.message}]`;\n                        }\n                        catch (e) {\n                            errorMessage += ` [${response.data}]`;\n                        }\n                        if (requestId) {\n                            errorMessage += ` ${requestId}`;\n                        }\n                        err(errorMessage);\n                    }\n                    return;\n                }\n                const conversation = JSON.parse(response.data);\n                if (conversation) {\n                    conversation.requestId = requestId;\n                }\n                if (!!cb) {\n                    try {\n                        cb(conversation);\n                    }\n                    catch (e) {\n                        if (!!err) {\n                            err(e);\n                        }\n                    }\n                    cb = undefined;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n            }).catch(() => { });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    }\n    /**\n     * Make a DELETE request to the Conversation Manager service endpoint to leave the conversation.\n     * @param args\n     * @param sessionToken\n     * @param callback\n     */\n    leave(args, sessionToken) {\n        return new Promise((resolve, reject) => {\n            try {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(args, this.privErrors.invalidArgs.replace(\"{arg}\", \"config\"));\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(sessionToken, this.privErrors.invalidArgs.replace(\"{arg}\", \"token\"));\n                const endpointHost = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_Host, this.privHost);\n                const correlationId = args.getProperty(Exports_js_2.PropertyId.ConversationTranslator_CorrelationId);\n                const queryParams = {};\n                queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\n                queryParams[this.privRequestParams.sessionToken] = sessionToken;\n                const headers = {};\n                if (correlationId) {\n                    headers[this.privRequestParams.correlationId] = correlationId;\n                }\n                const config = {};\n                config.headers = headers;\n                this.privRestAdapter.options = config;\n                const endpoint = `https://${endpointHost}${this.privRestPath}`;\n                // TODO: support a proxy and certificate validation\n                this.privRestAdapter.request(Exports_js_1.RestRequestType.Delete, endpoint, queryParams, null).then((response) => {\n                    if (!response.ok) {\n                        // ignore errors on delete\n                    }\n                    resolve();\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                }).catch(() => { });\n            }\n            catch (error) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    reject(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    reject(error);\n                }\n            }\n        });\n    }\n}\nexports.ConversationManager = ConversationManager;\n\n//# sourceMappingURL=ConversationManager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationManager.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationRequestSession.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationRequestSession.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationRequestSession = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\n/**\n * Placeholder class for the Conversation Request Session. Based off RequestSession.\n * TODO: define what telemetry is required.\n */\nclass ConversationRequestSession {\n    constructor(sessionId) {\n        this.privIsDisposed = false;\n        this.privDetachables = new Array();\n        this.privSessionId = sessionId;\n        this.privRequestId = Exports_js_1.createNoDashGuid();\n        this.privRequestCompletionDeferral = new Exports_js_1.Deferred();\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get completionPromise() {\n        return this.privRequestCompletionDeferral.promise;\n    }\n    onPreConnectionStart(authFetchEventId, connectionId) {\n        this.privSessionId = connectionId;\n    }\n    onAuthCompleted(isError) {\n        if (isError) {\n            this.onComplete();\n        }\n    }\n    onConnectionEstablishCompleted(statusCode) {\n        if (statusCode === 200) {\n            return;\n        }\n        else if (statusCode === 403) {\n            this.onComplete();\n        }\n    }\n    onServiceTurnEndResponse(continuousRecognition) {\n        if (!continuousRecognition) {\n            this.onComplete();\n        }\n        else {\n            this.privRequestId = Exports_js_1.createNoDashGuid();\n        }\n    }\n    async dispose() {\n        if (!this.privIsDisposed) {\n            // we should have completed by now. If we did not its an unknown error.\n            this.privIsDisposed = true;\n            for (const detachable of this.privDetachables) {\n                await detachable.detach();\n            }\n        }\n    }\n    onComplete() {\n        //\n    }\n}\nexports.ConversationRequestSession = ConversationRequestSession;\n\n//# sourceMappingURL=ConversationRequestSession.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25SZXF1ZXN0U2Vzc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDLHFCQUFxQixtQkFBTyxDQUFDLDhIQUF5QjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQzs7QUFFbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvblJlcXVlc3RTZXNzaW9uLmpzPzBjZDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29udmVyc2F0aW9uUmVxdWVzdFNlc3Npb24gPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vY29tbW9uL0V4cG9ydHMuanNcIik7XG4vKipcbiAqIFBsYWNlaG9sZGVyIGNsYXNzIGZvciB0aGUgQ29udmVyc2F0aW9uIFJlcXVlc3QgU2Vzc2lvbi4gQmFzZWQgb2ZmIFJlcXVlc3RTZXNzaW9uLlxuICogVE9ETzogZGVmaW5lIHdoYXQgdGVsZW1ldHJ5IGlzIHJlcXVpcmVkLlxuICovXG5jbGFzcyBDb252ZXJzYXRpb25SZXF1ZXN0U2Vzc2lvbiB7XG4gICAgY29uc3RydWN0b3Ioc2Vzc2lvbklkKSB7XG4gICAgICAgIHRoaXMucHJpdklzRGlzcG9zZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5wcml2RGV0YWNoYWJsZXMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgdGhpcy5wcml2U2Vzc2lvbklkID0gc2Vzc2lvbklkO1xuICAgICAgICB0aGlzLnByaXZSZXF1ZXN0SWQgPSBFeHBvcnRzX2pzXzEuY3JlYXRlTm9EYXNoR3VpZCgpO1xuICAgICAgICB0aGlzLnByaXZSZXF1ZXN0Q29tcGxldGlvbkRlZmVycmFsID0gbmV3IEV4cG9ydHNfanNfMS5EZWZlcnJlZCgpO1xuICAgIH1cbiAgICBnZXQgc2Vzc2lvbklkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U2Vzc2lvbklkO1xuICAgIH1cbiAgICBnZXQgcmVxdWVzdElkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVxdWVzdElkO1xuICAgIH1cbiAgICBnZXQgY29tcGxldGlvblByb21pc2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZSZXF1ZXN0Q29tcGxldGlvbkRlZmVycmFsLnByb21pc2U7XG4gICAgfVxuICAgIG9uUHJlQ29ubmVjdGlvblN0YXJ0KGF1dGhGZXRjaEV2ZW50SWQsIGNvbm5lY3Rpb25JZCkge1xuICAgICAgICB0aGlzLnByaXZTZXNzaW9uSWQgPSBjb25uZWN0aW9uSWQ7XG4gICAgfVxuICAgIG9uQXV0aENvbXBsZXRlZChpc0Vycm9yKSB7XG4gICAgICAgIGlmIChpc0Vycm9yKSB7XG4gICAgICAgICAgICB0aGlzLm9uQ29tcGxldGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvbkNvbm5lY3Rpb25Fc3RhYmxpc2hDb21wbGV0ZWQoc3RhdHVzQ29kZSkge1xuICAgICAgICBpZiAoc3RhdHVzQ29kZSA9PT0gMjAwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoc3RhdHVzQ29kZSA9PT0gNDAzKSB7XG4gICAgICAgICAgICB0aGlzLm9uQ29tcGxldGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvblNlcnZpY2VUdXJuRW5kUmVzcG9uc2UoY29udGludW91c1JlY29nbml0aW9uKSB7XG4gICAgICAgIGlmICghY29udGludW91c1JlY29nbml0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLm9uQ29tcGxldGUoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucHJpdlJlcXVlc3RJZCA9IEV4cG9ydHNfanNfMS5jcmVhdGVOb0Rhc2hHdWlkKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgZGlzcG9zZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnByaXZJc0Rpc3Bvc2VkKSB7XG4gICAgICAgICAgICAvLyB3ZSBzaG91bGQgaGF2ZSBjb21wbGV0ZWQgYnkgbm93LiBJZiB3ZSBkaWQgbm90IGl0cyBhbiB1bmtub3duIGVycm9yLlxuICAgICAgICAgICAgdGhpcy5wcml2SXNEaXNwb3NlZCA9IHRydWU7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGRldGFjaGFibGUgb2YgdGhpcy5wcml2RGV0YWNoYWJsZXMpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCBkZXRhY2hhYmxlLmRldGFjaCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIG9uQ29tcGxldGUoKSB7XG4gICAgICAgIC8vXG4gICAgfVxufVxuZXhwb3J0cy5Db252ZXJzYXRpb25SZXF1ZXN0U2Vzc2lvbiA9IENvbnZlcnNhdGlvblJlcXVlc3RTZXNzaW9uO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db252ZXJzYXRpb25SZXF1ZXN0U2Vzc2lvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationRequestSession.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationServiceAdapter.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationServiceAdapter.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationServiceAdapter = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst ConversationConnectionMessage_js_1 = __webpack_require__(/*! ./ConversationConnectionMessage.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionMessage.js\");\nconst ConversationRequestSession_js_1 = __webpack_require__(/*! ./ConversationRequestSession.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationRequestSession.js\");\nconst ConversationTranslatorEventArgs_js_1 = __webpack_require__(/*! ./ConversationTranslatorEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorEventArgs.js\");\nconst ConversationTranslatorInterfaces_js_1 = __webpack_require__(/*! ./ConversationTranslatorInterfaces.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorInterfaces.js\");\nconst Exports_js_4 = __webpack_require__(/*! ./ServiceMessages/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/Exports.js\");\n/**\n * The service adapter handles sending and receiving messages to the Conversation Translator websocket.\n */\nclass ConversationServiceAdapter extends Exports_js_3.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, conversationServiceConnector) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, conversationServiceConnector);\n        this.privConnectionConfigPromise = undefined;\n        this.privLastPartialUtteranceId = \"\";\n        this.privConversationServiceConnector = conversationServiceConnector;\n        this.privConversationAuthentication = authentication;\n        this.receiveMessageOverride = () => this.receiveConversationMessageOverride();\n        this.recognizeOverride = () => this.noOp();\n        this.postConnectImplOverride = (connection) => this.conversationConnectImpl(connection);\n        this.configConnectionOverride = () => this.configConnection();\n        this.disconnectOverride = () => this.privDisconnect();\n        this.privConversationRequestSession = new ConversationRequestSession_js_1.ConversationRequestSession(Exports_js_1.createNoDashGuid());\n        this.privConversationConnectionFactory = connectionFactory;\n        this.privConversationIsDisposed = false;\n    }\n    isDisposed() {\n        return super.isDisposed() || this.privConversationIsDisposed;\n    }\n    async dispose(reason) {\n        this.privConversationIsDisposed = true;\n        if (this.privConnectionConfigPromise !== undefined) {\n            const connection = await this.privConnectionConfigPromise;\n            await connection.dispose(reason);\n        }\n        await super.dispose(reason);\n    }\n    async sendMessage(message) {\n        const connection = await this.fetchConnection();\n        return connection.send(new ConversationConnectionMessage_js_1.ConversationConnectionMessage(Exports_js_1.MessageType.Text, message));\n    }\n    async sendMessageAsync(message) {\n        const connection = await this.fetchConnection();\n        await connection.send(new ConversationConnectionMessage_js_1.ConversationConnectionMessage(Exports_js_1.MessageType.Text, message));\n    }\n    privDisconnect() {\n        if (this.terminateMessageLoop) {\n            return;\n        }\n        this.cancelRecognition(this.privConversationRequestSession.sessionId, this.privConversationRequestSession.requestId, Exports_js_2.CancellationReason.Error, Exports_js_2.CancellationErrorCode.NoError, \"Disconnecting\");\n        this.terminateMessageLoop = true;\n        return Promise.resolve();\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async processTypeSpecificMessages() {\n        return true;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        this.terminateMessageLoop = true;\n        const cancelEvent = new Exports_js_2.ConversationTranslationCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n        try {\n            if (!!this.privConversationServiceConnector.canceled) {\n                this.privConversationServiceConnector.canceled(this.privConversationServiceConnector, cancelEvent);\n            }\n        }\n        catch {\n            // continue on error\n        }\n    }\n    /**\n     * Establishes a websocket connection to the end point.\n     */\n    async conversationConnectImpl(connection) {\n        this.privConnectionLoop = this.startMessageLoop();\n        return connection;\n    }\n    /**\n     * Process incoming websocket messages\n     */\n    async receiveConversationMessageOverride() {\n        if (this.isDisposed() || this.terminateMessageLoop) {\n            return Promise.resolve();\n        }\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\n        const communicationCustodian = new Exports_js_1.Deferred();\n        try {\n            const connection = await this.fetchConnection();\n            const message = await connection.read();\n            if (this.isDisposed() || this.terminateMessageLoop) {\n                // We're done.\n                communicationCustodian.resolve();\n                return Promise.resolve();\n            }\n            if (!message) {\n                return this.receiveConversationMessageOverride();\n            }\n            const sessionId = this.privConversationRequestSession.sessionId;\n            const conversationMessageType = message.conversationMessageType.toLowerCase();\n            let sendFinal = false;\n            try {\n                switch (conversationMessageType) {\n                    case \"info\":\n                    case \"participant_command\":\n                    case \"command\":\n                        const commandPayload = Exports_js_4.CommandResponsePayload.fromJSON(message.textBody);\n                        switch (commandPayload.command.toLowerCase()) {\n                            /**\n                             * 'ParticpantList' is the first message sent to the user after the websocket connection has opened.\n                             * The consuming client must wait for this message to arrive\n                             * before starting to send their own data.\n                             */\n                            case \"participantlist\":\n                                const participantsPayload = Exports_js_4.ParticipantsListPayloadResponse.fromJSON(message.textBody);\n                                const participantsResult = participantsPayload.participants.map((p) => {\n                                    const participant = {\n                                        avatar: p.avatar,\n                                        displayName: p.nickname,\n                                        id: p.participantId,\n                                        isHost: p.ishost,\n                                        isMuted: p.ismuted,\n                                        isUsingTts: p.usetts,\n                                        preferredLanguage: p.locale\n                                    };\n                                    return participant;\n                                });\n                                if (!!this.privConversationServiceConnector.participantsListReceived) {\n                                    this.privConversationServiceConnector.participantsListReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantsListEventArgs(participantsPayload.roomid, participantsPayload.token, participantsPayload.translateTo, participantsPayload.profanityFilter, participantsPayload.roomProfanityFilter, participantsPayload.roomLocked, participantsPayload.muteAll, participantsResult, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetTranslateToLanguages' represents the list of languages being used in the Conversation by all users(?).\n                             * This is sent at the start of the Conversation\n                             */\n                            case \"settranslatetolanguages\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetProfanityFiltering' lets the client set the level of profanity filtering.\n                             * If sent by the participant the setting will effect only their own profanity level.\n                             * If sent by the host, the setting will effect all participants including the host.\n                             * Note: the profanity filters differ from Speech Service (?): 'marked', 'raw', 'removed', 'tagged'\n                             */\n                            case \"setprofanityfiltering\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.setProfanityFiltering, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetMute' is sent if the participant has been muted by the host.\n                             * Check the 'participantId' to determine if the current user has been muted.\n                             */\n                            case \"setmute\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.setMute, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetMuteAll' is sent if the Conversation has been muted by the host.\n                             */\n                            case \"setmuteall\":\n                                if (!!this.privConversationServiceConnector.muteAllCommandReceived) {\n                                    this.privConversationServiceConnector.muteAllCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.MuteAllEventArgs(commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'RoomExpirationWarning' is sent towards the end of the Conversation session to give a timeout warning.\n                             */\n                            case \"roomexpirationwarning\":\n                                if (!!this.privConversationServiceConnector.conversationExpiration) {\n                                    this.privConversationServiceConnector.conversationExpiration(this.privConversationServiceConnector, new Exports_js_2.ConversationExpirationEventArgs(commandPayload.value, this.privConversationRequestSession.sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetUseTts' is sent as a confirmation if the user requests TTS to be turned on or off.\n                             */\n                            case \"setusetts\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.setUseTTS, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetLockState' is set if the host has locked or unlocked the Conversation.\n                             */\n                            case \"setlockstate\":\n                                if (!!this.privConversationServiceConnector.lockRoomCommandReceived) {\n                                    this.privConversationServiceConnector.lockRoomCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.LockRoomEventArgs(commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'ChangeNickname' is received if a user changes their display name.\n                             * Any cached particpiants list should be updated to reflect the display name.\n                             */\n                            case \"changenickname\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes.changeNickname, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'JoinSession' is sent when a user joins the Conversation.\n                             */\n                            case \"joinsession\":\n                                const joinParticipantPayload = Exports_js_4.ParticipantPayloadResponse.fromJSON(message.textBody);\n                                const joiningParticipant = {\n                                    avatar: joinParticipantPayload.avatar,\n                                    displayName: joinParticipantPayload.nickname,\n                                    id: joinParticipantPayload.participantId,\n                                    isHost: joinParticipantPayload.ishost,\n                                    isMuted: joinParticipantPayload.ismuted,\n                                    isUsingTts: joinParticipantPayload.usetts,\n                                    preferredLanguage: joinParticipantPayload.locale,\n                                };\n                                if (!!this.privConversationServiceConnector.participantJoinCommandReceived) {\n                                    this.privConversationServiceConnector.participantJoinCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantEventArgs(joiningParticipant, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'LeaveSession' is sent when a user leaves the Conversation'.\n                             */\n                            case \"leavesession\":\n                                const leavingParticipant = {\n                                    id: commandPayload.participantId\n                                };\n                                if (!!this.privConversationServiceConnector.participantLeaveCommandReceived) {\n                                    this.privConversationServiceConnector.participantLeaveCommandReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ParticipantEventArgs(leavingParticipant, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'DisconnectSession' is sent when a user is disconnected from the session (e.g. network problem).\n                             * Check the 'ParticipantId' to check whether the message is for the current user.\n                             */\n                            case \"disconnectsession\":\n                                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                                const disconnectParticipant = {\n                                    id: commandPayload.participantId\n                                };\n                                break;\n                            case \"token\":\n                                const token = new Exports_js_3.CognitiveTokenAuthentication(() => {\n                                    const authorizationToken = commandPayload.token;\n                                    return Promise.resolve(authorizationToken);\n                                }, () => {\n                                    const authorizationToken = commandPayload.token;\n                                    return Promise.resolve(authorizationToken);\n                                });\n                                this.authentication = token;\n                                this.privConversationServiceConnector.onToken(token);\n                                break;\n                            /**\n                             * Message not recognized.\n                             */\n                            default:\n                                break;\n                        }\n                        break;\n                    /**\n                     * 'partial' (or 'hypothesis') represents a unfinalized speech message.\n                     */\n                    case \"partial\":\n                    /**\n                     * 'final' (or 'phrase') represents a finalized speech message.\n                     */\n                    case \"final\":\n                        const speechPayload = Exports_js_4.SpeechResponsePayload.fromJSON(message.textBody);\n                        const conversationResultReason = (conversationMessageType === \"final\") ? Exports_js_2.ResultReason.TranslatedParticipantSpeech : Exports_js_2.ResultReason.TranslatingParticipantSpeech;\n                        const speechResult = new Exports_js_2.ConversationTranslationResult(speechPayload.participantId, this.getTranslations(speechPayload.translations), speechPayload.language, speechPayload.id, conversationResultReason, speechPayload.recognition, undefined, undefined, message.textBody, undefined);\n                        if (speechPayload.isFinal) {\n                            // check the length, sometimes empty finals are returned\n                            if (speechResult.text !== undefined && speechResult.text.length > 0) {\n                                sendFinal = true;\n                            }\n                            else if (speechPayload.id === this.privLastPartialUtteranceId) {\n                                // send final as normal. We had a non-empty partial for this same utterance\n                                // so sending the empty final is important\n                                sendFinal = true;\n                            }\n                            else {\n                                // suppress unneeded final\n                            }\n                            if (sendFinal) {\n                                if (!!this.privConversationServiceConnector.translationReceived) {\n                                    this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ConversationReceivedTranslationEventArgs(ConversationTranslatorInterfaces_js_1.ConversationTranslatorMessageTypes.final, speechResult, sessionId));\n                                }\n                            }\n                        }\n                        else if (speechResult.text !== undefined) {\n                            this.privLastPartialUtteranceId = speechPayload.id;\n                            if (!!this.privConversationServiceConnector.translationReceived) {\n                                this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ConversationReceivedTranslationEventArgs(ConversationTranslatorInterfaces_js_1.ConversationTranslatorMessageTypes.partial, speechResult, sessionId));\n                            }\n                        }\n                        break;\n                    /**\n                     * \"translated_message\" is a text message or instant message (IM).\n                     */\n                    case \"translated_message\":\n                        const textPayload = Exports_js_4.TextResponsePayload.fromJSON(message.textBody);\n                        // TODO: (Native parity) a result reason should be set based whether the participantId is ours or not\n                        const textResult = new Exports_js_2.ConversationTranslationResult(textPayload.participantId, this.getTranslations(textPayload.translations), textPayload.language, undefined, undefined, textPayload.originalText, undefined, undefined, undefined, message.textBody, undefined);\n                        if (!!this.privConversationServiceConnector.translationReceived) {\n                            this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector, new ConversationTranslatorEventArgs_js_1.ConversationReceivedTranslationEventArgs(ConversationTranslatorInterfaces_js_1.ConversationTranslatorMessageTypes.instantMessage, textResult, sessionId));\n                        }\n                        break;\n                    default:\n                        // ignore any unsupported message types\n                        break;\n                }\n            }\n            catch (e) {\n                // continue\n            }\n            return this.receiveConversationMessageOverride();\n        }\n        catch (e) {\n            this.terminateMessageLoop = true;\n        }\n        return communicationCustodian.promise;\n    }\n    async startMessageLoop() {\n        if (this.isDisposed()) {\n            return Promise.resolve();\n        }\n        this.terminateMessageLoop = false;\n        const messageRetrievalPromise = this.receiveConversationMessageOverride();\n        try {\n            const r = await messageRetrievalPromise;\n            return r;\n        }\n        catch (error) {\n            this.cancelRecognition(this.privRequestSession ? this.privRequestSession.sessionId : \"\", this.privRequestSession ? this.privRequestSession.requestId : \"\", Exports_js_2.CancellationReason.Error, Exports_js_2.CancellationErrorCode.RuntimeError, error);\n            return null;\n        }\n    }\n    // Takes an established websocket connection to the endpoint\n    configConnection() {\n        if (this.isDisposed()) {\n            return Promise.resolve(undefined);\n        }\n        if (this.privConnectionConfigPromise !== undefined) {\n            return this.privConnectionConfigPromise.then((connection) => {\n                if (connection.state() === Exports_js_1.ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionConfigPromise = undefined;\n                    return this.configConnection();\n                }\n                return this.privConnectionConfigPromise;\n            }, () => {\n                this.privConnectionId = null;\n                this.privConnectionConfigPromise = undefined;\n                return this.configConnection();\n            });\n        }\n        if (this.terminateMessageLoop) {\n            return Promise.resolve(undefined);\n        }\n        this.privConnectionConfigPromise = this.connectImpl().then((connection) => connection);\n        return this.privConnectionConfigPromise;\n    }\n    getTranslations(serviceResultTranslations) {\n        let translations;\n        if (undefined !== serviceResultTranslations) {\n            translations = new Exports_js_2.Translations();\n            for (const translation of serviceResultTranslations) {\n                translations.set(translation.lang, translation.translation);\n            }\n        }\n        return translations;\n    }\n}\nexports.ConversationServiceAdapter = ConversationServiceAdapter;\n\n//# sourceMappingURL=ConversationServiceAdapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationServiceAdapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorConnectionFactory.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorConnectionFactory.js ***!
  \****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationTranslatorConnectionFactory = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst StringUtils_js_1 = __webpack_require__(/*! ../../common/StringUtils.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/StringUtils.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../../sdk/Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ../HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nconst QueryParameterNames_js_1 = __webpack_require__(/*! ../QueryParameterNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js\");\nconst ConnectionFactoryBase_js_1 = __webpack_require__(/*! ./../ConnectionFactoryBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\n/**\n * Connection factory for the conversation translator. Handles connecting to the regular translator endpoint,\n * as well as the virtual microphone array transcription endpoint\n */\nclass ConversationTranslatorConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    constructor(convGetter) {\n        super();\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(convGetter, \"convGetter\");\n        this.privConvGetter = convGetter;\n    }\n    create(config, authInfo, connectionId) {\n        const isVirtMicArrayEndpoint = config.parameters.getProperty(\"ConversationTranslator_MultiChannelAudio\", \"\").toUpperCase() === \"TRUE\";\n        const convInfo = this.privConvGetter().room;\n        const region = convInfo.cognitiveSpeechRegion || config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, \"\");\n        const replacementValues = {\n            hostSuffix: ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region),\n            path: ConversationTranslatorConnectionFactory.CTS_VIRT_MIC_PATH,\n            region: encodeURIComponent(region)\n        };\n        replacementValues[QueryParameterNames_js_1.QueryParameterNames.Language] = encodeURIComponent(config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, \"\"));\n        replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsMeetingId] = encodeURIComponent(convInfo.roomId);\n        replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsDeviceId] = encodeURIComponent(convInfo.participantId);\n        replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsIsParticipant] = convInfo.isHost ? \"\" : (\"&\" + QueryParameterNames_js_1.QueryParameterNames.CtsIsParticipant);\n        let endpointUrl = \"\";\n        const queryParams = {};\n        const headers = {};\n        if (isVirtMicArrayEndpoint) {\n            // connecting to the conversation transcription virtual microphone array endpoint\n            endpointUrl = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint);\n            if (!endpointUrl) {\n                const hostName = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"transcribe.{region}.cts.speech{hostSuffix}\");\n                endpointUrl = \"wss://\" + hostName + \"{path}\";\n            }\n            // because the region can change during a session, we support being passed a format string which we can then\n            // replace with the correct information.\n            endpointUrl = StringUtils_js_1.StringUtils.formatString(endpointUrl, replacementValues);\n            const parsedUrl = new URL(endpointUrl);\n            parsedUrl.searchParams.forEach((val, key) => {\n                queryParams[key] = val;\n            });\n            const connFactory = new Exports_js_3.TranscriberConnectionFactory();\n            connFactory.setQueryParams(queryParams, config, endpointUrl);\n            // Some query parameters are required for the CTS endpoint, let's explicity set them here\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.CtsMeetingId] = replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsMeetingId];\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.CtsDeviceId] = replacementValues[QueryParameterNames_js_1.QueryParameterNames.CtsDeviceId];\n            if (!convInfo.isHost) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.CtsIsParticipant] = \"\"; // this doesn't have a value so set to an empty string\n            }\n            if (!(QueryParameterNames_js_1.QueryParameterNames.Format in queryParams)) {\n                queryParams[QueryParameterNames_js_1.QueryParameterNames.Format] = \"simple\";\n            }\n            parsedUrl.searchParams.forEach((val, key) => {\n                parsedUrl.searchParams.set(key, queryParams[key]);\n                delete queryParams[key];\n            });\n            endpointUrl = parsedUrl.toString();\n        }\n        else {\n            // connecting to regular translation endpoint\n            const connFactory = new Exports_js_3.TranslationConnectionFactory();\n            endpointUrl = connFactory.getEndpointUrl(config, true);\n            endpointUrl = StringUtils_js_1.StringUtils.formatString(endpointUrl, replacementValues);\n            connFactory.setQueryParams(queryParams, config, endpointUrl);\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        headers[Exports_js_1.RestConfigBase.configParams.token] = convInfo.token;\n        if (!!authInfo.token) {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"\").toUpperCase() === \"TRUE\";\n        return new Exports_js_1.WebsocketConnection(endpointUrl, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n    }\n}\nexports.ConversationTranslatorConnectionFactory = ConversationTranslatorConnectionFactory;\nConversationTranslatorConnectionFactory.CTS_VIRT_MIC_PATH = \"/speech/recognition/dynamicaudio\";\n\n//# sourceMappingURL=ConversationTranslatorConnectionFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorConnectionFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorEventArgs.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorEventArgs.js ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationReceivedTranslationEventArgs = exports.ParticipantsListEventArgs = exports.ParticipantAttributeEventArgs = exports.ParticipantEventArgs = exports.LockRoomEventArgs = exports.MuteAllEventArgs = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nclass MuteAllEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(isMuted, sessionId) {\n        super(sessionId);\n        this.privIsMuted = isMuted;\n    }\n    get isMuted() {\n        return this.privIsMuted;\n    }\n}\nexports.MuteAllEventArgs = MuteAllEventArgs;\nclass LockRoomEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(isLocked, sessionId) {\n        super(sessionId);\n        this.privIsLocked = isLocked;\n    }\n    get isMuted() {\n        return this.privIsLocked;\n    }\n}\nexports.LockRoomEventArgs = LockRoomEventArgs;\nclass ParticipantEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(participant, sessionId) {\n        super(sessionId);\n        this.privParticipant = participant;\n    }\n    get participant() {\n        return this.privParticipant;\n    }\n}\nexports.ParticipantEventArgs = ParticipantEventArgs;\nclass ParticipantAttributeEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(participantId, key, value, sessionId) {\n        super(sessionId);\n        this.privKey = key;\n        this.privValue = value;\n        this.privParticipantId = participantId;\n    }\n    get value() {\n        return this.privValue;\n    }\n    get key() {\n        return this.privKey;\n    }\n    get id() {\n        return this.privParticipantId;\n    }\n}\nexports.ParticipantAttributeEventArgs = ParticipantAttributeEventArgs;\nclass ParticipantsListEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(conversationId, token, translateTo, profanityFilter, roomProfanityFilter, isRoomLocked, isMuteAll, participants, sessionId) {\n        super(sessionId);\n        this.privRoomId = conversationId;\n        this.privSessionToken = token;\n        this.privTranslateTo = translateTo;\n        this.privProfanityFilter = profanityFilter;\n        this.privRoomProfanityFilter = roomProfanityFilter;\n        this.privIsRoomLocked = isRoomLocked;\n        this.privIsRoomLocked = isMuteAll;\n        this.privParticipants = participants;\n    }\n    get sessionToken() {\n        return this.privSessionToken;\n    }\n    get conversationId() {\n        return this.privRoomId;\n    }\n    get translateTo() {\n        return this.privTranslateTo;\n    }\n    get profanityFilter() {\n        return this.privProfanityFilter;\n    }\n    get roomProfanityFilter() {\n        return this.privRoomProfanityFilter;\n    }\n    get isRoomLocked() {\n        return this.privIsRoomLocked;\n    }\n    get isMuteAll() {\n        return this.privIsMuteAll;\n    }\n    get participants() {\n        return this.privParticipants;\n    }\n}\nexports.ParticipantsListEventArgs = ParticipantsListEventArgs;\nclass ConversationReceivedTranslationEventArgs {\n    constructor(command, payload, sessionId) {\n        this.privPayload = payload;\n        this.privCommand = command;\n        this.privSessionId = sessionId;\n    }\n    get payload() {\n        return this.privPayload;\n    }\n    get command() {\n        return this.privCommand;\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n}\nexports.ConversationReceivedTranslationEventArgs = ConversationReceivedTranslationEventArgs;\n\n//# sourceMappingURL=ConversationTranslatorEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25UcmFuc2xhdG9yRXZlbnRBcmdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdEQUFnRCxHQUFHLGlDQUFpQyxHQUFHLHFDQUFxQyxHQUFHLDRCQUE0QixHQUFHLHlCQUF5QixHQUFHLHdCQUF3QjtBQUNsTjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsbUJBQU8sQ0FBQyx3SEFBc0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDs7QUFFaEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvblRyYW5zbGF0b3JFdmVudEFyZ3MuanM/MjJmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29udmVyc2F0aW9uUmVjZWl2ZWRUcmFuc2xhdGlvbkV2ZW50QXJncyA9IGV4cG9ydHMuUGFydGljaXBhbnRzTGlzdEV2ZW50QXJncyA9IGV4cG9ydHMuUGFydGljaXBhbnRBdHRyaWJ1dGVFdmVudEFyZ3MgPSBleHBvcnRzLlBhcnRpY2lwYW50RXZlbnRBcmdzID0gZXhwb3J0cy5Mb2NrUm9vbUV2ZW50QXJncyA9IGV4cG9ydHMuTXV0ZUFsbEV2ZW50QXJncyA9IHZvaWQgMDtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuLyogZXNsaW50LWRpc2FibGUgbWF4LWNsYXNzZXMtcGVyLWZpbGUgKi9cbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9zZGsvRXhwb3J0cy5qc1wiKTtcbmNsYXNzIE11dGVBbGxFdmVudEFyZ3MgZXh0ZW5kcyBFeHBvcnRzX2pzXzEuU2Vzc2lvbkV2ZW50QXJncyB7XG4gICAgY29uc3RydWN0b3IoaXNNdXRlZCwgc2Vzc2lvbklkKSB7XG4gICAgICAgIHN1cGVyKHNlc3Npb25JZCk7XG4gICAgICAgIHRoaXMucHJpdklzTXV0ZWQgPSBpc011dGVkO1xuICAgIH1cbiAgICBnZXQgaXNNdXRlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdklzTXV0ZWQ7XG4gICAgfVxufVxuZXhwb3J0cy5NdXRlQWxsRXZlbnRBcmdzID0gTXV0ZUFsbEV2ZW50QXJncztcbmNsYXNzIExvY2tSb29tRXZlbnRBcmdzIGV4dGVuZHMgRXhwb3J0c19qc18xLlNlc3Npb25FdmVudEFyZ3Mge1xuICAgIGNvbnN0cnVjdG9yKGlzTG9ja2VkLCBzZXNzaW9uSWQpIHtcbiAgICAgICAgc3VwZXIoc2Vzc2lvbklkKTtcbiAgICAgICAgdGhpcy5wcml2SXNMb2NrZWQgPSBpc0xvY2tlZDtcbiAgICB9XG4gICAgZ2V0IGlzTXV0ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZJc0xvY2tlZDtcbiAgICB9XG59XG5leHBvcnRzLkxvY2tSb29tRXZlbnRBcmdzID0gTG9ja1Jvb21FdmVudEFyZ3M7XG5jbGFzcyBQYXJ0aWNpcGFudEV2ZW50QXJncyBleHRlbmRzIEV4cG9ydHNfanNfMS5TZXNzaW9uRXZlbnRBcmdzIHtcbiAgICBjb25zdHJ1Y3RvcihwYXJ0aWNpcGFudCwgc2Vzc2lvbklkKSB7XG4gICAgICAgIHN1cGVyKHNlc3Npb25JZCk7XG4gICAgICAgIHRoaXMucHJpdlBhcnRpY2lwYW50ID0gcGFydGljaXBhbnQ7XG4gICAgfVxuICAgIGdldCBwYXJ0aWNpcGFudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlBhcnRpY2lwYW50O1xuICAgIH1cbn1cbmV4cG9ydHMuUGFydGljaXBhbnRFdmVudEFyZ3MgPSBQYXJ0aWNpcGFudEV2ZW50QXJncztcbmNsYXNzIFBhcnRpY2lwYW50QXR0cmlidXRlRXZlbnRBcmdzIGV4dGVuZHMgRXhwb3J0c19qc18xLlNlc3Npb25FdmVudEFyZ3Mge1xuICAgIGNvbnN0cnVjdG9yKHBhcnRpY2lwYW50SWQsIGtleSwgdmFsdWUsIHNlc3Npb25JZCkge1xuICAgICAgICBzdXBlcihzZXNzaW9uSWQpO1xuICAgICAgICB0aGlzLnByaXZLZXkgPSBrZXk7XG4gICAgICAgIHRoaXMucHJpdlZhbHVlID0gdmFsdWU7XG4gICAgICAgIHRoaXMucHJpdlBhcnRpY2lwYW50SWQgPSBwYXJ0aWNpcGFudElkO1xuICAgIH1cbiAgICBnZXQgdmFsdWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZWYWx1ZTtcbiAgICB9XG4gICAgZ2V0IGtleSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdktleTtcbiAgICB9XG4gICAgZ2V0IGlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UGFydGljaXBhbnRJZDtcbiAgICB9XG59XG5leHBvcnRzLlBhcnRpY2lwYW50QXR0cmlidXRlRXZlbnRBcmdzID0gUGFydGljaXBhbnRBdHRyaWJ1dGVFdmVudEFyZ3M7XG5jbGFzcyBQYXJ0aWNpcGFudHNMaXN0RXZlbnRBcmdzIGV4dGVuZHMgRXhwb3J0c19qc18xLlNlc3Npb25FdmVudEFyZ3Mge1xuICAgIGNvbnN0cnVjdG9yKGNvbnZlcnNhdGlvbklkLCB0b2tlbiwgdHJhbnNsYXRlVG8sIHByb2Zhbml0eUZpbHRlciwgcm9vbVByb2Zhbml0eUZpbHRlciwgaXNSb29tTG9ja2VkLCBpc011dGVBbGwsIHBhcnRpY2lwYW50cywgc2Vzc2lvbklkKSB7XG4gICAgICAgIHN1cGVyKHNlc3Npb25JZCk7XG4gICAgICAgIHRoaXMucHJpdlJvb21JZCA9IGNvbnZlcnNhdGlvbklkO1xuICAgICAgICB0aGlzLnByaXZTZXNzaW9uVG9rZW4gPSB0b2tlbjtcbiAgICAgICAgdGhpcy5wcml2VHJhbnNsYXRlVG8gPSB0cmFuc2xhdGVUbztcbiAgICAgICAgdGhpcy5wcml2UHJvZmFuaXR5RmlsdGVyID0gcHJvZmFuaXR5RmlsdGVyO1xuICAgICAgICB0aGlzLnByaXZSb29tUHJvZmFuaXR5RmlsdGVyID0gcm9vbVByb2Zhbml0eUZpbHRlcjtcbiAgICAgICAgdGhpcy5wcml2SXNSb29tTG9ja2VkID0gaXNSb29tTG9ja2VkO1xuICAgICAgICB0aGlzLnByaXZJc1Jvb21Mb2NrZWQgPSBpc011dGVBbGw7XG4gICAgICAgIHRoaXMucHJpdlBhcnRpY2lwYW50cyA9IHBhcnRpY2lwYW50cztcbiAgICB9XG4gICAgZ2V0IHNlc3Npb25Ub2tlbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNlc3Npb25Ub2tlbjtcbiAgICB9XG4gICAgZ2V0IGNvbnZlcnNhdGlvbklkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2Um9vbUlkO1xuICAgIH1cbiAgICBnZXQgdHJhbnNsYXRlVG8oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZUcmFuc2xhdGVUbztcbiAgICB9XG4gICAgZ2V0IHByb2Zhbml0eUZpbHRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlByb2Zhbml0eUZpbHRlcjtcbiAgICB9XG4gICAgZ2V0IHJvb21Qcm9mYW5pdHlGaWx0ZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZSb29tUHJvZmFuaXR5RmlsdGVyO1xuICAgIH1cbiAgICBnZXQgaXNSb29tTG9ja2VkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2SXNSb29tTG9ja2VkO1xuICAgIH1cbiAgICBnZXQgaXNNdXRlQWxsKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2SXNNdXRlQWxsO1xuICAgIH1cbiAgICBnZXQgcGFydGljaXBhbnRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UGFydGljaXBhbnRzO1xuICAgIH1cbn1cbmV4cG9ydHMuUGFydGljaXBhbnRzTGlzdEV2ZW50QXJncyA9IFBhcnRpY2lwYW50c0xpc3RFdmVudEFyZ3M7XG5jbGFzcyBDb252ZXJzYXRpb25SZWNlaXZlZFRyYW5zbGF0aW9uRXZlbnRBcmdzIHtcbiAgICBjb25zdHJ1Y3Rvcihjb21tYW5kLCBwYXlsb2FkLCBzZXNzaW9uSWQpIHtcbiAgICAgICAgdGhpcy5wcml2UGF5bG9hZCA9IHBheWxvYWQ7XG4gICAgICAgIHRoaXMucHJpdkNvbW1hbmQgPSBjb21tYW5kO1xuICAgICAgICB0aGlzLnByaXZTZXNzaW9uSWQgPSBzZXNzaW9uSWQ7XG4gICAgfVxuICAgIGdldCBwYXlsb2FkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UGF5bG9hZDtcbiAgICB9XG4gICAgZ2V0IGNvbW1hbmQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZDb21tYW5kO1xuICAgIH1cbiAgICBnZXQgc2Vzc2lvbklkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U2Vzc2lvbklkO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29udmVyc2F0aW9uUmVjZWl2ZWRUcmFuc2xhdGlvbkV2ZW50QXJncyA9IENvbnZlcnNhdGlvblJlY2VpdmVkVHJhbnNsYXRpb25FdmVudEFyZ3M7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnZlcnNhdGlvblRyYW5zbGF0b3JFdmVudEFyZ3MuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorInterfaces.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorInterfaces.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationTranslatorCommandTypes = exports.ConversationTranslatorMessageTypes = exports.InternalParticipants = void 0;\n/** Users participating in the conversation */\nclass InternalParticipants {\n    constructor(participants = [], meId) {\n        this.participants = participants;\n        this.meId = meId;\n    }\n    /**\n     * Add or update a participant\n     * @param value\n     */\n    addOrUpdateParticipant(value) {\n        if (value === undefined) {\n            return;\n        }\n        const exists = this.getParticipantIndex(value.id);\n        if (exists > -1) {\n            this.participants.splice(exists, 1, value);\n        }\n        else {\n            this.participants.push(value);\n        }\n        // ensure it was added ok\n        return this.getParticipant(value.id);\n    }\n    /**\n     * Find the participant's position in the participants list.\n     * @param id\n     */\n    getParticipantIndex(id) {\n        return this.participants.findIndex((p) => p.id === id);\n    }\n    /**\n     * Find the participant by id.\n     * @param id\n     */\n    getParticipant(id) {\n        return this.participants.find((p) => p.id === id);\n    }\n    /**\n     * Remove a participant from the participants list.\n     */\n    deleteParticipant(id) {\n        this.participants = this.participants.filter((p) => p.id !== id);\n    }\n    /**\n     * Helper to return the conversation host.\n     */\n    get host() {\n        return this.participants.find((p) => p.isHost === true);\n    }\n    /**\n     * Helper to return the current user.\n     */\n    get me() {\n        return this.getParticipant(this.meId);\n    }\n}\nexports.InternalParticipants = InternalParticipants;\n/**\n * List of command message types\n */\nexports.ConversationTranslatorMessageTypes = {\n    command: \"command\",\n    final: \"final\",\n    info: \"info\",\n    instantMessage: \"instant_message\",\n    keepAlive: \"keep_alive\",\n    partial: \"partial\",\n    participantCommand: \"participant_command\",\n    translatedMessage: \"translated_message\"\n};\n/**\n * List of command types\n */\nexports.ConversationTranslatorCommandTypes = {\n    changeNickname: \"ChangeNickname\",\n    disconnectSession: \"DisconnectSession\",\n    ejectParticipant: \"EjectParticipant\",\n    instant_message: \"instant_message\",\n    joinSession: \"JoinSession\",\n    leaveSession: \"LeaveSession\",\n    participantList: \"ParticipantList\",\n    roomExpirationWarning: \"RoomExpirationWarning\",\n    setLockState: \"SetLockState\",\n    setMute: \"SetMute\",\n    setMuteAll: \"SetMuteAll\",\n    setProfanityFiltering: \"SetProfanityFiltering\",\n    setTranslateToLanguages: \"SetTranslateToLanguages\",\n    setUseTTS: \"SetUseTTS\"\n};\n\n//# sourceMappingURL=ConversationTranslatorInterfaces.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25UcmFuc2xhdG9ySW50ZXJmYWNlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMENBQTBDLEdBQUcsMENBQTBDLEdBQUcsNEJBQTRCO0FBQ3RIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1RyYW5zY3JpcHRpb24vQ29udmVyc2F0aW9uVHJhbnNsYXRvckludGVyZmFjZXMuanM/MGExNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db252ZXJzYXRpb25UcmFuc2xhdG9yQ29tbWFuZFR5cGVzID0gZXhwb3J0cy5Db252ZXJzYXRpb25UcmFuc2xhdG9yTWVzc2FnZVR5cGVzID0gZXhwb3J0cy5JbnRlcm5hbFBhcnRpY2lwYW50cyA9IHZvaWQgMDtcbi8qKiBVc2VycyBwYXJ0aWNpcGF0aW5nIGluIHRoZSBjb252ZXJzYXRpb24gKi9cbmNsYXNzIEludGVybmFsUGFydGljaXBhbnRzIHtcbiAgICBjb25zdHJ1Y3RvcihwYXJ0aWNpcGFudHMgPSBbXSwgbWVJZCkge1xuICAgICAgICB0aGlzLnBhcnRpY2lwYW50cyA9IHBhcnRpY2lwYW50cztcbiAgICAgICAgdGhpcy5tZUlkID0gbWVJZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkIG9yIHVwZGF0ZSBhIHBhcnRpY2lwYW50XG4gICAgICogQHBhcmFtIHZhbHVlXG4gICAgICovXG4gICAgYWRkT3JVcGRhdGVQYXJ0aWNpcGFudCh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGV4aXN0cyA9IHRoaXMuZ2V0UGFydGljaXBhbnRJbmRleCh2YWx1ZS5pZCk7XG4gICAgICAgIGlmIChleGlzdHMgPiAtMSkge1xuICAgICAgICAgICAgdGhpcy5wYXJ0aWNpcGFudHMuc3BsaWNlKGV4aXN0cywgMSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5wYXJ0aWNpcGFudHMucHVzaCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZW5zdXJlIGl0IHdhcyBhZGRlZCBva1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQYXJ0aWNpcGFudCh2YWx1ZS5pZCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZpbmQgdGhlIHBhcnRpY2lwYW50J3MgcG9zaXRpb24gaW4gdGhlIHBhcnRpY2lwYW50cyBsaXN0LlxuICAgICAqIEBwYXJhbSBpZFxuICAgICAqL1xuICAgIGdldFBhcnRpY2lwYW50SW5kZXgoaWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFydGljaXBhbnRzLmZpbmRJbmRleCgocCkgPT4gcC5pZCA9PT0gaWQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGaW5kIHRoZSBwYXJ0aWNpcGFudCBieSBpZC5cbiAgICAgKiBAcGFyYW0gaWRcbiAgICAgKi9cbiAgICBnZXRQYXJ0aWNpcGFudChpZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJ0aWNpcGFudHMuZmluZCgocCkgPT4gcC5pZCA9PT0gaWQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgYSBwYXJ0aWNpcGFudCBmcm9tIHRoZSBwYXJ0aWNpcGFudHMgbGlzdC5cbiAgICAgKi9cbiAgICBkZWxldGVQYXJ0aWNpcGFudChpZCkge1xuICAgICAgICB0aGlzLnBhcnRpY2lwYW50cyA9IHRoaXMucGFydGljaXBhbnRzLmZpbHRlcigocCkgPT4gcC5pZCAhPT0gaWQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBIZWxwZXIgdG8gcmV0dXJuIHRoZSBjb252ZXJzYXRpb24gaG9zdC5cbiAgICAgKi9cbiAgICBnZXQgaG9zdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFydGljaXBhbnRzLmZpbmQoKHApID0+IHAuaXNIb3N0ID09PSB0cnVlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSGVscGVyIHRvIHJldHVybiB0aGUgY3VycmVudCB1c2VyLlxuICAgICAqL1xuICAgIGdldCBtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UGFydGljaXBhbnQodGhpcy5tZUlkKTtcbiAgICB9XG59XG5leHBvcnRzLkludGVybmFsUGFydGljaXBhbnRzID0gSW50ZXJuYWxQYXJ0aWNpcGFudHM7XG4vKipcbiAqIExpc3Qgb2YgY29tbWFuZCBtZXNzYWdlIHR5cGVzXG4gKi9cbmV4cG9ydHMuQ29udmVyc2F0aW9uVHJhbnNsYXRvck1lc3NhZ2VUeXBlcyA9IHtcbiAgICBjb21tYW5kOiBcImNvbW1hbmRcIixcbiAgICBmaW5hbDogXCJmaW5hbFwiLFxuICAgIGluZm86IFwiaW5mb1wiLFxuICAgIGluc3RhbnRNZXNzYWdlOiBcImluc3RhbnRfbWVzc2FnZVwiLFxuICAgIGtlZXBBbGl2ZTogXCJrZWVwX2FsaXZlXCIsXG4gICAgcGFydGlhbDogXCJwYXJ0aWFsXCIsXG4gICAgcGFydGljaXBhbnRDb21tYW5kOiBcInBhcnRpY2lwYW50X2NvbW1hbmRcIixcbiAgICB0cmFuc2xhdGVkTWVzc2FnZTogXCJ0cmFuc2xhdGVkX21lc3NhZ2VcIlxufTtcbi8qKlxuICogTGlzdCBvZiBjb21tYW5kIHR5cGVzXG4gKi9cbmV4cG9ydHMuQ29udmVyc2F0aW9uVHJhbnNsYXRvckNvbW1hbmRUeXBlcyA9IHtcbiAgICBjaGFuZ2VOaWNrbmFtZTogXCJDaGFuZ2VOaWNrbmFtZVwiLFxuICAgIGRpc2Nvbm5lY3RTZXNzaW9uOiBcIkRpc2Nvbm5lY3RTZXNzaW9uXCIsXG4gICAgZWplY3RQYXJ0aWNpcGFudDogXCJFamVjdFBhcnRpY2lwYW50XCIsXG4gICAgaW5zdGFudF9tZXNzYWdlOiBcImluc3RhbnRfbWVzc2FnZVwiLFxuICAgIGpvaW5TZXNzaW9uOiBcIkpvaW5TZXNzaW9uXCIsXG4gICAgbGVhdmVTZXNzaW9uOiBcIkxlYXZlU2Vzc2lvblwiLFxuICAgIHBhcnRpY2lwYW50TGlzdDogXCJQYXJ0aWNpcGFudExpc3RcIixcbiAgICByb29tRXhwaXJhdGlvbldhcm5pbmc6IFwiUm9vbUV4cGlyYXRpb25XYXJuaW5nXCIsXG4gICAgc2V0TG9ja1N0YXRlOiBcIlNldExvY2tTdGF0ZVwiLFxuICAgIHNldE11dGU6IFwiU2V0TXV0ZVwiLFxuICAgIHNldE11dGVBbGw6IFwiU2V0TXV0ZUFsbFwiLFxuICAgIHNldFByb2Zhbml0eUZpbHRlcmluZzogXCJTZXRQcm9mYW5pdHlGaWx0ZXJpbmdcIixcbiAgICBzZXRUcmFuc2xhdGVUb0xhbmd1YWdlczogXCJTZXRUcmFuc2xhdGVUb0xhbmd1YWdlc1wiLFxuICAgIHNldFVzZVRUUzogXCJTZXRVc2VUVFNcIlxufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29udmVyc2F0aW9uVHJhbnNsYXRvckludGVyZmFjZXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorInterfaces.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorRecognizer.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorRecognizer.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationTranslatorRecognizer = exports.ConversationRecognizerFactory = void 0;\n// eslint-disable-next-line max-classes-per-file\nconst Exports_js_1 = __webpack_require__(/*! ../../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../../sdk/Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst ConversationConnectionFactory_js_1 = __webpack_require__(/*! ./ConversationConnectionFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionFactory.js\");\nconst ConversationServiceAdapter_js_1 = __webpack_require__(/*! ./ConversationServiceAdapter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationServiceAdapter.js\");\nclass ConversationRecognizerFactory {\n    static fromConfig(conversation, speechConfig, audioConfig) {\n        return new ConversationTranslatorRecognizer(conversation, speechConfig, audioConfig);\n    }\n}\nexports.ConversationRecognizerFactory = ConversationRecognizerFactory;\n/**\n * Sends messages to the Conversation Translator websocket and listens for incoming events containing websocket messages.\n * Based off the recognizers in the SDK folder.\n */\nclass ConversationTranslatorRecognizer extends Exports_js_3.Recognizer {\n    constructor(conversation, speechConfig, audioConfig) {\n        const serviceConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(serviceConfigImpl, \"speechConfig\");\n        const conversationImpl = conversation;\n        Contracts_js_1.Contracts.throwIfNull(conversationImpl, \"conversationImpl\");\n        super(audioConfig, serviceConfigImpl.properties, new ConversationConnectionFactory_js_1.ConversationConnectionFactory());\n        this.privConversation = conversationImpl;\n        this.privIsDisposed = false;\n        this.privProperties = serviceConfigImpl.properties.clone();\n        this.privConnection = Exports_js_3.Connection.fromRecognizer(this);\n        const webWorkerLoadType = this.privProperties.getProperty(Exports_js_3.PropertyId.WebWorkerLoadType, \"on\").toLowerCase();\n        if (webWorkerLoadType === \"on\" && typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\n            this.privSetTimeout = Exports_js_2.Timeout.setTimeout;\n            this.privClearTimeout = Exports_js_2.Timeout.clearTimeout;\n        }\n        else {\n            if (typeof window !== \"undefined\") {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privSetTimeout = window.setTimeout.bind(window);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privClearTimeout = window.clearTimeout.bind(window);\n            }\n            else {\n                this.privSetTimeout = setTimeout;\n                this.privClearTimeout = clearTimeout;\n            }\n        }\n    }\n    set connected(cb) {\n        this.privConnection.connected = cb;\n    }\n    set disconnected(cb) {\n        this.privConnection.disconnected = cb;\n    }\n    /**\n     * Return the speech language used by the recognizer\n     */\n    get speechRecognitionLanguage() {\n        return this.privSpeechRecognitionLanguage;\n    }\n    /**\n     * Return the properties for the recognizer\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    /**\n     * Connect to the recognizer\n     * @param token\n     */\n    connect(token, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n            this.privReco.conversationTranslatorToken = token;\n            this.resetConversationTimeout();\n            this.privReco.connectAsync(cb, err);\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    }\n    /**\n     * Disconnect from the recognizer\n     */\n    disconnect(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            if (this.privTimeoutToken !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                this.privClearTimeout(this.privTimeoutToken);\n            }\n            this.privReco.disconnect().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n            // Destroy the recognizer.\n            this.dispose(true).catch((reason) => {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.BackgroundEvent(reason));\n            });\n        }\n    }\n    /**\n     * Send the mute all participants command to the websocket\n     * @param conversationId\n     * @param participantId\n     * @param isMuted\n     */\n    sendRequest(command, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            this.sendMessage(command, cb, err);\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n            // Destroy the recognizer.\n            this.dispose(true).catch((reason) => {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.BackgroundEvent(reason));\n            });\n        }\n    }\n    /**\n     * Handle update of service auth token (#694)\n     */\n    onToken(token) {\n        this.privConversation.onToken(token);\n    }\n    /**\n     * Close and dispose the recognizer\n     */\n    async close() {\n        if (!this.privIsDisposed) {\n            if (!!this.privConnection) {\n                this.privConnection.closeConnection();\n                this.privConnection.close();\n            }\n            this.privConnection = undefined;\n            await this.dispose(true);\n        }\n    }\n    /**\n     * Dispose the recognizer\n     * @param disposing\n     */\n    async dispose(disposing) {\n        if (this.privIsDisposed) {\n            return;\n        }\n        if (disposing) {\n            if (this.privTimeoutToken !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                this.privClearTimeout(this.privTimeoutToken);\n            }\n            this.privIsDisposed = true;\n            if (!!this.privConnection) {\n                this.privConnection.closeConnection();\n                this.privConnection.close();\n                this.privConnection = undefined;\n            }\n            await super.dispose(disposing);\n        }\n    }\n    /**\n     * Create the config for the recognizer\n     * @param speechConfig\n     */\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    /**\n     * Create the service recognizer.\n     * The audio source is redundnant here but is required by the implementation.\n     * @param authentication\n     * @param connectionFactory\n     * @param audioConfig\n     * @param recognizerConfig\n     */\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioSource = audioConfig;\n        return new ConversationServiceAdapter_js_1.ConversationServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\n    }\n    sendMessage(msg, cb, err) {\n        const withAsync = this.privReco;\n        const PromiseToEmptyCallback = (promise, cb, err) => {\n            if (promise !== undefined) {\n                promise.then(() => {\n                    try {\n                        if (!!cb) {\n                            cb();\n                        }\n                    }\n                    catch (e) {\n                        if (!!err) {\n                            err(`'Unhandled error on promise callback: ${e}'`);\n                        }\n                    }\n                }, (reason) => {\n                    try {\n                        if (!!err) {\n                            err(reason);\n                        }\n                        // eslint-disable-next-line no-empty\n                    }\n                    catch (error) { }\n                });\n            }\n            else {\n                if (!!err) {\n                    err(\"Null promise\");\n                }\n            }\n        };\n        PromiseToEmptyCallback(withAsync.sendMessageAsync(msg), cb, err);\n        this.resetConversationTimeout();\n    }\n    resetConversationTimeout() {\n        if (this.privTimeoutToken !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.privClearTimeout(this.privTimeoutToken);\n        }\n        this.privTimeoutToken = this.privSetTimeout(() => {\n            this.sendRequest(this.privConversation.getKeepAlive());\n        }, 60000);\n    }\n}\nexports.ConversationTranslatorRecognizer = ConversationTranslatorRecognizer;\n\n//# sourceMappingURL=ConversationTranslatorRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationWebsocketMessageFormatter.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationWebsocketMessageFormatter.js ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationWebsocketMessageFormatter = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst ConversationConnectionMessage_js_1 = __webpack_require__(/*! ./ConversationConnectionMessage.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionMessage.js\");\n/**\n * Based off WebsocketMessageFormatter. The messages for Conversation Translator have some variations from the Speech messages.\n */\nclass ConversationWebsocketMessageFormatter {\n    /**\n     * Format incoming messages: text (speech partial/final, IM) or binary (tts)\n     */\n    toConnectionMessage(message) {\n        const deferral = new Exports_js_1.Deferred();\n        try {\n            if (message.messageType === Exports_js_1.MessageType.Text) {\n                const incomingMessage = new ConversationConnectionMessage_js_1.ConversationConnectionMessage(message.messageType, message.textContent, {}, message.id);\n                deferral.resolve(incomingMessage);\n            }\n            else if (message.messageType === Exports_js_1.MessageType.Binary) {\n                deferral.resolve(new ConversationConnectionMessage_js_1.ConversationConnectionMessage(message.messageType, message.binaryContent, undefined, message.id));\n            }\n        }\n        catch (e) {\n            deferral.reject(`Error formatting the message. Error: ${e}`);\n        }\n        return deferral.promise;\n    }\n    /**\n     * Format outgoing messages: text (commands or IM)\n     */\n    fromConnectionMessage(message) {\n        const deferral = new Exports_js_1.Deferred();\n        try {\n            if (message.messageType === Exports_js_1.MessageType.Text) {\n                const payload = `${message.textBody ? message.textBody : \"\"}`;\n                deferral.resolve(new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Text, payload, message.id));\n            }\n        }\n        catch (e) {\n            deferral.reject(`Error formatting the message. ${e}`);\n        }\n        return deferral.promise;\n    }\n}\nexports.ConversationWebsocketMessageFormatter = ConversationWebsocketMessageFormatter;\n\n//# sourceMappingURL=ConversationWebsocketMessageFormatter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25XZWJzb2NrZXRNZXNzYWdlRm9ybWF0dGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2Q0FBNkM7QUFDN0MscUJBQXFCLG1CQUFPLENBQUMsOEhBQXlCO0FBQ3RELDJDQUEyQyxtQkFBTyxDQUFDLG9MQUFvQztBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUpBQXlKO0FBQ3pKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FLEVBQUU7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMseUNBQXlDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELEVBQUU7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7O0FBRTdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25XZWJzb2NrZXRNZXNzYWdlRm9ybWF0dGVyLmpzPzIyYTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29udmVyc2F0aW9uV2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlciA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb24vRXhwb3J0cy5qc1wiKTtcbmNvbnN0IENvbnZlcnNhdGlvbkNvbm5lY3Rpb25NZXNzYWdlX2pzXzEgPSByZXF1aXJlKFwiLi9Db252ZXJzYXRpb25Db25uZWN0aW9uTWVzc2FnZS5qc1wiKTtcbi8qKlxuICogQmFzZWQgb2ZmIFdlYnNvY2tldE1lc3NhZ2VGb3JtYXR0ZXIuIFRoZSBtZXNzYWdlcyBmb3IgQ29udmVyc2F0aW9uIFRyYW5zbGF0b3IgaGF2ZSBzb21lIHZhcmlhdGlvbnMgZnJvbSB0aGUgU3BlZWNoIG1lc3NhZ2VzLlxuICovXG5jbGFzcyBDb252ZXJzYXRpb25XZWJzb2NrZXRNZXNzYWdlRm9ybWF0dGVyIHtcbiAgICAvKipcbiAgICAgKiBGb3JtYXQgaW5jb21pbmcgbWVzc2FnZXM6IHRleHQgKHNwZWVjaCBwYXJ0aWFsL2ZpbmFsLCBJTSkgb3IgYmluYXJ5ICh0dHMpXG4gICAgICovXG4gICAgdG9Db25uZWN0aW9uTWVzc2FnZShtZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IGRlZmVycmFsID0gbmV3IEV4cG9ydHNfanNfMS5EZWZlcnJlZCgpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKG1lc3NhZ2UubWVzc2FnZVR5cGUgPT09IEV4cG9ydHNfanNfMS5NZXNzYWdlVHlwZS5UZXh0KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaW5jb21pbmdNZXNzYWdlID0gbmV3IENvbnZlcnNhdGlvbkNvbm5lY3Rpb25NZXNzYWdlX2pzXzEuQ29udmVyc2F0aW9uQ29ubmVjdGlvbk1lc3NhZ2UobWVzc2FnZS5tZXNzYWdlVHlwZSwgbWVzc2FnZS50ZXh0Q29udGVudCwge30sIG1lc3NhZ2UuaWQpO1xuICAgICAgICAgICAgICAgIGRlZmVycmFsLnJlc29sdmUoaW5jb21pbmdNZXNzYWdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKG1lc3NhZ2UubWVzc2FnZVR5cGUgPT09IEV4cG9ydHNfanNfMS5NZXNzYWdlVHlwZS5CaW5hcnkpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJhbC5yZXNvbHZlKG5ldyBDb252ZXJzYXRpb25Db25uZWN0aW9uTWVzc2FnZV9qc18xLkNvbnZlcnNhdGlvbkNvbm5lY3Rpb25NZXNzYWdlKG1lc3NhZ2UubWVzc2FnZVR5cGUsIG1lc3NhZ2UuYmluYXJ5Q29udGVudCwgdW5kZWZpbmVkLCBtZXNzYWdlLmlkKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGRlZmVycmFsLnJlamVjdChgRXJyb3IgZm9ybWF0dGluZyB0aGUgbWVzc2FnZS4gRXJyb3I6ICR7ZX1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVmZXJyYWwucHJvbWlzZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRm9ybWF0IG91dGdvaW5nIG1lc3NhZ2VzOiB0ZXh0IChjb21tYW5kcyBvciBJTSlcbiAgICAgKi9cbiAgICBmcm9tQ29ubmVjdGlvbk1lc3NhZ2UobWVzc2FnZSkge1xuICAgICAgICBjb25zdCBkZWZlcnJhbCA9IG5ldyBFeHBvcnRzX2pzXzEuRGVmZXJyZWQoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChtZXNzYWdlLm1lc3NhZ2VUeXBlID09PSBFeHBvcnRzX2pzXzEuTWVzc2FnZVR5cGUuVGV4dCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBheWxvYWQgPSBgJHttZXNzYWdlLnRleHRCb2R5ID8gbWVzc2FnZS50ZXh0Qm9keSA6IFwiXCJ9YDtcbiAgICAgICAgICAgICAgICBkZWZlcnJhbC5yZXNvbHZlKG5ldyBFeHBvcnRzX2pzXzEuUmF3V2Vic29ja2V0TWVzc2FnZShFeHBvcnRzX2pzXzEuTWVzc2FnZVR5cGUuVGV4dCwgcGF5bG9hZCwgbWVzc2FnZS5pZCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBkZWZlcnJhbC5yZWplY3QoYEVycm9yIGZvcm1hdHRpbmcgdGhlIG1lc3NhZ2UuICR7ZX1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVmZXJyYWwucHJvbWlzZTtcbiAgICB9XG59XG5leHBvcnRzLkNvbnZlcnNhdGlvbldlYnNvY2tldE1lc3NhZ2VGb3JtYXR0ZXIgPSBDb252ZXJzYXRpb25XZWJzb2NrZXRNZXNzYWdlRm9ybWF0dGVyO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db252ZXJzYXRpb25XZWJzb2NrZXRNZXNzYWdlRm9ybWF0dGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationWebsocketMessageFormatter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/Exports.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/Exports.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ConversationManager_js_1 = __webpack_require__(/*! ./ConversationManager.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationManager.js\");\nObject.defineProperty(exports, \"ConversationManager\", ({ enumerable: true, get: function () { return ConversationManager_js_1.ConversationManager; } }));\nvar ConversationConnectionConfig_js_1 = __webpack_require__(/*! ./ConversationConnectionConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationConnectionConfig.js\");\nObject.defineProperty(exports, \"ConversationConnectionConfig\", ({ enumerable: true, get: function () { return ConversationConnectionConfig_js_1.ConversationConnectionConfig; } }));\nvar ConversationTranslatorRecognizer_js_1 = __webpack_require__(/*! ./ConversationTranslatorRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorRecognizer.js\");\nObject.defineProperty(exports, \"ConversationRecognizerFactory\", ({ enumerable: true, get: function () { return ConversationTranslatorRecognizer_js_1.ConversationRecognizerFactory; } }));\nvar TranscriberRecognizer_js_1 = __webpack_require__(/*! ./TranscriberRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/TranscriberRecognizer.js\");\nObject.defineProperty(exports, \"TranscriberRecognizer\", ({ enumerable: true, get: function () { return TranscriberRecognizer_js_1.TranscriberRecognizer; } }));\nvar ConversationTranslatorEventArgs_js_1 = __webpack_require__(/*! ./ConversationTranslatorEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorEventArgs.js\");\nObject.defineProperty(exports, \"ConversationReceivedTranslationEventArgs\", ({ enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.ConversationReceivedTranslationEventArgs; } }));\nObject.defineProperty(exports, \"LockRoomEventArgs\", ({ enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.LockRoomEventArgs; } }));\nObject.defineProperty(exports, \"MuteAllEventArgs\", ({ enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.MuteAllEventArgs; } }));\nObject.defineProperty(exports, \"ParticipantAttributeEventArgs\", ({ enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.ParticipantAttributeEventArgs; } }));\nObject.defineProperty(exports, \"ParticipantEventArgs\", ({ enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.ParticipantEventArgs; } }));\nObject.defineProperty(exports, \"ParticipantsListEventArgs\", ({ enumerable: true, get: function () { return ConversationTranslatorEventArgs_js_1.ParticipantsListEventArgs; } }));\nvar ConversationTranslatorInterfaces_js_1 = __webpack_require__(/*! ./ConversationTranslatorInterfaces.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorInterfaces.js\");\nObject.defineProperty(exports, \"ConversationTranslatorCommandTypes\", ({ enumerable: true, get: function () { return ConversationTranslatorInterfaces_js_1.ConversationTranslatorCommandTypes; } }));\nObject.defineProperty(exports, \"ConversationTranslatorMessageTypes\", ({ enumerable: true, get: function () { return ConversationTranslatorInterfaces_js_1.ConversationTranslatorMessageTypes; } }));\nObject.defineProperty(exports, \"InternalParticipants\", ({ enumerable: true, get: function () { return ConversationTranslatorInterfaces_js_1.InternalParticipants; } }));\n\n//# sourceMappingURL=Exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9FeHBvcnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0IsbUJBQU8sQ0FBQyxnS0FBMEI7QUFDakUsdURBQXNELEVBQUUscUNBQXFDLHdEQUF3RCxFQUFDO0FBQ3RKLHdDQUF3QyxtQkFBTyxDQUFDLGtMQUFtQztBQUNuRixnRUFBK0QsRUFBRSxxQ0FBcUMsMEVBQTBFLEVBQUM7QUFDakwsNENBQTRDLG1CQUFPLENBQUMsMExBQXVDO0FBQzNGLGlFQUFnRSxFQUFFLHFDQUFxQywrRUFBK0UsRUFBQztBQUN2TCxpQ0FBaUMsbUJBQU8sQ0FBQyxvS0FBNEI7QUFDckUseURBQXdELEVBQUUscUNBQXFDLDREQUE0RCxFQUFDO0FBQzVKLDJDQUEyQyxtQkFBTyxDQUFDLHdMQUFzQztBQUN6Riw0RUFBMkUsRUFBRSxxQ0FBcUMseUZBQXlGLEVBQUM7QUFDNU0scURBQW9ELEVBQUUscUNBQXFDLGtFQUFrRSxFQUFDO0FBQzlKLG9EQUFtRCxFQUFFLHFDQUFxQyxpRUFBaUUsRUFBQztBQUM1SixpRUFBZ0UsRUFBRSxxQ0FBcUMsOEVBQThFLEVBQUM7QUFDdEwsd0RBQXVELEVBQUUscUNBQXFDLHFFQUFxRSxFQUFDO0FBQ3BLLDZEQUE0RCxFQUFFLHFDQUFxQywwRUFBMEUsRUFBQztBQUM5Syw0Q0FBNEMsbUJBQU8sQ0FBQywwTEFBdUM7QUFDM0Ysc0VBQXFFLEVBQUUscUNBQXFDLG9GQUFvRixFQUFDO0FBQ2pNLHNFQUFxRSxFQUFFLHFDQUFxQyxvRkFBb0YsRUFBQztBQUNqTSx3REFBdUQsRUFBRSxxQ0FBcUMsc0VBQXNFLEVBQUM7O0FBRXJLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9FeHBvcnRzLmpzPzY3MzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBDb252ZXJzYXRpb25NYW5hZ2VyX2pzXzEgPSByZXF1aXJlKFwiLi9Db252ZXJzYXRpb25NYW5hZ2VyLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29udmVyc2F0aW9uTWFuYWdlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ29udmVyc2F0aW9uTWFuYWdlcl9qc18xLkNvbnZlcnNhdGlvbk1hbmFnZXI7IH0gfSk7XG52YXIgQ29udmVyc2F0aW9uQ29ubmVjdGlvbkNvbmZpZ19qc18xID0gcmVxdWlyZShcIi4vQ29udmVyc2F0aW9uQ29ubmVjdGlvbkNvbmZpZy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbnZlcnNhdGlvbkNvbm5lY3Rpb25Db25maWdcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENvbnZlcnNhdGlvbkNvbm5lY3Rpb25Db25maWdfanNfMS5Db252ZXJzYXRpb25Db25uZWN0aW9uQ29uZmlnOyB9IH0pO1xudmFyIENvbnZlcnNhdGlvblRyYW5zbGF0b3JSZWNvZ25pemVyX2pzXzEgPSByZXF1aXJlKFwiLi9Db252ZXJzYXRpb25UcmFuc2xhdG9yUmVjb2duaXplci5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbnZlcnNhdGlvblJlY29nbml6ZXJGYWN0b3J5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDb252ZXJzYXRpb25UcmFuc2xhdG9yUmVjb2duaXplcl9qc18xLkNvbnZlcnNhdGlvblJlY29nbml6ZXJGYWN0b3J5OyB9IH0pO1xudmFyIFRyYW5zY3JpYmVyUmVjb2duaXplcl9qc18xID0gcmVxdWlyZShcIi4vVHJhbnNjcmliZXJSZWNvZ25pemVyLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVHJhbnNjcmliZXJSZWNvZ25pemVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUcmFuc2NyaWJlclJlY29nbml6ZXJfanNfMS5UcmFuc2NyaWJlclJlY29nbml6ZXI7IH0gfSk7XG52YXIgQ29udmVyc2F0aW9uVHJhbnNsYXRvckV2ZW50QXJnc19qc18xID0gcmVxdWlyZShcIi4vQ29udmVyc2F0aW9uVHJhbnNsYXRvckV2ZW50QXJncy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbnZlcnNhdGlvblJlY2VpdmVkVHJhbnNsYXRpb25FdmVudEFyZ3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENvbnZlcnNhdGlvblRyYW5zbGF0b3JFdmVudEFyZ3NfanNfMS5Db252ZXJzYXRpb25SZWNlaXZlZFRyYW5zbGF0aW9uRXZlbnRBcmdzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTG9ja1Jvb21FdmVudEFyZ3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENvbnZlcnNhdGlvblRyYW5zbGF0b3JFdmVudEFyZ3NfanNfMS5Mb2NrUm9vbUV2ZW50QXJnczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk11dGVBbGxFdmVudEFyZ3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENvbnZlcnNhdGlvblRyYW5zbGF0b3JFdmVudEFyZ3NfanNfMS5NdXRlQWxsRXZlbnRBcmdzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUGFydGljaXBhbnRBdHRyaWJ1dGVFdmVudEFyZ3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENvbnZlcnNhdGlvblRyYW5zbGF0b3JFdmVudEFyZ3NfanNfMS5QYXJ0aWNpcGFudEF0dHJpYnV0ZUV2ZW50QXJnczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlBhcnRpY2lwYW50RXZlbnRBcmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDb252ZXJzYXRpb25UcmFuc2xhdG9yRXZlbnRBcmdzX2pzXzEuUGFydGljaXBhbnRFdmVudEFyZ3M7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQYXJ0aWNpcGFudHNMaXN0RXZlbnRBcmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDb252ZXJzYXRpb25UcmFuc2xhdG9yRXZlbnRBcmdzX2pzXzEuUGFydGljaXBhbnRzTGlzdEV2ZW50QXJnczsgfSB9KTtcbnZhciBDb252ZXJzYXRpb25UcmFuc2xhdG9ySW50ZXJmYWNlc19qc18xID0gcmVxdWlyZShcIi4vQ29udmVyc2F0aW9uVHJhbnNsYXRvckludGVyZmFjZXMuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb252ZXJzYXRpb25UcmFuc2xhdG9yQ29tbWFuZFR5cGVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDb252ZXJzYXRpb25UcmFuc2xhdG9ySW50ZXJmYWNlc19qc18xLkNvbnZlcnNhdGlvblRyYW5zbGF0b3JDb21tYW5kVHlwZXM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb252ZXJzYXRpb25UcmFuc2xhdG9yTWVzc2FnZVR5cGVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDb252ZXJzYXRpb25UcmFuc2xhdG9ySW50ZXJmYWNlc19qc18xLkNvbnZlcnNhdGlvblRyYW5zbGF0b3JNZXNzYWdlVHlwZXM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJbnRlcm5hbFBhcnRpY2lwYW50c1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ29udmVyc2F0aW9uVHJhbnNsYXRvckludGVyZmFjZXNfanNfMS5JbnRlcm5hbFBhcnRpY2lwYW50czsgfSB9KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXhwb3J0cy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/Exports.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CommandResponsePayload = void 0;\nconst parseCommandResponse = (json) => JSON.parse(json);\nclass CommandResponsePayload {\n    constructor(json) {\n        this.privCommandResponse = parseCommandResponse(json);\n    }\n    get type() {\n        return this.privCommandResponse.type;\n    }\n    get command() {\n        return this.privCommandResponse.command;\n    }\n    get id() {\n        return this.privCommandResponse.id;\n    }\n    get nickname() {\n        return this.privCommandResponse.nickname;\n    }\n    get participantId() {\n        return this.privCommandResponse.participantId;\n    }\n    get roomid() {\n        return this.privCommandResponse.roomid;\n    }\n    get value() {\n        return this.privCommandResponse.value;\n    }\n    get token() {\n        return this.privCommandResponse.token;\n    }\n    static fromJSON(json) {\n        return new CommandResponsePayload(json);\n    }\n}\nexports.CommandResponsePayload = CommandResponsePayload;\n\n//# sourceMappingURL=CommandResponsePayload.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9TZXJ2aWNlTWVzc2FnZXMvQ29tbWFuZFJlc3BvbnNlUGF5bG9hZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qjs7QUFFOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9UcmFuc2NyaXB0aW9uL1NlcnZpY2VNZXNzYWdlcy9Db21tYW5kUmVzcG9uc2VQYXlsb2FkLmpzP2MyZWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29tbWFuZFJlc3BvbnNlUGF5bG9hZCA9IHZvaWQgMDtcbmNvbnN0IHBhcnNlQ29tbWFuZFJlc3BvbnNlID0gKGpzb24pID0+IEpTT04ucGFyc2UoanNvbik7XG5jbGFzcyBDb21tYW5kUmVzcG9uc2VQYXlsb2FkIHtcbiAgICBjb25zdHJ1Y3Rvcihqc29uKSB7XG4gICAgICAgIHRoaXMucHJpdkNvbW1hbmRSZXNwb25zZSA9IHBhcnNlQ29tbWFuZFJlc3BvbnNlKGpzb24pO1xuICAgIH1cbiAgICBnZXQgdHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbW1hbmRSZXNwb25zZS50eXBlO1xuICAgIH1cbiAgICBnZXQgY29tbWFuZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbW1hbmRSZXNwb25zZS5jb21tYW5kO1xuICAgIH1cbiAgICBnZXQgaWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZDb21tYW5kUmVzcG9uc2UuaWQ7XG4gICAgfVxuICAgIGdldCBuaWNrbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbW1hbmRSZXNwb25zZS5uaWNrbmFtZTtcbiAgICB9XG4gICAgZ2V0IHBhcnRpY2lwYW50SWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZDb21tYW5kUmVzcG9uc2UucGFydGljaXBhbnRJZDtcbiAgICB9XG4gICAgZ2V0IHJvb21pZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbW1hbmRSZXNwb25zZS5yb29taWQ7XG4gICAgfVxuICAgIGdldCB2YWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbW1hbmRSZXNwb25zZS52YWx1ZTtcbiAgICB9XG4gICAgZ2V0IHRva2VuKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2Q29tbWFuZFJlc3BvbnNlLnRva2VuO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUpTT04oanNvbikge1xuICAgICAgICByZXR1cm4gbmV3IENvbW1hbmRSZXNwb25zZVBheWxvYWQoanNvbik7XG4gICAgfVxufVxuZXhwb3J0cy5Db21tYW5kUmVzcG9uc2VQYXlsb2FkID0gQ29tbWFuZFJlc3BvbnNlUGF5bG9hZDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29tbWFuZFJlc3BvbnNlUGF5bG9hZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/Exports.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/Exports.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar CommandResponsePayload_js_1 = __webpack_require__(/*! ./CommandResponsePayload.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.js\");\nObject.defineProperty(exports, \"CommandResponsePayload\", ({ enumerable: true, get: function () { return CommandResponsePayload_js_1.CommandResponsePayload; } }));\nvar ParticipantResponsePayload_js_1 = __webpack_require__(/*! ./ParticipantResponsePayload.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.js\");\nObject.defineProperty(exports, \"ParticipantsListPayloadResponse\", ({ enumerable: true, get: function () { return ParticipantResponsePayload_js_1.ParticipantsListPayloadResponse; } }));\nObject.defineProperty(exports, \"ParticipantPayloadResponse\", ({ enumerable: true, get: function () { return ParticipantResponsePayload_js_1.ParticipantPayloadResponse; } }));\nvar TranslationResponsePayload_js_1 = __webpack_require__(/*! ./TranslationResponsePayload.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.js\");\nObject.defineProperty(exports, \"SpeechResponsePayload\", ({ enumerable: true, get: function () { return TranslationResponsePayload_js_1.SpeechResponsePayload; } }));\nObject.defineProperty(exports, \"TextResponsePayload\", ({ enumerable: true, get: function () { return TranslationResponsePayload_js_1.TextResponsePayload; } }));\n\n//# sourceMappingURL=Exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9TZXJ2aWNlTWVzc2FnZXMvRXhwb3J0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQ0FBa0MsbUJBQU8sQ0FBQyxzTEFBNkI7QUFDdkUsMERBQXlELEVBQUUscUNBQXFDLDhEQUE4RCxFQUFDO0FBQy9KLHNDQUFzQyxtQkFBTyxDQUFDLDhMQUFpQztBQUMvRSxtRUFBa0UsRUFBRSxxQ0FBcUMsMkVBQTJFLEVBQUM7QUFDckwsOERBQTZELEVBQUUscUNBQXFDLHNFQUFzRSxFQUFDO0FBQzNLLHNDQUFzQyxtQkFBTyxDQUFDLDhMQUFpQztBQUMvRSx5REFBd0QsRUFBRSxxQ0FBcUMsaUVBQWlFLEVBQUM7QUFDakssdURBQXNELEVBQUUscUNBQXFDLCtEQUErRCxFQUFDOztBQUU3SiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1RyYW5zY3JpcHRpb24vU2VydmljZU1lc3NhZ2VzL0V4cG9ydHMuanM/ZDBkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBDb21tYW5kUmVzcG9uc2VQYXlsb2FkX2pzXzEgPSByZXF1aXJlKFwiLi9Db21tYW5kUmVzcG9uc2VQYXlsb2FkLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29tbWFuZFJlc3BvbnNlUGF5bG9hZFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ29tbWFuZFJlc3BvbnNlUGF5bG9hZF9qc18xLkNvbW1hbmRSZXNwb25zZVBheWxvYWQ7IH0gfSk7XG52YXIgUGFydGljaXBhbnRSZXNwb25zZVBheWxvYWRfanNfMSA9IHJlcXVpcmUoXCIuL1BhcnRpY2lwYW50UmVzcG9uc2VQYXlsb2FkLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUGFydGljaXBhbnRzTGlzdFBheWxvYWRSZXNwb25zZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUGFydGljaXBhbnRSZXNwb25zZVBheWxvYWRfanNfMS5QYXJ0aWNpcGFudHNMaXN0UGF5bG9hZFJlc3BvbnNlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUGFydGljaXBhbnRQYXlsb2FkUmVzcG9uc2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFBhcnRpY2lwYW50UmVzcG9uc2VQYXlsb2FkX2pzXzEuUGFydGljaXBhbnRQYXlsb2FkUmVzcG9uc2U7IH0gfSk7XG52YXIgVHJhbnNsYXRpb25SZXNwb25zZVBheWxvYWRfanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zbGF0aW9uUmVzcG9uc2VQYXlsb2FkLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3BlZWNoUmVzcG9uc2VQYXlsb2FkXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUcmFuc2xhdGlvblJlc3BvbnNlUGF5bG9hZF9qc18xLlNwZWVjaFJlc3BvbnNlUGF5bG9hZDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRleHRSZXNwb25zZVBheWxvYWRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRyYW5zbGF0aW9uUmVzcG9uc2VQYXlsb2FkX2pzXzEuVGV4dFJlc3BvbnNlUGF5bG9hZDsgfSB9KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXhwb3J0cy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/Exports.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.js ***!
  \*******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ParticipantPayloadResponse = exports.ParticipantsListPayloadResponse = void 0;\nconst parseListResponse = (json) => JSON.parse(json);\nconst parseParticipantResponse = (json) => JSON.parse(json);\nclass ParticipantsListPayloadResponse {\n    constructor(json) {\n        this.privParticipantsPayloadResponse = parseListResponse(json);\n    }\n    get roomid() {\n        return this.privParticipantsPayloadResponse.roomid;\n    }\n    get id() {\n        return this.privParticipantsPayloadResponse.id;\n    }\n    get command() {\n        return this.privParticipantsPayloadResponse.command;\n    }\n    get participants() {\n        return this.privParticipantsPayloadResponse.participants;\n    }\n    get token() {\n        return this.privParticipantsPayloadResponse.token;\n    }\n    get translateTo() {\n        return this.privParticipantsPayloadResponse.translateTo;\n    }\n    get profanityFilter() {\n        return this.privParticipantsPayloadResponse.profanityFilter;\n    }\n    get roomProfanityFilter() {\n        return this.privParticipantsPayloadResponse.roomProfanityFilter;\n    }\n    get roomLocked() {\n        return this.privParticipantsPayloadResponse.roomLocked;\n    }\n    get muteAll() {\n        return this.privParticipantsPayloadResponse.muteAll;\n    }\n    get type() {\n        return this.privParticipantsPayloadResponse.type;\n    }\n    static fromJSON(json) {\n        return new ParticipantsListPayloadResponse(json);\n    }\n}\nexports.ParticipantsListPayloadResponse = ParticipantsListPayloadResponse;\nclass ParticipantPayloadResponse {\n    constructor(json) {\n        this.privParticipantPayloadResponse = parseParticipantResponse(json);\n    }\n    get nickname() {\n        return this.privParticipantPayloadResponse.nickname;\n    }\n    get locale() {\n        return this.privParticipantPayloadResponse.locale;\n    }\n    get usetts() {\n        return this.privParticipantPayloadResponse.usetts;\n    }\n    get ismuted() {\n        return this.privParticipantPayloadResponse.ismuted;\n    }\n    get ishost() {\n        return this.privParticipantPayloadResponse.ishost;\n    }\n    get participantId() {\n        return this.privParticipantPayloadResponse.participantId;\n    }\n    get avatar() {\n        return this.privParticipantPayloadResponse.avatar;\n    }\n    static fromJSON(json) {\n        return new ParticipantPayloadResponse(json);\n    }\n}\nexports.ParticipantPayloadResponse = ParticipantPayloadResponse;\n\n//# sourceMappingURL=ParticipantResponsePayload.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9TZXJ2aWNlTWVzc2FnZXMvUGFydGljaXBhbnRSZXNwb25zZVBheWxvYWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtDQUFrQyxHQUFHLHVDQUF1QztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDOztBQUVsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1RyYW5zY3JpcHRpb24vU2VydmljZU1lc3NhZ2VzL1BhcnRpY2lwYW50UmVzcG9uc2VQYXlsb2FkLmpzP2FiNzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUGFydGljaXBhbnRQYXlsb2FkUmVzcG9uc2UgPSBleHBvcnRzLlBhcnRpY2lwYW50c0xpc3RQYXlsb2FkUmVzcG9uc2UgPSB2b2lkIDA7XG5jb25zdCBwYXJzZUxpc3RSZXNwb25zZSA9IChqc29uKSA9PiBKU09OLnBhcnNlKGpzb24pO1xuY29uc3QgcGFyc2VQYXJ0aWNpcGFudFJlc3BvbnNlID0gKGpzb24pID0+IEpTT04ucGFyc2UoanNvbik7XG5jbGFzcyBQYXJ0aWNpcGFudHNMaXN0UGF5bG9hZFJlc3BvbnNlIHtcbiAgICBjb25zdHJ1Y3Rvcihqc29uKSB7XG4gICAgICAgIHRoaXMucHJpdlBhcnRpY2lwYW50c1BheWxvYWRSZXNwb25zZSA9IHBhcnNlTGlzdFJlc3BvbnNlKGpzb24pO1xuICAgIH1cbiAgICBnZXQgcm9vbWlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UGFydGljaXBhbnRzUGF5bG9hZFJlc3BvbnNlLnJvb21pZDtcbiAgICB9XG4gICAgZ2V0IGlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UGFydGljaXBhbnRzUGF5bG9hZFJlc3BvbnNlLmlkO1xuICAgIH1cbiAgICBnZXQgY29tbWFuZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlBhcnRpY2lwYW50c1BheWxvYWRSZXNwb25zZS5jb21tYW5kO1xuICAgIH1cbiAgICBnZXQgcGFydGljaXBhbnRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UGFydGljaXBhbnRzUGF5bG9hZFJlc3BvbnNlLnBhcnRpY2lwYW50cztcbiAgICB9XG4gICAgZ2V0IHRva2VuKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UGFydGljaXBhbnRzUGF5bG9hZFJlc3BvbnNlLnRva2VuO1xuICAgIH1cbiAgICBnZXQgdHJhbnNsYXRlVG8oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQYXJ0aWNpcGFudHNQYXlsb2FkUmVzcG9uc2UudHJhbnNsYXRlVG87XG4gICAgfVxuICAgIGdldCBwcm9mYW5pdHlGaWx0ZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQYXJ0aWNpcGFudHNQYXlsb2FkUmVzcG9uc2UucHJvZmFuaXR5RmlsdGVyO1xuICAgIH1cbiAgICBnZXQgcm9vbVByb2Zhbml0eUZpbHRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlBhcnRpY2lwYW50c1BheWxvYWRSZXNwb25zZS5yb29tUHJvZmFuaXR5RmlsdGVyO1xuICAgIH1cbiAgICBnZXQgcm9vbUxvY2tlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlBhcnRpY2lwYW50c1BheWxvYWRSZXNwb25zZS5yb29tTG9ja2VkO1xuICAgIH1cbiAgICBnZXQgbXV0ZUFsbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlBhcnRpY2lwYW50c1BheWxvYWRSZXNwb25zZS5tdXRlQWxsO1xuICAgIH1cbiAgICBnZXQgdHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlBhcnRpY2lwYW50c1BheWxvYWRSZXNwb25zZS50eXBlO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUpTT04oanNvbikge1xuICAgICAgICByZXR1cm4gbmV3IFBhcnRpY2lwYW50c0xpc3RQYXlsb2FkUmVzcG9uc2UoanNvbik7XG4gICAgfVxufVxuZXhwb3J0cy5QYXJ0aWNpcGFudHNMaXN0UGF5bG9hZFJlc3BvbnNlID0gUGFydGljaXBhbnRzTGlzdFBheWxvYWRSZXNwb25zZTtcbmNsYXNzIFBhcnRpY2lwYW50UGF5bG9hZFJlc3BvbnNlIHtcbiAgICBjb25zdHJ1Y3Rvcihqc29uKSB7XG4gICAgICAgIHRoaXMucHJpdlBhcnRpY2lwYW50UGF5bG9hZFJlc3BvbnNlID0gcGFyc2VQYXJ0aWNpcGFudFJlc3BvbnNlKGpzb24pO1xuICAgIH1cbiAgICBnZXQgbmlja25hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQYXJ0aWNpcGFudFBheWxvYWRSZXNwb25zZS5uaWNrbmFtZTtcbiAgICB9XG4gICAgZ2V0IGxvY2FsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlBhcnRpY2lwYW50UGF5bG9hZFJlc3BvbnNlLmxvY2FsZTtcbiAgICB9XG4gICAgZ2V0IHVzZXR0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlBhcnRpY2lwYW50UGF5bG9hZFJlc3BvbnNlLnVzZXR0cztcbiAgICB9XG4gICAgZ2V0IGlzbXV0ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQYXJ0aWNpcGFudFBheWxvYWRSZXNwb25zZS5pc211dGVkO1xuICAgIH1cbiAgICBnZXQgaXNob3N0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UGFydGljaXBhbnRQYXlsb2FkUmVzcG9uc2UuaXNob3N0O1xuICAgIH1cbiAgICBnZXQgcGFydGljaXBhbnRJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlBhcnRpY2lwYW50UGF5bG9hZFJlc3BvbnNlLnBhcnRpY2lwYW50SWQ7XG4gICAgfVxuICAgIGdldCBhdmF0YXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQYXJ0aWNpcGFudFBheWxvYWRSZXNwb25zZS5hdmF0YXI7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSlNPTihqc29uKSB7XG4gICAgICAgIHJldHVybiBuZXcgUGFydGljaXBhbnRQYXlsb2FkUmVzcG9uc2UoanNvbik7XG4gICAgfVxufVxuZXhwb3J0cy5QYXJ0aWNpcGFudFBheWxvYWRSZXNwb25zZSA9IFBhcnRpY2lwYW50UGF5bG9hZFJlc3BvbnNlO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJ0aWNpcGFudFJlc3BvbnNlUGF5bG9hZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.js ***!
  \*******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextResponsePayload = exports.SpeechResponsePayload = void 0;\nconst parseSpeechResponse = (json) => JSON.parse(json);\nconst parseTextResponse = (json) => JSON.parse(json);\nclass SpeechResponsePayload {\n    constructor(json) {\n        this.privSpeechResponse = parseSpeechResponse(json);\n    }\n    get recognition() {\n        return this.privSpeechResponse.recognition;\n    }\n    get translations() {\n        return this.privSpeechResponse.translations;\n    }\n    get id() {\n        return this.privSpeechResponse.id;\n    }\n    get language() {\n        return this.privSpeechResponse.language;\n    }\n    get nickname() {\n        return this.privSpeechResponse.nickname;\n    }\n    get participantId() {\n        return this.privSpeechResponse.participantId;\n    }\n    get roomid() {\n        return this.privSpeechResponse.roomid;\n    }\n    get timestamp() {\n        return this.privSpeechResponse.timestamp;\n    }\n    get type() {\n        return this.privSpeechResponse.type;\n    }\n    get isFinal() {\n        return this.privSpeechResponse.type === \"final\";\n    }\n    static fromJSON(json) {\n        return new SpeechResponsePayload(json);\n    }\n}\nexports.SpeechResponsePayload = SpeechResponsePayload;\nclass TextResponsePayload {\n    constructor(json) {\n        this.privTextResponse = parseTextResponse(json);\n    }\n    get originalText() {\n        return this.privTextResponse.originalText;\n    }\n    get translations() {\n        return this.privTextResponse.translations;\n    }\n    get id() {\n        return this.privTextResponse.id;\n    }\n    get language() {\n        return this.privTextResponse.language;\n    }\n    get nickname() {\n        return this.privTextResponse.nickname;\n    }\n    get participantId() {\n        return this.privTextResponse.participantId;\n    }\n    get roomid() {\n        return this.privTextResponse.roomid;\n    }\n    get timestamp() {\n        return this.privTextResponse.timestamp;\n    }\n    get type() {\n        return this.privTextResponse.type;\n    }\n    static fromJSON(json) {\n        return new TextResponsePayload(json);\n    }\n}\nexports.TextResponsePayload = TextResponsePayload;\n\n//# sourceMappingURL=TranslationResponsePayload.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNjcmlwdGlvbi9TZXJ2aWNlTWVzc2FnZXMvVHJhbnNsYXRpb25SZXNwb25zZVBheWxvYWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLDZCQUE2QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCOztBQUUzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24uc3BlZWNoL1RyYW5zY3JpcHRpb24vU2VydmljZU1lc3NhZ2VzL1RyYW5zbGF0aW9uUmVzcG9uc2VQYXlsb2FkLmpzP2EwZGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVGV4dFJlc3BvbnNlUGF5bG9hZCA9IGV4cG9ydHMuU3BlZWNoUmVzcG9uc2VQYXlsb2FkID0gdm9pZCAwO1xuY29uc3QgcGFyc2VTcGVlY2hSZXNwb25zZSA9IChqc29uKSA9PiBKU09OLnBhcnNlKGpzb24pO1xuY29uc3QgcGFyc2VUZXh0UmVzcG9uc2UgPSAoanNvbikgPT4gSlNPTi5wYXJzZShqc29uKTtcbmNsYXNzIFNwZWVjaFJlc3BvbnNlUGF5bG9hZCB7XG4gICAgY29uc3RydWN0b3IoanNvbikge1xuICAgICAgICB0aGlzLnByaXZTcGVlY2hSZXNwb25zZSA9IHBhcnNlU3BlZWNoUmVzcG9uc2UoanNvbik7XG4gICAgfVxuICAgIGdldCByZWNvZ25pdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNwZWVjaFJlc3BvbnNlLnJlY29nbml0aW9uO1xuICAgIH1cbiAgICBnZXQgdHJhbnNsYXRpb25zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3BlZWNoUmVzcG9uc2UudHJhbnNsYXRpb25zO1xuICAgIH1cbiAgICBnZXQgaWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTcGVlY2hSZXNwb25zZS5pZDtcbiAgICB9XG4gICAgZ2V0IGxhbmd1YWdlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3BlZWNoUmVzcG9uc2UubGFuZ3VhZ2U7XG4gICAgfVxuICAgIGdldCBuaWNrbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNwZWVjaFJlc3BvbnNlLm5pY2tuYW1lO1xuICAgIH1cbiAgICBnZXQgcGFydGljaXBhbnRJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNwZWVjaFJlc3BvbnNlLnBhcnRpY2lwYW50SWQ7XG4gICAgfVxuICAgIGdldCByb29taWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTcGVlY2hSZXNwb25zZS5yb29taWQ7XG4gICAgfVxuICAgIGdldCB0aW1lc3RhbXAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTcGVlY2hSZXNwb25zZS50aW1lc3RhbXA7XG4gICAgfVxuICAgIGdldCB0eXBlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3BlZWNoUmVzcG9uc2UudHlwZTtcbiAgICB9XG4gICAgZ2V0IGlzRmluYWwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTcGVlY2hSZXNwb25zZS50eXBlID09PSBcImZpbmFsXCI7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSlNPTihqc29uKSB7XG4gICAgICAgIHJldHVybiBuZXcgU3BlZWNoUmVzcG9uc2VQYXlsb2FkKGpzb24pO1xuICAgIH1cbn1cbmV4cG9ydHMuU3BlZWNoUmVzcG9uc2VQYXlsb2FkID0gU3BlZWNoUmVzcG9uc2VQYXlsb2FkO1xuY2xhc3MgVGV4dFJlc3BvbnNlUGF5bG9hZCB7XG4gICAgY29uc3RydWN0b3IoanNvbikge1xuICAgICAgICB0aGlzLnByaXZUZXh0UmVzcG9uc2UgPSBwYXJzZVRleHRSZXNwb25zZShqc29uKTtcbiAgICB9XG4gICAgZ2V0IG9yaWdpbmFsVGV4dCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlRleHRSZXNwb25zZS5vcmlnaW5hbFRleHQ7XG4gICAgfVxuICAgIGdldCB0cmFuc2xhdGlvbnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZUZXh0UmVzcG9uc2UudHJhbnNsYXRpb25zO1xuICAgIH1cbiAgICBnZXQgaWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZUZXh0UmVzcG9uc2UuaWQ7XG4gICAgfVxuICAgIGdldCBsYW5ndWFnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlRleHRSZXNwb25zZS5sYW5ndWFnZTtcbiAgICB9XG4gICAgZ2V0IG5pY2tuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VGV4dFJlc3BvbnNlLm5pY2tuYW1lO1xuICAgIH1cbiAgICBnZXQgcGFydGljaXBhbnRJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlRleHRSZXNwb25zZS5wYXJ0aWNpcGFudElkO1xuICAgIH1cbiAgICBnZXQgcm9vbWlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VGV4dFJlc3BvbnNlLnJvb21pZDtcbiAgICB9XG4gICAgZ2V0IHRpbWVzdGFtcCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlRleHRSZXNwb25zZS50aW1lc3RhbXA7XG4gICAgfVxuICAgIGdldCB0eXBlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VGV4dFJlc3BvbnNlLnR5cGU7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSlNPTihqc29uKSB7XG4gICAgICAgIHJldHVybiBuZXcgVGV4dFJlc3BvbnNlUGF5bG9hZChqc29uKTtcbiAgICB9XG59XG5leHBvcnRzLlRleHRSZXNwb25zZVBheWxvYWQgPSBUZXh0UmVzcG9uc2VQYXlsb2FkO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1UcmFuc2xhdGlvblJlc3BvbnNlUGF5bG9hZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/TranscriberRecognizer.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/TranscriberRecognizer.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranscriberRecognizer = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nconst Exports_js_1 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../../sdk/Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nclass TranscriberRecognizer extends Exports_js_2.Recognizer {\n    /**\n     * TranscriberRecognizer constructor.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechTranslationConfig - Non-audio configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An audio configuration associated with the recognizer\n     */\n    constructor(speechTranslationConfig, audioConfig) {\n        const speechTranslationConfigImpl = speechTranslationConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechTranslationConfigImpl, \"speechTranslationConfig\");\n        const audioConfigImpl = audioConfig;\n        Contracts_js_1.Contracts.throwIfNull(audioConfigImpl, \"audioConfigImpl\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(speechTranslationConfigImpl.speechRecognitionLanguage, Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        super(audioConfig, speechTranslationConfigImpl.properties, new Exports_js_3.TranscriberConnectionFactory());\n        this.privDisposedRecognizer = false;\n        this.isMeetingRecognizer = false;\n    }\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    set conversation(c) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(c, \"Conversation\");\n        this.isMeetingRecognizer = false;\n        this.privConversation = c;\n    }\n    getConversationInfo() {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation, \"Conversation\");\n        return this.privConversation.conversationInfo;\n    }\n    set meeting(m) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(m, \"Meeting\");\n        this.isMeetingRecognizer = true;\n        this.privMeeting = m;\n    }\n    getMeetingInfo() {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privMeeting, \"Meeting\");\n        return this.privMeeting.meetingInfo;\n    }\n    IsMeetingRecognizer() {\n        return this.isMeetingRecognizer;\n    }\n    startContinuousRecognitionAsync(cb, err) {\n        Exports_js_1.marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(Exports_js_3.RecognitionMode.Conversation), cb, err);\n    }\n    stopContinuousRecognitionAsync(cb, err) {\n        Exports_js_1.marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    async close() {\n        if (!this.privDisposedRecognizer) {\n            await this.dispose(true);\n        }\n    }\n    // Push async join/leave conversation message via serviceRecognizer\n    async pushConversationEvent(conversationInfo, command) {\n        const reco = (this.privReco);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\n        await reco.sendSpeechEventAsync(conversationInfo, command);\n    }\n    // Push async join/leave meeting message via serviceRecognizer\n    async pushMeetingEvent(meetingInfo, command) {\n        const reco = (this.privReco);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\n        await reco.sendMeetingSpeechEventAsync(meetingInfo, command);\n    }\n    async enforceAudioGating() {\n        const audioConfigImpl = this.audioConfig;\n        const format = await audioConfigImpl.format;\n        const channels = format.channels;\n        if (channels === 1) {\n            if (this.properties.getProperty(\"f0f5debc-f8c9-4892-ac4b-90a7ab359fd2\", \"false\").toLowerCase() !== \"true\") {\n                throw new Error(\"Single channel audio configuration for MeetingTranscriber is currently under private preview, please contact diarizationrequest@microsoft.com for more details\");\n            }\n        }\n        else if (channels !== 8) {\n            throw new Error(`Unsupported audio configuration: Detected ${channels}-channel audio`);\n        }\n        return;\n    }\n    connectMeetingCallbacks(transcriber) {\n        this.isMeetingRecognizer = true;\n        this.canceled = (s, e) => {\n            if (!!transcriber.canceled) {\n                transcriber.canceled(transcriber, e);\n            }\n        };\n        this.recognizing = (s, e) => {\n            if (!!transcriber.transcribing) {\n                transcriber.transcribing(transcriber, e);\n            }\n        };\n        this.recognized = (s, e) => {\n            if (!!transcriber.transcribed) {\n                transcriber.transcribed(transcriber, e);\n            }\n        };\n        this.sessionStarted = (s, e) => {\n            if (!!transcriber.sessionStarted) {\n                transcriber.sessionStarted(transcriber, e);\n            }\n        };\n        this.sessionStopped = (s, e) => {\n            if (!!transcriber.sessionStopped) {\n                transcriber.sessionStopped(transcriber, e);\n            }\n        };\n    }\n    disconnectCallbacks() {\n        this.canceled = undefined;\n        this.recognizing = undefined;\n        this.recognized = undefined;\n        this.sessionStarted = undefined;\n        this.sessionStopped = undefined;\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member ConversationTranscriber.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    async dispose(disposing) {\n        if (this.privDisposedRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedRecognizer = true;\n            await this.implRecognizerStop();\n        }\n        await super.dispose(disposing);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_3.RecognizerConfig(speechConfig, this.properties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        return new Exports_js_3.TranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n}\nexports.TranscriberRecognizer = TranscriberRecognizer;\n\n//# sourceMappingURL=TranscriberRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/TranscriberRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationConnectionFactory.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationConnectionFactory.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranslationConnectionFactory = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst StringUtils_js_1 = __webpack_require__(/*! ../common/StringUtils.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/StringUtils.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst ConnectionFactoryBase_js_1 = __webpack_require__(/*! ./ConnectionFactoryBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ConnectionFactoryBase.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst HeaderNames_js_1 = __webpack_require__(/*! ./HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nconst QueryParameterNames_js_1 = __webpack_require__(/*! ./QueryParameterNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/QueryParameterNames.js\");\nclass TranslationConnectionFactory extends ConnectionFactoryBase_js_1.ConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        const endpoint = this.getEndpointUrl(config);\n        const queryParams = {};\n        if (config.autoDetectSourceLanguages !== undefined) {\n            queryParams[QueryParameterNames_js_1.QueryParameterNames.EnableLanguageId] = \"true\";\n        }\n        this.setQueryParams(queryParams, config, endpoint);\n        const headers = {};\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\n            headers[authInfo.headerName] = authInfo.token;\n        }\n        headers[HeaderNames_js_1.HeaderNames.ConnectionId] = connectionId;\n        config.parameters.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Url, endpoint);\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n        return new Exports_js_1.WebsocketConnection(endpoint, queryParams, headers, new Exports_js_3.WebsocketMessageFormatter(), Exports_js_1.ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n    }\n    getEndpointUrl(config, returnRegionPlaceholder) {\n        const region = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n        const hostSuffix = ConnectionFactoryBase_js_1.ConnectionFactoryBase.getHostSuffix(region);\n        let endpointUrl = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        if (!endpointUrl) {\n            if (config.autoDetectSourceLanguages !== undefined) {\n                const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://{region}.stt.speech\" + hostSuffix);\n                endpointUrl = host + \"/speech/universal/v2\";\n            }\n            else {\n                const host = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, \"wss://{region}.s2s.speech\" + hostSuffix);\n                endpointUrl = host + \"/speech/translation/cognitiveservices/v1\";\n            }\n        }\n        if (returnRegionPlaceholder === true) {\n            return endpointUrl;\n        }\n        return StringUtils_js_1.StringUtils.formatString(endpointUrl, { region });\n    }\n    setQueryParams(queryParams, config, endpointUrl) {\n        queryParams.from = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n        queryParams.to = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationToLanguages);\n        queryParams.scenario = config.recognitionMode === Exports_js_3.RecognitionMode.Interactive ? \"interactive\" :\n            config.recognitionMode === Exports_js_3.RecognitionMode.Conversation ? \"conversation\" : \"\";\n        this.setCommonUrlParams(config, queryParams, endpointUrl);\n        this.setUrlParameter(Exports_js_2.PropertyId.SpeechServiceResponse_TranslationRequestStablePartialResult, QueryParameterNames_js_1.QueryParameterNames.StableTranslation, config, queryParams, endpointUrl);\n        const translationVoice = config.parameters.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n        if (translationVoice !== undefined) {\n            queryParams.voice = translationVoice;\n            queryParams.features = \"texttospeech\";\n        }\n    }\n}\nexports.TranslationConnectionFactory = TranslationConnectionFactory;\n\n//# sourceMappingURL=TranslationConnectionFactory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNsYXRpb25Db25uZWN0aW9uRmFjdG9yeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0NBQW9DO0FBQ3BDLHFCQUFxQixtQkFBTyxDQUFDLDJJQUE4QjtBQUMzRCx5QkFBeUIsbUJBQU8sQ0FBQyxtSUFBMEI7QUFDM0QscUJBQXFCLG1CQUFPLENBQUMscUhBQW1CO0FBQ2hELG1DQUFtQyxtQkFBTyxDQUFDLHNKQUE0QjtBQUN2RSxxQkFBcUIsbUJBQU8sQ0FBQywwSEFBYztBQUMzQyx5QkFBeUIsbUJBQU8sQ0FBQyxrSUFBa0I7QUFDbkQsaUNBQWlDLG1CQUFPLENBQUMsa0pBQTBCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5SEFBeUgsT0FBTztBQUNoSTtBQUNBO0FBQ0E7QUFDQSx5SEFBeUgsT0FBTztBQUNoSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UsUUFBUTtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7O0FBRXBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNsYXRpb25Db25uZWN0aW9uRmFjdG9yeS5qcz9iMTNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRyYW5zbGF0aW9uQ29ubmVjdGlvbkZhY3RvcnkgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uLmJyb3dzZXIvRXhwb3J0cy5qc1wiKTtcbmNvbnN0IFN0cmluZ1V0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uL1N0cmluZ1V0aWxzLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18yID0gcmVxdWlyZShcIi4uL3Nkay9FeHBvcnRzLmpzXCIpO1xuY29uc3QgQ29ubmVjdGlvbkZhY3RvcnlCYXNlX2pzXzEgPSByZXF1aXJlKFwiLi9Db25uZWN0aW9uRmFjdG9yeUJhc2UuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzMgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuY29uc3QgSGVhZGVyTmFtZXNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlck5hbWVzLmpzXCIpO1xuY29uc3QgUXVlcnlQYXJhbWV0ZXJOYW1lc19qc18xID0gcmVxdWlyZShcIi4vUXVlcnlQYXJhbWV0ZXJOYW1lcy5qc1wiKTtcbmNsYXNzIFRyYW5zbGF0aW9uQ29ubmVjdGlvbkZhY3RvcnkgZXh0ZW5kcyBDb25uZWN0aW9uRmFjdG9yeUJhc2VfanNfMS5Db25uZWN0aW9uRmFjdG9yeUJhc2Uge1xuICAgIGNyZWF0ZShjb25maWcsIGF1dGhJbmZvLCBjb25uZWN0aW9uSWQpIHtcbiAgICAgICAgY29uc3QgZW5kcG9pbnQgPSB0aGlzLmdldEVuZHBvaW50VXJsKGNvbmZpZyk7XG4gICAgICAgIGNvbnN0IHF1ZXJ5UGFyYW1zID0ge307XG4gICAgICAgIGlmIChjb25maWcuYXV0b0RldGVjdFNvdXJjZUxhbmd1YWdlcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBxdWVyeVBhcmFtc1tRdWVyeVBhcmFtZXRlck5hbWVzX2pzXzEuUXVlcnlQYXJhbWV0ZXJOYW1lcy5FbmFibGVMYW5ndWFnZUlkXSA9IFwidHJ1ZVwiO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2V0UXVlcnlQYXJhbXMocXVlcnlQYXJhbXMsIGNvbmZpZywgZW5kcG9pbnQpO1xuICAgICAgICBjb25zdCBoZWFkZXJzID0ge307XG4gICAgICAgIGlmIChhdXRoSW5mby50b2tlbiAhPT0gdW5kZWZpbmVkICYmIGF1dGhJbmZvLnRva2VuICE9PSBcIlwiKSB7XG4gICAgICAgICAgICBoZWFkZXJzW2F1dGhJbmZvLmhlYWRlck5hbWVdID0gYXV0aEluZm8udG9rZW47XG4gICAgICAgIH1cbiAgICAgICAgaGVhZGVyc1tIZWFkZXJOYW1lc19qc18xLkhlYWRlck5hbWVzLkNvbm5lY3Rpb25JZF0gPSBjb25uZWN0aW9uSWQ7XG4gICAgICAgIGNvbmZpZy5wYXJhbWV0ZXJzLnNldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX1VybCwgZW5kcG9pbnQpO1xuICAgICAgICBjb25zdCBlbmFibGVDb21wcmVzc2lvbiA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KFwiU1BFRUNILUVuYWJsZVdlYnNvY2tldENvbXByZXNzaW9uXCIsIFwiZmFsc2VcIikgPT09IFwidHJ1ZVwiO1xuICAgICAgICByZXR1cm4gbmV3IEV4cG9ydHNfanNfMS5XZWJzb2NrZXRDb25uZWN0aW9uKGVuZHBvaW50LCBxdWVyeVBhcmFtcywgaGVhZGVycywgbmV3IEV4cG9ydHNfanNfMy5XZWJzb2NrZXRNZXNzYWdlRm9ybWF0dGVyKCksIEV4cG9ydHNfanNfMS5Qcm94eUluZm8uZnJvbVJlY29nbml6ZXJDb25maWcoY29uZmlnKSwgZW5hYmxlQ29tcHJlc3Npb24sIGNvbm5lY3Rpb25JZCk7XG4gICAgfVxuICAgIGdldEVuZHBvaW50VXJsKGNvbmZpZywgcmV0dXJuUmVnaW9uUGxhY2Vob2xkZXIpIHtcbiAgICAgICAgY29uc3QgcmVnaW9uID0gY29uZmlnLnBhcmFtZXRlcnMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18yLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fUmVnaW9uKTtcbiAgICAgICAgY29uc3QgaG9zdFN1ZmZpeCA9IENvbm5lY3Rpb25GYWN0b3J5QmFzZV9qc18xLkNvbm5lY3Rpb25GYWN0b3J5QmFzZS5nZXRIb3N0U3VmZml4KHJlZ2lvbik7XG4gICAgICAgIGxldCBlbmRwb2ludFVybCA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0VuZHBvaW50LCB1bmRlZmluZWQpO1xuICAgICAgICBpZiAoIWVuZHBvaW50VXJsKSB7XG4gICAgICAgICAgICBpZiAoY29uZmlnLmF1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZXMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhvc3QgPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9Ib3N0LCBcIndzczovL3tyZWdpb259LnN0dC5zcGVlY2hcIiArIGhvc3RTdWZmaXgpO1xuICAgICAgICAgICAgICAgIGVuZHBvaW50VXJsID0gaG9zdCArIFwiL3NwZWVjaC91bml2ZXJzYWwvdjJcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhvc3QgPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9Ib3N0LCBcIndzczovL3tyZWdpb259LnMycy5zcGVlY2hcIiArIGhvc3RTdWZmaXgpO1xuICAgICAgICAgICAgICAgIGVuZHBvaW50VXJsID0gaG9zdCArIFwiL3NwZWVjaC90cmFuc2xhdGlvbi9jb2duaXRpdmVzZXJ2aWNlcy92MVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChyZXR1cm5SZWdpb25QbGFjZWhvbGRlciA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIGVuZHBvaW50VXJsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBTdHJpbmdVdGlsc19qc18xLlN0cmluZ1V0aWxzLmZvcm1hdFN0cmluZyhlbmRwb2ludFVybCwgeyByZWdpb24gfSk7XG4gICAgfVxuICAgIHNldFF1ZXJ5UGFyYW1zKHF1ZXJ5UGFyYW1zLCBjb25maWcsIGVuZHBvaW50VXJsKSB7XG4gICAgICAgIHF1ZXJ5UGFyYW1zLmZyb20gPSBjb25maWcucGFyYW1ldGVycy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9SZWNvTGFuZ3VhZ2UpO1xuICAgICAgICBxdWVyeVBhcmFtcy50byA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX1RyYW5zbGF0aW9uVG9MYW5ndWFnZXMpO1xuICAgICAgICBxdWVyeVBhcmFtcy5zY2VuYXJpbyA9IGNvbmZpZy5yZWNvZ25pdGlvbk1vZGUgPT09IEV4cG9ydHNfanNfMy5SZWNvZ25pdGlvbk1vZGUuSW50ZXJhY3RpdmUgPyBcImludGVyYWN0aXZlXCIgOlxuICAgICAgICAgICAgY29uZmlnLnJlY29nbml0aW9uTW9kZSA9PT0gRXhwb3J0c19qc18zLlJlY29nbml0aW9uTW9kZS5Db252ZXJzYXRpb24gPyBcImNvbnZlcnNhdGlvblwiIDogXCJcIjtcbiAgICAgICAgdGhpcy5zZXRDb21tb25VcmxQYXJhbXMoY29uZmlnLCBxdWVyeVBhcmFtcywgZW5kcG9pbnRVcmwpO1xuICAgICAgICB0aGlzLnNldFVybFBhcmFtZXRlcihFeHBvcnRzX2pzXzIuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlUmVzcG9uc2VfVHJhbnNsYXRpb25SZXF1ZXN0U3RhYmxlUGFydGlhbFJlc3VsdCwgUXVlcnlQYXJhbWV0ZXJOYW1lc19qc18xLlF1ZXJ5UGFyYW1ldGVyTmFtZXMuU3RhYmxlVHJhbnNsYXRpb24sIGNvbmZpZywgcXVlcnlQYXJhbXMsIGVuZHBvaW50VXJsKTtcbiAgICAgICAgY29uc3QgdHJhbnNsYXRpb25Wb2ljZSA9IGNvbmZpZy5wYXJhbWV0ZXJzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX1RyYW5zbGF0aW9uVm9pY2UsIHVuZGVmaW5lZCk7XG4gICAgICAgIGlmICh0cmFuc2xhdGlvblZvaWNlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHF1ZXJ5UGFyYW1zLnZvaWNlID0gdHJhbnNsYXRpb25Wb2ljZTtcbiAgICAgICAgICAgIHF1ZXJ5UGFyYW1zLmZlYXR1cmVzID0gXCJ0ZXh0dG9zcGVlY2hcIjtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuVHJhbnNsYXRpb25Db25uZWN0aW9uRmFjdG9yeSA9IFRyYW5zbGF0aW9uQ29ubmVjdGlvbkZhY3Rvcnk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyYW5zbGF0aW9uQ29ubmVjdGlvbkZhY3RvcnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationConnectionFactory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationServiceRecognizer.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationServiceRecognizer.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranslationServiceRecognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\n// eslint-disable-next-line max-classes-per-file\nclass TranslationServiceRecognizer extends Exports_js_3.ConversationServiceRecognizer {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer);\n        this.privTranslationRecognizer = translationRecognizer;\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\n                this.privTranslationRecognizer.onConnection();\n            }\n        });\n    }\n    async processTypeSpecificMessages(connectionMessage) {\n        const resultProps = new Exports_js_2.PropertyCollection();\n        let processed = await this.processSpeechMessages(connectionMessage);\n        if (processed) {\n            return true;\n        }\n        const handleTranslationPhrase = async (translatedPhrase) => {\n            resultProps.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, translatedPhrase.asJson());\n            this.privRequestSession.onPhraseRecognized(translatedPhrase.Offset + translatedPhrase.Duration);\n            if (translatedPhrase.RecognitionStatus === Exports_js_3.RecognitionStatus.Success) {\n                // OK, the recognition was successful. How'd the translation do?\n                const result = this.fireEventForResult(translatedPhrase, resultProps);\n                if (!!this.privTranslationRecognizer.recognized) {\n                    try {\n                        this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, result);\n                        /* eslint-disable no-empty */\n                    }\n                    catch (error) {\n                        // Not going to let errors in the event handler\n                        // trip things up.\n                    }\n                }\n                // report result to promise.\n                if (!!this.privSuccessCallback) {\n                    try {\n                        this.privSuccessCallback(result.result);\n                    }\n                    catch (e) {\n                        if (!!this.privErrorCallback) {\n                            this.privErrorCallback(e);\n                        }\n                    }\n                    // Only invoke the call back once.\n                    // and if it's successful don't invoke the\n                    // error after that.\n                    this.privSuccessCallback = undefined;\n                    this.privErrorCallback = undefined;\n                }\n            }\n            else {\n                const reason = Exports_js_3.EnumTranslation.implTranslateRecognitionResult(translatedPhrase.RecognitionStatus);\n                const result = new Exports_js_2.TranslationRecognitionResult(undefined, this.privRequestSession.requestId, reason, translatedPhrase.Text, translatedPhrase.Duration, translatedPhrase.Offset, translatedPhrase.Language, translatedPhrase.Confidence, undefined, translatedPhrase.asJson(), resultProps);\n                if (reason === Exports_js_2.ResultReason.Canceled) {\n                    const cancelReason = Exports_js_3.EnumTranslation.implTranslateCancelResult(translatedPhrase.RecognitionStatus);\n                    const cancellationErrorCode = Exports_js_3.EnumTranslation.implTranslateCancelErrorCode(translatedPhrase.RecognitionStatus);\n                    await this.cancelRecognitionLocal(cancelReason, cancellationErrorCode, Exports_js_3.EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\n                }\n                else {\n                    if (translatedPhrase.RecognitionStatus !== Exports_js_3.RecognitionStatus.EndOfDictation) {\n                        const ev = new Exports_js_2.TranslationRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                        if (!!this.privTranslationRecognizer.recognized) {\n                            try {\n                                this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\n                                /* eslint-disable no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        // report result to promise.\n                        if (!!this.privSuccessCallback) {\n                            try {\n                                this.privSuccessCallback(result);\n                            }\n                            catch (e) {\n                                if (!!this.privErrorCallback) {\n                                    this.privErrorCallback(e);\n                                }\n                            }\n                            // Only invoke the call back once.\n                            // and if it's successful don't invoke the\n                            // error after that.\n                            this.privSuccessCallback = undefined;\n                            this.privErrorCallback = undefined;\n                        }\n                    }\n                }\n                processed = true;\n            }\n        };\n        const handleTranslationHypothesis = (hypothesis) => {\n            resultProps.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, hypothesis.asJson());\n            const result = this.fireEventForResult(hypothesis, resultProps);\n            this.privRequestSession.onHypothesis(result.offset);\n            if (!!this.privTranslationRecognizer.recognizing) {\n                try {\n                    this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, result);\n                    /* eslint-disable no-empty */\n                }\n                catch (error) {\n                    // Not going to let errors in the event handler\n                    // trip things up.\n                }\n            }\n            processed = true;\n        };\n        if (connectionMessage.messageType === Exports_js_1.MessageType.Text) {\n            resultProps.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            case \"translation.hypothesis\":\n                handleTranslationHypothesis(Exports_js_3.TranslationHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset));\n                break;\n            case \"translation.response\":\n                const phrase = JSON.parse(connectionMessage.textBody);\n                if (!!phrase.SpeechPhrase) {\n                    await handleTranslationPhrase(Exports_js_3.TranslationPhrase.fromTranslationResponse(phrase, this.privRequestSession.currentTurnAudioOffset));\n                }\n                else {\n                    const hypothesis = JSON.parse(connectionMessage.textBody);\n                    if (!!hypothesis.SpeechHypothesis) {\n                        handleTranslationHypothesis(Exports_js_3.TranslationHypothesis.fromTranslationResponse(hypothesis, this.privRequestSession.currentTurnAudioOffset));\n                    }\n                }\n                break;\n            case \"translation.phrase\":\n                await handleTranslationPhrase(Exports_js_3.TranslationPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset));\n                break;\n            case \"translation.synthesis\":\n                this.sendSynthesisAudio(connectionMessage.binaryBody, this.privRequestSession.sessionId);\n                processed = true;\n                break;\n            case \"audio.end\":\n            case \"translation.synthesis.end\":\n                const synthEnd = Exports_js_3.TranslationSynthesisEnd.fromJSON(connectionMessage.textBody);\n                switch (synthEnd.SynthesisStatus) {\n                    case Exports_js_3.SynthesisStatus.Error:\n                        if (!!this.privTranslationRecognizer.synthesizing) {\n                            const result = new Exports_js_2.TranslationSynthesisResult(Exports_js_2.ResultReason.Canceled, undefined);\n                            const retEvent = new Exports_js_2.TranslationSynthesisEventArgs(result, this.privRequestSession.sessionId);\n                            try {\n                                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\n                                /* eslint-disable no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        if (!!this.privTranslationRecognizer.canceled) {\n                            // And raise a canceled event to send the rich(er) error message back.\n                            const canceledResult = new Exports_js_2.TranslationRecognitionCanceledEventArgs(this.privRequestSession.sessionId, Exports_js_2.CancellationReason.Error, synthEnd.FailureReason, Exports_js_2.CancellationErrorCode.ServiceError, null);\n                            try {\n                                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, canceledResult);\n                                /* eslint-disable no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        break;\n                    case Exports_js_3.SynthesisStatus.Success:\n                        this.sendSynthesisAudio(undefined, this.privRequestSession.sessionId);\n                        break;\n                    default:\n                        break;\n                }\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        return processed;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_2.PropertyCollection();\n        properties.setProperty(Exports_js_3.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[errorCode]);\n        if (!!this.privTranslationRecognizer.canceled) {\n            const cancelEvent = new Exports_js_2.TranslationRecognitionCanceledEventArgs(sessionId, cancellationReason, error, errorCode, undefined);\n            try {\n                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, cancelEvent);\n                /* eslint-disable no-empty */\n            }\n            catch { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new Exports_js_2.TranslationRecognitionResult(undefined, // Translations\n            requestId, Exports_js_2.ResultReason.Canceled, undefined, // Text\n            undefined, // Druation\n            undefined, // Offset\n            undefined, // Language\n            undefined, // LanguageDetectionConfidence\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                /* eslint-disable no-empty */\n                this.privSuccessCallback = undefined;\n            }\n            catch { }\n        }\n    }\n    handleRecognizingCallback(result, offset, sessionId) {\n        try {\n            const ev = new Exports_js_2.TranslationRecognitionEventArgs(Exports_js_2.TranslationRecognitionResult.fromSpeechRecognitionResult(result), offset, sessionId);\n            this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, ev);\n            /* eslint-disable no-empty */\n        }\n        catch (error) {\n            // Not going to let errors in the event handler\n            // trip things up.\n        }\n    }\n    handleRecognizedCallback(result, offset, sessionId) {\n        try {\n            const ev = new Exports_js_2.TranslationRecognitionEventArgs(Exports_js_2.TranslationRecognitionResult.fromSpeechRecognitionResult(result), offset, sessionId);\n            this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\n        }\n        catch (error) {\n            // Not going to let errors in the event handler\n            // trip things up.\n        }\n    }\n    fireEventForResult(serviceResult, properties) {\n        let translations;\n        if (undefined !== serviceResult.Translation.Translations) {\n            translations = new Exports_js_2.Translations();\n            for (const translation of serviceResult.Translation.Translations) {\n                translations.set(translation.Language, translation.Text || translation.DisplayText);\n            }\n        }\n        let resultReason;\n        let confidence;\n        if (serviceResult instanceof Exports_js_3.TranslationPhrase) {\n            if (!!serviceResult.Translation && serviceResult.Translation.TranslationStatus === Exports_js_1.TranslationStatus.Success) {\n                resultReason = Exports_js_2.ResultReason.TranslatedSpeech;\n            }\n            else {\n                resultReason = Exports_js_2.ResultReason.RecognizedSpeech;\n            }\n            confidence = serviceResult.Confidence;\n        }\n        else {\n            resultReason = Exports_js_2.ResultReason.TranslatingSpeech;\n        }\n        const language = serviceResult.Language;\n        const result = new Exports_js_2.TranslationRecognitionResult(translations, this.privRequestSession.requestId, resultReason, serviceResult.Text, serviceResult.Duration, serviceResult.Offset, language, confidence, serviceResult.Translation.FailureReason, serviceResult.asJson(), properties);\n        const ev = new Exports_js_2.TranslationRecognitionEventArgs(result, serviceResult.Offset, this.privRequestSession.sessionId);\n        return ev;\n    }\n    sendSynthesisAudio(audio, sessionId) {\n        const reason = (undefined === audio) ? Exports_js_2.ResultReason.SynthesizingAudioCompleted : Exports_js_2.ResultReason.SynthesizingAudio;\n        const result = new Exports_js_2.TranslationSynthesisResult(reason, audio);\n        const retEvent = new Exports_js_2.TranslationSynthesisEventArgs(result, sessionId);\n        if (!!this.privTranslationRecognizer.synthesizing) {\n            try {\n                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\n                /* eslint-disable no-empty */\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n}\nexports.TranslationServiceRecognizer = TranslationServiceRecognizer;\n\n//# sourceMappingURL=TranslationServiceRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationServiceRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationStatus.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationStatus.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranslationStatus = void 0;\n/**\n * Defines translation status.\n * @class TranslationStatus\n */\nvar TranslationStatus;\n(function (TranslationStatus) {\n    /**\n     * @member TranslationStatus.Success\n     */\n    TranslationStatus[TranslationStatus[\"Success\"] = 0] = \"Success\";\n    /**\n     * @member TranslationStatus.Error\n     */\n    TranslationStatus[TranslationStatus[\"Error\"] = 1] = \"Error\";\n})(TranslationStatus = exports.TranslationStatus || (exports.TranslationStatus = {}));\n\n//# sourceMappingURL=TranslationStatus.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNsYXRpb25TdGF0dXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvREFBb0QseUJBQXlCLEtBQUs7O0FBRW5GIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvVHJhbnNsYXRpb25TdGF0dXMuanM/NTliZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmFuc2xhdGlvblN0YXR1cyA9IHZvaWQgMDtcbi8qKlxuICogRGVmaW5lcyB0cmFuc2xhdGlvbiBzdGF0dXMuXG4gKiBAY2xhc3MgVHJhbnNsYXRpb25TdGF0dXNcbiAqL1xudmFyIFRyYW5zbGF0aW9uU3RhdHVzO1xuKGZ1bmN0aW9uIChUcmFuc2xhdGlvblN0YXR1cykge1xuICAgIC8qKlxuICAgICAqIEBtZW1iZXIgVHJhbnNsYXRpb25TdGF0dXMuU3VjY2Vzc1xuICAgICAqL1xuICAgIFRyYW5zbGF0aW9uU3RhdHVzW1RyYW5zbGF0aW9uU3RhdHVzW1wiU3VjY2Vzc1wiXSA9IDBdID0gXCJTdWNjZXNzXCI7XG4gICAgLyoqXG4gICAgICogQG1lbWJlciBUcmFuc2xhdGlvblN0YXR1cy5FcnJvclxuICAgICAqL1xuICAgIFRyYW5zbGF0aW9uU3RhdHVzW1RyYW5zbGF0aW9uU3RhdHVzW1wiRXJyb3JcIl0gPSAxXSA9IFwiRXJyb3JcIjtcbn0pKFRyYW5zbGF0aW9uU3RhdHVzID0gZXhwb3J0cy5UcmFuc2xhdGlvblN0YXR1cyB8fCAoZXhwb3J0cy5UcmFuc2xhdGlvblN0YXR1cyA9IHt9KSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyYW5zbGF0aW9uU3RhdHVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationStatus.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/VoiceServiceRecognizer.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/VoiceServiceRecognizer.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoiceServiceRecognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../sdk/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_4 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst SpeechConnectionMessage_Internal_js_1 = __webpack_require__(/*! ./SpeechConnectionMessage.Internal.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechConnectionMessage.Internal.js\");\n// eslint-disable-next-line max-classes-per-file\nclass VoiceServiceRecognizer extends Exports_js_4.ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.privDeferralMap = new Exports_js_2.DeferralMap();\n        this.privSpeakerAudioSource = audioSource;\n        this.sendPrePayloadJSONOverride = () => this.noOp();\n    }\n    set SpeakerAudioSource(audioSource) {\n        this.privSpeakerAudioSource = audioSource;\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        let processed = false;\n        const resultProps = new Exports_js_3.PropertyCollection();\n        if (connectionMessage.messageType === Exports_js_2.MessageType.Text) {\n            resultProps.setProperty(Exports_js_3.PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n        }\n        switch (connectionMessage.path.toLowerCase()) {\n            // Profile management response for create, fetch, delete, reset\n            case \"speaker.profiles\":\n                const response = JSON.parse(connectionMessage.textBody);\n                switch (response.operation.toLowerCase()) {\n                    case \"create\":\n                        this.handleCreateResponse(response, connectionMessage.requestId);\n                        break;\n                    case \"delete\":\n                    case \"reset\":\n                        this.handleResultResponse(response, connectionMessage.requestId);\n                        break;\n                    case \"fetch\":\n                        const enrollmentResponse = JSON.parse(connectionMessage.textBody);\n                        this.handleFetchResponse(enrollmentResponse, connectionMessage.requestId);\n                        break;\n                    default:\n                        break;\n                }\n                processed = true;\n                break;\n            // Activation and authorization phrase response\n            case \"speaker.phrases\":\n                const phraseResponse = JSON.parse(connectionMessage.textBody);\n                this.handlePhrasesResponse(phraseResponse, connectionMessage.requestId);\n                processed = true;\n                break;\n            // Enrollment response\n            case \"speaker.profile.enrollment\":\n                const enrollmentResponse = JSON.parse(connectionMessage.textBody);\n                const result = new Exports_js_3.VoiceProfileEnrollmentResult(this.enrollmentReasonFrom(!!enrollmentResponse.enrollment ? enrollmentResponse.enrollment.enrollmentStatus : enrollmentResponse.status.statusCode), !!enrollmentResponse.enrollment ? JSON.stringify(enrollmentResponse.enrollment) : undefined, enrollmentResponse.status.reason);\n                if (!!this.privDeferralMap.getId(connectionMessage.requestId)) {\n                    this.privDeferralMap.complete(connectionMessage.requestId, result);\n                }\n                this.privRequestSession.onSpeechEnded();\n                processed = true;\n                break;\n            default:\n                break;\n        }\n        const defferal = new Exports_js_2.Deferred();\n        defferal.resolve(processed);\n        return defferal.promise;\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new Exports_js_3.PropertyCollection();\n        // const enrollmentResponse: EnrollmentResponse = JSON.parse(connectionMessage.textBody) as EnrollmentResponse;\n        properties.setProperty(Exports_js_4.CancellationErrorCodePropertyName, Exports_js_3.CancellationErrorCode[errorCode]);\n        const result = new Exports_js_3.VoiceProfileEnrollmentResult(Exports_js_3.ResultReason.Canceled, error, error);\n        if (!!this.privDeferralMap.getId(requestId)) {\n            this.privDeferralMap.complete(requestId, result);\n        }\n    }\n    async createProfile(profileType, locale) {\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        this.voiceProfileType = profileType.toString();\n        const conPromise = this.connectImpl();\n        try {\n            const createProfileDeferral = new Exports_js_2.Deferred();\n            await conPromise;\n            await this.sendCreateProfile(createProfileDeferral, profileType, locale);\n            void this.receiveMessage();\n            return createProfileDeferral.promise;\n        }\n        catch (err) {\n            throw err;\n        }\n    }\n    async resetProfile(profile) {\n        this.voiceProfileType = profile.profileType.toString();\n        return this.sendCommonRequest(\"reset\", profile.profileType, profile);\n    }\n    async deleteProfile(profile) {\n        this.voiceProfileType = profile.profileType.toString();\n        return this.sendCommonRequest(\"delete\", profile.profileType, profile);\n    }\n    async retrieveEnrollmentResult(profile) {\n        this.voiceProfileType = profile.profileType.toString();\n        this.privExpectedProfileId = profile.profileId;\n        return this.sendCommonRequest(\"fetch\", profile.profileType, profile);\n    }\n    async getAllProfiles(profileType) {\n        this.voiceProfileType = profileType.toString();\n        return this.sendCommonRequest(\"fetch\", profileType);\n    }\n    async getActivationPhrases(profileType, lang) {\n        this.voiceProfileType = profileType.toString();\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        try {\n            const getPhrasesDeferral = new Exports_js_2.Deferred();\n            await conPromise;\n            await this.sendPhrasesRequest(getPhrasesDeferral, profileType, lang);\n            void this.receiveMessage();\n            return getPhrasesDeferral.promise;\n        }\n        catch (err) {\n            throw err;\n        }\n    }\n    async enrollProfile(profile) {\n        this.voiceProfileType = profile.profileType.toString();\n        const enrollmentDeferral = new Exports_js_2.Deferred();\n        this.privRequestSession.startNewRecognition();\n        this.privRequestSession.listenForServiceTelemetry(this.privSpeakerAudioSource.events);\n        this.privRecognizerConfig.parameters.setProperty(Exports_js_3.PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        const preAudioPromise = this.sendPreAudioMessages(profile, enrollmentDeferral);\n        const node = await this.privSpeakerAudioSource.attach(this.privRequestSession.audioNodeId);\n        const format = await this.privSpeakerAudioSource.format;\n        const deviceInfo = await this.privSpeakerAudioSource.deviceInfo;\n        const audioNode = new Exports_js_1.ReplayableAudioNode(node, format.avgBytesPerSec);\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n        try {\n            await conPromise;\n            await preAudioPromise;\n        }\n        catch (err) {\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.ConnectionFailure, err);\n        }\n        const sessionStartEventArgs = new Exports_js_3.SessionEventArgs(this.privRequestSession.sessionId);\n        if (!!this.privRecognizer.sessionStarted) {\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n        }\n        void this.receiveMessage();\n        const audioSendPromise = this.sendAudio(audioNode);\n        // /* eslint-disable no-empty */\n        audioSendPromise.then(() => { }, (error) => {\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, Exports_js_3.CancellationReason.Error, Exports_js_3.CancellationErrorCode.RuntimeError, error);\n        });\n        return enrollmentDeferral.promise;\n    }\n    async sendPreAudioMessages(profile, enrollmentDeferral) {\n        const connection = await this.fetchConnection();\n        this.privRequestSession.onSpeechContext();\n        this.privDeferralMap.add(this.privRequestSession.requestId, enrollmentDeferral);\n        await this.sendBaseRequest(connection, \"enroll\", this.scenarioFrom(profile.profileType), profile);\n    }\n    async sendPhrasesRequest(getPhrasesDeferral, profileType, locale) {\n        const connection = await this.fetchConnection();\n        this.privRequestSession.onSpeechContext();\n        this.privDeferralMap.add(this.privRequestSession.requestId, getPhrasesDeferral);\n        const scenario = this.scenarioFrom(profileType);\n        const profileCreateRequest = {\n            locale,\n            scenario,\n        };\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speaker.profile.phrases\", this.privRequestSession.requestId, \"application/json; charset=utf-8\", JSON.stringify(profileCreateRequest)));\n    }\n    async sendCreateProfile(createProfileDeferral, profileType, locale) {\n        const connection = await this.fetchConnection();\n        this.privRequestSession.onSpeechContext();\n        this.privDeferralMap.add(this.privRequestSession.requestId, createProfileDeferral);\n        const scenario = profileType === Exports_js_3.VoiceProfileType.TextIndependentIdentification ? \"TextIndependentIdentification\" :\n            profileType === Exports_js_3.VoiceProfileType.TextIndependentVerification ? \"TextIndependentVerification\" : \"TextDependentVerification\";\n        const profileCreateRequest = {\n            locale,\n            number: \"1\",\n            scenario,\n        };\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, \"speaker.profile.create\", this.privRequestSession.requestId, \"application/json; charset=utf-8\", JSON.stringify(profileCreateRequest)));\n    }\n    async sendCommonRequest(operation, profileType, profile = undefined) {\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n        const conPromise = this.connectImpl();\n        try {\n            const deferral = new Exports_js_2.Deferred();\n            this.privRequestSession.onSpeechContext();\n            await conPromise;\n            const connection = await this.fetchConnection();\n            this.privDeferralMap.add(this.privRequestSession.requestId, deferral);\n            await this.sendBaseRequest(connection, operation, this.scenarioFrom(profileType), profile);\n            void this.receiveMessage();\n            return deferral.promise;\n        }\n        catch (err) {\n            throw err;\n        }\n    }\n    async sendBaseRequest(connection, operation, scenario, profile) {\n        const profileRequest = {\n            scenario\n        };\n        if (!!profile) {\n            profileRequest.profileIds = [profile.profileId];\n        }\n        else {\n            profileRequest.maxPageSize = -1;\n        }\n        return connection.send(new SpeechConnectionMessage_Internal_js_1.SpeechConnectionMessage(Exports_js_2.MessageType.Text, `speaker.profile.${operation}`, this.privRequestSession.requestId, \"application/json; charset=utf-8\", JSON.stringify(profileRequest)));\n    }\n    extractSpeakerContext(model) {\n        return {\n            features: {\n                interimResult: \"enabled\",\n                progressiveDetection: \"disabled\",\n            },\n            profileIds: model.profileIds,\n            scenario: model.scenario,\n        };\n    }\n    handlePhrasesResponse(response, requestId) {\n        if (!!this.privDeferralMap.getId(requestId)) {\n            if (response.status.statusCode.toLowerCase() !== \"success\") {\n                const reason = Exports_js_3.ResultReason.Canceled;\n                const result = new Exports_js_3.VoiceProfilePhraseResult(reason, response.status.statusCode, response.passPhraseType, []);\n                this.privDeferralMap.complete(requestId, result);\n            }\n            else if (!!response.phrases && response.phrases.length > 0) {\n                const reason = Exports_js_3.ResultReason.EnrollingVoiceProfile;\n                const result = new Exports_js_3.VoiceProfilePhraseResult(reason, response.status.statusCode, response.passPhraseType, response.phrases);\n                this.privDeferralMap.complete(requestId, result);\n            }\n            else {\n                throw new Error(\"Voice Profile get activation phrases failed, no phrases received\");\n            }\n        }\n        else {\n            throw new Error(`Voice Profile get activation phrases request for requestID ${requestId} not found`);\n        }\n    }\n    handleCreateResponse(response, requestId) {\n        if (!!response.profiles && response.profiles.length > 0) {\n            if (!!this.privDeferralMap.getId(requestId)) {\n                const profileIds = response.profiles.map((profile) => profile.profileId);\n                this.privDeferralMap.complete(requestId, profileIds);\n            }\n            else {\n                throw new Error(`Voice Profile create request for requestID ${requestId} not found`);\n            }\n        }\n        else {\n            throw new Error(\"Voice Profile create failed, no profile id received\");\n        }\n    }\n    handleResultResponse(response, requestId) {\n        if (!!this.privDeferralMap.getId(requestId)) {\n            const successReason = response.operation.toLowerCase() === \"delete\" ? Exports_js_3.ResultReason.DeletedVoiceProfile : Exports_js_3.ResultReason.ResetVoiceProfile;\n            const reason = response.status.statusCode.toLowerCase() === \"success\" ? successReason : Exports_js_3.ResultReason.Canceled;\n            const result = new Exports_js_3.VoiceProfileResult(reason, `statusCode: ${response.status.statusCode}, errorDetails: ${response.status.reason}`);\n            this.privDeferralMap.complete(requestId, result);\n        }\n        else {\n            throw new Error(`Voice Profile create request for requestID ${requestId} not found`);\n        }\n    }\n    handleFetchResponse(enrollmentResponse, requestId) {\n        if (!!this.privDeferralMap.getId(requestId) && !!enrollmentResponse.profiles[0]) {\n            if (!!this.privExpectedProfileId && enrollmentResponse.profiles.length === 1 && enrollmentResponse.profiles[0].profileId === this.privExpectedProfileId) {\n                this.privExpectedProfileId = undefined;\n                const profileInfo = enrollmentResponse.profiles[0];\n                const result = new Exports_js_3.VoiceProfileEnrollmentResult(this.enrollmentReasonFrom(profileInfo.enrollmentStatus), JSON.stringify(profileInfo), enrollmentResponse.status.reason);\n                this.privDeferralMap.complete(requestId, result);\n            }\n            else if (enrollmentResponse.profiles.length > 0) {\n                const iProfiles = enrollmentResponse.profiles;\n                const profileResults = [];\n                for (const profile of iProfiles) {\n                    profileResults.push(new Exports_js_3.VoiceProfileEnrollmentResult(this.enrollmentReasonFrom(profile.enrollmentStatus), JSON.stringify(profile), enrollmentResponse.status.reason));\n                }\n                this.privDeferralMap.complete(requestId, profileResults);\n            }\n        }\n        else {\n            throw new Error(`Voice Profile fetch request for requestID ${requestId} not found`);\n        }\n    }\n    enrollmentReasonFrom(statusCode) {\n        switch (statusCode.toLowerCase()) {\n            case \"enrolled\":\n                return Exports_js_3.ResultReason.EnrolledVoiceProfile;\n            case \"invalidlocale\":\n            case \"invalidphrase\":\n            case \"invalidaudioformat\":\n            case \"invalidscenario\":\n            case \"invalidprofilecount\":\n            case \"invalidoperation\":\n            case \"audiotooshort\":\n            case \"audiotoolong\":\n            case \"toomanyenrollments\":\n            case \"storageconflict\":\n            case \"profilenotfound\":\n            case \"incompatibleprofiles\":\n            case \"incompleteenrollment\":\n                return Exports_js_3.ResultReason.Canceled;\n            default:\n                return Exports_js_3.ResultReason.EnrollingVoiceProfile;\n        }\n    }\n    scenarioFrom(profileType) {\n        return profileType === Exports_js_3.VoiceProfileType.TextIndependentIdentification ? \"TextIndependentIdentification\" :\n            profileType === Exports_js_3.VoiceProfileType.TextIndependentVerification ? \"TextIndependentVerification\" : \"TextDependentVerification\";\n    }\n}\nexports.VoiceServiceRecognizer = VoiceServiceRecognizer;\n\n//# sourceMappingURL=VoiceServiceRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/VoiceServiceRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/WebsocketMessageFormatter.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/WebsocketMessageFormatter.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WebsocketMessageFormatter = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst CRLF = \"\\r\\n\";\nclass WebsocketMessageFormatter {\n    toConnectionMessage(message) {\n        const deferral = new Exports_js_1.Deferred();\n        try {\n            if (message.messageType === Exports_js_1.MessageType.Text) {\n                const textMessage = message.textContent;\n                let headers = {};\n                let body = null;\n                if (textMessage) {\n                    const headerBodySplit = textMessage.split(\"\\r\\n\\r\\n\");\n                    if (headerBodySplit && headerBodySplit.length > 0) {\n                        headers = this.parseHeaders(headerBodySplit[0]);\n                        if (headerBodySplit.length > 1) {\n                            body = headerBodySplit[1];\n                        }\n                    }\n                }\n                deferral.resolve(new Exports_js_1.ConnectionMessage(message.messageType, body, headers, message.id));\n            }\n            else if (message.messageType === Exports_js_1.MessageType.Binary) {\n                const binaryMessage = message.binaryContent;\n                let headers = {};\n                let body = null;\n                if (!binaryMessage || binaryMessage.byteLength < 2) {\n                    throw new Error(\"Invalid binary message format. Header length missing.\");\n                }\n                const dataView = new DataView(binaryMessage);\n                const headerLength = dataView.getInt16(0);\n                if (binaryMessage.byteLength < headerLength + 2) {\n                    throw new Error(\"Invalid binary message format. Header content missing.\");\n                }\n                let headersString = \"\";\n                for (let i = 0; i < headerLength; i++) {\n                    headersString += String.fromCharCode((dataView).getInt8(i + 2));\n                }\n                headers = this.parseHeaders(headersString);\n                if (binaryMessage.byteLength > headerLength + 2) {\n                    body = binaryMessage.slice(2 + headerLength);\n                }\n                deferral.resolve(new Exports_js_1.ConnectionMessage(message.messageType, body, headers, message.id));\n            }\n        }\n        catch (e) {\n            deferral.reject(`Error formatting the message. Error: ${e}`);\n        }\n        return deferral.promise;\n    }\n    fromConnectionMessage(message) {\n        const deferral = new Exports_js_1.Deferred();\n        try {\n            if (message.messageType === Exports_js_1.MessageType.Text) {\n                const payload = `${this.makeHeaders(message)}${CRLF}${message.textBody ? message.textBody : \"\"}`;\n                deferral.resolve(new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Text, payload, message.id));\n            }\n            else if (message.messageType === Exports_js_1.MessageType.Binary) {\n                const headersString = this.makeHeaders(message);\n                const content = message.binaryBody;\n                const headerBuffer = this.stringToArrayBuffer(headersString);\n                const headerInt8Array = new Int8Array(headerBuffer);\n                const headerLength = headerInt8Array.byteLength;\n                const payloadInt8Array = new Int8Array(2 + headerLength + (content ? content.byteLength : 0));\n                payloadInt8Array[0] = ((headerLength >> 8) & 0xff);\n                payloadInt8Array[1] = headerLength & 0xff;\n                payloadInt8Array.set(headerInt8Array, 2);\n                if (content) {\n                    const bodyInt8Array = new Int8Array(content);\n                    payloadInt8Array.set(bodyInt8Array, 2 + headerLength);\n                }\n                const payload = payloadInt8Array.buffer;\n                deferral.resolve(new Exports_js_1.RawWebsocketMessage(Exports_js_1.MessageType.Binary, payload, message.id));\n            }\n        }\n        catch (e) {\n            deferral.reject(`Error formatting the message. ${e}`);\n        }\n        return deferral.promise;\n    }\n    makeHeaders(message) {\n        let headersString = \"\";\n        if (message.headers) {\n            for (const header in message.headers) {\n                if (header) {\n                    headersString += `${header}: ${message.headers[header]}${CRLF}`;\n                }\n            }\n        }\n        return headersString;\n    }\n    parseHeaders(headersString) {\n        const headers = {};\n        if (headersString) {\n            const headerMatches = headersString.match(/[^\\r\\n]+/g);\n            if (headers) {\n                for (const header of headerMatches) {\n                    if (header) {\n                        const separatorIndex = header.indexOf(\":\");\n                        const headerName = separatorIndex > 0 ? header.substr(0, separatorIndex).trim().toLowerCase() : header;\n                        const headerValue = separatorIndex > 0 && header.length > (separatorIndex + 1) ?\n                            header.substr(separatorIndex + 1).trim() :\n                            \"\";\n                        headers[headerName] = headerValue;\n                    }\n                }\n            }\n        }\n        return headers;\n    }\n    stringToArrayBuffer(str) {\n        const buffer = new ArrayBuffer(str.length);\n        const view = new DataView(buffer);\n        for (let i = 0; i < str.length; i++) {\n            view.setUint8(i, str.charCodeAt(i));\n        }\n        return buffer;\n    }\n}\nexports.WebsocketMessageFormatter = WebsocketMessageFormatter;\n\n//# sourceMappingURL=WebsocketMessageFormatter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi5zcGVlY2gvV2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDLHFCQUFxQixtQkFBTyxDQUFDLDJIQUFzQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msa0JBQWtCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FLEVBQUU7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsMEJBQTBCLEVBQUUsS0FBSyxFQUFFLHlDQUF5QztBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsRUFBRTtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLE9BQU8sSUFBSSx3QkFBd0IsRUFBRSxLQUFLO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnQkFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQzs7QUFFakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uLnNwZWVjaC9XZWJzb2NrZXRNZXNzYWdlRm9ybWF0dGVyLmpzPzA0NzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlciA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi9jb21tb24vRXhwb3J0cy5qc1wiKTtcbmNvbnN0IENSTEYgPSBcIlxcclxcblwiO1xuY2xhc3MgV2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlciB7XG4gICAgdG9Db25uZWN0aW9uTWVzc2FnZShtZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IGRlZmVycmFsID0gbmV3IEV4cG9ydHNfanNfMS5EZWZlcnJlZCgpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKG1lc3NhZ2UubWVzc2FnZVR5cGUgPT09IEV4cG9ydHNfanNfMS5NZXNzYWdlVHlwZS5UZXh0KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGV4dE1lc3NhZ2UgPSBtZXNzYWdlLnRleHRDb250ZW50O1xuICAgICAgICAgICAgICAgIGxldCBoZWFkZXJzID0ge307XG4gICAgICAgICAgICAgICAgbGV0IGJvZHkgPSBudWxsO1xuICAgICAgICAgICAgICAgIGlmICh0ZXh0TWVzc2FnZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBoZWFkZXJCb2R5U3BsaXQgPSB0ZXh0TWVzc2FnZS5zcGxpdChcIlxcclxcblxcclxcblwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGhlYWRlckJvZHlTcGxpdCAmJiBoZWFkZXJCb2R5U3BsaXQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVycyA9IHRoaXMucGFyc2VIZWFkZXJzKGhlYWRlckJvZHlTcGxpdFswXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGVhZGVyQm9keVNwbGl0Lmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib2R5ID0gaGVhZGVyQm9keVNwbGl0WzFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRlZmVycmFsLnJlc29sdmUobmV3IEV4cG9ydHNfanNfMS5Db25uZWN0aW9uTWVzc2FnZShtZXNzYWdlLm1lc3NhZ2VUeXBlLCBib2R5LCBoZWFkZXJzLCBtZXNzYWdlLmlkKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChtZXNzYWdlLm1lc3NhZ2VUeXBlID09PSBFeHBvcnRzX2pzXzEuTWVzc2FnZVR5cGUuQmluYXJ5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYmluYXJ5TWVzc2FnZSA9IG1lc3NhZ2UuYmluYXJ5Q29udGVudDtcbiAgICAgICAgICAgICAgICBsZXQgaGVhZGVycyA9IHt9O1xuICAgICAgICAgICAgICAgIGxldCBib2R5ID0gbnVsbDtcbiAgICAgICAgICAgICAgICBpZiAoIWJpbmFyeU1lc3NhZ2UgfHwgYmluYXJ5TWVzc2FnZS5ieXRlTGVuZ3RoIDwgMikge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGJpbmFyeSBtZXNzYWdlIGZvcm1hdC4gSGVhZGVyIGxlbmd0aCBtaXNzaW5nLlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YVZpZXcgPSBuZXcgRGF0YVZpZXcoYmluYXJ5TWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgaGVhZGVyTGVuZ3RoID0gZGF0YVZpZXcuZ2V0SW50MTYoMCk7XG4gICAgICAgICAgICAgICAgaWYgKGJpbmFyeU1lc3NhZ2UuYnl0ZUxlbmd0aCA8IGhlYWRlckxlbmd0aCArIDIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBiaW5hcnkgbWVzc2FnZSBmb3JtYXQuIEhlYWRlciBjb250ZW50IG1pc3NpbmcuXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgaGVhZGVyc1N0cmluZyA9IFwiXCI7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBoZWFkZXJMZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzU3RyaW5nICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoKGRhdGFWaWV3KS5nZXRJbnQ4KGkgKyAyKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGhlYWRlcnMgPSB0aGlzLnBhcnNlSGVhZGVycyhoZWFkZXJzU3RyaW5nKTtcbiAgICAgICAgICAgICAgICBpZiAoYmluYXJ5TWVzc2FnZS5ieXRlTGVuZ3RoID4gaGVhZGVyTGVuZ3RoICsgMikge1xuICAgICAgICAgICAgICAgICAgICBib2R5ID0gYmluYXJ5TWVzc2FnZS5zbGljZSgyICsgaGVhZGVyTGVuZ3RoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGVmZXJyYWwucmVzb2x2ZShuZXcgRXhwb3J0c19qc18xLkNvbm5lY3Rpb25NZXNzYWdlKG1lc3NhZ2UubWVzc2FnZVR5cGUsIGJvZHksIGhlYWRlcnMsIG1lc3NhZ2UuaWQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgZGVmZXJyYWwucmVqZWN0KGBFcnJvciBmb3JtYXR0aW5nIHRoZSBtZXNzYWdlLiBFcnJvcjogJHtlfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZlcnJhbC5wcm9taXNlO1xuICAgIH1cbiAgICBmcm9tQ29ubmVjdGlvbk1lc3NhZ2UobWVzc2FnZSkge1xuICAgICAgICBjb25zdCBkZWZlcnJhbCA9IG5ldyBFeHBvcnRzX2pzXzEuRGVmZXJyZWQoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChtZXNzYWdlLm1lc3NhZ2VUeXBlID09PSBFeHBvcnRzX2pzXzEuTWVzc2FnZVR5cGUuVGV4dCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBheWxvYWQgPSBgJHt0aGlzLm1ha2VIZWFkZXJzKG1lc3NhZ2UpfSR7Q1JMRn0ke21lc3NhZ2UudGV4dEJvZHkgPyBtZXNzYWdlLnRleHRCb2R5IDogXCJcIn1gO1xuICAgICAgICAgICAgICAgIGRlZmVycmFsLnJlc29sdmUobmV3IEV4cG9ydHNfanNfMS5SYXdXZWJzb2NrZXRNZXNzYWdlKEV4cG9ydHNfanNfMS5NZXNzYWdlVHlwZS5UZXh0LCBwYXlsb2FkLCBtZXNzYWdlLmlkKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChtZXNzYWdlLm1lc3NhZ2VUeXBlID09PSBFeHBvcnRzX2pzXzEuTWVzc2FnZVR5cGUuQmluYXJ5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaGVhZGVyc1N0cmluZyA9IHRoaXMubWFrZUhlYWRlcnMobWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgY29udGVudCA9IG1lc3NhZ2UuYmluYXJ5Qm9keTtcbiAgICAgICAgICAgICAgICBjb25zdCBoZWFkZXJCdWZmZXIgPSB0aGlzLnN0cmluZ1RvQXJyYXlCdWZmZXIoaGVhZGVyc1N0cmluZyk7XG4gICAgICAgICAgICAgICAgY29uc3QgaGVhZGVySW50OEFycmF5ID0gbmV3IEludDhBcnJheShoZWFkZXJCdWZmZXIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlckxlbmd0aCA9IGhlYWRlckludDhBcnJheS5ieXRlTGVuZ3RoO1xuICAgICAgICAgICAgICAgIGNvbnN0IHBheWxvYWRJbnQ4QXJyYXkgPSBuZXcgSW50OEFycmF5KDIgKyBoZWFkZXJMZW5ndGggKyAoY29udGVudCA/IGNvbnRlbnQuYnl0ZUxlbmd0aCA6IDApKTtcbiAgICAgICAgICAgICAgICBwYXlsb2FkSW50OEFycmF5WzBdID0gKChoZWFkZXJMZW5ndGggPj4gOCkgJiAweGZmKTtcbiAgICAgICAgICAgICAgICBwYXlsb2FkSW50OEFycmF5WzFdID0gaGVhZGVyTGVuZ3RoICYgMHhmZjtcbiAgICAgICAgICAgICAgICBwYXlsb2FkSW50OEFycmF5LnNldChoZWFkZXJJbnQ4QXJyYXksIDIpO1xuICAgICAgICAgICAgICAgIGlmIChjb250ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGJvZHlJbnQ4QXJyYXkgPSBuZXcgSW50OEFycmF5KGNvbnRlbnQpO1xuICAgICAgICAgICAgICAgICAgICBwYXlsb2FkSW50OEFycmF5LnNldChib2R5SW50OEFycmF5LCAyICsgaGVhZGVyTGVuZ3RoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgcGF5bG9hZCA9IHBheWxvYWRJbnQ4QXJyYXkuYnVmZmVyO1xuICAgICAgICAgICAgICAgIGRlZmVycmFsLnJlc29sdmUobmV3IEV4cG9ydHNfanNfMS5SYXdXZWJzb2NrZXRNZXNzYWdlKEV4cG9ydHNfanNfMS5NZXNzYWdlVHlwZS5CaW5hcnksIHBheWxvYWQsIG1lc3NhZ2UuaWQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgZGVmZXJyYWwucmVqZWN0KGBFcnJvciBmb3JtYXR0aW5nIHRoZSBtZXNzYWdlLiAke2V9YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRlZmVycmFsLnByb21pc2U7XG4gICAgfVxuICAgIG1ha2VIZWFkZXJzKG1lc3NhZ2UpIHtcbiAgICAgICAgbGV0IGhlYWRlcnNTdHJpbmcgPSBcIlwiO1xuICAgICAgICBpZiAobWVzc2FnZS5oZWFkZXJzKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGhlYWRlciBpbiBtZXNzYWdlLmhlYWRlcnMpIHtcbiAgICAgICAgICAgICAgICBpZiAoaGVhZGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnNTdHJpbmcgKz0gYCR7aGVhZGVyfTogJHttZXNzYWdlLmhlYWRlcnNbaGVhZGVyXX0ke0NSTEZ9YDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhlYWRlcnNTdHJpbmc7XG4gICAgfVxuICAgIHBhcnNlSGVhZGVycyhoZWFkZXJzU3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7fTtcbiAgICAgICAgaWYgKGhlYWRlcnNTdHJpbmcpIHtcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlck1hdGNoZXMgPSBoZWFkZXJzU3RyaW5nLm1hdGNoKC9bXlxcclxcbl0rL2cpO1xuICAgICAgICAgICAgaWYgKGhlYWRlcnMpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGhlYWRlciBvZiBoZWFkZXJNYXRjaGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChoZWFkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlcGFyYXRvckluZGV4ID0gaGVhZGVyLmluZGV4T2YoXCI6XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaGVhZGVyTmFtZSA9IHNlcGFyYXRvckluZGV4ID4gMCA/IGhlYWRlci5zdWJzdHIoMCwgc2VwYXJhdG9ySW5kZXgpLnRyaW0oKS50b0xvd2VyQ2FzZSgpIDogaGVhZGVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaGVhZGVyVmFsdWUgPSBzZXBhcmF0b3JJbmRleCA+IDAgJiYgaGVhZGVyLmxlbmd0aCA+IChzZXBhcmF0b3JJbmRleCArIDEpID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXIuc3Vic3RyKHNlcGFyYXRvckluZGV4ICsgMSkudHJpbSgpIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1toZWFkZXJOYW1lXSA9IGhlYWRlclZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBoZWFkZXJzO1xuICAgIH1cbiAgICBzdHJpbmdUb0FycmF5QnVmZmVyKHN0cikge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoc3RyLmxlbmd0aCk7XG4gICAgICAgIGNvbnN0IHZpZXcgPSBuZXcgRGF0YVZpZXcoYnVmZmVyKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZpZXcuc2V0VWludDgoaSwgc3RyLmNoYXJDb2RlQXQoaSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBidWZmZXI7XG4gICAgfVxufVxuZXhwb3J0cy5XZWJzb2NrZXRNZXNzYWdlRm9ybWF0dGVyID0gV2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlcjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9V2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/WebsocketMessageFormatter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/AudioSourceEvents.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/AudioSourceEvents.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AudioStreamNodeErrorEvent = exports.AudioStreamNodeDetachedEvent = exports.AudioStreamNodeAttachedEvent = exports.AudioStreamNodeAttachingEvent = exports.AudioStreamNodeEvent = exports.AudioSourceErrorEvent = exports.AudioSourceOffEvent = exports.AudioSourceReadyEvent = exports.AudioSourceInitializingEvent = exports.AudioSourceEvent = void 0;\n/* eslint-disable max-classes-per-file */\nconst PlatformEvent_js_1 = __webpack_require__(/*! ./PlatformEvent.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/PlatformEvent.js\");\nclass AudioSourceEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, audioSourceId, eventType = PlatformEvent_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privAudioSourceId = audioSourceId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n}\nexports.AudioSourceEvent = AudioSourceEvent;\nclass AudioSourceInitializingEvent extends AudioSourceEvent {\n    constructor(audioSourceId) {\n        super(\"AudioSourceInitializingEvent\", audioSourceId);\n    }\n}\nexports.AudioSourceInitializingEvent = AudioSourceInitializingEvent;\nclass AudioSourceReadyEvent extends AudioSourceEvent {\n    constructor(audioSourceId) {\n        super(\"AudioSourceReadyEvent\", audioSourceId);\n    }\n}\nexports.AudioSourceReadyEvent = AudioSourceReadyEvent;\nclass AudioSourceOffEvent extends AudioSourceEvent {\n    constructor(audioSourceId) {\n        super(\"AudioSourceOffEvent\", audioSourceId);\n    }\n}\nexports.AudioSourceOffEvent = AudioSourceOffEvent;\nclass AudioSourceErrorEvent extends AudioSourceEvent {\n    constructor(audioSourceId, error) {\n        super(\"AudioSourceErrorEvent\", audioSourceId, PlatformEvent_js_1.EventType.Error);\n        this.privError = error;\n    }\n    get error() {\n        return this.privError;\n    }\n}\nexports.AudioSourceErrorEvent = AudioSourceErrorEvent;\nclass AudioStreamNodeEvent extends AudioSourceEvent {\n    constructor(eventName, audioSourceId, audioNodeId) {\n        super(eventName, audioSourceId);\n        this.privAudioNodeId = audioNodeId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n}\nexports.AudioStreamNodeEvent = AudioStreamNodeEvent;\nclass AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId) {\n        super(\"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId);\n    }\n}\nexports.AudioStreamNodeAttachingEvent = AudioStreamNodeAttachingEvent;\nclass AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId) {\n        super(\"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId);\n    }\n}\nexports.AudioStreamNodeAttachedEvent = AudioStreamNodeAttachedEvent;\nclass AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId) {\n        super(\"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId);\n    }\n}\nexports.AudioStreamNodeDetachedEvent = AudioStreamNodeDetachedEvent;\nclass AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId, error) {\n        super(\"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId);\n        this.privError = error;\n    }\n    get error() {\n        return this.privError;\n    }\n}\nexports.AudioStreamNodeErrorEvent = AudioStreamNodeErrorEvent;\n\n//# sourceMappingURL=AudioSourceEvents.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9BdWRpb1NvdXJjZUV2ZW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDLEdBQUcsb0NBQW9DLEdBQUcsb0NBQW9DLEdBQUcscUNBQXFDLEdBQUcsNEJBQTRCLEdBQUcsNkJBQTZCLEdBQUcsMkJBQTJCLEdBQUcsNkJBQTZCLEdBQUcsb0NBQW9DLEdBQUcsd0JBQXdCO0FBQ3RWO0FBQ0EsMkJBQTJCLG1CQUFPLENBQUMsK0hBQW9CO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQzs7QUFFakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uL0F1ZGlvU291cmNlRXZlbnRzLmpzPzk4NDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXVkaW9TdHJlYW1Ob2RlRXJyb3JFdmVudCA9IGV4cG9ydHMuQXVkaW9TdHJlYW1Ob2RlRGV0YWNoZWRFdmVudCA9IGV4cG9ydHMuQXVkaW9TdHJlYW1Ob2RlQXR0YWNoZWRFdmVudCA9IGV4cG9ydHMuQXVkaW9TdHJlYW1Ob2RlQXR0YWNoaW5nRXZlbnQgPSBleHBvcnRzLkF1ZGlvU3RyZWFtTm9kZUV2ZW50ID0gZXhwb3J0cy5BdWRpb1NvdXJjZUVycm9yRXZlbnQgPSBleHBvcnRzLkF1ZGlvU291cmNlT2ZmRXZlbnQgPSBleHBvcnRzLkF1ZGlvU291cmNlUmVhZHlFdmVudCA9IGV4cG9ydHMuQXVkaW9Tb3VyY2VJbml0aWFsaXppbmdFdmVudCA9IGV4cG9ydHMuQXVkaW9Tb3VyY2VFdmVudCA9IHZvaWQgMDtcbi8qIGVzbGludC1kaXNhYmxlIG1heC1jbGFzc2VzLXBlci1maWxlICovXG5jb25zdCBQbGF0Zm9ybUV2ZW50X2pzXzEgPSByZXF1aXJlKFwiLi9QbGF0Zm9ybUV2ZW50LmpzXCIpO1xuY2xhc3MgQXVkaW9Tb3VyY2VFdmVudCBleHRlbmRzIFBsYXRmb3JtRXZlbnRfanNfMS5QbGF0Zm9ybUV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihldmVudE5hbWUsIGF1ZGlvU291cmNlSWQsIGV2ZW50VHlwZSA9IFBsYXRmb3JtRXZlbnRfanNfMS5FdmVudFR5cGUuSW5mbykge1xuICAgICAgICBzdXBlcihldmVudE5hbWUsIGV2ZW50VHlwZSk7XG4gICAgICAgIHRoaXMucHJpdkF1ZGlvU291cmNlSWQgPSBhdWRpb1NvdXJjZUlkO1xuICAgIH1cbiAgICBnZXQgYXVkaW9Tb3VyY2VJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkF1ZGlvU291cmNlSWQ7XG4gICAgfVxufVxuZXhwb3J0cy5BdWRpb1NvdXJjZUV2ZW50ID0gQXVkaW9Tb3VyY2VFdmVudDtcbmNsYXNzIEF1ZGlvU291cmNlSW5pdGlhbGl6aW5nRXZlbnQgZXh0ZW5kcyBBdWRpb1NvdXJjZUV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihhdWRpb1NvdXJjZUlkKSB7XG4gICAgICAgIHN1cGVyKFwiQXVkaW9Tb3VyY2VJbml0aWFsaXppbmdFdmVudFwiLCBhdWRpb1NvdXJjZUlkKTtcbiAgICB9XG59XG5leHBvcnRzLkF1ZGlvU291cmNlSW5pdGlhbGl6aW5nRXZlbnQgPSBBdWRpb1NvdXJjZUluaXRpYWxpemluZ0V2ZW50O1xuY2xhc3MgQXVkaW9Tb3VyY2VSZWFkeUV2ZW50IGV4dGVuZHMgQXVkaW9Tb3VyY2VFdmVudCB7XG4gICAgY29uc3RydWN0b3IoYXVkaW9Tb3VyY2VJZCkge1xuICAgICAgICBzdXBlcihcIkF1ZGlvU291cmNlUmVhZHlFdmVudFwiLCBhdWRpb1NvdXJjZUlkKTtcbiAgICB9XG59XG5leHBvcnRzLkF1ZGlvU291cmNlUmVhZHlFdmVudCA9IEF1ZGlvU291cmNlUmVhZHlFdmVudDtcbmNsYXNzIEF1ZGlvU291cmNlT2ZmRXZlbnQgZXh0ZW5kcyBBdWRpb1NvdXJjZUV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihhdWRpb1NvdXJjZUlkKSB7XG4gICAgICAgIHN1cGVyKFwiQXVkaW9Tb3VyY2VPZmZFdmVudFwiLCBhdWRpb1NvdXJjZUlkKTtcbiAgICB9XG59XG5leHBvcnRzLkF1ZGlvU291cmNlT2ZmRXZlbnQgPSBBdWRpb1NvdXJjZU9mZkV2ZW50O1xuY2xhc3MgQXVkaW9Tb3VyY2VFcnJvckV2ZW50IGV4dGVuZHMgQXVkaW9Tb3VyY2VFdmVudCB7XG4gICAgY29uc3RydWN0b3IoYXVkaW9Tb3VyY2VJZCwgZXJyb3IpIHtcbiAgICAgICAgc3VwZXIoXCJBdWRpb1NvdXJjZUVycm9yRXZlbnRcIiwgYXVkaW9Tb3VyY2VJZCwgUGxhdGZvcm1FdmVudF9qc18xLkV2ZW50VHlwZS5FcnJvcik7XG4gICAgICAgIHRoaXMucHJpdkVycm9yID0gZXJyb3I7XG4gICAgfVxuICAgIGdldCBlcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkVycm9yO1xuICAgIH1cbn1cbmV4cG9ydHMuQXVkaW9Tb3VyY2VFcnJvckV2ZW50ID0gQXVkaW9Tb3VyY2VFcnJvckV2ZW50O1xuY2xhc3MgQXVkaW9TdHJlYW1Ob2RlRXZlbnQgZXh0ZW5kcyBBdWRpb1NvdXJjZUV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihldmVudE5hbWUsIGF1ZGlvU291cmNlSWQsIGF1ZGlvTm9kZUlkKSB7XG4gICAgICAgIHN1cGVyKGV2ZW50TmFtZSwgYXVkaW9Tb3VyY2VJZCk7XG4gICAgICAgIHRoaXMucHJpdkF1ZGlvTm9kZUlkID0gYXVkaW9Ob2RlSWQ7XG4gICAgfVxuICAgIGdldCBhdWRpb05vZGVJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkF1ZGlvTm9kZUlkO1xuICAgIH1cbn1cbmV4cG9ydHMuQXVkaW9TdHJlYW1Ob2RlRXZlbnQgPSBBdWRpb1N0cmVhbU5vZGVFdmVudDtcbmNsYXNzIEF1ZGlvU3RyZWFtTm9kZUF0dGFjaGluZ0V2ZW50IGV4dGVuZHMgQXVkaW9TdHJlYW1Ob2RlRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKGF1ZGlvU291cmNlSWQsIGF1ZGlvTm9kZUlkKSB7XG4gICAgICAgIHN1cGVyKFwiQXVkaW9TdHJlYW1Ob2RlQXR0YWNoaW5nRXZlbnRcIiwgYXVkaW9Tb3VyY2VJZCwgYXVkaW9Ob2RlSWQpO1xuICAgIH1cbn1cbmV4cG9ydHMuQXVkaW9TdHJlYW1Ob2RlQXR0YWNoaW5nRXZlbnQgPSBBdWRpb1N0cmVhbU5vZGVBdHRhY2hpbmdFdmVudDtcbmNsYXNzIEF1ZGlvU3RyZWFtTm9kZUF0dGFjaGVkRXZlbnQgZXh0ZW5kcyBBdWRpb1N0cmVhbU5vZGVFdmVudCB7XG4gICAgY29uc3RydWN0b3IoYXVkaW9Tb3VyY2VJZCwgYXVkaW9Ob2RlSWQpIHtcbiAgICAgICAgc3VwZXIoXCJBdWRpb1N0cmVhbU5vZGVBdHRhY2hlZEV2ZW50XCIsIGF1ZGlvU291cmNlSWQsIGF1ZGlvTm9kZUlkKTtcbiAgICB9XG59XG5leHBvcnRzLkF1ZGlvU3RyZWFtTm9kZUF0dGFjaGVkRXZlbnQgPSBBdWRpb1N0cmVhbU5vZGVBdHRhY2hlZEV2ZW50O1xuY2xhc3MgQXVkaW9TdHJlYW1Ob2RlRGV0YWNoZWRFdmVudCBleHRlbmRzIEF1ZGlvU3RyZWFtTm9kZUV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihhdWRpb1NvdXJjZUlkLCBhdWRpb05vZGVJZCkge1xuICAgICAgICBzdXBlcihcIkF1ZGlvU3RyZWFtTm9kZURldGFjaGVkRXZlbnRcIiwgYXVkaW9Tb3VyY2VJZCwgYXVkaW9Ob2RlSWQpO1xuICAgIH1cbn1cbmV4cG9ydHMuQXVkaW9TdHJlYW1Ob2RlRGV0YWNoZWRFdmVudCA9IEF1ZGlvU3RyZWFtTm9kZURldGFjaGVkRXZlbnQ7XG5jbGFzcyBBdWRpb1N0cmVhbU5vZGVFcnJvckV2ZW50IGV4dGVuZHMgQXVkaW9TdHJlYW1Ob2RlRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKGF1ZGlvU291cmNlSWQsIGF1ZGlvTm9kZUlkLCBlcnJvcikge1xuICAgICAgICBzdXBlcihcIkF1ZGlvU3RyZWFtTm9kZUVycm9yRXZlbnRcIiwgYXVkaW9Tb3VyY2VJZCwgYXVkaW9Ob2RlSWQpO1xuICAgICAgICB0aGlzLnByaXZFcnJvciA9IGVycm9yO1xuICAgIH1cbiAgICBnZXQgZXJyb3IoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZFcnJvcjtcbiAgICB9XG59XG5leHBvcnRzLkF1ZGlvU3RyZWFtTm9kZUVycm9yRXZlbnQgPSBBdWRpb1N0cmVhbU5vZGVFcnJvckV2ZW50O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdWRpb1NvdXJjZUV2ZW50cy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/AudioSourceEvents.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/BackgroundError.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/BackgroundError.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BackgroundEvent = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nclass BackgroundEvent extends Exports_js_1.PlatformEvent {\n    constructor(error) {\n        super(\"BackgroundEvent\", Exports_js_1.EventType.Error);\n        this.privError = error;\n    }\n    get error() {\n        return this.privError;\n    }\n}\nexports.BackgroundEvent = BackgroundEvent;\n\n//# sourceMappingURL=BackgroundError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9CYWNrZ3JvdW5kRXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QixxQkFBcUIsbUJBQU8sQ0FBQyxtSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7O0FBRXZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9CYWNrZ3JvdW5kRXJyb3IuanM/MzMyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYWNrZ3JvdW5kRXZlbnQgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuY2xhc3MgQmFja2dyb3VuZEV2ZW50IGV4dGVuZHMgRXhwb3J0c19qc18xLlBsYXRmb3JtRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKGVycm9yKSB7XG4gICAgICAgIHN1cGVyKFwiQmFja2dyb3VuZEV2ZW50XCIsIEV4cG9ydHNfanNfMS5FdmVudFR5cGUuRXJyb3IpO1xuICAgICAgICB0aGlzLnByaXZFcnJvciA9IGVycm9yO1xuICAgIH1cbiAgICBnZXQgZXJyb3IoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZFcnJvcjtcbiAgICB9XG59XG5leHBvcnRzLkJhY2tncm91bmRFdmVudCA9IEJhY2tncm91bmRFdmVudDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmFja2dyb3VuZEVycm9yLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/BackgroundError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ChunkedArrayBufferStream.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ChunkedArrayBufferStream.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ChunkedArrayBufferStream = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nclass ChunkedArrayBufferStream extends Exports_js_1.Stream {\n    constructor(targetChunkSize, streamId) {\n        super(streamId);\n        this.privTargetChunkSize = Math.round(targetChunkSize);\n        this.privNextBufferReadyBytes = 0;\n    }\n    writeStreamChunk(chunk) {\n        // No pending write, and the buffer is the right size so write it.\n        if (chunk.isEnd ||\n            (0 === this.privNextBufferReadyBytes && chunk.buffer.byteLength === this.privTargetChunkSize)) {\n            super.writeStreamChunk(chunk);\n            return;\n        }\n        let bytesCopiedFromBuffer = 0;\n        while (bytesCopiedFromBuffer < chunk.buffer.byteLength) {\n            // Fill the next buffer.\n            if (undefined === this.privNextBufferToWrite) {\n                this.privNextBufferToWrite = new ArrayBuffer(this.privTargetChunkSize);\n                this.privNextBufferStartTime = chunk.timeReceived;\n            }\n            // Find out how many bytes we can copy into the read buffer.\n            const bytesToCopy = Math.min(chunk.buffer.byteLength - bytesCopiedFromBuffer, this.privTargetChunkSize - this.privNextBufferReadyBytes);\n            const targetView = new Uint8Array(this.privNextBufferToWrite);\n            const sourceView = new Uint8Array(chunk.buffer.slice(bytesCopiedFromBuffer, bytesToCopy + bytesCopiedFromBuffer));\n            targetView.set(sourceView, this.privNextBufferReadyBytes);\n            this.privNextBufferReadyBytes += bytesToCopy;\n            bytesCopiedFromBuffer += bytesToCopy;\n            // Are we ready to write?\n            if (this.privNextBufferReadyBytes === this.privTargetChunkSize) {\n                super.writeStreamChunk({\n                    buffer: this.privNextBufferToWrite,\n                    isEnd: false,\n                    timeReceived: this.privNextBufferStartTime,\n                });\n                this.privNextBufferReadyBytes = 0;\n                this.privNextBufferToWrite = undefined;\n            }\n        }\n    }\n    close() {\n        // Send whatever is pending, then close the base class.\n        if (0 !== this.privNextBufferReadyBytes && !this.isClosed) {\n            super.writeStreamChunk({\n                buffer: this.privNextBufferToWrite.slice(0, this.privNextBufferReadyBytes),\n                isEnd: false,\n                timeReceived: this.privNextBufferStartTime,\n            });\n        }\n        super.close();\n    }\n}\nexports.ChunkedArrayBufferStream = ChunkedArrayBufferStream;\n\n//# sourceMappingURL=ChunkedArrayBufferStream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9DaHVua2VkQXJyYXlCdWZmZXJTdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdDQUFnQztBQUNoQyxxQkFBcUIsbUJBQU8sQ0FBQyxtSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDOztBQUVoQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vQ2h1bmtlZEFycmF5QnVmZmVyU3RyZWFtLmpzPzcyMDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ2h1bmtlZEFycmF5QnVmZmVyU3RyZWFtID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbmNsYXNzIENodW5rZWRBcnJheUJ1ZmZlclN0cmVhbSBleHRlbmRzIEV4cG9ydHNfanNfMS5TdHJlYW0ge1xuICAgIGNvbnN0cnVjdG9yKHRhcmdldENodW5rU2l6ZSwgc3RyZWFtSWQpIHtcbiAgICAgICAgc3VwZXIoc3RyZWFtSWQpO1xuICAgICAgICB0aGlzLnByaXZUYXJnZXRDaHVua1NpemUgPSBNYXRoLnJvdW5kKHRhcmdldENodW5rU2l6ZSk7XG4gICAgICAgIHRoaXMucHJpdk5leHRCdWZmZXJSZWFkeUJ5dGVzID0gMDtcbiAgICB9XG4gICAgd3JpdGVTdHJlYW1DaHVuayhjaHVuaykge1xuICAgICAgICAvLyBObyBwZW5kaW5nIHdyaXRlLCBhbmQgdGhlIGJ1ZmZlciBpcyB0aGUgcmlnaHQgc2l6ZSBzbyB3cml0ZSBpdC5cbiAgICAgICAgaWYgKGNodW5rLmlzRW5kIHx8XG4gICAgICAgICAgICAoMCA9PT0gdGhpcy5wcml2TmV4dEJ1ZmZlclJlYWR5Qnl0ZXMgJiYgY2h1bmsuYnVmZmVyLmJ5dGVMZW5ndGggPT09IHRoaXMucHJpdlRhcmdldENodW5rU2l6ZSkpIHtcbiAgICAgICAgICAgIHN1cGVyLndyaXRlU3RyZWFtQ2h1bmsoY2h1bmspO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBieXRlc0NvcGllZEZyb21CdWZmZXIgPSAwO1xuICAgICAgICB3aGlsZSAoYnl0ZXNDb3BpZWRGcm9tQnVmZmVyIDwgY2h1bmsuYnVmZmVyLmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgICAgIC8vIEZpbGwgdGhlIG5leHQgYnVmZmVyLlxuICAgICAgICAgICAgaWYgKHVuZGVmaW5lZCA9PT0gdGhpcy5wcml2TmV4dEJ1ZmZlclRvV3JpdGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByaXZOZXh0QnVmZmVyVG9Xcml0ZSA9IG5ldyBBcnJheUJ1ZmZlcih0aGlzLnByaXZUYXJnZXRDaHVua1NpemUpO1xuICAgICAgICAgICAgICAgIHRoaXMucHJpdk5leHRCdWZmZXJTdGFydFRpbWUgPSBjaHVuay50aW1lUmVjZWl2ZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBGaW5kIG91dCBob3cgbWFueSBieXRlcyB3ZSBjYW4gY29weSBpbnRvIHRoZSByZWFkIGJ1ZmZlci5cbiAgICAgICAgICAgIGNvbnN0IGJ5dGVzVG9Db3B5ID0gTWF0aC5taW4oY2h1bmsuYnVmZmVyLmJ5dGVMZW5ndGggLSBieXRlc0NvcGllZEZyb21CdWZmZXIsIHRoaXMucHJpdlRhcmdldENodW5rU2l6ZSAtIHRoaXMucHJpdk5leHRCdWZmZXJSZWFkeUJ5dGVzKTtcbiAgICAgICAgICAgIGNvbnN0IHRhcmdldFZpZXcgPSBuZXcgVWludDhBcnJheSh0aGlzLnByaXZOZXh0QnVmZmVyVG9Xcml0ZSk7XG4gICAgICAgICAgICBjb25zdCBzb3VyY2VWaWV3ID0gbmV3IFVpbnQ4QXJyYXkoY2h1bmsuYnVmZmVyLnNsaWNlKGJ5dGVzQ29waWVkRnJvbUJ1ZmZlciwgYnl0ZXNUb0NvcHkgKyBieXRlc0NvcGllZEZyb21CdWZmZXIpKTtcbiAgICAgICAgICAgIHRhcmdldFZpZXcuc2V0KHNvdXJjZVZpZXcsIHRoaXMucHJpdk5leHRCdWZmZXJSZWFkeUJ5dGVzKTtcbiAgICAgICAgICAgIHRoaXMucHJpdk5leHRCdWZmZXJSZWFkeUJ5dGVzICs9IGJ5dGVzVG9Db3B5O1xuICAgICAgICAgICAgYnl0ZXNDb3BpZWRGcm9tQnVmZmVyICs9IGJ5dGVzVG9Db3B5O1xuICAgICAgICAgICAgLy8gQXJlIHdlIHJlYWR5IHRvIHdyaXRlP1xuICAgICAgICAgICAgaWYgKHRoaXMucHJpdk5leHRCdWZmZXJSZWFkeUJ5dGVzID09PSB0aGlzLnByaXZUYXJnZXRDaHVua1NpemUpIHtcbiAgICAgICAgICAgICAgICBzdXBlci53cml0ZVN0cmVhbUNodW5rKHtcbiAgICAgICAgICAgICAgICAgICAgYnVmZmVyOiB0aGlzLnByaXZOZXh0QnVmZmVyVG9Xcml0ZSxcbiAgICAgICAgICAgICAgICAgICAgaXNFbmQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICB0aW1lUmVjZWl2ZWQ6IHRoaXMucHJpdk5leHRCdWZmZXJTdGFydFRpbWUsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdGhpcy5wcml2TmV4dEJ1ZmZlclJlYWR5Qnl0ZXMgPSAwO1xuICAgICAgICAgICAgICAgIHRoaXMucHJpdk5leHRCdWZmZXJUb1dyaXRlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNsb3NlKCkge1xuICAgICAgICAvLyBTZW5kIHdoYXRldmVyIGlzIHBlbmRpbmcsIHRoZW4gY2xvc2UgdGhlIGJhc2UgY2xhc3MuXG4gICAgICAgIGlmICgwICE9PSB0aGlzLnByaXZOZXh0QnVmZmVyUmVhZHlCeXRlcyAmJiAhdGhpcy5pc0Nsb3NlZCkge1xuICAgICAgICAgICAgc3VwZXIud3JpdGVTdHJlYW1DaHVuayh7XG4gICAgICAgICAgICAgICAgYnVmZmVyOiB0aGlzLnByaXZOZXh0QnVmZmVyVG9Xcml0ZS5zbGljZSgwLCB0aGlzLnByaXZOZXh0QnVmZmVyUmVhZHlCeXRlcyksXG4gICAgICAgICAgICAgICAgaXNFbmQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHRpbWVSZWNlaXZlZDogdGhpcy5wcml2TmV4dEJ1ZmZlclN0YXJ0VGltZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XG4gICAgfVxufVxuZXhwb3J0cy5DaHVua2VkQXJyYXlCdWZmZXJTdHJlYW0gPSBDaHVua2VkQXJyYXlCdWZmZXJTdHJlYW07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNodW5rZWRBcnJheUJ1ZmZlclN0cmVhbS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ChunkedArrayBufferStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionEvents.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionEvents.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConnectionMessageSentEvent = exports.ConnectionMessageReceivedEvent = exports.ConnectionEstablishErrorEvent = exports.ConnectionErrorEvent = exports.ConnectionClosedEvent = exports.ConnectionEstablishedEvent = exports.ConnectionStartEvent = exports.ConnectionEvent = exports.ServiceEvent = void 0;\nconst PlatformEvent_js_1 = __webpack_require__(/*! ./PlatformEvent.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/PlatformEvent.js\");\nclass ServiceEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, jsonstring, eventType = PlatformEvent_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privJsonResult = jsonstring;\n    }\n    get jsonString() {\n        return this.privJsonResult;\n    }\n}\nexports.ServiceEvent = ServiceEvent;\nclass ConnectionEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, connectionId, eventType = PlatformEvent_js_1.EventType.Info) {\n        super(eventName, eventType);\n        this.privConnectionId = connectionId;\n    }\n    get connectionId() {\n        return this.privConnectionId;\n    }\n}\nexports.ConnectionEvent = ConnectionEvent;\nclass ConnectionStartEvent extends ConnectionEvent {\n    constructor(connectionId, uri, headers) {\n        super(\"ConnectionStartEvent\", connectionId);\n        this.privUri = uri;\n        this.privHeaders = headers;\n    }\n    get uri() {\n        return this.privUri;\n    }\n    get headers() {\n        return this.privHeaders;\n    }\n}\nexports.ConnectionStartEvent = ConnectionStartEvent;\nclass ConnectionEstablishedEvent extends ConnectionEvent {\n    constructor(connectionId) {\n        super(\"ConnectionEstablishedEvent\", connectionId);\n    }\n}\nexports.ConnectionEstablishedEvent = ConnectionEstablishedEvent;\nclass ConnectionClosedEvent extends ConnectionEvent {\n    constructor(connectionId, statusCode, reason) {\n        super(\"ConnectionClosedEvent\", connectionId, PlatformEvent_js_1.EventType.Debug);\n        this.privReason = reason;\n        this.privStatusCode = statusCode;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get statusCode() {\n        return this.privStatusCode;\n    }\n}\nexports.ConnectionClosedEvent = ConnectionClosedEvent;\nclass ConnectionErrorEvent extends ConnectionEvent {\n    constructor(connectionId, message, type) {\n        super(\"ConnectionErrorEvent\", connectionId, PlatformEvent_js_1.EventType.Debug);\n        this.privMessage = message;\n        this.privType = type;\n    }\n    get message() {\n        return this.privMessage;\n    }\n    get type() {\n        return this.privType;\n    }\n}\nexports.ConnectionErrorEvent = ConnectionErrorEvent;\nclass ConnectionEstablishErrorEvent extends ConnectionEvent {\n    constructor(connectionId, statuscode, reason) {\n        super(\"ConnectionEstablishErrorEvent\", connectionId, PlatformEvent_js_1.EventType.Error);\n        this.privStatusCode = statuscode;\n        this.privReason = reason;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get statusCode() {\n        return this.privStatusCode;\n    }\n}\nexports.ConnectionEstablishErrorEvent = ConnectionEstablishErrorEvent;\nclass ConnectionMessageReceivedEvent extends ConnectionEvent {\n    constructor(connectionId, networkReceivedTimeISO, message) {\n        super(\"ConnectionMessageReceivedEvent\", connectionId);\n        this.privNetworkReceivedTime = networkReceivedTimeISO;\n        this.privMessage = message;\n    }\n    get networkReceivedTime() {\n        return this.privNetworkReceivedTime;\n    }\n    get message() {\n        return this.privMessage;\n    }\n}\nexports.ConnectionMessageReceivedEvent = ConnectionMessageReceivedEvent;\nclass ConnectionMessageSentEvent extends ConnectionEvent {\n    constructor(connectionId, networkSentTimeISO, message) {\n        super(\"ConnectionMessageSentEvent\", connectionId);\n        this.privNetworkSentTime = networkSentTimeISO;\n        this.privMessage = message;\n    }\n    get networkSentTime() {\n        return this.privNetworkSentTime;\n    }\n    get message() {\n        return this.privMessage;\n    }\n}\nexports.ConnectionMessageSentEvent = ConnectionMessageSentEvent;\n\n//# sourceMappingURL=ConnectionEvents.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9Db25uZWN0aW9uRXZlbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQ0FBa0MsR0FBRyxzQ0FBc0MsR0FBRyxxQ0FBcUMsR0FBRyw0QkFBNEIsR0FBRyw2QkFBNkIsR0FBRyxrQ0FBa0MsR0FBRyw0QkFBNEIsR0FBRyx1QkFBdUIsR0FBRyxvQkFBb0I7QUFDdlMsMkJBQTJCLG1CQUFPLENBQUMsK0hBQW9CO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQzs7QUFFbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uL0Nvbm5lY3Rpb25FdmVudHMuanM/YmE1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25uZWN0aW9uTWVzc2FnZVNlbnRFdmVudCA9IGV4cG9ydHMuQ29ubmVjdGlvbk1lc3NhZ2VSZWNlaXZlZEV2ZW50ID0gZXhwb3J0cy5Db25uZWN0aW9uRXN0YWJsaXNoRXJyb3JFdmVudCA9IGV4cG9ydHMuQ29ubmVjdGlvbkVycm9yRXZlbnQgPSBleHBvcnRzLkNvbm5lY3Rpb25DbG9zZWRFdmVudCA9IGV4cG9ydHMuQ29ubmVjdGlvbkVzdGFibGlzaGVkRXZlbnQgPSBleHBvcnRzLkNvbm5lY3Rpb25TdGFydEV2ZW50ID0gZXhwb3J0cy5Db25uZWN0aW9uRXZlbnQgPSBleHBvcnRzLlNlcnZpY2VFdmVudCA9IHZvaWQgMDtcbmNvbnN0IFBsYXRmb3JtRXZlbnRfanNfMSA9IHJlcXVpcmUoXCIuL1BsYXRmb3JtRXZlbnQuanNcIik7XG5jbGFzcyBTZXJ2aWNlRXZlbnQgZXh0ZW5kcyBQbGF0Zm9ybUV2ZW50X2pzXzEuUGxhdGZvcm1FdmVudCB7XG4gICAgY29uc3RydWN0b3IoZXZlbnROYW1lLCBqc29uc3RyaW5nLCBldmVudFR5cGUgPSBQbGF0Zm9ybUV2ZW50X2pzXzEuRXZlbnRUeXBlLkluZm8pIHtcbiAgICAgICAgc3VwZXIoZXZlbnROYW1lLCBldmVudFR5cGUpO1xuICAgICAgICB0aGlzLnByaXZKc29uUmVzdWx0ID0ganNvbnN0cmluZztcbiAgICB9XG4gICAgZ2V0IGpzb25TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZKc29uUmVzdWx0O1xuICAgIH1cbn1cbmV4cG9ydHMuU2VydmljZUV2ZW50ID0gU2VydmljZUV2ZW50O1xuY2xhc3MgQ29ubmVjdGlvbkV2ZW50IGV4dGVuZHMgUGxhdGZvcm1FdmVudF9qc18xLlBsYXRmb3JtRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKGV2ZW50TmFtZSwgY29ubmVjdGlvbklkLCBldmVudFR5cGUgPSBQbGF0Zm9ybUV2ZW50X2pzXzEuRXZlbnRUeXBlLkluZm8pIHtcbiAgICAgICAgc3VwZXIoZXZlbnROYW1lLCBldmVudFR5cGUpO1xuICAgICAgICB0aGlzLnByaXZDb25uZWN0aW9uSWQgPSBjb25uZWN0aW9uSWQ7XG4gICAgfVxuICAgIGdldCBjb25uZWN0aW9uSWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZDb25uZWN0aW9uSWQ7XG4gICAgfVxufVxuZXhwb3J0cy5Db25uZWN0aW9uRXZlbnQgPSBDb25uZWN0aW9uRXZlbnQ7XG5jbGFzcyBDb25uZWN0aW9uU3RhcnRFdmVudCBleHRlbmRzIENvbm5lY3Rpb25FdmVudCB7XG4gICAgY29uc3RydWN0b3IoY29ubmVjdGlvbklkLCB1cmksIGhlYWRlcnMpIHtcbiAgICAgICAgc3VwZXIoXCJDb25uZWN0aW9uU3RhcnRFdmVudFwiLCBjb25uZWN0aW9uSWQpO1xuICAgICAgICB0aGlzLnByaXZVcmkgPSB1cmk7XG4gICAgICAgIHRoaXMucHJpdkhlYWRlcnMgPSBoZWFkZXJzO1xuICAgIH1cbiAgICBnZXQgdXJpKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VXJpO1xuICAgIH1cbiAgICBnZXQgaGVhZGVycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkhlYWRlcnM7XG4gICAgfVxufVxuZXhwb3J0cy5Db25uZWN0aW9uU3RhcnRFdmVudCA9IENvbm5lY3Rpb25TdGFydEV2ZW50O1xuY2xhc3MgQ29ubmVjdGlvbkVzdGFibGlzaGVkRXZlbnQgZXh0ZW5kcyBDb25uZWN0aW9uRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKGNvbm5lY3Rpb25JZCkge1xuICAgICAgICBzdXBlcihcIkNvbm5lY3Rpb25Fc3RhYmxpc2hlZEV2ZW50XCIsIGNvbm5lY3Rpb25JZCk7XG4gICAgfVxufVxuZXhwb3J0cy5Db25uZWN0aW9uRXN0YWJsaXNoZWRFdmVudCA9IENvbm5lY3Rpb25Fc3RhYmxpc2hlZEV2ZW50O1xuY2xhc3MgQ29ubmVjdGlvbkNsb3NlZEV2ZW50IGV4dGVuZHMgQ29ubmVjdGlvbkV2ZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihjb25uZWN0aW9uSWQsIHN0YXR1c0NvZGUsIHJlYXNvbikge1xuICAgICAgICBzdXBlcihcIkNvbm5lY3Rpb25DbG9zZWRFdmVudFwiLCBjb25uZWN0aW9uSWQsIFBsYXRmb3JtRXZlbnRfanNfMS5FdmVudFR5cGUuRGVidWcpO1xuICAgICAgICB0aGlzLnByaXZSZWFzb24gPSByZWFzb247XG4gICAgICAgIHRoaXMucHJpdlN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xuICAgIH1cbiAgICBnZXQgcmVhc29uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVhc29uO1xuICAgIH1cbiAgICBnZXQgc3RhdHVzQ29kZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlN0YXR1c0NvZGU7XG4gICAgfVxufVxuZXhwb3J0cy5Db25uZWN0aW9uQ2xvc2VkRXZlbnQgPSBDb25uZWN0aW9uQ2xvc2VkRXZlbnQ7XG5jbGFzcyBDb25uZWN0aW9uRXJyb3JFdmVudCBleHRlbmRzIENvbm5lY3Rpb25FdmVudCB7XG4gICAgY29uc3RydWN0b3IoY29ubmVjdGlvbklkLCBtZXNzYWdlLCB0eXBlKSB7XG4gICAgICAgIHN1cGVyKFwiQ29ubmVjdGlvbkVycm9yRXZlbnRcIiwgY29ubmVjdGlvbklkLCBQbGF0Zm9ybUV2ZW50X2pzXzEuRXZlbnRUeXBlLkRlYnVnKTtcbiAgICAgICAgdGhpcy5wcml2TWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgICAgIHRoaXMucHJpdlR5cGUgPSB0eXBlO1xuICAgIH1cbiAgICBnZXQgbWVzc2FnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdk1lc3NhZ2U7XG4gICAgfVxuICAgIGdldCB0eXBlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VHlwZTtcbiAgICB9XG59XG5leHBvcnRzLkNvbm5lY3Rpb25FcnJvckV2ZW50ID0gQ29ubmVjdGlvbkVycm9yRXZlbnQ7XG5jbGFzcyBDb25uZWN0aW9uRXN0YWJsaXNoRXJyb3JFdmVudCBleHRlbmRzIENvbm5lY3Rpb25FdmVudCB7XG4gICAgY29uc3RydWN0b3IoY29ubmVjdGlvbklkLCBzdGF0dXNjb2RlLCByZWFzb24pIHtcbiAgICAgICAgc3VwZXIoXCJDb25uZWN0aW9uRXN0YWJsaXNoRXJyb3JFdmVudFwiLCBjb25uZWN0aW9uSWQsIFBsYXRmb3JtRXZlbnRfanNfMS5FdmVudFR5cGUuRXJyb3IpO1xuICAgICAgICB0aGlzLnByaXZTdGF0dXNDb2RlID0gc3RhdHVzY29kZTtcbiAgICAgICAgdGhpcy5wcml2UmVhc29uID0gcmVhc29uO1xuICAgIH1cbiAgICBnZXQgcmVhc29uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVhc29uO1xuICAgIH1cbiAgICBnZXQgc3RhdHVzQ29kZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlN0YXR1c0NvZGU7XG4gICAgfVxufVxuZXhwb3J0cy5Db25uZWN0aW9uRXN0YWJsaXNoRXJyb3JFdmVudCA9IENvbm5lY3Rpb25Fc3RhYmxpc2hFcnJvckV2ZW50O1xuY2xhc3MgQ29ubmVjdGlvbk1lc3NhZ2VSZWNlaXZlZEV2ZW50IGV4dGVuZHMgQ29ubmVjdGlvbkV2ZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihjb25uZWN0aW9uSWQsIG5ldHdvcmtSZWNlaXZlZFRpbWVJU08sIG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIoXCJDb25uZWN0aW9uTWVzc2FnZVJlY2VpdmVkRXZlbnRcIiwgY29ubmVjdGlvbklkKTtcbiAgICAgICAgdGhpcy5wcml2TmV0d29ya1JlY2VpdmVkVGltZSA9IG5ldHdvcmtSZWNlaXZlZFRpbWVJU087XG4gICAgICAgIHRoaXMucHJpdk1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIH1cbiAgICBnZXQgbmV0d29ya1JlY2VpdmVkVGltZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdk5ldHdvcmtSZWNlaXZlZFRpbWU7XG4gICAgfVxuICAgIGdldCBtZXNzYWdlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2TWVzc2FnZTtcbiAgICB9XG59XG5leHBvcnRzLkNvbm5lY3Rpb25NZXNzYWdlUmVjZWl2ZWRFdmVudCA9IENvbm5lY3Rpb25NZXNzYWdlUmVjZWl2ZWRFdmVudDtcbmNsYXNzIENvbm5lY3Rpb25NZXNzYWdlU2VudEV2ZW50IGV4dGVuZHMgQ29ubmVjdGlvbkV2ZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihjb25uZWN0aW9uSWQsIG5ldHdvcmtTZW50VGltZUlTTywgbWVzc2FnZSkge1xuICAgICAgICBzdXBlcihcIkNvbm5lY3Rpb25NZXNzYWdlU2VudEV2ZW50XCIsIGNvbm5lY3Rpb25JZCk7XG4gICAgICAgIHRoaXMucHJpdk5ldHdvcmtTZW50VGltZSA9IG5ldHdvcmtTZW50VGltZUlTTztcbiAgICAgICAgdGhpcy5wcml2TWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgfVxuICAgIGdldCBuZXR3b3JrU2VudFRpbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZOZXR3b3JrU2VudFRpbWU7XG4gICAgfVxuICAgIGdldCBtZXNzYWdlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2TWVzc2FnZTtcbiAgICB9XG59XG5leHBvcnRzLkNvbm5lY3Rpb25NZXNzYWdlU2VudEV2ZW50ID0gQ29ubmVjdGlvbk1lc3NhZ2VTZW50RXZlbnQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbm5lY3Rpb25FdmVudHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionEvents.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionMessage.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionMessage.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* eslint-disable @typescript-eslint/no-unsafe-return */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConnectionMessage = exports.MessageType = void 0;\nconst Error_js_1 = __webpack_require__(/*! ./Error.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js\");\nconst Guid_js_1 = __webpack_require__(/*! ./Guid.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js\");\nvar MessageType;\n(function (MessageType) {\n    MessageType[MessageType[\"Text\"] = 0] = \"Text\";\n    MessageType[MessageType[\"Binary\"] = 1] = \"Binary\";\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\nclass ConnectionMessage {\n    constructor(messageType, body, headers, id) {\n        this.privBody = null;\n        if (messageType === MessageType.Text && body && !(typeof (body) === \"string\")) {\n            throw new Error_js_1.InvalidOperationError(\"Payload must be a string\");\n        }\n        if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\n            throw new Error_js_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n        }\n        this.privMessageType = messageType;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.privBody = body;\n        this.privHeaders = headers ? headers : {};\n        this.privId = id ? id : Guid_js_1.createNoDashGuid();\n        switch (this.messageType) {\n            case MessageType.Binary:\n                this.privSize = this.binaryBody !== null ? this.binaryBody.byteLength : 0;\n                break;\n            case MessageType.Text:\n                this.privSize = this.textBody.length;\n        }\n    }\n    get messageType() {\n        return this.privMessageType;\n    }\n    get headers() {\n        return this.privHeaders;\n    }\n    get body() {\n        return this.privBody;\n    }\n    get textBody() {\n        if (this.privMessageType === MessageType.Binary) {\n            throw new Error_js_1.InvalidOperationError(\"Not supported for binary message\");\n        }\n        return this.privBody;\n    }\n    get binaryBody() {\n        if (this.privMessageType === MessageType.Text) {\n            throw new Error_js_1.InvalidOperationError(\"Not supported for text message\");\n        }\n        return this.privBody;\n    }\n    get id() {\n        return this.privId;\n    }\n}\nexports.ConnectionMessage = ConnectionMessage;\n\n//# sourceMappingURL=ConnectionMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9Db25uZWN0aW9uTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRyxtQkFBbUI7QUFDL0MsbUJBQW1CLG1CQUFPLENBQUMsK0dBQVk7QUFDdkMsa0JBQWtCLG1CQUFPLENBQUMsNkdBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QyxtQkFBbUIsS0FBSztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCOztBQUV6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vQ29ubmVjdGlvbk1lc3NhZ2UuanM/ODkxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtcmV0dXJuICovXG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29ubmVjdGlvbk1lc3NhZ2UgPSBleHBvcnRzLk1lc3NhZ2VUeXBlID0gdm9pZCAwO1xuY29uc3QgRXJyb3JfanNfMSA9IHJlcXVpcmUoXCIuL0Vycm9yLmpzXCIpO1xuY29uc3QgR3VpZF9qc18xID0gcmVxdWlyZShcIi4vR3VpZC5qc1wiKTtcbnZhciBNZXNzYWdlVHlwZTtcbihmdW5jdGlvbiAoTWVzc2FnZVR5cGUpIHtcbiAgICBNZXNzYWdlVHlwZVtNZXNzYWdlVHlwZVtcIlRleHRcIl0gPSAwXSA9IFwiVGV4dFwiO1xuICAgIE1lc3NhZ2VUeXBlW01lc3NhZ2VUeXBlW1wiQmluYXJ5XCJdID0gMV0gPSBcIkJpbmFyeVwiO1xufSkoTWVzc2FnZVR5cGUgPSBleHBvcnRzLk1lc3NhZ2VUeXBlIHx8IChleHBvcnRzLk1lc3NhZ2VUeXBlID0ge30pKTtcbmNsYXNzIENvbm5lY3Rpb25NZXNzYWdlIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlVHlwZSwgYm9keSwgaGVhZGVycywgaWQpIHtcbiAgICAgICAgdGhpcy5wcml2Qm9keSA9IG51bGw7XG4gICAgICAgIGlmIChtZXNzYWdlVHlwZSA9PT0gTWVzc2FnZVR5cGUuVGV4dCAmJiBib2R5ICYmICEodHlwZW9mIChib2R5KSA9PT0gXCJzdHJpbmdcIikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcl9qc18xLkludmFsaWRPcGVyYXRpb25FcnJvcihcIlBheWxvYWQgbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWVzc2FnZVR5cGUgPT09IE1lc3NhZ2VUeXBlLkJpbmFyeSAmJiBib2R5ICYmICEoYm9keSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yX2pzXzEuSW52YWxpZE9wZXJhdGlvbkVycm9yKFwiUGF5bG9hZCBtdXN0IGJlIEFycmF5QnVmZmVyXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJpdk1lc3NhZ2VUeXBlID0gbWVzc2FnZVR5cGU7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFzc2lnbm1lbnRcbiAgICAgICAgdGhpcy5wcml2Qm9keSA9IGJvZHk7XG4gICAgICAgIHRoaXMucHJpdkhlYWRlcnMgPSBoZWFkZXJzID8gaGVhZGVycyA6IHt9O1xuICAgICAgICB0aGlzLnByaXZJZCA9IGlkID8gaWQgOiBHdWlkX2pzXzEuY3JlYXRlTm9EYXNoR3VpZCgpO1xuICAgICAgICBzd2l0Y2ggKHRoaXMubWVzc2FnZVR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgTWVzc2FnZVR5cGUuQmluYXJ5OlxuICAgICAgICAgICAgICAgIHRoaXMucHJpdlNpemUgPSB0aGlzLmJpbmFyeUJvZHkgIT09IG51bGwgPyB0aGlzLmJpbmFyeUJvZHkuYnl0ZUxlbmd0aCA6IDA7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIE1lc3NhZ2VUeXBlLlRleHQ6XG4gICAgICAgICAgICAgICAgdGhpcy5wcml2U2l6ZSA9IHRoaXMudGV4dEJvZHkubGVuZ3RoO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBtZXNzYWdlVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdk1lc3NhZ2VUeXBlO1xuICAgIH1cbiAgICBnZXQgaGVhZGVycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkhlYWRlcnM7XG4gICAgfVxuICAgIGdldCBib2R5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2Qm9keTtcbiAgICB9XG4gICAgZ2V0IHRleHRCb2R5KCkge1xuICAgICAgICBpZiAodGhpcy5wcml2TWVzc2FnZVR5cGUgPT09IE1lc3NhZ2VUeXBlLkJpbmFyeSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yX2pzXzEuSW52YWxpZE9wZXJhdGlvbkVycm9yKFwiTm90IHN1cHBvcnRlZCBmb3IgYmluYXJ5IG1lc3NhZ2VcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkJvZHk7XG4gICAgfVxuICAgIGdldCBiaW5hcnlCb2R5KCkge1xuICAgICAgICBpZiAodGhpcy5wcml2TWVzc2FnZVR5cGUgPT09IE1lc3NhZ2VUeXBlLlRleHQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcl9qc18xLkludmFsaWRPcGVyYXRpb25FcnJvcihcIk5vdCBzdXBwb3J0ZWQgZm9yIHRleHQgbWVzc2FnZVwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5wcml2Qm9keTtcbiAgICB9XG4gICAgZ2V0IGlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2SWQ7XG4gICAgfVxufVxuZXhwb3J0cy5Db25uZWN0aW9uTWVzc2FnZSA9IENvbm5lY3Rpb25NZXNzYWdlO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25uZWN0aW9uTWVzc2FnZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionMessage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionOpenResponse.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionOpenResponse.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConnectionOpenResponse = void 0;\nclass ConnectionOpenResponse {\n    constructor(statusCode, reason) {\n        this.privStatusCode = statusCode;\n        this.privReason = reason;\n    }\n    get statusCode() {\n        return this.privStatusCode;\n    }\n    get reason() {\n        return this.privReason;\n    }\n}\nexports.ConnectionOpenResponse = ConnectionOpenResponse;\n\n//# sourceMappingURL=ConnectionOpenResponse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9Db25uZWN0aW9uT3BlblJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCOztBQUU5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vQ29ubmVjdGlvbk9wZW5SZXNwb25zZS5qcz9hMGY3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbm5lY3Rpb25PcGVuUmVzcG9uc2UgPSB2b2lkIDA7XG5jbGFzcyBDb25uZWN0aW9uT3BlblJlc3BvbnNlIHtcbiAgICBjb25zdHJ1Y3RvcihzdGF0dXNDb2RlLCByZWFzb24pIHtcbiAgICAgICAgdGhpcy5wcml2U3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XG4gICAgICAgIHRoaXMucHJpdlJlYXNvbiA9IHJlYXNvbjtcbiAgICB9XG4gICAgZ2V0IHN0YXR1c0NvZGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTdGF0dXNDb2RlO1xuICAgIH1cbiAgICBnZXQgcmVhc29uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVhc29uO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29ubmVjdGlvbk9wZW5SZXNwb25zZSA9IENvbm5lY3Rpb25PcGVuUmVzcG9uc2U7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbm5lY3Rpb25PcGVuUmVzcG9uc2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionOpenResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DeferralMap.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DeferralMap.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DeferralMap = void 0;\n/**\n * The error that is thrown when an argument passed in is null.\n *\n * @export\n * @class DefferalMap\n */\nclass DeferralMap {\n    constructor() {\n        this.privMap = {};\n    }\n    add(id, deferral) {\n        this.privMap[id] = deferral;\n    }\n    getId(id) {\n        return this.privMap[id];\n    }\n    complete(id, result) {\n        try {\n            this.privMap[id].resolve(result);\n        }\n        catch (error) {\n            this.privMap[id].reject(error);\n        }\n        finally {\n            this.privMap[id] = undefined;\n        }\n    }\n}\nexports.DeferralMap = DeferralMap;\n\n//# sourceMappingURL=DeferralMap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9EZWZlcnJhbE1hcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1COztBQUVuQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vRGVmZXJyYWxNYXAuanM/NzJiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZWZlcnJhbE1hcCA9IHZvaWQgMDtcbi8qKlxuICogVGhlIGVycm9yIHRoYXQgaXMgdGhyb3duIHdoZW4gYW4gYXJndW1lbnQgcGFzc2VkIGluIGlzIG51bGwuXG4gKlxuICogQGV4cG9ydFxuICogQGNsYXNzIERlZmZlcmFsTWFwXG4gKi9cbmNsYXNzIERlZmVycmFsTWFwIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5wcml2TWFwID0ge307XG4gICAgfVxuICAgIGFkZChpZCwgZGVmZXJyYWwpIHtcbiAgICAgICAgdGhpcy5wcml2TWFwW2lkXSA9IGRlZmVycmFsO1xuICAgIH1cbiAgICBnZXRJZChpZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2TWFwW2lkXTtcbiAgICB9XG4gICAgY29tcGxldGUoaWQsIHJlc3VsdCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdGhpcy5wcml2TWFwW2lkXS5yZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB0aGlzLnByaXZNYXBbaWRdLnJlamVjdChlcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLnByaXZNYXBbaWRdID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5EZWZlcnJhbE1hcCA9IERlZmVycmFsTWFwO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1EZWZlcnJhbE1hcC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DeferralMap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DialogEvents.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DialogEvents.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SendingAgentContextMessageEvent = exports.DialogEvent = void 0;\nconst PlatformEvent_js_1 = __webpack_require__(/*! ./PlatformEvent.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/PlatformEvent.js\");\nclass DialogEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, eventType = PlatformEvent_js_1.EventType.Info) {\n        super(eventName, eventType);\n    }\n}\nexports.DialogEvent = DialogEvent;\nclass SendingAgentContextMessageEvent extends DialogEvent {\n    constructor(agentConfig) {\n        super(\"SendingAgentContextMessageEvent\");\n        this.privAgentConfig = agentConfig;\n    }\n    get agentConfig() {\n        return this.privAgentConfig;\n    }\n}\nexports.SendingAgentContextMessageEvent = SendingAgentContextMessageEvent;\n\n//# sourceMappingURL=DialogEvents.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9EaWFsb2dFdmVudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVDQUF1QyxHQUFHLG1CQUFtQjtBQUM3RCwyQkFBMkIsbUJBQU8sQ0FBQywrSEFBb0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7O0FBRXZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9EaWFsb2dFdmVudHMuanM/YTlkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TZW5kaW5nQWdlbnRDb250ZXh0TWVzc2FnZUV2ZW50ID0gZXhwb3J0cy5EaWFsb2dFdmVudCA9IHZvaWQgMDtcbmNvbnN0IFBsYXRmb3JtRXZlbnRfanNfMSA9IHJlcXVpcmUoXCIuL1BsYXRmb3JtRXZlbnQuanNcIik7XG5jbGFzcyBEaWFsb2dFdmVudCBleHRlbmRzIFBsYXRmb3JtRXZlbnRfanNfMS5QbGF0Zm9ybUV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihldmVudE5hbWUsIGV2ZW50VHlwZSA9IFBsYXRmb3JtRXZlbnRfanNfMS5FdmVudFR5cGUuSW5mbykge1xuICAgICAgICBzdXBlcihldmVudE5hbWUsIGV2ZW50VHlwZSk7XG4gICAgfVxufVxuZXhwb3J0cy5EaWFsb2dFdmVudCA9IERpYWxvZ0V2ZW50O1xuY2xhc3MgU2VuZGluZ0FnZW50Q29udGV4dE1lc3NhZ2VFdmVudCBleHRlbmRzIERpYWxvZ0V2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihhZ2VudENvbmZpZykge1xuICAgICAgICBzdXBlcihcIlNlbmRpbmdBZ2VudENvbnRleHRNZXNzYWdlRXZlbnRcIik7XG4gICAgICAgIHRoaXMucHJpdkFnZW50Q29uZmlnID0gYWdlbnRDb25maWc7XG4gICAgfVxuICAgIGdldCBhZ2VudENvbmZpZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkFnZW50Q29uZmlnO1xuICAgIH1cbn1cbmV4cG9ydHMuU2VuZGluZ0FnZW50Q29udGV4dE1lc3NhZ2VFdmVudCA9IFNlbmRpbmdBZ2VudENvbnRleHRNZXNzYWdlRXZlbnQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURpYWxvZ0V2ZW50cy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DialogEvents.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ObjectDisposedError = exports.InvalidOperationError = exports.ArgumentNullError = void 0;\n/* eslint-disable max-classes-per-file */\n/**\n * The error that is thrown when an argument passed in is null.\n *\n * @export\n * @class ArgumentNullError\n * @extends {Error}\n */\nclass ArgumentNullError extends Error {\n    /**\n     * Creates an instance of ArgumentNullError.\n     *\n     * @param {string} argumentName - Name of the argument that is null\n     *\n     * @memberOf ArgumentNullError\n     */\n    constructor(argumentName) {\n        super(argumentName);\n        this.name = \"ArgumentNull\";\n        this.message = argumentName;\n    }\n}\nexports.ArgumentNullError = ArgumentNullError;\n/**\n * The error that is thrown when an invalid operation is performed in the code.\n *\n * @export\n * @class InvalidOperationError\n * @extends {Error}\n */\nclass InvalidOperationError extends Error {\n    /**\n     * Creates an instance of InvalidOperationError.\n     *\n     * @param {string} error - The error\n     *\n     * @memberOf InvalidOperationError\n     */\n    constructor(error) {\n        super(error);\n        this.name = \"InvalidOperation\";\n        this.message = error;\n    }\n}\nexports.InvalidOperationError = InvalidOperationError;\n/**\n * The error that is thrown when an object is disposed.\n *\n * @export\n * @class ObjectDisposedError\n * @extends {Error}\n */\nclass ObjectDisposedError extends Error {\n    /**\n     * Creates an instance of ObjectDisposedError.\n     *\n     * @param {string} objectName - The object that is disposed\n     * @param {string} error - The error\n     *\n     * @memberOf ObjectDisposedError\n     */\n    constructor(objectName, error) {\n        super(error);\n        this.name = objectName + \"ObjectDisposed\";\n        this.message = error;\n    }\n}\nexports.ObjectDisposedError = ObjectDisposedError;\n\n//# sourceMappingURL=Error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9FcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsNkJBQTZCLEdBQUcseUJBQXlCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCOztBQUUzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vRXJyb3IuanM/MWUxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PYmplY3REaXNwb3NlZEVycm9yID0gZXhwb3J0cy5JbnZhbGlkT3BlcmF0aW9uRXJyb3IgPSBleHBvcnRzLkFyZ3VtZW50TnVsbEVycm9yID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgbWF4LWNsYXNzZXMtcGVyLWZpbGUgKi9cbi8qKlxuICogVGhlIGVycm9yIHRoYXQgaXMgdGhyb3duIHdoZW4gYW4gYXJndW1lbnQgcGFzc2VkIGluIGlzIG51bGwuXG4gKlxuICogQGV4cG9ydFxuICogQGNsYXNzIEFyZ3VtZW50TnVsbEVycm9yXG4gKiBAZXh0ZW5kcyB7RXJyb3J9XG4gKi9cbmNsYXNzIEFyZ3VtZW50TnVsbEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgQXJndW1lbnROdWxsRXJyb3IuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gYXJndW1lbnROYW1lIC0gTmFtZSBvZiB0aGUgYXJndW1lbnQgdGhhdCBpcyBudWxsXG4gICAgICpcbiAgICAgKiBAbWVtYmVyT2YgQXJndW1lbnROdWxsRXJyb3JcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihhcmd1bWVudE5hbWUpIHtcbiAgICAgICAgc3VwZXIoYXJndW1lbnROYW1lKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJBcmd1bWVudE51bGxcIjtcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gYXJndW1lbnROYW1lO1xuICAgIH1cbn1cbmV4cG9ydHMuQXJndW1lbnROdWxsRXJyb3IgPSBBcmd1bWVudE51bGxFcnJvcjtcbi8qKlxuICogVGhlIGVycm9yIHRoYXQgaXMgdGhyb3duIHdoZW4gYW4gaW52YWxpZCBvcGVyYXRpb24gaXMgcGVyZm9ybWVkIGluIHRoZSBjb2RlLlxuICpcbiAqIEBleHBvcnRcbiAqIEBjbGFzcyBJbnZhbGlkT3BlcmF0aW9uRXJyb3JcbiAqIEBleHRlbmRzIHtFcnJvcn1cbiAqL1xuY2xhc3MgSW52YWxpZE9wZXJhdGlvbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgSW52YWxpZE9wZXJhdGlvbkVycm9yLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGVycm9yIC0gVGhlIGVycm9yXG4gICAgICpcbiAgICAgKiBAbWVtYmVyT2YgSW52YWxpZE9wZXJhdGlvbkVycm9yXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXJyb3IpIHtcbiAgICAgICAgc3VwZXIoZXJyb3IpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIkludmFsaWRPcGVyYXRpb25cIjtcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gZXJyb3I7XG4gICAgfVxufVxuZXhwb3J0cy5JbnZhbGlkT3BlcmF0aW9uRXJyb3IgPSBJbnZhbGlkT3BlcmF0aW9uRXJyb3I7XG4vKipcbiAqIFRoZSBlcnJvciB0aGF0IGlzIHRocm93biB3aGVuIGFuIG9iamVjdCBpcyBkaXNwb3NlZC5cbiAqXG4gKiBAZXhwb3J0XG4gKiBAY2xhc3MgT2JqZWN0RGlzcG9zZWRFcnJvclxuICogQGV4dGVuZHMge0Vycm9yfVxuICovXG5jbGFzcyBPYmplY3REaXNwb3NlZEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgT2JqZWN0RGlzcG9zZWRFcnJvci5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBvYmplY3ROYW1lIC0gVGhlIG9iamVjdCB0aGF0IGlzIGRpc3Bvc2VkXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGVycm9yIC0gVGhlIGVycm9yXG4gICAgICpcbiAgICAgKiBAbWVtYmVyT2YgT2JqZWN0RGlzcG9zZWRFcnJvclxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG9iamVjdE5hbWUsIGVycm9yKSB7XG4gICAgICAgIHN1cGVyKGVycm9yKTtcbiAgICAgICAgdGhpcy5uYW1lID0gb2JqZWN0TmFtZSArIFwiT2JqZWN0RGlzcG9zZWRcIjtcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gZXJyb3I7XG4gICAgfVxufVxuZXhwb3J0cy5PYmplY3REaXNwb3NlZEVycm9yID0gT2JqZWN0RGlzcG9zZWRFcnJvcjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXJyb3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/EventSource.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/EventSource.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EventSource = void 0;\nconst Error_js_1 = __webpack_require__(/*! ./Error.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js\");\nconst Guid_js_1 = __webpack_require__(/*! ./Guid.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js\");\nclass EventSource {\n    constructor(metadata) {\n        this.privEventListeners = {};\n        this.privIsDisposed = false;\n        this.privConsoleListener = undefined;\n        this.privMetadata = metadata;\n    }\n    onEvent(event) {\n        if (this.isDisposed()) {\n            throw (new Error_js_1.ObjectDisposedError(\"EventSource\"));\n        }\n        if (this.metadata) {\n            for (const paramName in this.metadata) {\n                if (paramName) {\n                    if (event.metadata) {\n                        if (!event.metadata[paramName]) {\n                            event.metadata[paramName] = this.metadata[paramName];\n                        }\n                    }\n                }\n            }\n        }\n        for (const eventId in this.privEventListeners) {\n            if (eventId && this.privEventListeners[eventId]) {\n                this.privEventListeners[eventId](event);\n            }\n        }\n    }\n    attach(onEventCallback) {\n        const id = Guid_js_1.createNoDashGuid();\n        this.privEventListeners[id] = onEventCallback;\n        return {\n            detach: () => {\n                delete this.privEventListeners[id];\n                return Promise.resolve();\n            },\n        };\n    }\n    attachListener(listener) {\n        return this.attach((e) => listener.onEvent(e));\n    }\n    attachConsoleListener(listener) {\n        if (!!this.privConsoleListener) {\n            void this.privConsoleListener.detach(); // Detach implementation for eventListeners is synchronous\n        }\n        this.privConsoleListener = this.attach((e) => listener.onEvent(e));\n        return this.privConsoleListener;\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose() {\n        this.privEventListeners = null;\n        this.privIsDisposed = true;\n    }\n    get metadata() {\n        return this.privMetadata;\n    }\n}\nexports.EventSource = EventSource;\n\n//# sourceMappingURL=EventSource.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9FdmVudFNvdXJjZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLG1CQUFtQixtQkFBTyxDQUFDLCtHQUFZO0FBQ3ZDLGtCQUFrQixtQkFBTyxDQUFDLDZHQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1COztBQUVuQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vRXZlbnRTb3VyY2UuanM/YzUwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FdmVudFNvdXJjZSA9IHZvaWQgMDtcbmNvbnN0IEVycm9yX2pzXzEgPSByZXF1aXJlKFwiLi9FcnJvci5qc1wiKTtcbmNvbnN0IEd1aWRfanNfMSA9IHJlcXVpcmUoXCIuL0d1aWQuanNcIik7XG5jbGFzcyBFdmVudFNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IobWV0YWRhdGEpIHtcbiAgICAgICAgdGhpcy5wcml2RXZlbnRMaXN0ZW5lcnMgPSB7fTtcbiAgICAgICAgdGhpcy5wcml2SXNEaXNwb3NlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnByaXZDb25zb2xlTGlzdGVuZXIgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMucHJpdk1ldGFkYXRhID0gbWV0YWRhdGE7XG4gICAgfVxuICAgIG9uRXZlbnQoZXZlbnQpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNEaXNwb3NlZCgpKSB7XG4gICAgICAgICAgICB0aHJvdyAobmV3IEVycm9yX2pzXzEuT2JqZWN0RGlzcG9zZWRFcnJvcihcIkV2ZW50U291cmNlXCIpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5tZXRhZGF0YSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBwYXJhbU5hbWUgaW4gdGhpcy5tZXRhZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChwYXJhbU5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50Lm1ldGFkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWV2ZW50Lm1ldGFkYXRhW3BhcmFtTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudC5tZXRhZGF0YVtwYXJhbU5hbWVdID0gdGhpcy5tZXRhZGF0YVtwYXJhbU5hbWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgZXZlbnRJZCBpbiB0aGlzLnByaXZFdmVudExpc3RlbmVycykge1xuICAgICAgICAgICAgaWYgKGV2ZW50SWQgJiYgdGhpcy5wcml2RXZlbnRMaXN0ZW5lcnNbZXZlbnRJZF0pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByaXZFdmVudExpc3RlbmVyc1tldmVudElkXShldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXR0YWNoKG9uRXZlbnRDYWxsYmFjaykge1xuICAgICAgICBjb25zdCBpZCA9IEd1aWRfanNfMS5jcmVhdGVOb0Rhc2hHdWlkKCk7XG4gICAgICAgIHRoaXMucHJpdkV2ZW50TGlzdGVuZXJzW2lkXSA9IG9uRXZlbnRDYWxsYmFjaztcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRldGFjaDogKCkgPT4ge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnByaXZFdmVudExpc3RlbmVyc1tpZF07XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgYXR0YWNoTGlzdGVuZXIobGlzdGVuZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXR0YWNoKChlKSA9PiBsaXN0ZW5lci5vbkV2ZW50KGUpKTtcbiAgICB9XG4gICAgYXR0YWNoQ29uc29sZUxpc3RlbmVyKGxpc3RlbmVyKSB7XG4gICAgICAgIGlmICghIXRoaXMucHJpdkNvbnNvbGVMaXN0ZW5lcikge1xuICAgICAgICAgICAgdm9pZCB0aGlzLnByaXZDb25zb2xlTGlzdGVuZXIuZGV0YWNoKCk7IC8vIERldGFjaCBpbXBsZW1lbnRhdGlvbiBmb3IgZXZlbnRMaXN0ZW5lcnMgaXMgc3luY2hyb25vdXNcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnByaXZDb25zb2xlTGlzdGVuZXIgPSB0aGlzLmF0dGFjaCgoZSkgPT4gbGlzdGVuZXIub25FdmVudChlKSk7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZDb25zb2xlTGlzdGVuZXI7XG4gICAgfVxuICAgIGlzRGlzcG9zZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZJc0Rpc3Bvc2VkO1xuICAgIH1cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLnByaXZFdmVudExpc3RlbmVycyA9IG51bGw7XG4gICAgICAgIHRoaXMucHJpdklzRGlzcG9zZWQgPSB0cnVlO1xuICAgIH1cbiAgICBnZXQgbWV0YWRhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZNZXRhZGF0YTtcbiAgICB9XG59XG5leHBvcnRzLkV2ZW50U291cmNlID0gRXZlbnRTb3VyY2U7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV2ZW50U291cmNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/EventSource.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Events.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Events.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Events = void 0;\nconst Error_js_1 = __webpack_require__(/*! ./Error.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js\");\nconst EventSource_js_1 = __webpack_require__(/*! ./EventSource.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/EventSource.js\");\nclass Events {\n    static setEventSource(eventSource) {\n        if (!eventSource) {\n            throw new Error_js_1.ArgumentNullError(\"eventSource\");\n        }\n        Events.privInstance = eventSource;\n    }\n    static get instance() {\n        return Events.privInstance;\n    }\n}\nexports.Events = Events;\nEvents.privInstance = new EventSource_js_1.EventSource();\n\n//# sourceMappingURL=Events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9FdmVudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxtQkFBbUIsbUJBQU8sQ0FBQywrR0FBWTtBQUN2Qyx5QkFBeUIsbUJBQU8sQ0FBQywySEFBa0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vRXZlbnRzLmpzP2Q0YWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXZlbnRzID0gdm9pZCAwO1xuY29uc3QgRXJyb3JfanNfMSA9IHJlcXVpcmUoXCIuL0Vycm9yLmpzXCIpO1xuY29uc3QgRXZlbnRTb3VyY2VfanNfMSA9IHJlcXVpcmUoXCIuL0V2ZW50U291cmNlLmpzXCIpO1xuY2xhc3MgRXZlbnRzIHtcbiAgICBzdGF0aWMgc2V0RXZlbnRTb3VyY2UoZXZlbnRTb3VyY2UpIHtcbiAgICAgICAgaWYgKCFldmVudFNvdXJjZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yX2pzXzEuQXJndW1lbnROdWxsRXJyb3IoXCJldmVudFNvdXJjZVwiKTtcbiAgICAgICAgfVxuICAgICAgICBFdmVudHMucHJpdkluc3RhbmNlID0gZXZlbnRTb3VyY2U7XG4gICAgfVxuICAgIHN0YXRpYyBnZXQgaW5zdGFuY2UoKSB7XG4gICAgICAgIHJldHVybiBFdmVudHMucHJpdkluc3RhbmNlO1xuICAgIH1cbn1cbmV4cG9ydHMuRXZlbnRzID0gRXZlbnRzO1xuRXZlbnRzLnByaXZJbnN0YW5jZSA9IG5ldyBFdmVudFNvdXJjZV9qc18xLkV2ZW50U291cmNlKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV2ZW50cy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Events.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./AudioSourceEvents.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/AudioSourceEvents.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ConnectionEvents.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionEvents.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ConnectionMessage.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionMessage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ConnectionOpenResponse.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionOpenResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./DeferralMap.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DeferralMap.js\"), exports);\n__exportStar(__webpack_require__(/*! ./DialogEvents.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/DialogEvents.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Error.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Events.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Events.js\"), exports);\n__exportStar(__webpack_require__(/*! ./EventSource.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/EventSource.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Guid.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IAudioSource.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IAudioSource.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IConnection.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IConnection.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IDetachable.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDetachable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IDictionary.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDictionary.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IDisposable.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDisposable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IEventListener.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IEventListener.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IEventSource.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IEventSource.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IErrorMessages.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IErrorMessages.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ITimer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ITimer.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IWebsocketMessageFormatter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IWebsocketMessageFormatter.js\"), exports);\n__exportStar(__webpack_require__(/*! ./List.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/List.js\"), exports);\n__exportStar(__webpack_require__(/*! ./PlatformEvent.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/PlatformEvent.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Promise.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Promise.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Queue.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Queue.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RawWebsocketMessage.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RawWebsocketMessage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RiffPcmEncoder.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RiffPcmEncoder.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Stream.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Stream.js\"), exports);\nvar TranslationStatus_js_1 = __webpack_require__(/*! ../common.speech/TranslationStatus.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/TranslationStatus.js\");\nObject.defineProperty(exports, \"TranslationStatus\", ({ enumerable: true, get: function () { return TranslationStatus_js_1.TranslationStatus; } }));\n__exportStar(__webpack_require__(/*! ./ChunkedArrayBufferStream.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ChunkedArrayBufferStream.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IAudioDestination.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IAudioDestination.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Timeout.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Timeout.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OCSPEvents.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/OCSPEvents.js\"), exports);\n__exportStar(__webpack_require__(/*! ./BackgroundError.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/BackgroundError.js\"), exports);\n\n//# sourceMappingURL=Exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9FeHBvcnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsb0NBQW9DLGdCQUFnQjtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLHVJQUF3QjtBQUM3QyxhQUFhLG1CQUFPLENBQUMscUlBQXVCO0FBQzVDLGFBQWEsbUJBQU8sQ0FBQyx1SUFBd0I7QUFDN0MsYUFBYSxtQkFBTyxDQUFDLGlKQUE2QjtBQUNsRCxhQUFhLG1CQUFPLENBQUMsMkhBQWtCO0FBQ3ZDLGFBQWEsbUJBQU8sQ0FBQyw2SEFBbUI7QUFDeEMsYUFBYSxtQkFBTyxDQUFDLCtHQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyxpSEFBYTtBQUNsQyxhQUFhLG1CQUFPLENBQUMsMkhBQWtCO0FBQ3ZDLGFBQWEsbUJBQU8sQ0FBQyw2R0FBVztBQUNoQyxhQUFhLG1CQUFPLENBQUMsNkhBQW1CO0FBQ3hDLGFBQWEsbUJBQU8sQ0FBQywySEFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLDJIQUFrQjtBQUN2QyxhQUFhLG1CQUFPLENBQUMsMkhBQWtCO0FBQ3ZDLGFBQWEsbUJBQU8sQ0FBQywySEFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLGlJQUFxQjtBQUMxQyxhQUFhLG1CQUFPLENBQUMsNkhBQW1CO0FBQ3hDLGFBQWEsbUJBQU8sQ0FBQyxpSUFBcUI7QUFDMUMsYUFBYSxtQkFBTyxDQUFDLGlIQUFhO0FBQ2xDLGFBQWEsbUJBQU8sQ0FBQyx5SkFBaUM7QUFDdEQsYUFBYSxtQkFBTyxDQUFDLDZHQUFXO0FBQ2hDLGFBQWEsbUJBQU8sQ0FBQywrSEFBb0I7QUFDekMsYUFBYSxtQkFBTyxDQUFDLG1IQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQywrR0FBWTtBQUNqQyxhQUFhLG1CQUFPLENBQUMsMklBQTBCO0FBQy9DLGFBQWEsbUJBQU8sQ0FBQyxpSUFBcUI7QUFDMUMsYUFBYSxtQkFBTyxDQUFDLGlIQUFhO0FBQ2xDLDZCQUE2QixtQkFBTyxDQUFDLDZKQUF1QztBQUM1RSxxREFBb0QsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDaEosYUFBYSxtQkFBTyxDQUFDLHFKQUErQjtBQUNwRCxhQUFhLG1CQUFPLENBQUMsdUlBQXdCO0FBQzdDLGFBQWEsbUJBQU8sQ0FBQyxtSEFBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMseUhBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQyxtSUFBc0I7O0FBRTNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9FeHBvcnRzLmpzPzZhMDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9BdWRpb1NvdXJjZUV2ZW50cy5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQ29ubmVjdGlvbkV2ZW50cy5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQ29ubmVjdGlvbk1lc3NhZ2UuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0Nvbm5lY3Rpb25PcGVuUmVzcG9uc2UuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0RlZmVycmFsTWFwLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9EaWFsb2dFdmVudHMuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0Vycm9yLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9FdmVudHMuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0V2ZW50U291cmNlLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9HdWlkLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9JQXVkaW9Tb3VyY2UuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0lDb25uZWN0aW9uLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9JRGV0YWNoYWJsZS5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vSURpY3Rpb25hcnkuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0lEaXNwb3NhYmxlLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9JRXZlbnRMaXN0ZW5lci5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vSUV2ZW50U291cmNlLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9JRXJyb3JNZXNzYWdlcy5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vSVRpbWVyLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9JV2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlci5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vTGlzdC5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUGxhdGZvcm1FdmVudC5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUHJvbWlzZS5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUXVldWUuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1Jhd1dlYnNvY2tldE1lc3NhZ2UuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1JpZmZQY21FbmNvZGVyLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9TdHJlYW0uanNcIiksIGV4cG9ydHMpO1xudmFyIFRyYW5zbGF0aW9uU3RhdHVzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uLnNwZWVjaC9UcmFuc2xhdGlvblN0YXR1cy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRyYW5zbGF0aW9uU3RhdHVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUcmFuc2xhdGlvblN0YXR1c19qc18xLlRyYW5zbGF0aW9uU3RhdHVzOyB9IH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0NodW5rZWRBcnJheUJ1ZmZlclN0cmVhbS5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vSUF1ZGlvRGVzdGluYXRpb24uanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1RpbWVvdXQuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL09DU1BFdmVudHMuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0JhY2tncm91bmRFcnJvci5qc1wiKSwgZXhwb3J0cyk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV4cG9ydHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createNoDashGuid = exports.createGuid = void 0;\nconst uuid_1 = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/index.js\");\nconst createGuid = () => uuid_1.v4();\nexports.createGuid = createGuid;\nconst createNoDashGuid = () => createGuid().replace(new RegExp(\"-\", \"g\"), \"\").toUpperCase();\nexports.createNoDashGuid = createNoDashGuid;\n\n//# sourceMappingURL=Guid.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9HdWlkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0IsR0FBRyxrQkFBa0I7QUFDN0MsZUFBZSxtQkFBTyxDQUFDLDhEQUFNO0FBQzdCO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0Esd0JBQXdCOztBQUV4QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vR3VpZC5qcz8zOGViIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZU5vRGFzaEd1aWQgPSBleHBvcnRzLmNyZWF0ZUd1aWQgPSB2b2lkIDA7XG5jb25zdCB1dWlkXzEgPSByZXF1aXJlKFwidXVpZFwiKTtcbmNvbnN0IGNyZWF0ZUd1aWQgPSAoKSA9PiB1dWlkXzEudjQoKTtcbmV4cG9ydHMuY3JlYXRlR3VpZCA9IGNyZWF0ZUd1aWQ7XG5jb25zdCBjcmVhdGVOb0Rhc2hHdWlkID0gKCkgPT4gY3JlYXRlR3VpZCgpLnJlcGxhY2UobmV3IFJlZ0V4cChcIi1cIiwgXCJnXCIpLCBcIlwiKS50b1VwcGVyQ2FzZSgpO1xuZXhwb3J0cy5jcmVhdGVOb0Rhc2hHdWlkID0gY3JlYXRlTm9EYXNoR3VpZDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9R3VpZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IAudioDestination.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IAudioDestination.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=IAudioDestination.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JQXVkaW9EZXN0aW5hdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JQXVkaW9EZXN0aW5hdGlvbi5qcz9mZjE5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlBdWRpb0Rlc3RpbmF0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IAudioDestination.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IAudioSource.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IAudioSource.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=IAudioSource.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JQXVkaW9Tb3VyY2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vSUF1ZGlvU291cmNlLmpzPzQzNTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SUF1ZGlvU291cmNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IAudioSource.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IConnection.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IConnection.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConnectionState = void 0;\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"None\"] = 0] = \"None\";\n    ConnectionState[ConnectionState[\"Connected\"] = 1] = \"Connected\";\n    ConnectionState[ConnectionState[\"Connecting\"] = 2] = \"Connecting\";\n    ConnectionState[ConnectionState[\"Disconnected\"] = 3] = \"Disconnected\";\n})(ConnectionState = exports.ConnectionState || (exports.ConnectionState = {}));\n\n//# sourceMappingURL=IConnection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JQ29ubmVjdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0RBQWdELHVCQUF1QixLQUFLOztBQUU3RSIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vSUNvbm5lY3Rpb24uanM/OTM1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25uZWN0aW9uU3RhdGUgPSB2b2lkIDA7XG52YXIgQ29ubmVjdGlvblN0YXRlO1xuKGZ1bmN0aW9uIChDb25uZWN0aW9uU3RhdGUpIHtcbiAgICBDb25uZWN0aW9uU3RhdGVbQ29ubmVjdGlvblN0YXRlW1wiTm9uZVwiXSA9IDBdID0gXCJOb25lXCI7XG4gICAgQ29ubmVjdGlvblN0YXRlW0Nvbm5lY3Rpb25TdGF0ZVtcIkNvbm5lY3RlZFwiXSA9IDFdID0gXCJDb25uZWN0ZWRcIjtcbiAgICBDb25uZWN0aW9uU3RhdGVbQ29ubmVjdGlvblN0YXRlW1wiQ29ubmVjdGluZ1wiXSA9IDJdID0gXCJDb25uZWN0aW5nXCI7XG4gICAgQ29ubmVjdGlvblN0YXRlW0Nvbm5lY3Rpb25TdGF0ZVtcIkRpc2Nvbm5lY3RlZFwiXSA9IDNdID0gXCJEaXNjb25uZWN0ZWRcIjtcbn0pKENvbm5lY3Rpb25TdGF0ZSA9IGV4cG9ydHMuQ29ubmVjdGlvblN0YXRlIHx8IChleHBvcnRzLkNvbm5lY3Rpb25TdGF0ZSA9IHt9KSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlDb25uZWN0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IConnection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDetachable.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDetachable.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=IDetachable.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JRGV0YWNoYWJsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JRGV0YWNoYWJsZS5qcz9jNDNjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlEZXRhY2hhYmxlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDetachable.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDictionary.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDictionary.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=IDictionary.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JRGljdGlvbmFyeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JRGljdGlvbmFyeS5qcz9hMTcwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlEaWN0aW9uYXJ5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDictionary.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDisposable.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDisposable.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=IDisposable.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JRGlzcG9zYWJsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JRGlzcG9zYWJsZS5qcz8wNzFlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlEaXNwb3NhYmxlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IDisposable.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IErrorMessages.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IErrorMessages.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=IErrorMessages.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JRXJyb3JNZXNzYWdlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uL0lFcnJvck1lc3NhZ2VzLmpzP2ExY2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlFcnJvck1lc3NhZ2VzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IErrorMessages.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IEventListener.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IEventListener.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=IEventListener.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JRXZlbnRMaXN0ZW5lci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JRXZlbnRMaXN0ZW5lci5qcz9lM2Q4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlFdmVudExpc3RlbmVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IEventListener.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IEventSource.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IEventSource.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=IEventSource.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JRXZlbnRTb3VyY2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vSUV2ZW50U291cmNlLmpzP2RhMmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SUV2ZW50U291cmNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IEventSource.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ITimer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ITimer.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=ITimer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JVGltZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vSVRpbWVyLmpzPzU4ZDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SVRpbWVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ITimer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IWebsocketMessageFormatter.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IWebsocketMessageFormatter.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n//# sourceMappingURL=IWebsocketMessageFormatter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JV2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9JV2Vic29ja2V0TWVzc2FnZUZvcm1hdHRlci5qcz9kMTA1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlXZWJzb2NrZXRNZXNzYWdlRm9ybWF0dGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/IWebsocketMessageFormatter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/List.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/List.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.List = void 0;\nconst Error_js_1 = __webpack_require__(/*! ./Error.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js\");\nclass List {\n    constructor(list) {\n        this.privSubscriptionIdCounter = 0;\n        this.privAddSubscriptions = {};\n        this.privRemoveSubscriptions = {};\n        this.privDisposedSubscriptions = {};\n        this.privDisposeReason = null;\n        this.privList = [];\n        // copy the list rather than taking as is.\n        if (list) {\n            for (const item of list) {\n                this.privList.push(item);\n            }\n        }\n    }\n    get(itemIndex) {\n        this.throwIfDisposed();\n        return this.privList[itemIndex];\n    }\n    first() {\n        return this.get(0);\n    }\n    last() {\n        return this.get(this.length() - 1);\n    }\n    add(item) {\n        this.throwIfDisposed();\n        this.insertAt(this.privList.length, item);\n    }\n    insertAt(index, item) {\n        this.throwIfDisposed();\n        if (index === 0) {\n            this.privList.unshift(item);\n        }\n        else if (index === this.privList.length) {\n            this.privList.push(item);\n        }\n        else {\n            this.privList.splice(index, 0, item);\n        }\n        this.triggerSubscriptions(this.privAddSubscriptions);\n    }\n    removeFirst() {\n        this.throwIfDisposed();\n        return this.removeAt(0);\n    }\n    removeLast() {\n        this.throwIfDisposed();\n        return this.removeAt(this.length() - 1);\n    }\n    removeAt(index) {\n        this.throwIfDisposed();\n        return this.remove(index, 1)[0];\n    }\n    remove(index, count) {\n        this.throwIfDisposed();\n        const removedElements = this.privList.splice(index, count);\n        this.triggerSubscriptions(this.privRemoveSubscriptions);\n        return removedElements;\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.remove(0, this.length());\n    }\n    length() {\n        this.throwIfDisposed();\n        return this.privList.length;\n    }\n    onAdded(addedCallback) {\n        this.throwIfDisposed();\n        const subscriptionId = this.privSubscriptionIdCounter++;\n        this.privAddSubscriptions[subscriptionId] = addedCallback;\n        return {\n            detach: () => {\n                delete this.privAddSubscriptions[subscriptionId];\n                return Promise.resolve();\n            },\n        };\n    }\n    onRemoved(removedCallback) {\n        this.throwIfDisposed();\n        const subscriptionId = this.privSubscriptionIdCounter++;\n        this.privRemoveSubscriptions[subscriptionId] = removedCallback;\n        return {\n            detach: () => {\n                delete this.privRemoveSubscriptions[subscriptionId];\n                return Promise.resolve();\n            },\n        };\n    }\n    onDisposed(disposedCallback) {\n        this.throwIfDisposed();\n        const subscriptionId = this.privSubscriptionIdCounter++;\n        this.privDisposedSubscriptions[subscriptionId] = disposedCallback;\n        return {\n            detach: () => {\n                delete this.privDisposedSubscriptions[subscriptionId];\n                return Promise.resolve();\n            },\n        };\n    }\n    join(seperator) {\n        this.throwIfDisposed();\n        return this.privList.join(seperator);\n    }\n    toArray() {\n        const cloneCopy = Array();\n        this.privList.forEach((val) => {\n            cloneCopy.push(val);\n        });\n        return cloneCopy;\n    }\n    any(callback) {\n        this.throwIfDisposed();\n        if (callback) {\n            return this.where(callback).length() > 0;\n        }\n        else {\n            return this.length() > 0;\n        }\n    }\n    all(callback) {\n        this.throwIfDisposed();\n        return this.where(callback).length() === this.length();\n    }\n    forEach(callback) {\n        this.throwIfDisposed();\n        for (let i = 0; i < this.length(); i++) {\n            callback(this.privList[i], i);\n        }\n    }\n    select(callback) {\n        this.throwIfDisposed();\n        const selectList = [];\n        for (let i = 0; i < this.privList.length; i++) {\n            selectList.push(callback(this.privList[i], i));\n        }\n        return new List(selectList);\n    }\n    where(callback) {\n        this.throwIfDisposed();\n        const filteredList = new List();\n        for (let i = 0; i < this.privList.length; i++) {\n            if (callback(this.privList[i], i)) {\n                filteredList.add(this.privList[i]);\n            }\n        }\n        return filteredList;\n    }\n    orderBy(compareFn) {\n        this.throwIfDisposed();\n        const clonedArray = this.toArray();\n        const orderedArray = clonedArray.sort(compareFn);\n        return new List(orderedArray);\n    }\n    orderByDesc(compareFn) {\n        this.throwIfDisposed();\n        return this.orderBy((a, b) => compareFn(b, a));\n    }\n    clone() {\n        this.throwIfDisposed();\n        return new List(this.toArray());\n    }\n    concat(list) {\n        this.throwIfDisposed();\n        return new List(this.privList.concat(list.toArray()));\n    }\n    concatArray(array) {\n        this.throwIfDisposed();\n        return new List(this.privList.concat(array));\n    }\n    isDisposed() {\n        return this.privList == null;\n    }\n    dispose(reason) {\n        if (!this.isDisposed()) {\n            this.privDisposeReason = reason;\n            this.privList = null;\n            this.privAddSubscriptions = null;\n            this.privRemoveSubscriptions = null;\n            this.triggerSubscriptions(this.privDisposedSubscriptions);\n        }\n    }\n    throwIfDisposed() {\n        if (this.isDisposed()) {\n            throw new Error_js_1.ObjectDisposedError(\"List\", this.privDisposeReason);\n        }\n    }\n    triggerSubscriptions(subscriptions) {\n        if (subscriptions) {\n            for (const subscriptionId in subscriptions) {\n                if (subscriptionId) {\n                    subscriptions[subscriptionId]();\n                }\n            }\n        }\n    }\n}\nexports.List = List;\n\n//# sourceMappingURL=List.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/List.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/OCSPEvents.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/OCSPEvents.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OCSPCacheUpdateErrorEvent = exports.OCSPResponseRetrievedEvent = exports.OCSPCacheFetchErrorEvent = exports.OCSPVerificationFailedEvent = exports.OCSPCacheHitEvent = exports.OCSPCacheEntryNeedsRefreshEvent = exports.OCSPCacheEntryExpiredEvent = exports.OCSPWSUpgradeStartedEvent = exports.OCSPStapleReceivedEvent = exports.OCSPCacheUpdateCompleteEvent = exports.OCSPDiskCacheStoreEvent = exports.OCSPMemoryCacheStoreEvent = exports.OCSPCacheUpdateNeededEvent = exports.OCSPDiskCacheHitEvent = exports.OCSPCacheMissEvent = exports.OCSPMemoryCacheHitEvent = exports.OCSPEvent = void 0;\n/* eslint-disable max-classes-per-file */\nconst PlatformEvent_js_1 = __webpack_require__(/*! ./PlatformEvent.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/PlatformEvent.js\");\nclass OCSPEvent extends PlatformEvent_js_1.PlatformEvent {\n    constructor(eventName, eventType, signature) {\n        super(eventName, eventType);\n        this.privSignature = signature;\n    }\n}\nexports.OCSPEvent = OCSPEvent;\nclass OCSPMemoryCacheHitEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPMemoryCacheHitEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPMemoryCacheHitEvent = OCSPMemoryCacheHitEvent;\nclass OCSPCacheMissEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPCacheMissEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPCacheMissEvent = OCSPCacheMissEvent;\nclass OCSPDiskCacheHitEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPDiskCacheHitEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPDiskCacheHitEvent = OCSPDiskCacheHitEvent;\nclass OCSPCacheUpdateNeededEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPCacheUpdateNeededEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPCacheUpdateNeededEvent = OCSPCacheUpdateNeededEvent;\nclass OCSPMemoryCacheStoreEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPMemoryCacheStoreEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPMemoryCacheStoreEvent = OCSPMemoryCacheStoreEvent;\nclass OCSPDiskCacheStoreEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPDiskCacheStoreEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPDiskCacheStoreEvent = OCSPDiskCacheStoreEvent;\nclass OCSPCacheUpdateCompleteEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPCacheUpdateCompleteEvent\", PlatformEvent_js_1.EventType.Debug, signature);\n    }\n}\nexports.OCSPCacheUpdateCompleteEvent = OCSPCacheUpdateCompleteEvent;\nclass OCSPStapleReceivedEvent extends OCSPEvent {\n    constructor() {\n        super(\"OCSPStapleReceivedEvent\", PlatformEvent_js_1.EventType.Debug, \"\");\n    }\n}\nexports.OCSPStapleReceivedEvent = OCSPStapleReceivedEvent;\nclass OCSPWSUpgradeStartedEvent extends OCSPEvent {\n    constructor(serialNumber) {\n        super(\"OCSPWSUpgradeStartedEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n    }\n}\nexports.OCSPWSUpgradeStartedEvent = OCSPWSUpgradeStartedEvent;\nclass OCSPCacheEntryExpiredEvent extends OCSPEvent {\n    constructor(serialNumber, expireTime) {\n        super(\"OCSPCacheEntryExpiredEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privExpireTime = expireTime;\n    }\n}\nexports.OCSPCacheEntryExpiredEvent = OCSPCacheEntryExpiredEvent;\nclass OCSPCacheEntryNeedsRefreshEvent extends OCSPEvent {\n    constructor(serialNumber, startTime, expireTime) {\n        super(\"OCSPCacheEntryNeedsRefreshEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privExpireTime = expireTime;\n        this.privStartTime = startTime;\n    }\n}\nexports.OCSPCacheEntryNeedsRefreshEvent = OCSPCacheEntryNeedsRefreshEvent;\nclass OCSPCacheHitEvent extends OCSPEvent {\n    constructor(serialNumber, startTime, expireTime) {\n        super(\"OCSPCacheHitEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privExpireTime = expireTime;\n        this.privExpireTimeString = new Date(expireTime).toLocaleDateString();\n        this.privStartTime = startTime;\n        this.privStartTimeString = new Date(startTime).toLocaleTimeString();\n    }\n}\nexports.OCSPCacheHitEvent = OCSPCacheHitEvent;\nclass OCSPVerificationFailedEvent extends OCSPEvent {\n    constructor(serialNumber, error) {\n        super(\"OCSPVerificationFailedEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privError = error;\n    }\n}\nexports.OCSPVerificationFailedEvent = OCSPVerificationFailedEvent;\nclass OCSPCacheFetchErrorEvent extends OCSPEvent {\n    constructor(serialNumber, error) {\n        super(\"OCSPCacheFetchErrorEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privError = error;\n    }\n}\nexports.OCSPCacheFetchErrorEvent = OCSPCacheFetchErrorEvent;\nclass OCSPResponseRetrievedEvent extends OCSPEvent {\n    constructor(serialNumber) {\n        super(\"OCSPResponseRetrievedEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n    }\n}\nexports.OCSPResponseRetrievedEvent = OCSPResponseRetrievedEvent;\nclass OCSPCacheUpdateErrorEvent extends OCSPEvent {\n    constructor(serialNumber, error) {\n        super(\"OCSPCacheUpdateErrorEvent\", PlatformEvent_js_1.EventType.Debug, serialNumber);\n        this.privError = error;\n    }\n}\nexports.OCSPCacheUpdateErrorEvent = OCSPCacheUpdateErrorEvent;\n\n//# sourceMappingURL=OCSPEvents.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/OCSPEvents.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/PlatformEvent.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/PlatformEvent.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PlatformEvent = exports.EventType = void 0;\nconst Guid_js_1 = __webpack_require__(/*! ./Guid.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js\");\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"Debug\"] = 0] = \"Debug\";\n    EventType[EventType[\"Info\"] = 1] = \"Info\";\n    EventType[EventType[\"Warning\"] = 2] = \"Warning\";\n    EventType[EventType[\"Error\"] = 3] = \"Error\";\n    EventType[EventType[\"None\"] = 4] = \"None\";\n})(EventType = exports.EventType || (exports.EventType = {}));\nclass PlatformEvent {\n    constructor(eventName, eventType) {\n        this.privName = eventName;\n        this.privEventId = Guid_js_1.createNoDashGuid();\n        this.privEventTime = new Date().toISOString();\n        this.privEventType = eventType;\n        this.privMetadata = {};\n    }\n    get name() {\n        return this.privName;\n    }\n    get eventId() {\n        return this.privEventId;\n    }\n    get eventTime() {\n        return this.privEventTime;\n    }\n    get eventType() {\n        return this.privEventType;\n    }\n    get metadata() {\n        return this.privMetadata;\n    }\n}\nexports.PlatformEvent = PlatformEvent;\n\n//# sourceMappingURL=PlatformEvent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9QbGF0Zm9ybUV2ZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyxpQkFBaUI7QUFDekMsa0JBQWtCLG1CQUFPLENBQUMsNkdBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9DQUFvQyxpQkFBaUIsS0FBSztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7O0FBRXJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9QbGF0Zm9ybUV2ZW50LmpzPzhmZjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUGxhdGZvcm1FdmVudCA9IGV4cG9ydHMuRXZlbnRUeXBlID0gdm9pZCAwO1xuY29uc3QgR3VpZF9qc18xID0gcmVxdWlyZShcIi4vR3VpZC5qc1wiKTtcbnZhciBFdmVudFR5cGU7XG4oZnVuY3Rpb24gKEV2ZW50VHlwZSkge1xuICAgIEV2ZW50VHlwZVtFdmVudFR5cGVbXCJEZWJ1Z1wiXSA9IDBdID0gXCJEZWJ1Z1wiO1xuICAgIEV2ZW50VHlwZVtFdmVudFR5cGVbXCJJbmZvXCJdID0gMV0gPSBcIkluZm9cIjtcbiAgICBFdmVudFR5cGVbRXZlbnRUeXBlW1wiV2FybmluZ1wiXSA9IDJdID0gXCJXYXJuaW5nXCI7XG4gICAgRXZlbnRUeXBlW0V2ZW50VHlwZVtcIkVycm9yXCJdID0gM10gPSBcIkVycm9yXCI7XG4gICAgRXZlbnRUeXBlW0V2ZW50VHlwZVtcIk5vbmVcIl0gPSA0XSA9IFwiTm9uZVwiO1xufSkoRXZlbnRUeXBlID0gZXhwb3J0cy5FdmVudFR5cGUgfHwgKGV4cG9ydHMuRXZlbnRUeXBlID0ge30pKTtcbmNsYXNzIFBsYXRmb3JtRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKGV2ZW50TmFtZSwgZXZlbnRUeXBlKSB7XG4gICAgICAgIHRoaXMucHJpdk5hbWUgPSBldmVudE5hbWU7XG4gICAgICAgIHRoaXMucHJpdkV2ZW50SWQgPSBHdWlkX2pzXzEuY3JlYXRlTm9EYXNoR3VpZCgpO1xuICAgICAgICB0aGlzLnByaXZFdmVudFRpbWUgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIHRoaXMucHJpdkV2ZW50VHlwZSA9IGV2ZW50VHlwZTtcbiAgICAgICAgdGhpcy5wcml2TWV0YWRhdGEgPSB7fTtcbiAgICB9XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZOYW1lO1xuICAgIH1cbiAgICBnZXQgZXZlbnRJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkV2ZW50SWQ7XG4gICAgfVxuICAgIGdldCBldmVudFRpbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZFdmVudFRpbWU7XG4gICAgfVxuICAgIGdldCBldmVudFR5cGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZFdmVudFR5cGU7XG4gICAgfVxuICAgIGdldCBtZXRhZGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdk1ldGFkYXRhO1xuICAgIH1cbn1cbmV4cG9ydHMuUGxhdGZvcm1FdmVudCA9IFBsYXRmb3JtRXZlbnQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBsYXRmb3JtRXZlbnQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/PlatformEvent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Promise.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Promise.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.marshalPromiseToCallbacks = exports.Sink = exports.Deferred = exports.PromiseResultEventSource = exports.PromiseResult = exports.PromiseState = void 0;\n/* eslint-disable max-classes-per-file, @typescript-eslint/typedef */\nvar PromiseState;\n(function (PromiseState) {\n    PromiseState[PromiseState[\"None\"] = 0] = \"None\";\n    PromiseState[PromiseState[\"Resolved\"] = 1] = \"Resolved\";\n    PromiseState[PromiseState[\"Rejected\"] = 2] = \"Rejected\";\n})(PromiseState = exports.PromiseState || (exports.PromiseState = {}));\nclass PromiseResult {\n    constructor(promiseResultEventSource) {\n        this.throwIfError = () => {\n            if (this.isError) {\n                throw this.error;\n            }\n        };\n        promiseResultEventSource.on((result) => {\n            if (!this.privIsCompleted) {\n                this.privIsCompleted = true;\n                this.privIsError = false;\n                this.privResult = result;\n            }\n        }, (error) => {\n            if (!this.privIsCompleted) {\n                this.privIsCompleted = true;\n                this.privIsError = true;\n                this.privError = error;\n            }\n        });\n    }\n    get isCompleted() {\n        return this.privIsCompleted;\n    }\n    get isError() {\n        return this.privIsError;\n    }\n    get error() {\n        return this.privError;\n    }\n    get result() {\n        return this.privResult;\n    }\n}\nexports.PromiseResult = PromiseResult;\nclass PromiseResultEventSource {\n    constructor() {\n        this.setResult = (result) => {\n            this.privOnSetResult(result);\n        };\n        this.setError = (error) => {\n            this.privOnSetError(error);\n        };\n        this.on = (onSetResult, onSetError) => {\n            this.privOnSetResult = onSetResult;\n            this.privOnSetError = onSetError;\n        };\n    }\n}\nexports.PromiseResultEventSource = PromiseResultEventSource;\nclass Deferred {\n    constructor() {\n        this.resolve = (result) => {\n            this.privResolve(result);\n            return this;\n        };\n        this.reject = (error) => {\n            this.privReject(error);\n            return this;\n        };\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        this.privPromise = new Promise((resolve, reject) => {\n            this.privResolve = resolve;\n            this.privReject = reject;\n        });\n    }\n    get promise() {\n        return this.privPromise;\n    }\n}\nexports.Deferred = Deferred;\nclass Sink {\n    constructor() {\n        this.privState = PromiseState.None;\n        this.privPromiseResult = null;\n        this.privPromiseResultEvents = null;\n        this.privSuccessHandlers = [];\n        this.privErrorHandlers = [];\n        this.privPromiseResultEvents = new PromiseResultEventSource();\n        this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\n    }\n    get state() {\n        return this.privState;\n    }\n    get result() {\n        return this.privPromiseResult;\n    }\n    resolve(result) {\n        if (this.privState !== PromiseState.None) {\n            throw new Error(\"'Cannot resolve a completed promise'\");\n        }\n        this.privState = PromiseState.Resolved;\n        this.privPromiseResultEvents.setResult(result);\n        for (let i = 0; i < this.privSuccessHandlers.length; i++) {\n            this.executeSuccessCallback(result, this.privSuccessHandlers[i], this.privErrorHandlers[i]);\n        }\n        this.detachHandlers();\n    }\n    reject(error) {\n        if (this.privState !== PromiseState.None) {\n            throw new Error(\"'Cannot reject a completed promise'\");\n        }\n        this.privState = PromiseState.Rejected;\n        this.privPromiseResultEvents.setError(error);\n        for (const errorHandler of this.privErrorHandlers) {\n            this.executeErrorCallback(error, errorHandler);\n        }\n        this.detachHandlers();\n    }\n    on(successCallback, errorCallback) {\n        if (successCallback == null) {\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            successCallback = () => { };\n        }\n        if (this.privState === PromiseState.None) {\n            this.privSuccessHandlers.push(successCallback);\n            this.privErrorHandlers.push(errorCallback);\n        }\n        else {\n            if (this.privState === PromiseState.Resolved) {\n                this.executeSuccessCallback(this.privPromiseResult.result, successCallback, errorCallback);\n            }\n            else if (this.privState === PromiseState.Rejected) {\n                this.executeErrorCallback(this.privPromiseResult.error, errorCallback);\n            }\n            this.detachHandlers();\n        }\n    }\n    executeSuccessCallback(result, successCallback, errorCallback) {\n        try {\n            successCallback(result);\n        }\n        catch (e) {\n            this.executeErrorCallback(`'Unhandled callback error: ${e}'`, errorCallback);\n        }\n    }\n    executeErrorCallback(error, errorCallback) {\n        if (errorCallback) {\n            try {\n                errorCallback(error);\n            }\n            catch (e) {\n                throw new Error(`'Unhandled callback error: ${e}. InnerError: ${error}'`);\n            }\n        }\n        else {\n            throw new Error(`'Unhandled error: ${error}'`);\n        }\n    }\n    detachHandlers() {\n        this.privErrorHandlers = [];\n        this.privSuccessHandlers = [];\n    }\n}\nexports.Sink = Sink;\n// eslint-disable-next-line prefer-arrow/prefer-arrow-functions\nfunction marshalPromiseToCallbacks(promise, cb, err) {\n    promise.then((val) => {\n        try {\n            if (!!cb) {\n                cb(val);\n            }\n        }\n        catch (error) {\n            if (!!err) {\n                try {\n                    if (error instanceof Error) {\n                        const typedError = error;\n                        err(typedError.name + \": \" + typedError.message);\n                    }\n                    else {\n                        err(error);\n                    }\n                    // eslint-disable-next-line no-empty\n                }\n                catch (error) { }\n            }\n        }\n    }, (error) => {\n        if (!!err) {\n            try {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n                // eslint-disable-next-line no-empty\n            }\n            catch (error) { }\n        }\n    });\n}\nexports.marshalPromiseToCallbacks = marshalPromiseToCallbacks;\n\n//# sourceMappingURL=Promise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Promise.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Queue.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Queue.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Queue = void 0;\nconst Error_js_1 = __webpack_require__(/*! ./Error.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js\");\nconst List_js_1 = __webpack_require__(/*! ./List.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/List.js\");\nconst Promise_js_1 = __webpack_require__(/*! ./Promise.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Promise.js\");\nvar SubscriberType;\n(function (SubscriberType) {\n    SubscriberType[SubscriberType[\"Dequeue\"] = 0] = \"Dequeue\";\n    SubscriberType[SubscriberType[\"Peek\"] = 1] = \"Peek\";\n})(SubscriberType || (SubscriberType = {}));\nclass Queue {\n    constructor(list) {\n        this.privPromiseStore = new List_js_1.List();\n        this.privIsDrainInProgress = false;\n        this.privIsDisposing = false;\n        this.privDisposeReason = null;\n        this.privList = list ? list : new List_js_1.List();\n        this.privDetachables = [];\n        this.privSubscribers = new List_js_1.List();\n        this.privDetachables.push(this.privList.onAdded(() => this.drain()));\n    }\n    enqueue(item) {\n        this.throwIfDispose();\n        this.enqueueFromPromise(new Promise((resolve) => resolve(item)));\n    }\n    enqueueFromPromise(promise) {\n        this.throwIfDispose();\n        promise.then((val) => {\n            this.privList.add(val);\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n        }, () => { });\n    }\n    dequeue() {\n        this.throwIfDispose();\n        const deferredSubscriber = new Promise_js_1.Deferred();\n        if (this.privSubscribers) {\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Dequeue });\n            this.drain();\n        }\n        return deferredSubscriber.promise;\n    }\n    peek() {\n        this.throwIfDispose();\n        const deferredSubscriber = new Promise_js_1.Deferred();\n        const subs = this.privSubscribers;\n        if (subs) {\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Peek });\n            this.drain();\n        }\n        return deferredSubscriber.promise;\n    }\n    length() {\n        this.throwIfDispose();\n        return this.privList.length();\n    }\n    isDisposed() {\n        return this.privSubscribers == null;\n    }\n    async drainAndDispose(pendingItemProcessor, reason) {\n        if (!this.isDisposed() && !this.privIsDisposing) {\n            this.privDisposeReason = reason;\n            this.privIsDisposing = true;\n            const subs = this.privSubscribers;\n            if (subs) {\n                while (subs.length() > 0) {\n                    const subscriber = subs.removeFirst();\n                    // TODO: this needs work (Resolve(null) instead?).\n                    subscriber.deferral.resolve(undefined);\n                    // subscriber.deferral.reject(\"Disposed\");\n                }\n                // note: this block assumes cooperative multitasking, i.e.,\n                // between the if-statement and the assignment there are no\n                // thread switches.\n                // Reason is that between the initial const = this.; and this\n                // point there is the derral.resolve() operation that might have\n                // caused recursive calls to the Queue, especially, calling\n                // Dispose() on the queue alredy (which would reset the var\n                // here to null!).\n                // That should generally hold true for javascript...\n                if (this.privSubscribers === subs) {\n                    this.privSubscribers = subs;\n                }\n            }\n            for (const detachable of this.privDetachables) {\n                await detachable.detach();\n            }\n            if (this.privPromiseStore.length() > 0 && pendingItemProcessor) {\n                const promiseArray = [];\n                this.privPromiseStore.toArray().forEach((wrapper) => {\n                    promiseArray.push(wrapper);\n                });\n                return Promise.all(promiseArray).finally(() => {\n                    this.privSubscribers = null;\n                    this.privList.forEach((item) => {\n                        pendingItemProcessor(item);\n                    });\n                    this.privList = null;\n                    return;\n                }).then();\n            }\n            else {\n                this.privSubscribers = null;\n                this.privList = null;\n            }\n        }\n    }\n    async dispose(reason) {\n        await this.drainAndDispose(null, reason);\n    }\n    drain() {\n        if (!this.privIsDrainInProgress && !this.privIsDisposing) {\n            this.privIsDrainInProgress = true;\n            const subs = this.privSubscribers;\n            const lists = this.privList;\n            if (subs && lists) {\n                while (lists.length() > 0 && subs.length() > 0 && !this.privIsDisposing) {\n                    const subscriber = subs.removeFirst();\n                    if (subscriber.type === SubscriberType.Peek) {\n                        subscriber.deferral.resolve(lists.first());\n                    }\n                    else {\n                        const dequeuedItem = lists.removeFirst();\n                        subscriber.deferral.resolve(dequeuedItem);\n                    }\n                }\n                // note: this block assumes cooperative multitasking, i.e.,\n                // between the if-statement and the assignment there are no\n                // thread switches.\n                // Reason is that between the initial const = this.; and this\n                // point there is the derral.resolve() operation that might have\n                // caused recursive calls to the Queue, especially, calling\n                // Dispose() on the queue alredy (which would reset the var\n                // here to null!).\n                // That should generally hold true for javascript...\n                if (this.privSubscribers === subs) {\n                    this.privSubscribers = subs;\n                }\n                // note: this block assumes cooperative multitasking, i.e.,\n                // between the if-statement and the assignment there are no\n                // thread switches.\n                // Reason is that between the initial const = this.; and this\n                // point there is the derral.resolve() operation that might have\n                // caused recursive calls to the Queue, especially, calling\n                // Dispose() on the queue alredy (which would reset the var\n                // here to null!).\n                // That should generally hold true for javascript...\n                if (this.privList === lists) {\n                    this.privList = lists;\n                }\n            }\n            this.privIsDrainInProgress = false;\n        }\n    }\n    throwIfDispose() {\n        if (this.isDisposed()) {\n            if (this.privDisposeReason) {\n                throw new Error_js_1.InvalidOperationError(this.privDisposeReason);\n            }\n            throw new Error_js_1.ObjectDisposedError(\"Queue\");\n        }\n        else if (this.privIsDisposing) {\n            throw new Error_js_1.InvalidOperationError(\"Queue disposing\");\n        }\n    }\n}\nexports.Queue = Queue;\n\n//# sourceMappingURL=Queue.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Queue.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RawWebsocketMessage.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RawWebsocketMessage.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RawWebsocketMessage = void 0;\nconst ConnectionMessage_js_1 = __webpack_require__(/*! ./ConnectionMessage.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/ConnectionMessage.js\");\nconst Error_js_1 = __webpack_require__(/*! ./Error.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js\");\nconst Guid_js_1 = __webpack_require__(/*! ./Guid.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js\");\nclass RawWebsocketMessage {\n    constructor(messageType, payload, id) {\n        this.privPayload = null;\n        if (!payload) {\n            throw new Error_js_1.ArgumentNullError(\"payload\");\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (messageType === ConnectionMessage_js_1.MessageType.Binary && Object.getPrototypeOf(payload).constructor.name !== \"ArrayBuffer\") {\n            throw new Error_js_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n        }\n        if (messageType === ConnectionMessage_js_1.MessageType.Text && !(typeof (payload) === \"string\")) {\n            throw new Error_js_1.InvalidOperationError(\"Payload must be a string\");\n        }\n        this.privMessageType = messageType;\n        this.privPayload = payload;\n        this.privId = id ? id : Guid_js_1.createNoDashGuid();\n    }\n    get messageType() {\n        return this.privMessageType;\n    }\n    get payload() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return this.privPayload;\n    }\n    get textContent() {\n        if (this.privMessageType === ConnectionMessage_js_1.MessageType.Binary) {\n            throw new Error_js_1.InvalidOperationError(\"Not supported for binary message\");\n        }\n        return this.privPayload;\n    }\n    get binaryContent() {\n        if (this.privMessageType === ConnectionMessage_js_1.MessageType.Text) {\n            throw new Error_js_1.InvalidOperationError(\"Not supported for text message\");\n        }\n        return this.privPayload;\n    }\n    get id() {\n        return this.privId;\n    }\n}\nexports.RawWebsocketMessage = RawWebsocketMessage;\n\n//# sourceMappingURL=RawWebsocketMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9SYXdXZWJzb2NrZXRNZXNzYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQiwrQkFBK0IsbUJBQU8sQ0FBQyx1SUFBd0I7QUFDL0QsbUJBQW1CLG1CQUFPLENBQUMsK0dBQVk7QUFDdkMsa0JBQWtCLG1CQUFPLENBQUMsNkdBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7O0FBRTNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9SYXdXZWJzb2NrZXRNZXNzYWdlLmpzP2YwMWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFzc2lnbm1lbnQgKi9cbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SYXdXZWJzb2NrZXRNZXNzYWdlID0gdm9pZCAwO1xuY29uc3QgQ29ubmVjdGlvbk1lc3NhZ2VfanNfMSA9IHJlcXVpcmUoXCIuL0Nvbm5lY3Rpb25NZXNzYWdlLmpzXCIpO1xuY29uc3QgRXJyb3JfanNfMSA9IHJlcXVpcmUoXCIuL0Vycm9yLmpzXCIpO1xuY29uc3QgR3VpZF9qc18xID0gcmVxdWlyZShcIi4vR3VpZC5qc1wiKTtcbmNsYXNzIFJhd1dlYnNvY2tldE1lc3NhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2VUeXBlLCBwYXlsb2FkLCBpZCkge1xuICAgICAgICB0aGlzLnByaXZQYXlsb2FkID0gbnVsbDtcbiAgICAgICAgaWYgKCFwYXlsb2FkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3JfanNfMS5Bcmd1bWVudE51bGxFcnJvcihcInBheWxvYWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgICAgICBpZiAobWVzc2FnZVR5cGUgPT09IENvbm5lY3Rpb25NZXNzYWdlX2pzXzEuTWVzc2FnZVR5cGUuQmluYXJ5ICYmIE9iamVjdC5nZXRQcm90b3R5cGVPZihwYXlsb2FkKS5jb25zdHJ1Y3Rvci5uYW1lICE9PSBcIkFycmF5QnVmZmVyXCIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcl9qc18xLkludmFsaWRPcGVyYXRpb25FcnJvcihcIlBheWxvYWQgbXVzdCBiZSBBcnJheUJ1ZmZlclwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWVzc2FnZVR5cGUgPT09IENvbm5lY3Rpb25NZXNzYWdlX2pzXzEuTWVzc2FnZVR5cGUuVGV4dCAmJiAhKHR5cGVvZiAocGF5bG9hZCkgPT09IFwic3RyaW5nXCIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3JfanNfMS5JbnZhbGlkT3BlcmF0aW9uRXJyb3IoXCJQYXlsb2FkIG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcml2TWVzc2FnZVR5cGUgPSBtZXNzYWdlVHlwZTtcbiAgICAgICAgdGhpcy5wcml2UGF5bG9hZCA9IHBheWxvYWQ7XG4gICAgICAgIHRoaXMucHJpdklkID0gaWQgPyBpZCA6IEd1aWRfanNfMS5jcmVhdGVOb0Rhc2hHdWlkKCk7XG4gICAgfVxuICAgIGdldCBtZXNzYWdlVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdk1lc3NhZ2VUeXBlO1xuICAgIH1cbiAgICBnZXQgcGF5bG9hZCgpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtcmV0dXJuXG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQYXlsb2FkO1xuICAgIH1cbiAgICBnZXQgdGV4dENvbnRlbnQoKSB7XG4gICAgICAgIGlmICh0aGlzLnByaXZNZXNzYWdlVHlwZSA9PT0gQ29ubmVjdGlvbk1lc3NhZ2VfanNfMS5NZXNzYWdlVHlwZS5CaW5hcnkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcl9qc18xLkludmFsaWRPcGVyYXRpb25FcnJvcihcIk5vdCBzdXBwb3J0ZWQgZm9yIGJpbmFyeSBtZXNzYWdlXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQYXlsb2FkO1xuICAgIH1cbiAgICBnZXQgYmluYXJ5Q29udGVudCgpIHtcbiAgICAgICAgaWYgKHRoaXMucHJpdk1lc3NhZ2VUeXBlID09PSBDb25uZWN0aW9uTWVzc2FnZV9qc18xLk1lc3NhZ2VUeXBlLlRleHQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcl9qc18xLkludmFsaWRPcGVyYXRpb25FcnJvcihcIk5vdCBzdXBwb3J0ZWQgZm9yIHRleHQgbWVzc2FnZVwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5wcml2UGF5bG9hZDtcbiAgICB9XG4gICAgZ2V0IGlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2SWQ7XG4gICAgfVxufVxuZXhwb3J0cy5SYXdXZWJzb2NrZXRNZXNzYWdlID0gUmF3V2Vic29ja2V0TWVzc2FnZTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmF3V2Vic29ja2V0TWVzc2FnZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RawWebsocketMessage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RiffPcmEncoder.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RiffPcmEncoder.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RiffPcmEncoder = void 0;\nclass RiffPcmEncoder {\n    constructor(actualSampleRate, desiredSampleRate) {\n        this.privActualSampleRate = actualSampleRate;\n        this.privDesiredSampleRate = desiredSampleRate;\n    }\n    encode(actualAudioFrame) {\n        const audioFrame = this.downSampleAudioFrame(actualAudioFrame, this.privActualSampleRate, this.privDesiredSampleRate);\n        if (!audioFrame) {\n            return null;\n        }\n        const audioLength = audioFrame.length * 2;\n        const buffer = new ArrayBuffer(audioLength);\n        const view = new DataView(buffer);\n        this.floatTo16BitPCM(view, 0, audioFrame);\n        return buffer;\n    }\n    setString(view, offset, str) {\n        for (let i = 0; i < str.length; i++) {\n            view.setUint8(offset + i, str.charCodeAt(i));\n        }\n    }\n    floatTo16BitPCM(view, offset, input) {\n        for (let i = 0; i < input.length; i++, offset += 2) {\n            const s = Math.max(-1, Math.min(1, input[i]));\n            view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n    }\n    downSampleAudioFrame(srcFrame, srcRate, dstRate) {\n        if (!srcFrame) {\n            return null;\n        }\n        if (dstRate === srcRate || dstRate > srcRate) {\n            return srcFrame;\n        }\n        const ratio = srcRate / dstRate;\n        const dstLength = Math.round(srcFrame.length / ratio);\n        const dstFrame = new Float32Array(dstLength);\n        let srcOffset = 0;\n        let dstOffset = 0;\n        while (dstOffset < dstLength) {\n            const nextSrcOffset = Math.round((dstOffset + 1) * ratio);\n            let accum = 0;\n            let count = 0;\n            while (srcOffset < nextSrcOffset && srcOffset < srcFrame.length) {\n                accum += srcFrame[srcOffset++];\n                count++;\n            }\n            dstFrame[dstOffset++] = accum / count;\n        }\n        return dstFrame;\n    }\n}\nexports.RiffPcmEncoder = RiffPcmEncoder;\n\n//# sourceMappingURL=RiffPcmEncoder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9SaWZmUGNtRW5jb2Rlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0JBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtCQUFrQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCOztBQUV0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9jb21tb24vUmlmZlBjbUVuY29kZXIuanM/MzAxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SaWZmUGNtRW5jb2RlciA9IHZvaWQgMDtcbmNsYXNzIFJpZmZQY21FbmNvZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihhY3R1YWxTYW1wbGVSYXRlLCBkZXNpcmVkU2FtcGxlUmF0ZSkge1xuICAgICAgICB0aGlzLnByaXZBY3R1YWxTYW1wbGVSYXRlID0gYWN0dWFsU2FtcGxlUmF0ZTtcbiAgICAgICAgdGhpcy5wcml2RGVzaXJlZFNhbXBsZVJhdGUgPSBkZXNpcmVkU2FtcGxlUmF0ZTtcbiAgICB9XG4gICAgZW5jb2RlKGFjdHVhbEF1ZGlvRnJhbWUpIHtcbiAgICAgICAgY29uc3QgYXVkaW9GcmFtZSA9IHRoaXMuZG93blNhbXBsZUF1ZGlvRnJhbWUoYWN0dWFsQXVkaW9GcmFtZSwgdGhpcy5wcml2QWN0dWFsU2FtcGxlUmF0ZSwgdGhpcy5wcml2RGVzaXJlZFNhbXBsZVJhdGUpO1xuICAgICAgICBpZiAoIWF1ZGlvRnJhbWUpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGF1ZGlvTGVuZ3RoID0gYXVkaW9GcmFtZS5sZW5ndGggKiAyO1xuICAgICAgICBjb25zdCBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoYXVkaW9MZW5ndGgpO1xuICAgICAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGJ1ZmZlcik7XG4gICAgICAgIHRoaXMuZmxvYXRUbzE2Qml0UENNKHZpZXcsIDAsIGF1ZGlvRnJhbWUpO1xuICAgICAgICByZXR1cm4gYnVmZmVyO1xuICAgIH1cbiAgICBzZXRTdHJpbmcodmlldywgb2Zmc2V0LCBzdHIpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZpZXcuc2V0VWludDgob2Zmc2V0ICsgaSwgc3RyLmNoYXJDb2RlQXQoaSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZsb2F0VG8xNkJpdFBDTSh2aWV3LCBvZmZzZXQsIGlucHV0KSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyssIG9mZnNldCArPSAyKSB7XG4gICAgICAgICAgICBjb25zdCBzID0gTWF0aC5tYXgoLTEsIE1hdGgubWluKDEsIGlucHV0W2ldKSk7XG4gICAgICAgICAgICB2aWV3LnNldEludDE2KG9mZnNldCwgcyA8IDAgPyBzICogMHg4MDAwIDogcyAqIDB4N0ZGRiwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZG93blNhbXBsZUF1ZGlvRnJhbWUoc3JjRnJhbWUsIHNyY1JhdGUsIGRzdFJhdGUpIHtcbiAgICAgICAgaWYgKCFzcmNGcmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGRzdFJhdGUgPT09IHNyY1JhdGUgfHwgZHN0UmF0ZSA+IHNyY1JhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiBzcmNGcmFtZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByYXRpbyA9IHNyY1JhdGUgLyBkc3RSYXRlO1xuICAgICAgICBjb25zdCBkc3RMZW5ndGggPSBNYXRoLnJvdW5kKHNyY0ZyYW1lLmxlbmd0aCAvIHJhdGlvKTtcbiAgICAgICAgY29uc3QgZHN0RnJhbWUgPSBuZXcgRmxvYXQzMkFycmF5KGRzdExlbmd0aCk7XG4gICAgICAgIGxldCBzcmNPZmZzZXQgPSAwO1xuICAgICAgICBsZXQgZHN0T2Zmc2V0ID0gMDtcbiAgICAgICAgd2hpbGUgKGRzdE9mZnNldCA8IGRzdExlbmd0aCkge1xuICAgICAgICAgICAgY29uc3QgbmV4dFNyY09mZnNldCA9IE1hdGgucm91bmQoKGRzdE9mZnNldCArIDEpICogcmF0aW8pO1xuICAgICAgICAgICAgbGV0IGFjY3VtID0gMDtcbiAgICAgICAgICAgIGxldCBjb3VudCA9IDA7XG4gICAgICAgICAgICB3aGlsZSAoc3JjT2Zmc2V0IDwgbmV4dFNyY09mZnNldCAmJiBzcmNPZmZzZXQgPCBzcmNGcmFtZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBhY2N1bSArPSBzcmNGcmFtZVtzcmNPZmZzZXQrK107XG4gICAgICAgICAgICAgICAgY291bnQrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRzdEZyYW1lW2RzdE9mZnNldCsrXSA9IGFjY3VtIC8gY291bnQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRzdEZyYW1lO1xuICAgIH1cbn1cbmV4cG9ydHMuUmlmZlBjbUVuY29kZXIgPSBSaWZmUGNtRW5jb2RlcjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmlmZlBjbUVuY29kZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/RiffPcmEncoder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Stream.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Stream.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Stream = void 0;\nconst Error_js_1 = __webpack_require__(/*! ./Error.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js\");\nconst Guid_js_1 = __webpack_require__(/*! ./Guid.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js\");\nconst Queue_js_1 = __webpack_require__(/*! ./Queue.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Queue.js\");\nclass Stream {\n    constructor(streamId) {\n        this.privIsWriteEnded = false;\n        this.privIsReadEnded = false;\n        this.privId = streamId ? streamId : Guid_js_1.createNoDashGuid();\n        this.privReaderQueue = new Queue_js_1.Queue();\n    }\n    get isClosed() {\n        return this.privIsWriteEnded;\n    }\n    get isReadEnded() {\n        return this.privIsReadEnded;\n    }\n    get id() {\n        return this.privId;\n    }\n    close() {\n        if (!this.privIsWriteEnded) {\n            this.writeStreamChunk({\n                buffer: null,\n                isEnd: true,\n                timeReceived: Date.now(),\n            });\n            this.privIsWriteEnded = true;\n        }\n    }\n    writeStreamChunk(streamChunk) {\n        this.throwIfClosed();\n        if (!this.privReaderQueue.isDisposed()) {\n            try {\n                this.privReaderQueue.enqueue(streamChunk);\n            }\n            catch (e) {\n                // Do nothing\n            }\n        }\n    }\n    read() {\n        if (this.privIsReadEnded) {\n            throw new Error_js_1.InvalidOperationError(\"Stream read has already finished\");\n        }\n        return this.privReaderQueue\n            .dequeue()\n            .then(async (streamChunk) => {\n            if (streamChunk === undefined || streamChunk.isEnd) {\n                await this.privReaderQueue.dispose(\"End of stream reached\");\n            }\n            return streamChunk;\n        });\n    }\n    readEnded() {\n        if (!this.privIsReadEnded) {\n            this.privIsReadEnded = true;\n            this.privReaderQueue = new Queue_js_1.Queue();\n        }\n    }\n    throwIfClosed() {\n        if (this.privIsWriteEnded) {\n            throw new Error_js_1.InvalidOperationError(\"Stream closed\");\n        }\n    }\n}\nexports.Stream = Stream;\n\n//# sourceMappingURL=Stream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9TdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxtQkFBbUIsbUJBQU8sQ0FBQywrR0FBWTtBQUN2QyxrQkFBa0IsbUJBQU8sQ0FBQyw2R0FBVztBQUNyQyxtQkFBbUIsbUJBQU8sQ0FBQywrR0FBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7O0FBRWQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uL1N0cmVhbS5qcz8zYTE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN0cmVhbSA9IHZvaWQgMDtcbmNvbnN0IEVycm9yX2pzXzEgPSByZXF1aXJlKFwiLi9FcnJvci5qc1wiKTtcbmNvbnN0IEd1aWRfanNfMSA9IHJlcXVpcmUoXCIuL0d1aWQuanNcIik7XG5jb25zdCBRdWV1ZV9qc18xID0gcmVxdWlyZShcIi4vUXVldWUuanNcIik7XG5jbGFzcyBTdHJlYW0ge1xuICAgIGNvbnN0cnVjdG9yKHN0cmVhbUlkKSB7XG4gICAgICAgIHRoaXMucHJpdklzV3JpdGVFbmRlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnByaXZJc1JlYWRFbmRlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnByaXZJZCA9IHN0cmVhbUlkID8gc3RyZWFtSWQgOiBHdWlkX2pzXzEuY3JlYXRlTm9EYXNoR3VpZCgpO1xuICAgICAgICB0aGlzLnByaXZSZWFkZXJRdWV1ZSA9IG5ldyBRdWV1ZV9qc18xLlF1ZXVlKCk7XG4gICAgfVxuICAgIGdldCBpc0Nsb3NlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdklzV3JpdGVFbmRlZDtcbiAgICB9XG4gICAgZ2V0IGlzUmVhZEVuZGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2SXNSZWFkRW5kZWQ7XG4gICAgfVxuICAgIGdldCBpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdklkO1xuICAgIH1cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnByaXZJc1dyaXRlRW5kZWQpIHtcbiAgICAgICAgICAgIHRoaXMud3JpdGVTdHJlYW1DaHVuayh7XG4gICAgICAgICAgICAgICAgYnVmZmVyOiBudWxsLFxuICAgICAgICAgICAgICAgIGlzRW5kOiB0cnVlLFxuICAgICAgICAgICAgICAgIHRpbWVSZWNlaXZlZDogRGF0ZS5ub3coKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5wcml2SXNXcml0ZUVuZGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB3cml0ZVN0cmVhbUNodW5rKHN0cmVhbUNodW5rKSB7XG4gICAgICAgIHRoaXMudGhyb3dJZkNsb3NlZCgpO1xuICAgICAgICBpZiAoIXRoaXMucHJpdlJlYWRlclF1ZXVlLmlzRGlzcG9zZWQoKSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0aGlzLnByaXZSZWFkZXJRdWV1ZS5lbnF1ZXVlKHN0cmVhbUNodW5rKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgLy8gRG8gbm90aGluZ1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJlYWQoKSB7XG4gICAgICAgIGlmICh0aGlzLnByaXZJc1JlYWRFbmRlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yX2pzXzEuSW52YWxpZE9wZXJhdGlvbkVycm9yKFwiU3RyZWFtIHJlYWQgaGFzIGFscmVhZHkgZmluaXNoZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlJlYWRlclF1ZXVlXG4gICAgICAgICAgICAuZGVxdWV1ZSgpXG4gICAgICAgICAgICAudGhlbihhc3luYyAoc3RyZWFtQ2h1bmspID0+IHtcbiAgICAgICAgICAgIGlmIChzdHJlYW1DaHVuayA9PT0gdW5kZWZpbmVkIHx8IHN0cmVhbUNodW5rLmlzRW5kKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5wcml2UmVhZGVyUXVldWUuZGlzcG9zZShcIkVuZCBvZiBzdHJlYW0gcmVhY2hlZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBzdHJlYW1DaHVuaztcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlYWRFbmRlZCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnByaXZJc1JlYWRFbmRlZCkge1xuICAgICAgICAgICAgdGhpcy5wcml2SXNSZWFkRW5kZWQgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5wcml2UmVhZGVyUXVldWUgPSBuZXcgUXVldWVfanNfMS5RdWV1ZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRocm93SWZDbG9zZWQoKSB7XG4gICAgICAgIGlmICh0aGlzLnByaXZJc1dyaXRlRW5kZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcl9qc18xLkludmFsaWRPcGVyYXRpb25FcnJvcihcIlN0cmVhbSBjbG9zZWRcIik7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlN0cmVhbSA9IFN0cmVhbTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RyZWFtLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Stream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/StringUtils.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/StringUtils.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StringUtils = void 0;\n/**\n * String helper functions\n */\nclass StringUtils {\n    /**\n     * Formats a string by replacing the named {keys} in the string with the values contained in the replacement dictionary.\n     * @param format The format string that contains the parts to replace surrounded by {}. For example: \"wss://{region}.cts.speech.microsoft.com\".\n     * If your string needs to contain a { or } you can use the {{ and }} escape sequences respectively.\n     * @param replacements The dictionary of replacements. If a replacement is not found, it is replaced with an empty string\n     * @returns The formatted string. If you pass in a null or undefined format string, an empty string will be returned\n     */\n    static formatString(format, replacements) {\n        if (!format) {\n            return \"\";\n        }\n        if (!replacements) {\n            return format;\n        }\n        let formatted = \"\";\n        let key = \"\";\n        const appendToFormatted = (str) => {\n            formatted += str;\n        };\n        const appendToKey = (str) => {\n            key += str;\n        };\n        let appendFunc = appendToFormatted;\n        for (let i = 0; i < format.length; i++) {\n            const c = format[i];\n            const next = i + 1 < format.length ? format[i + 1] : \"\";\n            switch (c) {\n                case \"{\":\n                    if (next === \"{\") {\n                        appendFunc(\"{\");\n                        i++;\n                    }\n                    else {\n                        appendFunc = appendToKey;\n                    }\n                    break;\n                case \"}\":\n                    if (next === \"}\") {\n                        appendFunc(\"}\");\n                        i++;\n                    }\n                    else {\n                        if (replacements.hasOwnProperty(key)) {\n                            formatted += replacements[key];\n                        }\n                        appendFunc = appendToFormatted;\n                        key = \"\";\n                    }\n                    break;\n                default:\n                    appendFunc(c);\n                    break;\n            }\n        }\n        return formatted;\n    }\n}\nexports.StringUtils = StringUtils;\n\n//# sourceMappingURL=StringUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9TdHJpbmdVdGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsTUFBTTtBQUN0RCwwRkFBMEYsdUJBQXVCLE9BQU87QUFDeEgsMkNBQTJDLEtBQUssbUJBQW1CLE9BQU87QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsbUJBQW1CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QixtQ0FBbUM7QUFDbkMscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QixtQ0FBbUM7QUFDbkMscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjs7QUFFbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uL1N0cmluZ1V0aWxzLmpzP2Q5YWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3RyaW5nVXRpbHMgPSB2b2lkIDA7XG4vKipcbiAqIFN0cmluZyBoZWxwZXIgZnVuY3Rpb25zXG4gKi9cbmNsYXNzIFN0cmluZ1V0aWxzIHtcbiAgICAvKipcbiAgICAgKiBGb3JtYXRzIGEgc3RyaW5nIGJ5IHJlcGxhY2luZyB0aGUgbmFtZWQge2tleXN9IGluIHRoZSBzdHJpbmcgd2l0aCB0aGUgdmFsdWVzIGNvbnRhaW5lZCBpbiB0aGUgcmVwbGFjZW1lbnQgZGljdGlvbmFyeS5cbiAgICAgKiBAcGFyYW0gZm9ybWF0IFRoZSBmb3JtYXQgc3RyaW5nIHRoYXQgY29udGFpbnMgdGhlIHBhcnRzIHRvIHJlcGxhY2Ugc3Vycm91bmRlZCBieSB7fS4gRm9yIGV4YW1wbGU6IFwid3NzOi8ve3JlZ2lvbn0uY3RzLnNwZWVjaC5taWNyb3NvZnQuY29tXCIuXG4gICAgICogSWYgeW91ciBzdHJpbmcgbmVlZHMgdG8gY29udGFpbiBhIHsgb3IgfSB5b3UgY2FuIHVzZSB0aGUge3sgYW5kIH19IGVzY2FwZSBzZXF1ZW5jZXMgcmVzcGVjdGl2ZWx5LlxuICAgICAqIEBwYXJhbSByZXBsYWNlbWVudHMgVGhlIGRpY3Rpb25hcnkgb2YgcmVwbGFjZW1lbnRzLiBJZiBhIHJlcGxhY2VtZW50IGlzIG5vdCBmb3VuZCwgaXQgaXMgcmVwbGFjZWQgd2l0aCBhbiBlbXB0eSBzdHJpbmdcbiAgICAgKiBAcmV0dXJucyBUaGUgZm9ybWF0dGVkIHN0cmluZy4gSWYgeW91IHBhc3MgaW4gYSBudWxsIG9yIHVuZGVmaW5lZCBmb3JtYXQgc3RyaW5nLCBhbiBlbXB0eSBzdHJpbmcgd2lsbCBiZSByZXR1cm5lZFxuICAgICAqL1xuICAgIHN0YXRpYyBmb3JtYXRTdHJpbmcoZm9ybWF0LCByZXBsYWNlbWVudHMpIHtcbiAgICAgICAgaWYgKCFmb3JtYXQpIHtcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICB9XG4gICAgICAgIGlmICghcmVwbGFjZW1lbnRzKSB7XG4gICAgICAgICAgICByZXR1cm4gZm9ybWF0O1xuICAgICAgICB9XG4gICAgICAgIGxldCBmb3JtYXR0ZWQgPSBcIlwiO1xuICAgICAgICBsZXQga2V5ID0gXCJcIjtcbiAgICAgICAgY29uc3QgYXBwZW5kVG9Gb3JtYXR0ZWQgPSAoc3RyKSA9PiB7XG4gICAgICAgICAgICBmb3JtYXR0ZWQgKz0gc3RyO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBhcHBlbmRUb0tleSA9IChzdHIpID0+IHtcbiAgICAgICAgICAgIGtleSArPSBzdHI7XG4gICAgICAgIH07XG4gICAgICAgIGxldCBhcHBlbmRGdW5jID0gYXBwZW5kVG9Gb3JtYXR0ZWQ7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZm9ybWF0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBjID0gZm9ybWF0W2ldO1xuICAgICAgICAgICAgY29uc3QgbmV4dCA9IGkgKyAxIDwgZm9ybWF0Lmxlbmd0aCA/IGZvcm1hdFtpICsgMV0gOiBcIlwiO1xuICAgICAgICAgICAgc3dpdGNoIChjKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcIntcIjpcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5leHQgPT09IFwie1wiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcHBlbmRGdW5jKFwie1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcGVuZEZ1bmMgPSBhcHBlbmRUb0tleTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwifVwiOlxuICAgICAgICAgICAgICAgICAgICBpZiAobmV4dCA9PT0gXCJ9XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcGVuZEZ1bmMoXCJ9XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcGxhY2VtZW50cy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0dGVkICs9IHJlcGxhY2VtZW50c1trZXldO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwZW5kRnVuYyA9IGFwcGVuZFRvRm9ybWF0dGVkO1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5ID0gXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBhcHBlbmRGdW5jKGMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZm9ybWF0dGVkO1xuICAgIH1cbn1cbmV4cG9ydHMuU3RyaW5nVXRpbHMgPSBTdHJpbmdVdGlscztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RyaW5nVXRpbHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/StringUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Timeout.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Timeout.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Timeout = void 0;\nclass Timeout {\n    static load() {\n        // Prefilling the Maps with a function indexed by zero is necessary to be compliant with the specification.\n        const scheduledTimeoutFunctions = new Map([[0, () => { }]]); // eslint-disable-line @typescript-eslint/no-empty-function\n        const unhandledRequests = new Map();\n        // eslint-disable-next-line\n        const workerScript = `!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=14)}([function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return i})),n.d(t,\"b\",(function(){return u})),n.d(t,\"c\",(function(){return a})),n.d(t,\"d\",(function(){return d}));const r=new Map,o=new Map,i=e=>{const t=r.get(e);if(void 0===t)throw new Error('There is no interval scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),r.delete(e)},u=e=>{const t=o.get(e);if(void 0===t)throw new Error('There is no timeout scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),o.delete(e)},f=(e,t)=>{let n,r;if(\"performance\"in self){const o=performance.now();n=o,r=e-Math.max(0,o-t)}else n=Date.now(),r=e;return{expected:n+r,remainingDelay:r}},c=(e,t,n,r)=>{const o=\"performance\"in self?performance.now():Date.now();o>n?postMessage({id:null,method:\"call\",params:{timerId:t}}):e.set(t,setTimeout(c,n-o,e,t,n))},a=(e,t,n)=>{const{expected:o,remainingDelay:i}=f(e,n);r.set(t,setTimeout(c,i,r,t,o))},d=(e,t,n)=>{const{expected:r,remainingDelay:i}=f(e,n);o.set(t,setTimeout(c,i,o,t,r))}},function(e,t,n){\"use strict\";n.r(t);var r=n(2);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(3);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(4);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o);var f=n(5);for(var o in f)\"default\"!==o&&function(e){n.d(t,e,(function(){return f[e]}))}(o);var c=n(6);for(var o in c)\"default\"!==o&&function(e){n.d(t,e,(function(){return c[e]}))}(o);var a=n(7);for(var o in a)\"default\"!==o&&function(e){n.d(t,e,(function(){return a[e]}))}(o);var d=n(8);for(var o in d)\"default\"!==o&&function(e){n.d(t,e,(function(){return d[e]}))}(o);var s=n(9);for(var o in s)\"default\"!==o&&function(e){n.d(t,e,(function(){return s[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(11);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(12);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(13);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(0),o=n(1);for(var i in o)\"default\"!==i&&function(e){n.d(t,e,(function(){return o[e]}))}(i);var u=n(10);for(var i in u)\"default\"!==i&&function(e){n.d(t,e,(function(){return u[e]}))}(i);addEventListener(\"message\",({data:e})=>{try{if(\"clear\"===e.method){const{id:t,params:{timerId:n}}=e;Object(r.b)(n),postMessage({error:null,id:t})}else{if(\"set\"!==e.method)throw new Error('The given method \"'.concat(e.method,'\" is not supported'));{const{params:{delay:t,now:n,timerId:o}}=e;Object(r.d)(t,o,n)}}}catch(t){postMessage({error:{message:t.message},id:e.id,result:null})}})}]);`;\n        const workerUrl = \"data:text/javascript;base64,\" + btoa(workerScript);\n        const worker = new Worker(workerUrl);\n        worker.addEventListener(\"message\", ({ data }) => {\n            if (Timeout.isCallNotification(data)) {\n                const { params: { timerId } } = data;\n                const idOrFunc = scheduledTimeoutFunctions.get(timerId);\n                if (typeof idOrFunc === \"number\") {\n                    const unhandledTimerId = unhandledRequests.get(idOrFunc);\n                    if (unhandledTimerId === undefined ||\n                        unhandledTimerId !== timerId) {\n                        throw new Error(\"The timer is in an undefined state.\");\n                    }\n                }\n                else if (typeof idOrFunc !== \"undefined\") {\n                    idOrFunc();\n                    // A timeout can be safely deleted because it is only called once.\n                    scheduledTimeoutFunctions.delete(timerId);\n                }\n                else {\n                    throw new Error(\"The timer is in an undefined state.\");\n                }\n            }\n            else if (Timeout.isClearResponse(data)) {\n                const { id } = data;\n                const unhandledTimerId = unhandledRequests.get(id);\n                if (unhandledTimerId === undefined) {\n                    throw new Error(\"The timer is in an undefined state.\");\n                }\n                unhandledRequests.delete(id);\n                scheduledTimeoutFunctions.delete(unhandledTimerId);\n            }\n            else {\n                const { error: { message } } = data;\n                throw new Error(message);\n            }\n        });\n        const clearTimeout = (timerId) => {\n            const id = Math.random();\n            unhandledRequests.set(id, timerId);\n            scheduledTimeoutFunctions.set(timerId, id);\n            worker.postMessage({\n                id,\n                method: \"clear\",\n                params: { timerId }\n            });\n        };\n        const setTimeout = (func, delay) => {\n            const timerId = Math.random();\n            scheduledTimeoutFunctions.set(timerId, func);\n            worker.postMessage({\n                id: null,\n                method: \"set\",\n                params: {\n                    delay,\n                    now: performance.now(),\n                    timerId\n                }\n            });\n            return timerId;\n        };\n        return {\n            clearTimeout,\n            setTimeout\n        };\n    }\n    static loadWorkerTimers() {\n        return () => {\n            if (Timeout.workerTimers !== null) {\n                return Timeout.workerTimers;\n            }\n            Timeout.workerTimers = Timeout.load();\n            return Timeout.workerTimers;\n        };\n    }\n    static isCallNotification(message) {\n        return message.method !== undefined && message.method === \"call\";\n    }\n    static isClearResponse(message) {\n        return message.error === null && typeof message.id === \"number\";\n    }\n}\nexports.Timeout = Timeout;\nTimeout.workerTimers = null;\nTimeout.clearTimeout = (timerId) => Timeout.timers().clearTimeout(timerId);\nTimeout.setTimeout = (func, delay) => Timeout.timers().setTimeout(func, delay);\nTimeout.timers = Timeout.loadWorkerTimers();\n\n//# sourceMappingURL=Timeout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL2NvbW1vbi9UaW1lb3V0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLEtBQUs7QUFDckU7QUFDQTtBQUNBLDJDQUEyQyxTQUFTLGNBQWMsNEJBQTRCLFlBQVkscUJBQXFCLDJEQUEyRCxnQ0FBZ0MscUNBQXFDLG9CQUFvQixFQUFFLGlCQUFpQiw0RkFBNEYsZUFBZSx3Q0FBd0MsU0FBUyxFQUFFLG1CQUFtQiw4QkFBOEIscURBQXFELDBCQUEwQiw2Q0FBNkMsc0JBQXNCLDZEQUE2RCxZQUFZLGVBQWUsU0FBUyxpQkFBaUIsaUNBQWlDLGlCQUFpQixZQUFZLFVBQVUsc0JBQXNCLG1CQUFtQixpREFBaUQsa0JBQWtCLGtCQUFrQixhQUFhLHNCQUFzQixTQUFTLHlCQUF5QixTQUFTLHlCQUF5QixTQUFTLHlCQUF5QixTQUFTLEdBQUcsZ0NBQWdDLGlCQUFpQixtR0FBbUcsNEJBQTRCLE9BQU8saUJBQWlCLGtHQUFrRyw0QkFBNEIsV0FBVyxRQUFRLHlCQUF5QiwwQkFBMEIsd0JBQXdCLHNCQUFzQixPQUFPLCtCQUErQixlQUFlLDBEQUEwRCxpQkFBaUIsOEJBQThCLFdBQVcsbUNBQW1DLGFBQWEsTUFBTSw0QkFBNEIsUUFBUSwrQkFBK0IsYUFBYSxNQUFNLDRCQUE0QixRQUFRLGdDQUFnQyxpQkFBaUIsYUFBYSxPQUFPLFdBQVcsMENBQTBDLG9CQUFvQixZQUFZLEdBQUcsSUFBSSxXQUFXLDBDQUEwQyxvQkFBb0IsWUFBWSxHQUFHLElBQUksV0FBVywwQ0FBMEMsb0JBQW9CLFlBQVksR0FBRyxJQUFJLFdBQVcsMENBQTBDLG9CQUFvQixZQUFZLEdBQUcsSUFBSSxXQUFXLDBDQUEwQyxvQkFBb0IsWUFBWSxHQUFHLElBQUksV0FBVywwQ0FBMEMsb0JBQW9CLFlBQVksR0FBRyxJQUFJLFdBQVcsMENBQTBDLG9CQUFvQixZQUFZLEdBQUcsSUFBSSxXQUFXLDBDQUEwQyxvQkFBb0IsWUFBWSxHQUFHLElBQUksZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixpQkFBaUIsYUFBYSxPQUFPLFlBQVksMENBQTBDLG9CQUFvQixZQUFZLEdBQUcsSUFBSSxZQUFZLDBDQUEwQyxvQkFBb0IsWUFBWSxHQUFHLElBQUksWUFBWSwwQ0FBMEMsb0JBQW9CLFlBQVksR0FBRyxJQUFJLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGlCQUFpQixhQUFhLE9BQU8sa0JBQWtCLDBDQUEwQyxvQkFBb0IsWUFBWSxHQUFHLElBQUksWUFBWSwwQ0FBMEMsb0JBQW9CLFlBQVksR0FBRyxJQUFJLDZCQUE2QixPQUFPLElBQUksSUFBSSx1QkFBdUIsTUFBTSxhQUFhLFdBQVcsR0FBRyw0QkFBNEIsZ0JBQWdCLEVBQUUsS0FBSyxpR0FBaUcsTUFBTSxRQUFRLHlCQUF5QixHQUFHLHFCQUFxQixTQUFTLGFBQWEsT0FBTyxrQkFBa0IscUJBQXFCLEdBQUcsRUFBRSxHQUFHO0FBQ2h1SCxnREFBZ0Q7QUFDaEQ7QUFDQSw4Q0FBOEMsTUFBTTtBQUNwRDtBQUNBLHdCQUF3QixVQUFVLFlBQVk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLEtBQUs7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixTQUFTLFlBQVk7QUFDN0M7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvY29tbW9uL1RpbWVvdXQuanM/MGQ1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UaW1lb3V0ID0gdm9pZCAwO1xuY2xhc3MgVGltZW91dCB7XG4gICAgc3RhdGljIGxvYWQoKSB7XG4gICAgICAgIC8vIFByZWZpbGxpbmcgdGhlIE1hcHMgd2l0aCBhIGZ1bmN0aW9uIGluZGV4ZWQgYnkgemVybyBpcyBuZWNlc3NhcnkgdG8gYmUgY29tcGxpYW50IHdpdGggdGhlIHNwZWNpZmljYXRpb24uXG4gICAgICAgIGNvbnN0IHNjaGVkdWxlZFRpbWVvdXRGdW5jdGlvbnMgPSBuZXcgTWFwKFtbMCwgKCkgPT4geyB9XV0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxuICAgICAgICBjb25zdCB1bmhhbmRsZWRSZXF1ZXN0cyA9IG5ldyBNYXAoKTtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICAgIGNvbnN0IHdvcmtlclNjcmlwdCA9IGAhZnVuY3Rpb24oZSl7dmFyIHQ9e307ZnVuY3Rpb24gbihyKXtpZih0W3JdKXJldHVybiB0W3JdLmV4cG9ydHM7dmFyIG89dFtyXT17aTpyLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIGVbcl0uY2FsbChvLmV4cG9ydHMsbyxvLmV4cG9ydHMsbiksby5sPSEwLG8uZXhwb3J0c31uLm09ZSxuLmM9dCxuLmQ9ZnVuY3Rpb24oZSx0LHIpe24ubyhlLHQpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHtlbnVtZXJhYmxlOiEwLGdldDpyfSl9LG4ucj1mdW5jdGlvbihlKXtcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSxuLnQ9ZnVuY3Rpb24oZSx0KXtpZigxJnQmJihlPW4oZSkpLDgmdClyZXR1cm4gZTtpZig0JnQmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHI9T2JqZWN0LmNyZWF0ZShudWxsKTtpZihuLnIociksT2JqZWN0LmRlZmluZVByb3BlcnR5KHIsXCJkZWZhdWx0XCIse2VudW1lcmFibGU6ITAsdmFsdWU6ZX0pLDImdCYmXCJzdHJpbmdcIiE9dHlwZW9mIGUpZm9yKHZhciBvIGluIGUpbi5kKHIsbyxmdW5jdGlvbih0KXtyZXR1cm4gZVt0XX0uYmluZChudWxsLG8pKTtyZXR1cm4gcn0sbi5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiBuLmQodCxcImFcIix0KSx0fSxuLm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LG4ucD1cIlwiLG4obi5zPTE0KX0oW2Z1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtuLmQodCxcImFcIiwoZnVuY3Rpb24oKXtyZXR1cm4gaX0pKSxuLmQodCxcImJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdX0pKSxuLmQodCxcImNcIiwoZnVuY3Rpb24oKXtyZXR1cm4gYX0pKSxuLmQodCxcImRcIiwoZnVuY3Rpb24oKXtyZXR1cm4gZH0pKTtjb25zdCByPW5ldyBNYXAsbz1uZXcgTWFwLGk9ZT0+e2NvbnN0IHQ9ci5nZXQoZSk7aWYodm9pZCAwPT09dCl0aHJvdyBuZXcgRXJyb3IoJ1RoZXJlIGlzIG5vIGludGVydmFsIHNjaGVkdWxlZCB3aXRoIHRoZSBnaXZlbiBpZCBcIicuY29uY2F0KGUsJ1wiLicpKTtjbGVhclRpbWVvdXQodCksci5kZWxldGUoZSl9LHU9ZT0+e2NvbnN0IHQ9by5nZXQoZSk7aWYodm9pZCAwPT09dCl0aHJvdyBuZXcgRXJyb3IoJ1RoZXJlIGlzIG5vIHRpbWVvdXQgc2NoZWR1bGVkIHdpdGggdGhlIGdpdmVuIGlkIFwiJy5jb25jYXQoZSwnXCIuJykpO2NsZWFyVGltZW91dCh0KSxvLmRlbGV0ZShlKX0sZj0oZSx0KT0+e2xldCBuLHI7aWYoXCJwZXJmb3JtYW5jZVwiaW4gc2VsZil7Y29uc3Qgbz1wZXJmb3JtYW5jZS5ub3coKTtuPW8scj1lLU1hdGgubWF4KDAsby10KX1lbHNlIG49RGF0ZS5ub3coKSxyPWU7cmV0dXJue2V4cGVjdGVkOm4rcixyZW1haW5pbmdEZWxheTpyfX0sYz0oZSx0LG4scik9Pntjb25zdCBvPVwicGVyZm9ybWFuY2VcImluIHNlbGY/cGVyZm9ybWFuY2Uubm93KCk6RGF0ZS5ub3coKTtvPm4/cG9zdE1lc3NhZ2Uoe2lkOm51bGwsbWV0aG9kOlwiY2FsbFwiLHBhcmFtczp7dGltZXJJZDp0fX0pOmUuc2V0KHQsc2V0VGltZW91dChjLG4tbyxlLHQsbikpfSxhPShlLHQsbik9Pntjb25zdHtleHBlY3RlZDpvLHJlbWFpbmluZ0RlbGF5Oml9PWYoZSxuKTtyLnNldCh0LHNldFRpbWVvdXQoYyxpLHIsdCxvKSl9LGQ9KGUsdCxuKT0+e2NvbnN0e2V4cGVjdGVkOnIscmVtYWluaW5nRGVsYXk6aX09ZihlLG4pO28uc2V0KHQsc2V0VGltZW91dChjLGksbyx0LHIpKX19LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtuLnIodCk7dmFyIHI9bigyKTtmb3IodmFyIG8gaW4gcilcImRlZmF1bHRcIiE9PW8mJmZ1bmN0aW9uKGUpe24uZCh0LGUsKGZ1bmN0aW9uKCl7cmV0dXJuIHJbZV19KSl9KG8pO3ZhciBpPW4oMyk7Zm9yKHZhciBvIGluIGkpXCJkZWZhdWx0XCIhPT1vJiZmdW5jdGlvbihlKXtuLmQodCxlLChmdW5jdGlvbigpe3JldHVybiBpW2VdfSkpfShvKTt2YXIgdT1uKDQpO2Zvcih2YXIgbyBpbiB1KVwiZGVmYXVsdFwiIT09byYmZnVuY3Rpb24oZSl7bi5kKHQsZSwoZnVuY3Rpb24oKXtyZXR1cm4gdVtlXX0pKX0obyk7dmFyIGY9big1KTtmb3IodmFyIG8gaW4gZilcImRlZmF1bHRcIiE9PW8mJmZ1bmN0aW9uKGUpe24uZCh0LGUsKGZ1bmN0aW9uKCl7cmV0dXJuIGZbZV19KSl9KG8pO3ZhciBjPW4oNik7Zm9yKHZhciBvIGluIGMpXCJkZWZhdWx0XCIhPT1vJiZmdW5jdGlvbihlKXtuLmQodCxlLChmdW5jdGlvbigpe3JldHVybiBjW2VdfSkpfShvKTt2YXIgYT1uKDcpO2Zvcih2YXIgbyBpbiBhKVwiZGVmYXVsdFwiIT09byYmZnVuY3Rpb24oZSl7bi5kKHQsZSwoZnVuY3Rpb24oKXtyZXR1cm4gYVtlXX0pKX0obyk7dmFyIGQ9big4KTtmb3IodmFyIG8gaW4gZClcImRlZmF1bHRcIiE9PW8mJmZ1bmN0aW9uKGUpe24uZCh0LGUsKGZ1bmN0aW9uKCl7cmV0dXJuIGRbZV19KSl9KG8pO3ZhciBzPW4oOSk7Zm9yKHZhciBvIGluIHMpXCJkZWZhdWx0XCIhPT1vJiZmdW5jdGlvbihlKXtuLmQodCxlLChmdW5jdGlvbigpe3JldHVybiBzW2VdfSkpfShvKX0sZnVuY3Rpb24oZSx0KXt9LGZ1bmN0aW9uKGUsdCl7fSxmdW5jdGlvbihlLHQpe30sZnVuY3Rpb24oZSx0KXt9LGZ1bmN0aW9uKGUsdCl7fSxmdW5jdGlvbihlLHQpe30sZnVuY3Rpb24oZSx0KXt9LGZ1bmN0aW9uKGUsdCl7fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKHQpO3ZhciByPW4oMTEpO2Zvcih2YXIgbyBpbiByKVwiZGVmYXVsdFwiIT09byYmZnVuY3Rpb24oZSl7bi5kKHQsZSwoZnVuY3Rpb24oKXtyZXR1cm4gcltlXX0pKX0obyk7dmFyIGk9bigxMik7Zm9yKHZhciBvIGluIGkpXCJkZWZhdWx0XCIhPT1vJiZmdW5jdGlvbihlKXtuLmQodCxlLChmdW5jdGlvbigpe3JldHVybiBpW2VdfSkpfShvKTt2YXIgdT1uKDEzKTtmb3IodmFyIG8gaW4gdSlcImRlZmF1bHRcIiE9PW8mJmZ1bmN0aW9uKGUpe24uZCh0LGUsKGZ1bmN0aW9uKCl7cmV0dXJuIHVbZV19KSl9KG8pfSxmdW5jdGlvbihlLHQpe30sZnVuY3Rpb24oZSx0KXt9LGZ1bmN0aW9uKGUsdCl7fSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7bi5yKHQpO3ZhciByPW4oMCksbz1uKDEpO2Zvcih2YXIgaSBpbiBvKVwiZGVmYXVsdFwiIT09aSYmZnVuY3Rpb24oZSl7bi5kKHQsZSwoZnVuY3Rpb24oKXtyZXR1cm4gb1tlXX0pKX0oaSk7dmFyIHU9bigxMCk7Zm9yKHZhciBpIGluIHUpXCJkZWZhdWx0XCIhPT1pJiZmdW5jdGlvbihlKXtuLmQodCxlLChmdW5jdGlvbigpe3JldHVybiB1W2VdfSkpfShpKTthZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCh7ZGF0YTplfSk9Pnt0cnl7aWYoXCJjbGVhclwiPT09ZS5tZXRob2Qpe2NvbnN0e2lkOnQscGFyYW1zOnt0aW1lcklkOm59fT1lO09iamVjdChyLmIpKG4pLHBvc3RNZXNzYWdlKHtlcnJvcjpudWxsLGlkOnR9KX1lbHNle2lmKFwic2V0XCIhPT1lLm1ldGhvZCl0aHJvdyBuZXcgRXJyb3IoJ1RoZSBnaXZlbiBtZXRob2QgXCInLmNvbmNhdChlLm1ldGhvZCwnXCIgaXMgbm90IHN1cHBvcnRlZCcpKTt7Y29uc3R7cGFyYW1zOntkZWxheTp0LG5vdzpuLHRpbWVySWQ6b319PWU7T2JqZWN0KHIuZCkodCxvLG4pfX19Y2F0Y2godCl7cG9zdE1lc3NhZ2Uoe2Vycm9yOnttZXNzYWdlOnQubWVzc2FnZX0saWQ6ZS5pZCxyZXN1bHQ6bnVsbH0pfX0pfV0pO2A7XG4gICAgICAgIGNvbnN0IHdvcmtlclVybCA9IFwiZGF0YTp0ZXh0L2phdmFzY3JpcHQ7YmFzZTY0LFwiICsgYnRvYSh3b3JrZXJTY3JpcHQpO1xuICAgICAgICBjb25zdCB3b3JrZXIgPSBuZXcgV29ya2VyKHdvcmtlclVybCk7XG4gICAgICAgIHdvcmtlci5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCAoeyBkYXRhIH0pID0+IHtcbiAgICAgICAgICAgIGlmIChUaW1lb3V0LmlzQ2FsbE5vdGlmaWNhdGlvbihkYXRhKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgcGFyYW1zOiB7IHRpbWVySWQgfSB9ID0gZGF0YTtcbiAgICAgICAgICAgICAgICBjb25zdCBpZE9yRnVuYyA9IHNjaGVkdWxlZFRpbWVvdXRGdW5jdGlvbnMuZ2V0KHRpbWVySWQpO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaWRPckZ1bmMgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdW5oYW5kbGVkVGltZXJJZCA9IHVuaGFuZGxlZFJlcXVlc3RzLmdldChpZE9yRnVuYyk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh1bmhhbmRsZWRUaW1lcklkID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIHVuaGFuZGxlZFRpbWVySWQgIT09IHRpbWVySWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSB0aW1lciBpcyBpbiBhbiB1bmRlZmluZWQgc3RhdGUuXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBpZE9yRnVuYyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgICAgICAgICBpZE9yRnVuYygpO1xuICAgICAgICAgICAgICAgICAgICAvLyBBIHRpbWVvdXQgY2FuIGJlIHNhZmVseSBkZWxldGVkIGJlY2F1c2UgaXQgaXMgb25seSBjYWxsZWQgb25jZS5cbiAgICAgICAgICAgICAgICAgICAgc2NoZWR1bGVkVGltZW91dEZ1bmN0aW9ucy5kZWxldGUodGltZXJJZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgdGltZXIgaXMgaW4gYW4gdW5kZWZpbmVkIHN0YXRlLlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChUaW1lb3V0LmlzQ2xlYXJSZXNwb25zZShkYXRhKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgaWQgfSA9IGRhdGE7XG4gICAgICAgICAgICAgICAgY29uc3QgdW5oYW5kbGVkVGltZXJJZCA9IHVuaGFuZGxlZFJlcXVlc3RzLmdldChpZCk7XG4gICAgICAgICAgICAgICAgaWYgKHVuaGFuZGxlZFRpbWVySWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgdGltZXIgaXMgaW4gYW4gdW5kZWZpbmVkIHN0YXRlLlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdW5oYW5kbGVkUmVxdWVzdHMuZGVsZXRlKGlkKTtcbiAgICAgICAgICAgICAgICBzY2hlZHVsZWRUaW1lb3V0RnVuY3Rpb25zLmRlbGV0ZSh1bmhhbmRsZWRUaW1lcklkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgZXJyb3I6IHsgbWVzc2FnZSB9IH0gPSBkYXRhO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IGNsZWFyVGltZW91dCA9ICh0aW1lcklkKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IE1hdGgucmFuZG9tKCk7XG4gICAgICAgICAgICB1bmhhbmRsZWRSZXF1ZXN0cy5zZXQoaWQsIHRpbWVySWQpO1xuICAgICAgICAgICAgc2NoZWR1bGVkVGltZW91dEZ1bmN0aW9ucy5zZXQodGltZXJJZCwgaWQpO1xuICAgICAgICAgICAgd29ya2VyLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICBpZCxcbiAgICAgICAgICAgICAgICBtZXRob2Q6IFwiY2xlYXJcIixcbiAgICAgICAgICAgICAgICBwYXJhbXM6IHsgdGltZXJJZCB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgc2V0VGltZW91dCA9IChmdW5jLCBkZWxheSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGltZXJJZCA9IE1hdGgucmFuZG9tKCk7XG4gICAgICAgICAgICBzY2hlZHVsZWRUaW1lb3V0RnVuY3Rpb25zLnNldCh0aW1lcklkLCBmdW5jKTtcbiAgICAgICAgICAgIHdvcmtlci5wb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgaWQ6IG51bGwsXG4gICAgICAgICAgICAgICAgbWV0aG9kOiBcInNldFwiLFxuICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICBkZWxheSxcbiAgICAgICAgICAgICAgICAgICAgbm93OiBwZXJmb3JtYW5jZS5ub3coKSxcbiAgICAgICAgICAgICAgICAgICAgdGltZXJJZFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHRpbWVySWQ7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQsXG4gICAgICAgICAgICBzZXRUaW1lb3V0XG4gICAgICAgIH07XG4gICAgfVxuICAgIHN0YXRpYyBsb2FkV29ya2VyVGltZXJzKCkge1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKFRpbWVvdXQud29ya2VyVGltZXJzICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFRpbWVvdXQud29ya2VyVGltZXJzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgVGltZW91dC53b3JrZXJUaW1lcnMgPSBUaW1lb3V0LmxvYWQoKTtcbiAgICAgICAgICAgIHJldHVybiBUaW1lb3V0LndvcmtlclRpbWVycztcbiAgICAgICAgfTtcbiAgICB9XG4gICAgc3RhdGljIGlzQ2FsbE5vdGlmaWNhdGlvbihtZXNzYWdlKSB7XG4gICAgICAgIHJldHVybiBtZXNzYWdlLm1ldGhvZCAhPT0gdW5kZWZpbmVkICYmIG1lc3NhZ2UubWV0aG9kID09PSBcImNhbGxcIjtcbiAgICB9XG4gICAgc3RhdGljIGlzQ2xlYXJSZXNwb25zZShtZXNzYWdlKSB7XG4gICAgICAgIHJldHVybiBtZXNzYWdlLmVycm9yID09PSBudWxsICYmIHR5cGVvZiBtZXNzYWdlLmlkID09PSBcIm51bWJlclwiO1xuICAgIH1cbn1cbmV4cG9ydHMuVGltZW91dCA9IFRpbWVvdXQ7XG5UaW1lb3V0LndvcmtlclRpbWVycyA9IG51bGw7XG5UaW1lb3V0LmNsZWFyVGltZW91dCA9ICh0aW1lcklkKSA9PiBUaW1lb3V0LnRpbWVycygpLmNsZWFyVGltZW91dCh0aW1lcklkKTtcblRpbWVvdXQuc2V0VGltZW91dCA9IChmdW5jLCBkZWxheSkgPT4gVGltZW91dC50aW1lcnMoKS5zZXRUaW1lb3V0KGZ1bmMsIGRlbGF5KTtcblRpbWVvdXQudGltZXJzID0gVGltZW91dC5sb2FkV29ya2VyVGltZXJzKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRpbWVvdXQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Timeout.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ActivityReceivedEventArgs.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ActivityReceivedEventArgs.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ActivityReceivedEventArgs = void 0;\n/**\n * Defines contents of received message/events.\n * @class ActivityReceivedEventArgs\n */\nclass ActivityReceivedEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {any} activity - The activity..\n     */\n    constructor(activity, audioStream) {\n        this.privActivity = activity;\n        this.privAudioStream = audioStream;\n    }\n    /**\n     * Gets the received activity\n     * @member ActivityReceivedEventArgs.prototype.activity\n     * @function\n     * @public\n     * @returns {any} the received activity.\n     */\n    get activity() {\n        return this.privActivity;\n    }\n    get audioStream() {\n        return this.privAudioStream;\n    }\n}\nexports.ActivityReceivedEventArgs = ActivityReceivedEventArgs;\n\n//# sourceMappingURL=ActivityReceivedEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BY3Rpdml0eVJlY2VpdmVkRXZlbnRBcmdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsS0FBSztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixLQUFLO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7O0FBRWpDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BY3Rpdml0eVJlY2VpdmVkRXZlbnRBcmdzLmpzP2Q4MGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWN0aXZpdHlSZWNlaXZlZEV2ZW50QXJncyA9IHZvaWQgMDtcbi8qKlxuICogRGVmaW5lcyBjb250ZW50cyBvZiByZWNlaXZlZCBtZXNzYWdlL2V2ZW50cy5cbiAqIEBjbGFzcyBBY3Rpdml0eVJlY2VpdmVkRXZlbnRBcmdzXG4gKi9cbmNsYXNzIEFjdGl2aXR5UmVjZWl2ZWRFdmVudEFyZ3Mge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHthbnl9IGFjdGl2aXR5IC0gVGhlIGFjdGl2aXR5Li5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihhY3Rpdml0eSwgYXVkaW9TdHJlYW0pIHtcbiAgICAgICAgdGhpcy5wcml2QWN0aXZpdHkgPSBhY3Rpdml0eTtcbiAgICAgICAgdGhpcy5wcml2QXVkaW9TdHJlYW0gPSBhdWRpb1N0cmVhbTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgcmVjZWl2ZWQgYWN0aXZpdHlcbiAgICAgKiBAbWVtYmVyIEFjdGl2aXR5UmVjZWl2ZWRFdmVudEFyZ3MucHJvdG90eXBlLmFjdGl2aXR5XG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHthbnl9IHRoZSByZWNlaXZlZCBhY3Rpdml0eS5cbiAgICAgKi9cbiAgICBnZXQgYWN0aXZpdHkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZBY3Rpdml0eTtcbiAgICB9XG4gICAgZ2V0IGF1ZGlvU3RyZWFtKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2QXVkaW9TdHJlYW07XG4gICAgfVxufVxuZXhwb3J0cy5BY3Rpdml0eVJlY2VpdmVkRXZlbnRBcmdzID0gQWN0aXZpdHlSZWNlaXZlZEV2ZW50QXJncztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWN0aXZpdHlSZWNlaXZlZEV2ZW50QXJncy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ActivityReceivedEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioConfig.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioConfig.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AudioOutputConfigImpl = exports.AudioConfigImpl = exports.AudioConfig = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst AudioFileWriter_js_1 = __webpack_require__(/*! ./AudioFileWriter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioFileWriter.js\");\nconst AudioInputStream_js_1 = __webpack_require__(/*! ./AudioInputStream.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioInputStream.js\");\nconst AudioOutputStream_js_1 = __webpack_require__(/*! ./AudioOutputStream.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputStream.js\");\n/**\n * Represents audio input configuration used for specifying what type of input to use (microphone, file, stream).\n * @class AudioConfig\n * Updated in version 1.11.0\n */\nclass AudioConfig {\n    /**\n     * Creates an AudioConfig object representing the default microphone on the system.\n     * @member AudioConfig.fromDefaultMicrophoneInput\n     * @function\n     * @public\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromDefaultMicrophoneInput() {\n        const pcmRecorder = new Exports_js_1.PcmRecorder(true);\n        return new AudioConfigImpl(new Exports_js_1.MicAudioSource(pcmRecorder));\n    }\n    /**\n     * Creates an AudioConfig object representing a microphone with the specified device ID.\n     * @member AudioConfig.fromMicrophoneInput\n     * @function\n     * @public\n     * @param {string | undefined} deviceId - Specifies the device ID of the microphone to be used.\n     * Default microphone is used the value is omitted.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromMicrophoneInput(deviceId) {\n        const pcmRecorder = new Exports_js_1.PcmRecorder(true);\n        return new AudioConfigImpl(new Exports_js_1.MicAudioSource(pcmRecorder, deviceId));\n    }\n    /**\n     * Creates an AudioConfig object representing the specified file.\n     * @member AudioConfig.fromWavFileInput\n     * @function\n     * @public\n     * @param {File} fileName - Specifies the audio input file. Currently, only WAV / PCM is supported.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromWavFileInput(file, name = \"unnamedBuffer.wav\") {\n        return new AudioConfigImpl(new Exports_js_1.FileAudioSource(file, name));\n    }\n    /**\n     * Creates an AudioConfig object representing the specified stream.\n     * @member AudioConfig.fromStreamInput\n     * @function\n     * @public\n     * @param {AudioInputStream | PullAudioInputStreamCallback | MediaStream} audioStream - Specifies the custom audio input\n     * stream. Currently, only WAV / PCM is supported.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromStreamInput(audioStream) {\n        if (audioStream instanceof Exports_js_2.PullAudioInputStreamCallback) {\n            return new AudioConfigImpl(new AudioInputStream_js_1.PullAudioInputStreamImpl(audioStream));\n        }\n        if (audioStream instanceof Exports_js_2.AudioInputStream) {\n            return new AudioConfigImpl(audioStream);\n        }\n        if (typeof MediaStream !== \"undefined\" && audioStream instanceof MediaStream) {\n            const pcmRecorder = new Exports_js_1.PcmRecorder(false);\n            return new AudioConfigImpl(new Exports_js_1.MicAudioSource(pcmRecorder, null, null, audioStream));\n        }\n        throw new Error(\"Not Supported Type\");\n    }\n    /**\n     * Creates an AudioConfig object representing the default speaker.\n     * @member AudioConfig.fromDefaultSpeakerOutput\n     * @function\n     * @public\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.11.0\n     */\n    static fromDefaultSpeakerOutput() {\n        return new AudioOutputConfigImpl(new Exports_js_2.SpeakerAudioDestination());\n    }\n    /**\n     * Creates an AudioConfig object representing the custom IPlayer object.\n     * You can use the IPlayer object to control pause, resume, etc.\n     * @member AudioConfig.fromSpeakerOutput\n     * @function\n     * @public\n     * @param {IPlayer} player - the IPlayer object for playback.\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.12.0\n     */\n    static fromSpeakerOutput(player) {\n        if (player === undefined) {\n            return AudioConfig.fromDefaultSpeakerOutput();\n        }\n        if (player instanceof Exports_js_2.SpeakerAudioDestination) {\n            return new AudioOutputConfigImpl(player);\n        }\n        throw new Error(\"Not Supported Type\");\n    }\n    /**\n     * Creates an AudioConfig object representing a specified output audio file\n     * @member AudioConfig.fromAudioFileOutput\n     * @function\n     * @public\n     * @param {PathLike} filename - the filename of the output audio file\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.11.0\n     */\n    static fromAudioFileOutput(filename) {\n        return new AudioOutputConfigImpl(new AudioFileWriter_js_1.AudioFileWriter(filename));\n    }\n    /**\n     * Creates an AudioConfig object representing a specified audio output stream\n     * @member AudioConfig.fromStreamOutput\n     * @function\n     * @public\n     * @param {AudioOutputStream | PushAudioOutputStreamCallback} audioStream - Specifies the custom audio output\n     * stream.\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.11.0\n     */\n    static fromStreamOutput(audioStream) {\n        if (audioStream instanceof Exports_js_2.PushAudioOutputStreamCallback) {\n            return new AudioOutputConfigImpl(new AudioOutputStream_js_1.PushAudioOutputStreamImpl(audioStream));\n        }\n        if (audioStream instanceof Exports_js_2.PushAudioOutputStream) {\n            return new AudioOutputConfigImpl(audioStream);\n        }\n        if (audioStream instanceof Exports_js_2.PullAudioOutputStream) {\n            return new AudioOutputConfigImpl(audioStream);\n        }\n        throw new Error(\"Not Supported Type\");\n    }\n}\nexports.AudioConfig = AudioConfig;\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @private\n * @class AudioConfigImpl\n */\nclass AudioConfigImpl extends AudioConfig {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {IAudioSource} source - An audio source.\n     */\n    constructor(source) {\n        super();\n        this.privSource = source;\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return this.privSource.format;\n    }\n    /**\n     * @member AudioConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, err) {\n        this.privSource.turnOff().then(() => {\n            if (!!cb) {\n                cb();\n            }\n        }, (error) => {\n            if (!!err) {\n                err(error);\n            }\n        });\n    }\n    /**\n     * @member AudioConfigImpl.prototype.id\n     * @function\n     * @public\n     */\n    id() {\n        return this.privSource.id();\n    }\n    /**\n     * @member AudioConfigImpl.prototype.turnOn\n     * @function\n     * @public\n     * @returns {Promise<void>} A promise.\n     */\n    turnOn() {\n        return this.privSource.turnOn();\n    }\n    /**\n     * @member AudioConfigImpl.prototype.attach\n     * @function\n     * @public\n     * @param {string} audioNodeId - The audio node id.\n     * @returns {Promise<IAudioStreamNode>} A promise.\n     */\n    attach(audioNodeId) {\n        return this.privSource.attach(audioNodeId);\n    }\n    /**\n     * @member AudioConfigImpl.prototype.detach\n     * @function\n     * @public\n     * @param {string} audioNodeId - The audio node id.\n     */\n    detach(audioNodeId) {\n        return this.privSource.detach(audioNodeId);\n    }\n    /**\n     * @member AudioConfigImpl.prototype.turnOff\n     * @function\n     * @public\n     * @returns {Promise<void>} A promise.\n     */\n    turnOff() {\n        return this.privSource.turnOff();\n    }\n    /**\n     * @member AudioConfigImpl.prototype.events\n     * @function\n     * @public\n     * @returns {EventSource<AudioSourceEvent>} An event source for audio events.\n     */\n    get events() {\n        return this.privSource.events;\n    }\n    setProperty(name, value) {\n        Contracts_js_1.Contracts.throwIfNull(value, \"value\");\n        if (undefined !== this.privSource.setProperty) {\n            this.privSource.setProperty(name, value);\n        }\n        else {\n            throw new Error(\"This AudioConfig instance does not support setting properties.\");\n        }\n    }\n    getProperty(name, def) {\n        if (undefined !== this.privSource.getProperty) {\n            return this.privSource.getProperty(name, def);\n        }\n        else {\n            throw new Error(\"This AudioConfig instance does not support getting properties.\");\n        }\n        return def;\n    }\n    get deviceInfo() {\n        return this.privSource.deviceInfo;\n    }\n}\nexports.AudioConfigImpl = AudioConfigImpl;\nclass AudioOutputConfigImpl extends AudioConfig {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {IAudioDestination} destination - An audio destination.\n     */\n    constructor(destination) {\n        super();\n        this.privDestination = destination;\n    }\n    set format(format) {\n        this.privDestination.format = format;\n    }\n    write(buffer) {\n        this.privDestination.write(buffer);\n    }\n    close() {\n        this.privDestination.close();\n    }\n    id() {\n        return this.privDestination.id();\n    }\n    setProperty() {\n        throw new Error(\"This AudioConfig instance does not support setting properties.\");\n    }\n    getProperty() {\n        throw new Error(\"This AudioConfig instance does not support getting properties.\");\n    }\n}\nexports.AudioOutputConfigImpl = AudioOutputConfigImpl;\n\n//# sourceMappingURL=AudioConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdWRpby9BdWRpb0NvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcsdUJBQXVCLEdBQUcsbUJBQW1CO0FBQzdFLHFCQUFxQixtQkFBTyxDQUFDLDhJQUFpQztBQUM5RCx1QkFBdUIsbUJBQU8sQ0FBQyxxSEFBaUI7QUFDaEQscUJBQXFCLG1CQUFPLENBQUMsaUhBQWU7QUFDNUMsNkJBQTZCLG1CQUFPLENBQUMsc0lBQXNCO0FBQzNELDhCQUE4QixtQkFBTyxDQUFDLHdJQUF1QjtBQUM3RCwrQkFBK0IsbUJBQU8sQ0FBQywwSUFBd0I7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixhQUFhO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQkFBb0I7QUFDbkM7QUFDQSxpQkFBaUIsYUFBYTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsTUFBTTtBQUNyQixpQkFBaUIsYUFBYTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLCtEQUErRDtBQUM5RTtBQUNBLGlCQUFpQixhQUFhO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGFBQWE7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QixpQkFBaUIsYUFBYTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsVUFBVTtBQUN6QixpQkFBaUIsYUFBYTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbURBQW1EO0FBQ2xFO0FBQ0EsaUJBQWlCLGFBQWE7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGVBQWU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixpQkFBaUIsMkJBQTJCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixlQUFlO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0JBQStCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFtQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7O0FBRTdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdWRpby9BdWRpb0NvbmZpZy5qcz9hMjhhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkF1ZGlvT3V0cHV0Q29uZmlnSW1wbCA9IGV4cG9ydHMuQXVkaW9Db25maWdJbXBsID0gZXhwb3J0cy5BdWRpb0NvbmZpZyA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb24uYnJvd3Nlci9FeHBvcnRzLmpzXCIpO1xuY29uc3QgQ29udHJhY3RzX2pzXzEgPSByZXF1aXJlKFwiLi4vQ29udHJhY3RzLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18yID0gcmVxdWlyZShcIi4uL0V4cG9ydHMuanNcIik7XG5jb25zdCBBdWRpb0ZpbGVXcml0ZXJfanNfMSA9IHJlcXVpcmUoXCIuL0F1ZGlvRmlsZVdyaXRlci5qc1wiKTtcbmNvbnN0IEF1ZGlvSW5wdXRTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL0F1ZGlvSW5wdXRTdHJlYW0uanNcIik7XG5jb25zdCBBdWRpb091dHB1dFN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vQXVkaW9PdXRwdXRTdHJlYW0uanNcIik7XG4vKipcbiAqIFJlcHJlc2VudHMgYXVkaW8gaW5wdXQgY29uZmlndXJhdGlvbiB1c2VkIGZvciBzcGVjaWZ5aW5nIHdoYXQgdHlwZSBvZiBpbnB1dCB0byB1c2UgKG1pY3JvcGhvbmUsIGZpbGUsIHN0cmVhbSkuXG4gKiBAY2xhc3MgQXVkaW9Db25maWdcbiAqIFVwZGF0ZWQgaW4gdmVyc2lvbiAxLjExLjBcbiAqL1xuY2xhc3MgQXVkaW9Db25maWcge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gQXVkaW9Db25maWcgb2JqZWN0IHJlcHJlc2VudGluZyB0aGUgZGVmYXVsdCBtaWNyb3Bob25lIG9uIHRoZSBzeXN0ZW0uXG4gICAgICogQG1lbWJlciBBdWRpb0NvbmZpZy5mcm9tRGVmYXVsdE1pY3JvcGhvbmVJbnB1dFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7QXVkaW9Db25maWd9IFRoZSBhdWRpbyBpbnB1dCBjb25maWd1cmF0aW9uIGJlaW5nIGNyZWF0ZWQuXG4gICAgICovXG4gICAgc3RhdGljIGZyb21EZWZhdWx0TWljcm9waG9uZUlucHV0KCkge1xuICAgICAgICBjb25zdCBwY21SZWNvcmRlciA9IG5ldyBFeHBvcnRzX2pzXzEuUGNtUmVjb3JkZXIodHJ1ZSk7XG4gICAgICAgIHJldHVybiBuZXcgQXVkaW9Db25maWdJbXBsKG5ldyBFeHBvcnRzX2pzXzEuTWljQXVkaW9Tb3VyY2UocGNtUmVjb3JkZXIpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBBdWRpb0NvbmZpZyBvYmplY3QgcmVwcmVzZW50aW5nIGEgbWljcm9waG9uZSB3aXRoIHRoZSBzcGVjaWZpZWQgZGV2aWNlIElELlxuICAgICAqIEBtZW1iZXIgQXVkaW9Db25maWcuZnJvbU1pY3JvcGhvbmVJbnB1dFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge3N0cmluZyB8IHVuZGVmaW5lZH0gZGV2aWNlSWQgLSBTcGVjaWZpZXMgdGhlIGRldmljZSBJRCBvZiB0aGUgbWljcm9waG9uZSB0byBiZSB1c2VkLlxuICAgICAqIERlZmF1bHQgbWljcm9waG9uZSBpcyB1c2VkIHRoZSB2YWx1ZSBpcyBvbWl0dGVkLlxuICAgICAqIEByZXR1cm5zIHtBdWRpb0NvbmZpZ30gVGhlIGF1ZGlvIGlucHV0IGNvbmZpZ3VyYXRpb24gYmVpbmcgY3JlYXRlZC5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbU1pY3JvcGhvbmVJbnB1dChkZXZpY2VJZCkge1xuICAgICAgICBjb25zdCBwY21SZWNvcmRlciA9IG5ldyBFeHBvcnRzX2pzXzEuUGNtUmVjb3JkZXIodHJ1ZSk7XG4gICAgICAgIHJldHVybiBuZXcgQXVkaW9Db25maWdJbXBsKG5ldyBFeHBvcnRzX2pzXzEuTWljQXVkaW9Tb3VyY2UocGNtUmVjb3JkZXIsIGRldmljZUlkKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gQXVkaW9Db25maWcgb2JqZWN0IHJlcHJlc2VudGluZyB0aGUgc3BlY2lmaWVkIGZpbGUuXG4gICAgICogQG1lbWJlciBBdWRpb0NvbmZpZy5mcm9tV2F2RmlsZUlucHV0XG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7RmlsZX0gZmlsZU5hbWUgLSBTcGVjaWZpZXMgdGhlIGF1ZGlvIGlucHV0IGZpbGUuIEN1cnJlbnRseSwgb25seSBXQVYgLyBQQ00gaXMgc3VwcG9ydGVkLlxuICAgICAqIEByZXR1cm5zIHtBdWRpb0NvbmZpZ30gVGhlIGF1ZGlvIGlucHV0IGNvbmZpZ3VyYXRpb24gYmVpbmcgY3JlYXRlZC5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVdhdkZpbGVJbnB1dChmaWxlLCBuYW1lID0gXCJ1bm5hbWVkQnVmZmVyLndhdlwiKSB7XG4gICAgICAgIHJldHVybiBuZXcgQXVkaW9Db25maWdJbXBsKG5ldyBFeHBvcnRzX2pzXzEuRmlsZUF1ZGlvU291cmNlKGZpbGUsIG5hbWUpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBBdWRpb0NvbmZpZyBvYmplY3QgcmVwcmVzZW50aW5nIHRoZSBzcGVjaWZpZWQgc3RyZWFtLlxuICAgICAqIEBtZW1iZXIgQXVkaW9Db25maWcuZnJvbVN0cmVhbUlucHV0XG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7QXVkaW9JbnB1dFN0cmVhbSB8IFB1bGxBdWRpb0lucHV0U3RyZWFtQ2FsbGJhY2sgfCBNZWRpYVN0cmVhbX0gYXVkaW9TdHJlYW0gLSBTcGVjaWZpZXMgdGhlIGN1c3RvbSBhdWRpbyBpbnB1dFxuICAgICAqIHN0cmVhbS4gQ3VycmVudGx5LCBvbmx5IFdBViAvIFBDTSBpcyBzdXBwb3J0ZWQuXG4gICAgICogQHJldHVybnMge0F1ZGlvQ29uZmlnfSBUaGUgYXVkaW8gaW5wdXQgY29uZmlndXJhdGlvbiBiZWluZyBjcmVhdGVkLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tU3RyZWFtSW5wdXQoYXVkaW9TdHJlYW0pIHtcbiAgICAgICAgaWYgKGF1ZGlvU3RyZWFtIGluc3RhbmNlb2YgRXhwb3J0c19qc18yLlB1bGxBdWRpb0lucHV0U3RyZWFtQ2FsbGJhY2spIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQXVkaW9Db25maWdJbXBsKG5ldyBBdWRpb0lucHV0U3RyZWFtX2pzXzEuUHVsbEF1ZGlvSW5wdXRTdHJlYW1JbXBsKGF1ZGlvU3RyZWFtKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGF1ZGlvU3RyZWFtIGluc3RhbmNlb2YgRXhwb3J0c19qc18yLkF1ZGlvSW5wdXRTdHJlYW0pIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQXVkaW9Db25maWdJbXBsKGF1ZGlvU3RyZWFtKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIE1lZGlhU3RyZWFtICE9PSBcInVuZGVmaW5lZFwiICYmIGF1ZGlvU3RyZWFtIGluc3RhbmNlb2YgTWVkaWFTdHJlYW0pIHtcbiAgICAgICAgICAgIGNvbnN0IHBjbVJlY29yZGVyID0gbmV3IEV4cG9ydHNfanNfMS5QY21SZWNvcmRlcihmYWxzZSk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEF1ZGlvQ29uZmlnSW1wbChuZXcgRXhwb3J0c19qc18xLk1pY0F1ZGlvU291cmNlKHBjbVJlY29yZGVyLCBudWxsLCBudWxsLCBhdWRpb1N0cmVhbSkpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBTdXBwb3J0ZWQgVHlwZVwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBBdWRpb0NvbmZpZyBvYmplY3QgcmVwcmVzZW50aW5nIHRoZSBkZWZhdWx0IHNwZWFrZXIuXG4gICAgICogQG1lbWJlciBBdWRpb0NvbmZpZy5mcm9tRGVmYXVsdFNwZWFrZXJPdXRwdXRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge0F1ZGlvQ29uZmlnfSBUaGUgYXVkaW8gb3V0cHV0IGNvbmZpZ3VyYXRpb24gYmVpbmcgY3JlYXRlZC5cbiAgICAgKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMTEuMFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tRGVmYXVsdFNwZWFrZXJPdXRwdXQoKSB7XG4gICAgICAgIHJldHVybiBuZXcgQXVkaW9PdXRwdXRDb25maWdJbXBsKG5ldyBFeHBvcnRzX2pzXzIuU3BlYWtlckF1ZGlvRGVzdGluYXRpb24oKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gQXVkaW9Db25maWcgb2JqZWN0IHJlcHJlc2VudGluZyB0aGUgY3VzdG9tIElQbGF5ZXIgb2JqZWN0LlxuICAgICAqIFlvdSBjYW4gdXNlIHRoZSBJUGxheWVyIG9iamVjdCB0byBjb250cm9sIHBhdXNlLCByZXN1bWUsIGV0Yy5cbiAgICAgKiBAbWVtYmVyIEF1ZGlvQ29uZmlnLmZyb21TcGVha2VyT3V0cHV0XG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7SVBsYXllcn0gcGxheWVyIC0gdGhlIElQbGF5ZXIgb2JqZWN0IGZvciBwbGF5YmFjay5cbiAgICAgKiBAcmV0dXJucyB7QXVkaW9Db25maWd9IFRoZSBhdWRpbyBvdXRwdXQgY29uZmlndXJhdGlvbiBiZWluZyBjcmVhdGVkLlxuICAgICAqIEFkZGVkIGluIHZlcnNpb24gMS4xMi4wXG4gICAgICovXG4gICAgc3RhdGljIGZyb21TcGVha2VyT3V0cHV0KHBsYXllcikge1xuICAgICAgICBpZiAocGxheWVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBBdWRpb0NvbmZpZy5mcm9tRGVmYXVsdFNwZWFrZXJPdXRwdXQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGxheWVyIGluc3RhbmNlb2YgRXhwb3J0c19qc18yLlNwZWFrZXJBdWRpb0Rlc3RpbmF0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEF1ZGlvT3V0cHV0Q29uZmlnSW1wbChwbGF5ZXIpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBTdXBwb3J0ZWQgVHlwZVwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBBdWRpb0NvbmZpZyBvYmplY3QgcmVwcmVzZW50aW5nIGEgc3BlY2lmaWVkIG91dHB1dCBhdWRpbyBmaWxlXG4gICAgICogQG1lbWJlciBBdWRpb0NvbmZpZy5mcm9tQXVkaW9GaWxlT3V0cHV0XG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7UGF0aExpa2V9IGZpbGVuYW1lIC0gdGhlIGZpbGVuYW1lIG9mIHRoZSBvdXRwdXQgYXVkaW8gZmlsZVxuICAgICAqIEByZXR1cm5zIHtBdWRpb0NvbmZpZ30gVGhlIGF1ZGlvIG91dHB1dCBjb25maWd1cmF0aW9uIGJlaW5nIGNyZWF0ZWQuXG4gICAgICogQWRkZWQgaW4gdmVyc2lvbiAxLjExLjBcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbUF1ZGlvRmlsZU91dHB1dChmaWxlbmFtZSkge1xuICAgICAgICByZXR1cm4gbmV3IEF1ZGlvT3V0cHV0Q29uZmlnSW1wbChuZXcgQXVkaW9GaWxlV3JpdGVyX2pzXzEuQXVkaW9GaWxlV3JpdGVyKGZpbGVuYW1lKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gQXVkaW9Db25maWcgb2JqZWN0IHJlcHJlc2VudGluZyBhIHNwZWNpZmllZCBhdWRpbyBvdXRwdXQgc3RyZWFtXG4gICAgICogQG1lbWJlciBBdWRpb0NvbmZpZy5mcm9tU3RyZWFtT3V0cHV0XG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7QXVkaW9PdXRwdXRTdHJlYW0gfCBQdXNoQXVkaW9PdXRwdXRTdHJlYW1DYWxsYmFja30gYXVkaW9TdHJlYW0gLSBTcGVjaWZpZXMgdGhlIGN1c3RvbSBhdWRpbyBvdXRwdXRcbiAgICAgKiBzdHJlYW0uXG4gICAgICogQHJldHVybnMge0F1ZGlvQ29uZmlnfSBUaGUgYXVkaW8gb3V0cHV0IGNvbmZpZ3VyYXRpb24gYmVpbmcgY3JlYXRlZC5cbiAgICAgKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMTEuMFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tU3RyZWFtT3V0cHV0KGF1ZGlvU3RyZWFtKSB7XG4gICAgICAgIGlmIChhdWRpb1N0cmVhbSBpbnN0YW5jZW9mIEV4cG9ydHNfanNfMi5QdXNoQXVkaW9PdXRwdXRTdHJlYW1DYWxsYmFjaykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBBdWRpb091dHB1dENvbmZpZ0ltcGwobmV3IEF1ZGlvT3V0cHV0U3RyZWFtX2pzXzEuUHVzaEF1ZGlvT3V0cHV0U3RyZWFtSW1wbChhdWRpb1N0cmVhbSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhdWRpb1N0cmVhbSBpbnN0YW5jZW9mIEV4cG9ydHNfanNfMi5QdXNoQXVkaW9PdXRwdXRTdHJlYW0pIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQXVkaW9PdXRwdXRDb25maWdJbXBsKGF1ZGlvU3RyZWFtKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXVkaW9TdHJlYW0gaW5zdGFuY2VvZiBFeHBvcnRzX2pzXzIuUHVsbEF1ZGlvT3V0cHV0U3RyZWFtKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEF1ZGlvT3V0cHV0Q29uZmlnSW1wbChhdWRpb1N0cmVhbSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IFN1cHBvcnRlZCBUeXBlXCIpO1xuICAgIH1cbn1cbmV4cG9ydHMuQXVkaW9Db25maWcgPSBBdWRpb0NvbmZpZztcbi8qKlxuICogUmVwcmVzZW50cyBhdWRpbyBpbnB1dCBzdHJlYW0gdXNlZCBmb3IgY3VzdG9tIGF1ZGlvIGlucHV0IGNvbmZpZ3VyYXRpb25zLlxuICogQHByaXZhdGVcbiAqIEBjbGFzcyBBdWRpb0NvbmZpZ0ltcGxcbiAqL1xuY2xhc3MgQXVkaW9Db25maWdJbXBsIGV4dGVuZHMgQXVkaW9Db25maWcge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtJQXVkaW9Tb3VyY2V9IHNvdXJjZSAtIEFuIGF1ZGlvIHNvdXJjZS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihzb3VyY2UpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5wcml2U291cmNlID0gc291cmNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGb3JtYXQgaW5mb3JtYXRpb24gZm9yIHRoZSBhdWRpb1xuICAgICAqL1xuICAgIGdldCBmb3JtYXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTb3VyY2UuZm9ybWF0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWVtYmVyIEF1ZGlvQ29uZmlnSW1wbC5wcm90b3R5cGUuY2xvc2VcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICovXG4gICAgY2xvc2UoY2IsIGVycikge1xuICAgICAgICB0aGlzLnByaXZTb3VyY2UudHVybk9mZigpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCEhY2IpIHtcbiAgICAgICAgICAgICAgICBjYigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCAoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGlmICghIWVycikge1xuICAgICAgICAgICAgICAgIGVycihlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWVtYmVyIEF1ZGlvQ29uZmlnSW1wbC5wcm90b3R5cGUuaWRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICovXG4gICAgaWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTb3VyY2UuaWQoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1lbWJlciBBdWRpb0NvbmZpZ0ltcGwucHJvdG90eXBlLnR1cm5PblxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn0gQSBwcm9taXNlLlxuICAgICAqL1xuICAgIHR1cm5PbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNvdXJjZS50dXJuT24oKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1lbWJlciBBdWRpb0NvbmZpZ0ltcGwucHJvdG90eXBlLmF0dGFjaFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gYXVkaW9Ob2RlSWQgLSBUaGUgYXVkaW8gbm9kZSBpZC5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxJQXVkaW9TdHJlYW1Ob2RlPn0gQSBwcm9taXNlLlxuICAgICAqL1xuICAgIGF0dGFjaChhdWRpb05vZGVJZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U291cmNlLmF0dGFjaChhdWRpb05vZGVJZCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZW1iZXIgQXVkaW9Db25maWdJbXBsLnByb3RvdHlwZS5kZXRhY2hcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGF1ZGlvTm9kZUlkIC0gVGhlIGF1ZGlvIG5vZGUgaWQuXG4gICAgICovXG4gICAgZGV0YWNoKGF1ZGlvTm9kZUlkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTb3VyY2UuZGV0YWNoKGF1ZGlvTm9kZUlkKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1lbWJlciBBdWRpb0NvbmZpZ0ltcGwucHJvdG90eXBlLnR1cm5PZmZcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59IEEgcHJvbWlzZS5cbiAgICAgKi9cbiAgICB0dXJuT2ZmKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U291cmNlLnR1cm5PZmYoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1lbWJlciBBdWRpb0NvbmZpZ0ltcGwucHJvdG90eXBlLmV2ZW50c1xuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7RXZlbnRTb3VyY2U8QXVkaW9Tb3VyY2VFdmVudD59IEFuIGV2ZW50IHNvdXJjZSBmb3IgYXVkaW8gZXZlbnRzLlxuICAgICAqL1xuICAgIGdldCBldmVudHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTb3VyY2UuZXZlbnRzO1xuICAgIH1cbiAgICBzZXRQcm9wZXJ0eShuYW1lLCB2YWx1ZSkge1xuICAgICAgICBDb250cmFjdHNfanNfMS5Db250cmFjdHMudGhyb3dJZk51bGwodmFsdWUsIFwidmFsdWVcIik7XG4gICAgICAgIGlmICh1bmRlZmluZWQgIT09IHRoaXMucHJpdlNvdXJjZS5zZXRQcm9wZXJ0eSkge1xuICAgICAgICAgICAgdGhpcy5wcml2U291cmNlLnNldFByb3BlcnR5KG5hbWUsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoaXMgQXVkaW9Db25maWcgaW5zdGFuY2UgZG9lcyBub3Qgc3VwcG9ydCBzZXR0aW5nIHByb3BlcnRpZXMuXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldFByb3BlcnR5KG5hbWUsIGRlZikge1xuICAgICAgICBpZiAodW5kZWZpbmVkICE9PSB0aGlzLnByaXZTb3VyY2UuZ2V0UHJvcGVydHkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByaXZTb3VyY2UuZ2V0UHJvcGVydHkobmFtZSwgZGVmKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoaXMgQXVkaW9Db25maWcgaW5zdGFuY2UgZG9lcyBub3Qgc3VwcG9ydCBnZXR0aW5nIHByb3BlcnRpZXMuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWY7XG4gICAgfVxuICAgIGdldCBkZXZpY2VJbmZvKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U291cmNlLmRldmljZUluZm87XG4gICAgfVxufVxuZXhwb3J0cy5BdWRpb0NvbmZpZ0ltcGwgPSBBdWRpb0NvbmZpZ0ltcGw7XG5jbGFzcyBBdWRpb091dHB1dENvbmZpZ0ltcGwgZXh0ZW5kcyBBdWRpb0NvbmZpZyB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYW4gaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcy5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge0lBdWRpb0Rlc3RpbmF0aW9ufSBkZXN0aW5hdGlvbiAtIEFuIGF1ZGlvIGRlc3RpbmF0aW9uLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGRlc3RpbmF0aW9uKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMucHJpdkRlc3RpbmF0aW9uID0gZGVzdGluYXRpb247XG4gICAgfVxuICAgIHNldCBmb3JtYXQoZm9ybWF0KSB7XG4gICAgICAgIHRoaXMucHJpdkRlc3RpbmF0aW9uLmZvcm1hdCA9IGZvcm1hdDtcbiAgICB9XG4gICAgd3JpdGUoYnVmZmVyKSB7XG4gICAgICAgIHRoaXMucHJpdkRlc3RpbmF0aW9uLndyaXRlKGJ1ZmZlcik7XG4gICAgfVxuICAgIGNsb3NlKCkge1xuICAgICAgICB0aGlzLnByaXZEZXN0aW5hdGlvbi5jbG9zZSgpO1xuICAgIH1cbiAgICBpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkRlc3RpbmF0aW9uLmlkKCk7XG4gICAgfVxuICAgIHNldFByb3BlcnR5KCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIEF1ZGlvQ29uZmlnIGluc3RhbmNlIGRvZXMgbm90IHN1cHBvcnQgc2V0dGluZyBwcm9wZXJ0aWVzLlwiKTtcbiAgICB9XG4gICAgZ2V0UHJvcGVydHkoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoaXMgQXVkaW9Db25maWcgaW5zdGFuY2UgZG9lcyBub3Qgc3VwcG9ydCBnZXR0aW5nIHByb3BlcnRpZXMuXCIpO1xuICAgIH1cbn1cbmV4cG9ydHMuQXVkaW9PdXRwdXRDb25maWdJbXBsID0gQXVkaW9PdXRwdXRDb25maWdJbXBsO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdWRpb0NvbmZpZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioFileWriter.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioFileWriter.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AudioFileWriter = void 0;\nconst fs = __importStar(__webpack_require__(/*! fs */ \"fs\"));\nconst Contracts_js_1 = __webpack_require__(/*! ../Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nclass AudioFileWriter {\n    constructor(filename) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available, please use Push or PullAudioOutputStream\");\n        this.privFd = fs.openSync(filename, \"w\");\n    }\n    set format(format) {\n        Contracts_js_1.Contracts.throwIfNotUndefined(this.privAudioFormat, \"format is already set\");\n        this.privAudioFormat = format;\n        let headerOffset = 0;\n        if (this.privAudioFormat.hasHeader) {\n            headerOffset = this.privAudioFormat.header.byteLength;\n        }\n        if (this.privFd !== undefined) {\n            this.privWriteStream = fs.createWriteStream(\"\", { fd: this.privFd, start: headerOffset, autoClose: false });\n        }\n    }\n    write(buffer) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privAudioFormat, \"must set format before writing.\");\n        if (this.privWriteStream !== undefined) {\n            this.privWriteStream.write(new Uint8Array(buffer.slice(0)));\n        }\n    }\n    close() {\n        if (this.privFd !== undefined) {\n            this.privWriteStream.on(\"finish\", () => {\n                if (this.privAudioFormat.hasHeader) {\n                    this.privAudioFormat.updateHeader(this.privWriteStream.bytesWritten);\n                    fs.writeSync(this.privFd, new Int8Array(this.privAudioFormat.header), 0, this.privAudioFormat.header.byteLength, 0);\n                }\n                fs.closeSync(this.privFd);\n                this.privFd = undefined;\n            });\n            this.privWriteStream.end();\n        }\n    }\n    id() {\n        return this.privId;\n    }\n}\nexports.AudioFileWriter = AudioFileWriter;\n\n//# sourceMappingURL=AudioFileWriter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdWRpby9BdWRpb0ZpbGVXcml0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLHdCQUF3QixtQkFBTyxDQUFDLGNBQUk7QUFDcEMsdUJBQXVCLG1CQUFPLENBQUMscUhBQWlCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELHdEQUF3RDtBQUN0SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCOztBQUV2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvQXVkaW8vQXVkaW9GaWxlV3JpdGVyLmpzP2VlNzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkF1ZGlvRmlsZVdyaXRlciA9IHZvaWQgMDtcbmNvbnN0IGZzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJmc1wiKSk7XG5jb25zdCBDb250cmFjdHNfanNfMSA9IHJlcXVpcmUoXCIuLi9Db250cmFjdHMuanNcIik7XG5jbGFzcyBBdWRpb0ZpbGVXcml0ZXIge1xuICAgIGNvbnN0cnVjdG9yKGZpbGVuYW1lKSB7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yVW5kZWZpbmVkKGZzLm9wZW5TeW5jLCBcIlxcbkZpbGUgU3lzdGVtIGFjY2VzcyBub3QgYXZhaWxhYmxlLCBwbGVhc2UgdXNlIFB1c2ggb3IgUHVsbEF1ZGlvT3V0cHV0U3RyZWFtXCIpO1xuICAgICAgICB0aGlzLnByaXZGZCA9IGZzLm9wZW5TeW5jKGZpbGVuYW1lLCBcIndcIik7XG4gICAgfVxuICAgIHNldCBmb3JtYXQoZm9ybWF0KSB7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTm90VW5kZWZpbmVkKHRoaXMucHJpdkF1ZGlvRm9ybWF0LCBcImZvcm1hdCBpcyBhbHJlYWR5IHNldFwiKTtcbiAgICAgICAgdGhpcy5wcml2QXVkaW9Gb3JtYXQgPSBmb3JtYXQ7XG4gICAgICAgIGxldCBoZWFkZXJPZmZzZXQgPSAwO1xuICAgICAgICBpZiAodGhpcy5wcml2QXVkaW9Gb3JtYXQuaGFzSGVhZGVyKSB7XG4gICAgICAgICAgICBoZWFkZXJPZmZzZXQgPSB0aGlzLnByaXZBdWRpb0Zvcm1hdC5oZWFkZXIuYnl0ZUxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wcml2RmQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5wcml2V3JpdGVTdHJlYW0gPSBmcy5jcmVhdGVXcml0ZVN0cmVhbShcIlwiLCB7IGZkOiB0aGlzLnByaXZGZCwgc3RhcnQ6IGhlYWRlck9mZnNldCwgYXV0b0Nsb3NlOiBmYWxzZSB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB3cml0ZShidWZmZXIpIHtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZOdWxsT3JVbmRlZmluZWQodGhpcy5wcml2QXVkaW9Gb3JtYXQsIFwibXVzdCBzZXQgZm9ybWF0IGJlZm9yZSB3cml0aW5nLlwiKTtcbiAgICAgICAgaWYgKHRoaXMucHJpdldyaXRlU3RyZWFtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMucHJpdldyaXRlU3RyZWFtLndyaXRlKG5ldyBVaW50OEFycmF5KGJ1ZmZlci5zbGljZSgwKSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNsb3NlKCkge1xuICAgICAgICBpZiAodGhpcy5wcml2RmQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5wcml2V3JpdGVTdHJlYW0ub24oXCJmaW5pc2hcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnByaXZBdWRpb0Zvcm1hdC5oYXNIZWFkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcml2QXVkaW9Gb3JtYXQudXBkYXRlSGVhZGVyKHRoaXMucHJpdldyaXRlU3RyZWFtLmJ5dGVzV3JpdHRlbik7XG4gICAgICAgICAgICAgICAgICAgIGZzLndyaXRlU3luYyh0aGlzLnByaXZGZCwgbmV3IEludDhBcnJheSh0aGlzLnByaXZBdWRpb0Zvcm1hdC5oZWFkZXIpLCAwLCB0aGlzLnByaXZBdWRpb0Zvcm1hdC5oZWFkZXIuYnl0ZUxlbmd0aCwgMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZzLmNsb3NlU3luYyh0aGlzLnByaXZGZCk7XG4gICAgICAgICAgICAgICAgdGhpcy5wcml2RmQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMucHJpdldyaXRlU3RyZWFtLmVuZCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2SWQ7XG4gICAgfVxufVxuZXhwb3J0cy5BdWRpb0ZpbGVXcml0ZXIgPSBBdWRpb0ZpbGVXcml0ZXI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF1ZGlvRmlsZVdyaXRlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioFileWriter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioInputStream.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioInputStream.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PullAudioInputStreamImpl = exports.PullAudioInputStream = exports.PushAudioInputStreamImpl = exports.PushAudioInputStream = exports.AudioInputStream = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Guid_js_1 = __webpack_require__(/*! ../../common/Guid.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Guid.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst AudioStreamFormat_js_1 = __webpack_require__(/*! ./AudioStreamFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js\");\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @class AudioInputStream\n */\nclass AudioInputStream {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\n     * @member AudioInputStream.createPushStream\n     * @function\n     * @public\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     * written to the push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PushAudioInputStream} The audio input stream being created.\n     */\n    static createPushStream(format) {\n        return PushAudioInputStream.create(format);\n    }\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read()\n     * and close() methods.\n     * @member AudioInputStream.createPullStream\n     * @function\n     * @public\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from\n     * PullAudioInputStreamCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from\n     * the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PullAudioInputStream} The audio input stream being created.\n     */\n    static createPullStream(callback, format) {\n        return PullAudioInputStream.create(callback, format);\n        // throw new Error(\"Oops\");\n    }\n}\nexports.AudioInputStream = AudioInputStream;\n/**\n * Represents memory backed push audio input stream used for custom audio input configurations.\n * @class PushAudioInputStream\n */\nclass PushAudioInputStream extends AudioInputStream {\n    /**\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\n     * @member PushAudioInputStream.create\n     * @function\n     * @public\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be written to the\n     * push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PushAudioInputStream} The push audio input stream being created.\n     */\n    static create(format) {\n        return new PushAudioInputStreamImpl(format);\n    }\n}\nexports.PushAudioInputStream = PushAudioInputStream;\n/**\n * Represents memory backed push audio input stream used for custom audio input configurations.\n * @private\n * @class PushAudioInputStreamImpl\n */\nclass PushAudioInputStreamImpl extends PushAudioInputStream {\n    /**\n     * Creates and initalizes an instance with the given values.\n     * @constructor\n     * @param {AudioStreamFormat} format - The audio stream format.\n     */\n    constructor(format) {\n        super();\n        if (format === undefined) {\n            this.privFormat = AudioStreamFormat_js_1.AudioStreamFormatImpl.getDefaultInputFormat();\n        }\n        else {\n            this.privFormat = format;\n        }\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privId = Guid_js_1.createNoDashGuid();\n        this.privStream = new Exports_js_2.ChunkedArrayBufferStream(this.privFormat.avgBytesPerSec / 10);\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return Promise.resolve(this.privFormat);\n    }\n    /**\n     * Writes the audio data specified by making an internal copy of the data.\n     * @member PushAudioInputStreamImpl.prototype.write\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\n     */\n    write(dataBuffer) {\n        this.privStream.writeStreamChunk({\n            buffer: dataBuffer,\n            isEnd: false,\n            timeReceived: Date.now()\n        });\n    }\n    /**\n     * Closes the stream.\n     * @member PushAudioInputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        this.privStream.close();\n    }\n    id() {\n        return this.privId;\n    }\n    turnOn() {\n        this.onEvent(new Exports_js_2.AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n        return;\n    }\n    async attach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        await this.turnOn();\n        const stream = this.privStream;\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n        return {\n            detach: async () => {\n                this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                return this.turnOff();\n            },\n            id: () => audioNodeId,\n            read: () => stream.read(),\n        };\n    }\n    detach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n    }\n    turnOff() {\n        return;\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return Promise.resolve({\n            bitspersample: this.privFormat.bitsPerSample,\n            channelcount: this.privFormat.channels,\n            connectivity: Exports_js_1.connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: \"PushStream\",\n            samplerate: this.privFormat.samplesPerSec,\n            type: Exports_js_1.type.Stream,\n        });\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n    toBuffer(arrayBuffer) {\n        const buf = Buffer.alloc(arrayBuffer.byteLength);\n        const view = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < buf.length; ++i) {\n            buf[i] = view[i];\n        }\n        return buf;\n    }\n}\nexports.PushAudioInputStreamImpl = PushAudioInputStreamImpl;\n/*\n * Represents audio input stream used for custom audio input configurations.\n * @class PullAudioInputStream\n */\nclass PullAudioInputStream extends AudioInputStream {\n    /**\n     * Creates and initializes and instance.\n     * @constructor\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\n     * @member PullAudioInputStream.create\n     * @function\n     * @public\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\n     * derived from PullAudioInputStreamCustomCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     * returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PullAudioInputStream} The push audio input stream being created.\n     */\n    static create(callback, format) {\n        return new PullAudioInputStreamImpl(callback, format);\n    }\n}\nexports.PullAudioInputStream = PullAudioInputStream;\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @private\n * @class PullAudioInputStreamImpl\n */\nclass PullAudioInputStreamImpl extends PullAudioInputStream {\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\n     * @constructor\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\n     * derived from PullAudioInputStreamCustomCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     * returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\n     */\n    constructor(callback, format) {\n        super();\n        if (undefined === format) {\n            this.privFormat = Exports_js_3.AudioStreamFormat.getDefaultInputFormat();\n        }\n        else {\n            this.privFormat = format;\n        }\n        this.privEvents = new Exports_js_2.EventSource();\n        this.privId = Guid_js_1.createNoDashGuid();\n        this.privCallback = callback;\n        this.privIsClosed = false;\n        this.privBufferSize = this.privFormat.avgBytesPerSec / 10;\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return Promise.resolve(this.privFormat);\n    }\n    /**\n     * Closes the stream.\n     * @member PullAudioInputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        this.privIsClosed = true;\n        this.privCallback.close();\n    }\n    id() {\n        return this.privId;\n    }\n    turnOn() {\n        this.onEvent(new Exports_js_2.AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new Exports_js_2.AudioSourceReadyEvent(this.privId));\n        return;\n    }\n    async attach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n        await this.turnOn();\n        this.onEvent(new Exports_js_2.AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n        return {\n            detach: () => {\n                this.privCallback.close();\n                this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                return this.turnOff();\n            },\n            id: () => audioNodeId,\n            read: () => {\n                let totalBytes = 0;\n                let transmitBuff;\n                // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\n                while (totalBytes < this.privBufferSize) {\n                    // Sizing the read buffer to the delta between the perfect size and what's left means we won't ever get too much\n                    // data back.\n                    const readBuff = new ArrayBuffer(this.privBufferSize - totalBytes);\n                    const pulledBytes = this.privCallback.read(readBuff);\n                    // If there is no return buffer yet defined, set the return buffer to the that was just populated.\n                    // This was, if we have enough data there's no copy penalty, but if we don't we have a buffer that's the\n                    // preferred size allocated.\n                    if (undefined === transmitBuff) {\n                        transmitBuff = readBuff;\n                    }\n                    else {\n                        // Not the first bite at the apple, so fill the return buffer with the data we got back.\n                        const intView = new Int8Array(transmitBuff);\n                        intView.set(new Int8Array(readBuff), totalBytes);\n                    }\n                    // If there are no bytes to read, just break out and be done.\n                    if (0 === pulledBytes) {\n                        break;\n                    }\n                    totalBytes += pulledBytes;\n                }\n                return Promise.resolve({\n                    buffer: transmitBuff.slice(0, totalBytes),\n                    isEnd: this.privIsClosed || totalBytes === 0,\n                    timeReceived: Date.now(),\n                });\n            },\n        };\n    }\n    detach(audioNodeId) {\n        this.onEvent(new Exports_js_2.AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n    }\n    turnOff() {\n        return;\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return Promise.resolve({\n            bitspersample: this.privFormat.bitsPerSample,\n            channelcount: this.privFormat.channels,\n            connectivity: Exports_js_1.connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: \"PullStream\",\n            samplerate: this.privFormat.samplesPerSec,\n            type: Exports_js_1.type.Stream,\n        });\n    }\n    onEvent(event) {\n        this.privEvents.onEvent(event);\n        Exports_js_2.Events.instance.onEvent(event);\n    }\n}\nexports.PullAudioInputStreamImpl = PullAudioInputStreamImpl;\n\n//# sourceMappingURL=AudioInputStream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioInputStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputFormat.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputFormat.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AudioOutputFormatImpl = void 0;\nconst SpeechSynthesisOutputFormat_js_1 = __webpack_require__(/*! ../SpeechSynthesisOutputFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisOutputFormat.js\");\nconst AudioStreamFormat_js_1 = __webpack_require__(/*! ./AudioStreamFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js\");\n/**\n * @private\n * @class AudioOutputFormatImpl\n * Updated in version 1.17.0\n */\n// eslint-disable-next-line max-classes-per-file\nclass AudioOutputFormatImpl extends AudioStreamFormat_js_1.AudioStreamFormatImpl {\n    /**\n     * Creates an instance with the given values.\n     * @constructor\n     * @param formatTag\n     * @param {number} channels - Number of channels.\n     * @param {number} samplesPerSec - Samples per second.\n     * @param {number} avgBytesPerSec - Average bytes per second.\n     * @param {number} blockAlign - Block alignment.\n     * @param {number} bitsPerSample - Bits per sample.\n     * @param {string} audioFormatString - Audio format string\n     * @param {string} requestAudioFormatString - Audio format string sent to service.\n     * @param {boolean} hasHeader - If the format has header or not.\n     */\n    constructor(formatTag, channels, samplesPerSec, avgBytesPerSec, blockAlign, bitsPerSample, audioFormatString, requestAudioFormatString, hasHeader) {\n        super(samplesPerSec, bitsPerSample, channels, formatTag);\n        this.formatTag = formatTag;\n        this.avgBytesPerSec = avgBytesPerSec;\n        this.blockAlign = blockAlign;\n        this.priAudioFormatString = audioFormatString;\n        this.priRequestAudioFormatString = requestAudioFormatString;\n        this.priHasHeader = hasHeader;\n    }\n    static fromSpeechSynthesisOutputFormat(speechSynthesisOutputFormat) {\n        if (speechSynthesisOutputFormat === undefined) {\n            return AudioOutputFormatImpl.getDefaultOutputFormat();\n        }\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(AudioOutputFormatImpl.SpeechSynthesisOutputFormatToString[speechSynthesisOutputFormat]);\n    }\n    static fromSpeechSynthesisOutputFormatString(speechSynthesisOutputFormatString) {\n        switch (speechSynthesisOutputFormatString) {\n            case \"raw-8khz-8bit-mono-mulaw\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MuLaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-16khz-16kbps-mono-siren\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.Siren, 1, 16000, 2000, 40, 0, speechSynthesisOutputFormatString, \"audio-16khz-16kbps-mono-siren\", true);\n            case \"audio-16khz-16kbps-mono-siren\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.Siren, 1, 16000, 2000, 40, 0, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-32kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 16000, 32 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-128kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 16000, 128 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-64kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 16000, 64 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-48kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 24000, 48 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-96kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 24000, 96 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-160kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 24000, 160 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-16khz-16bit-mono-truesilk\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.SILKSkype, 1, 16000, 32000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-8khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 8000, 16000, 2, 16, speechSynthesisOutputFormatString, \"raw-8khz-16bit-mono-pcm\", true);\n            case \"riff-24khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 24000, 48000, 2, 16, speechSynthesisOutputFormatString, \"raw-24khz-16bit-mono-pcm\", true);\n            case \"riff-8khz-8bit-mono-mulaw\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MuLaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, \"raw-8khz-8bit-mono-mulaw\", true);\n            case \"raw-16khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 16000, 32000, 2, 16, speechSynthesisOutputFormatString, \"raw-16khz-16bit-mono-pcm\", false);\n            case \"raw-24khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 24000, 48000, 2, 16, speechSynthesisOutputFormatString, \"raw-24khz-16bit-mono-pcm\", false);\n            case \"raw-8khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 8000, 16000, 2, 16, speechSynthesisOutputFormatString, \"raw-8khz-16bit-mono-pcm\", false);\n            case \"ogg-16khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OGG_OPUS, 1, 16000, 8192, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"ogg-24khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OGG_OPUS, 1, 24000, 8192, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-48khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 48000, 96000, 2, 16, speechSynthesisOutputFormatString, \"raw-48khz-16bit-mono-pcm\", false);\n            case \"riff-48khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 48000, 96000, 2, 16, speechSynthesisOutputFormatString, \"raw-48khz-16bit-mono-pcm\", true);\n            case \"audio-48khz-96kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 48000, 96 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-48khz-192kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.MP3, 1, 48000, 192 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"ogg-48khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OGG_OPUS, 1, 48000, 12000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"webm-16khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.WEBM_OPUS, 1, 16000, 4000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"webm-24khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.WEBM_OPUS, 1, 24000, 6000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"webm-24khz-16bit-24kbps-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.WEBM_OPUS, 1, 24000, 3000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-16bit-32kbps-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OPUS, 1, 16000, 4000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-16bit-48kbps-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OPUS, 1, 24000, 6000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-16bit-24kbps-mono-opus\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.OPUS, 1, 24000, 3000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-16bit-mono-flac\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.FLAC, 1, 24000, 24000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-48khz-16bit-mono-flac\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.FLAC, 1, 48000, 30000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-24khz-16bit-mono-truesilk\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.SILKSkype, 1, 24000, 48000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-8khz-8bit-mono-alaw\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.ALaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-8khz-8bit-mono-alaw\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.ALaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, \"raw-8khz-8bit-mono-alaw\", true);\n            case \"raw-22050hz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 22050, 44100, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-22050hz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 22050, 44100, 2, 16, speechSynthesisOutputFormatString, \"raw-22050hz-16bit-mono-pcm\", true);\n            case \"raw-44100hz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 44100, 88200, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-44100hz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 44100, 88200, 2, 16, speechSynthesisOutputFormatString, \"raw-44100hz-16bit-mono-pcm\", true);\n            case \"amr-wb-16000h\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.AMR_WB, 1, 16000, 3052, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"g722-16khz-64kbps\":\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.G722, 1, 16000, 8000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-16khz-16bit-mono-pcm\":\n            default:\n                return new AudioOutputFormatImpl(AudioStreamFormat_js_1.AudioFormatTag.PCM, 1, 16000, 32000, 2, 16, \"riff-16khz-16bit-mono-pcm\", \"raw-16khz-16bit-mono-pcm\", true);\n        }\n    }\n    static getDefaultOutputFormat() {\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString((typeof window !== \"undefined\") ? \"audio-24khz-48kbitrate-mono-mp3\" : \"riff-16khz-16bit-mono-pcm\");\n    }\n    /**\n     * Specifies if this audio output format has a header\n     * @boolean AudioOutputFormatImpl.prototype.hasHeader\n     * @function\n     * @public\n     */\n    get hasHeader() {\n        return this.priHasHeader;\n    }\n    /**\n     * Specifies the header of this format\n     * @ArrayBuffer AudioOutputFormatImpl.prototype.header\n     * @function\n     * @public\n     */\n    get header() {\n        if (this.hasHeader) {\n            return this.privHeader;\n        }\n        return undefined;\n    }\n    /**\n     * Updates the header based on the audio length\n     * @member AudioOutputFormatImpl.updateHeader\n     * @function\n     * @public\n     * @param {number} audioLength - the audio length\n     */\n    updateHeader(audioLength) {\n        if (this.priHasHeader) {\n            const view = new DataView(this.privHeader);\n            view.setUint32(4, audioLength + this.privHeader.byteLength - 8, true);\n            view.setUint32(40, audioLength, true);\n        }\n    }\n    /**\n     * Specifies the audio format string to be sent to the service\n     * @string AudioOutputFormatImpl.prototype.requestAudioFormatString\n     * @function\n     * @public\n     */\n    get requestAudioFormatString() {\n        return this.priRequestAudioFormatString;\n    }\n    /**\n     * Adds audio header\n     * @param audio the raw audio without header\n     * @returns the audio with header if applicable\n     */\n    addHeader(audio) {\n        if (!this.hasHeader) {\n            return audio;\n        }\n        this.updateHeader(audio.byteLength);\n        const tmp = new Uint8Array(audio.byteLength + this.header.byteLength);\n        tmp.set(new Uint8Array(this.header), 0);\n        tmp.set(new Uint8Array(audio), this.header.byteLength);\n        return tmp.buffer;\n    }\n}\nexports.AudioOutputFormatImpl = AudioOutputFormatImpl;\nAudioOutputFormatImpl.SpeechSynthesisOutputFormatToString = {\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw]: \"raw-8khz-8bit-mono-mulaw\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren]: \"riff-16khz-16kbps-mono-siren\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren]: \"audio-16khz-16kbps-mono-siren\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3]: \"audio-16khz-32kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3]: \"audio-16khz-128kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3]: \"audio-16khz-64kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3]: \"audio-24khz-48kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3]: \"audio-24khz-96kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3]: \"audio-24khz-160kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk]: \"raw-16khz-16bit-mono-truesilk\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm]: \"riff-16khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm]: \"riff-8khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm]: \"riff-24khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw]: \"riff-8khz-8bit-mono-mulaw\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm]: \"raw-16khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm]: \"raw-24khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm]: \"raw-8khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus]: \"ogg-16khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus]: \"ogg-24khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm]: \"raw-48khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm]: \"riff-48khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3]: \"audio-48khz-96kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3]: \"audio-48khz-192kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus]: \"ogg-48khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus]: \"webm-16khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus]: \"webm-24khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus]: \"webm-24khz-16bit-24kbps-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk]: \"raw-24khz-16bit-mono-truesilk\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw]: \"raw-8khz-8bit-mono-alaw\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw]: \"riff-8khz-8bit-mono-alaw\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio16Khz16Bit32KbpsMonoOpus]: \"audio-16khz-16bit-32kbps-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz16Bit48KbpsMonoOpus]: \"audio-24khz-16bit-48kbps-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Audio24Khz16Bit24KbpsMonoOpus]: \"audio-24khz-16bit-24kbps-mono-opus\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw22050Hz16BitMonoPcm]: \"raw-22050hz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff22050Hz16BitMonoPcm]: \"riff-22050hz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Raw44100Hz16BitMonoPcm]: \"raw-44100hz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.Riff44100Hz16BitMonoPcm]: \"riff-44100hz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.AmrWb16000Hz]: \"amr-wb-16000hz\",\n    [SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat.G72216Khz64Kbps]: \"g722-16khz-64kbps\",\n};\n\n//# sourceMappingURL=AudioOutputFormat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputFormat.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputStream.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputStream.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PushAudioOutputStreamImpl = exports.PushAudioOutputStream = exports.PullAudioOutputStreamImpl = exports.PullAudioOutputStream = exports.AudioOutputStream = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst AudioOutputFormat_js_1 = __webpack_require__(/*! ./AudioOutputFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputFormat.js\");\n/**\n * Represents audio output stream used for custom audio output configurations.\n * @class AudioOutputStream\n */\nclass AudioOutputStream {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\n     * @member AudioOutputStream.createPullStream\n     * @function\n     * @public\n     * @returns {PullAudioOutputStream} The audio output stream being created.\n     */\n    static createPullStream() {\n        return PullAudioOutputStream.create();\n    }\n}\nexports.AudioOutputStream = AudioOutputStream;\n/**\n * Represents memory backed push audio output stream used for custom audio output configurations.\n * @class PullAudioOutputStream\n */\nclass PullAudioOutputStream extends AudioOutputStream {\n    /**\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\n     * @member PullAudioOutputStream.create\n     * @function\n     * @public\n     * @returns {PullAudioOutputStream} The push audio output stream being created.\n     */\n    static create() {\n        return new PullAudioOutputStreamImpl();\n    }\n}\nexports.PullAudioOutputStream = PullAudioOutputStream;\n/**\n * Represents memory backed push audio output stream used for custom audio output configurations.\n * @private\n * @class PullAudioOutputStreamImpl\n */\nclass PullAudioOutputStreamImpl extends PullAudioOutputStream {\n    /**\n     * Creates and initializes an instance with the given values.\n     * @constructor\n     */\n    constructor() {\n        super();\n        this.privId = Exports_js_1.createNoDashGuid();\n        this.privStream = new Exports_js_1.Stream();\n    }\n    /**\n     * Sets the format information to the stream. For internal use only.\n     * @param {AudioStreamFormat} format - the format to be set.\n     */\n    set format(format) {\n        if (format === undefined || format === null) {\n            this.privFormat = AudioOutputFormat_js_1.AudioOutputFormatImpl.getDefaultOutputFormat();\n        }\n        this.privFormat = format;\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return this.privFormat;\n    }\n    /**\n     * Checks if the stream is closed\n     * @member PullAudioOutputStreamImpl.prototype.isClosed\n     * @property\n     * @public\n     */\n    get isClosed() {\n        return this.privStream.isClosed;\n    }\n    /**\n     * Gets the id of the stream\n     * @member PullAudioOutputStreamImpl.prototype.id\n     * @property\n     * @public\n     */\n    id() {\n        return this.privId;\n    }\n    /**\n     * Reads audio data from the internal buffer.\n     * @member PullAudioOutputStreamImpl.prototype.read\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\n     * @returns {Promise<number>} - Audio buffer length has been read.\n     */\n    async read(dataBuffer) {\n        const intView = new Int8Array(dataBuffer);\n        let totalBytes = 0;\n        if (this.privLastChunkView !== undefined) {\n            if (this.privLastChunkView.length > dataBuffer.byteLength) {\n                intView.set(this.privLastChunkView.slice(0, dataBuffer.byteLength));\n                this.privLastChunkView = this.privLastChunkView.slice(dataBuffer.byteLength);\n                return Promise.resolve(dataBuffer.byteLength);\n            }\n            intView.set(this.privLastChunkView);\n            totalBytes = this.privLastChunkView.length;\n            this.privLastChunkView = undefined;\n        }\n        // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\n        while (totalBytes < dataBuffer.byteLength && !this.privStream.isReadEnded) {\n            const chunk = await this.privStream.read();\n            if (chunk !== undefined && !chunk.isEnd) {\n                let tmpBuffer;\n                if (chunk.buffer.byteLength > dataBuffer.byteLength - totalBytes) {\n                    tmpBuffer = chunk.buffer.slice(0, dataBuffer.byteLength - totalBytes);\n                    this.privLastChunkView = new Int8Array(chunk.buffer.slice(dataBuffer.byteLength - totalBytes));\n                }\n                else {\n                    tmpBuffer = chunk.buffer;\n                }\n                intView.set(new Int8Array(tmpBuffer), totalBytes);\n                totalBytes += tmpBuffer.byteLength;\n            }\n            else {\n                this.privStream.readEnded();\n            }\n        }\n        return totalBytes;\n    }\n    /**\n     * Writes the audio data specified by making an internal copy of the data.\n     * @member PullAudioOutputStreamImpl.prototype.write\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\n     */\n    write(dataBuffer) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privStream, \"must set format before writing\");\n        this.privStream.writeStreamChunk({\n            buffer: dataBuffer,\n            isEnd: false,\n            timeReceived: Date.now()\n        });\n    }\n    /**\n     * Closes the stream.\n     * @member PullAudioOutputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        this.privStream.close();\n    }\n}\nexports.PullAudioOutputStreamImpl = PullAudioOutputStreamImpl;\n/*\n * Represents audio output stream used for custom audio output configurations.\n * @class PushAudioOutputStream\n */\nclass PushAudioOutputStream extends AudioOutputStream {\n    /**\n     * Creates and initializes and instance.\n     * @constructor\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\n     * write() and close() methods.\n     * @member PushAudioOutputStream.create\n     * @function\n     * @public\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\n     * derived from PushAudioOutputStreamCallback\n     * @returns {PushAudioOutputStream} The push audio output stream being created.\n     */\n    static create(callback) {\n        return new PushAudioOutputStreamImpl(callback);\n    }\n}\nexports.PushAudioOutputStream = PushAudioOutputStream;\n/**\n * Represents audio output stream used for custom audio output configurations.\n * @private\n * @class PushAudioOutputStreamImpl\n */\nclass PushAudioOutputStreamImpl extends PushAudioOutputStream {\n    /**\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\n     * read() and close() methods.\n     * @constructor\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\n     * derived from PushAudioOutputStreamCallback\n     */\n    constructor(callback) {\n        super();\n        this.privId = Exports_js_1.createNoDashGuid();\n        this.privCallback = callback;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    set format(format) { }\n    write(buffer) {\n        if (!!this.privCallback.write) {\n            this.privCallback.write(buffer);\n        }\n    }\n    close() {\n        if (!!this.privCallback.close) {\n            this.privCallback.close();\n        }\n    }\n    id() {\n        return this.privId;\n    }\n}\nexports.PushAudioOutputStreamImpl = PushAudioOutputStreamImpl;\n\n//# sourceMappingURL=AudioOutputStream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdWRpby9BdWRpb091dHB1dFN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDLEdBQUcsNkJBQTZCLEdBQUcsaUNBQWlDLEdBQUcsNkJBQTZCLEdBQUcseUJBQXlCO0FBQ2pLO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMsOEhBQXlCO0FBQ3RELHVCQUF1QixtQkFBTyxDQUFDLHFIQUFpQjtBQUNoRCwrQkFBK0IsbUJBQU8sQ0FBQywwSUFBd0I7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1QkFBdUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1QkFBdUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBbUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxhQUFhO0FBQzVCLGlCQUFpQixpQkFBaUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGFBQWE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLCtCQUErQjtBQUM5QztBQUNBLGlCQUFpQix1QkFBdUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0JBQStCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7O0FBRWpDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdWRpby9BdWRpb091dHB1dFN0cmVhbS5qcz82YWYyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlB1c2hBdWRpb091dHB1dFN0cmVhbUltcGwgPSBleHBvcnRzLlB1c2hBdWRpb091dHB1dFN0cmVhbSA9IGV4cG9ydHMuUHVsbEF1ZGlvT3V0cHV0U3RyZWFtSW1wbCA9IGV4cG9ydHMuUHVsbEF1ZGlvT3V0cHV0U3RyZWFtID0gZXhwb3J0cy5BdWRpb091dHB1dFN0cmVhbSA9IHZvaWQgMDtcbi8qIGVzbGludC1kaXNhYmxlIG1heC1jbGFzc2VzLXBlci1maWxlICovXG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vY29tbW9uL0V4cG9ydHMuanNcIik7XG5jb25zdCBDb250cmFjdHNfanNfMSA9IHJlcXVpcmUoXCIuLi9Db250cmFjdHMuanNcIik7XG5jb25zdCBBdWRpb091dHB1dEZvcm1hdF9qc18xID0gcmVxdWlyZShcIi4vQXVkaW9PdXRwdXRGb3JtYXQuanNcIik7XG4vKipcbiAqIFJlcHJlc2VudHMgYXVkaW8gb3V0cHV0IHN0cmVhbSB1c2VkIGZvciBjdXN0b20gYXVkaW8gb3V0cHV0IGNvbmZpZ3VyYXRpb25zLlxuICogQGNsYXNzIEF1ZGlvT3V0cHV0U3RyZWFtXG4gKi9cbmNsYXNzIEF1ZGlvT3V0cHV0U3RyZWFtIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCBpbml0aWFsaXplcyBhbiBpbnN0YW5jZS5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbWVtb3J5IGJhY2tlZCBQdWxsQXVkaW9PdXRwdXRTdHJlYW0gd2l0aCB0aGUgc3BlY2lmaWVkIGF1ZGlvIGZvcm1hdC5cbiAgICAgKiBAbWVtYmVyIEF1ZGlvT3V0cHV0U3RyZWFtLmNyZWF0ZVB1bGxTdHJlYW1cbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge1B1bGxBdWRpb091dHB1dFN0cmVhbX0gVGhlIGF1ZGlvIG91dHB1dCBzdHJlYW0gYmVpbmcgY3JlYXRlZC5cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlUHVsbFN0cmVhbSgpIHtcbiAgICAgICAgcmV0dXJuIFB1bGxBdWRpb091dHB1dFN0cmVhbS5jcmVhdGUoKTtcbiAgICB9XG59XG5leHBvcnRzLkF1ZGlvT3V0cHV0U3RyZWFtID0gQXVkaW9PdXRwdXRTdHJlYW07XG4vKipcbiAqIFJlcHJlc2VudHMgbWVtb3J5IGJhY2tlZCBwdXNoIGF1ZGlvIG91dHB1dCBzdHJlYW0gdXNlZCBmb3IgY3VzdG9tIGF1ZGlvIG91dHB1dCBjb25maWd1cmF0aW9ucy5cbiAqIEBjbGFzcyBQdWxsQXVkaW9PdXRwdXRTdHJlYW1cbiAqL1xuY2xhc3MgUHVsbEF1ZGlvT3V0cHV0U3RyZWFtIGV4dGVuZHMgQXVkaW9PdXRwdXRTdHJlYW0ge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBtZW1vcnkgYmFja2VkIFB1bGxBdWRpb091dHB1dFN0cmVhbSB3aXRoIHRoZSBzcGVjaWZpZWQgYXVkaW8gZm9ybWF0LlxuICAgICAqIEBtZW1iZXIgUHVsbEF1ZGlvT3V0cHV0U3RyZWFtLmNyZWF0ZVxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7UHVsbEF1ZGlvT3V0cHV0U3RyZWFtfSBUaGUgcHVzaCBhdWRpbyBvdXRwdXQgc3RyZWFtIGJlaW5nIGNyZWF0ZWQuXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQdWxsQXVkaW9PdXRwdXRTdHJlYW1JbXBsKCk7XG4gICAgfVxufVxuZXhwb3J0cy5QdWxsQXVkaW9PdXRwdXRTdHJlYW0gPSBQdWxsQXVkaW9PdXRwdXRTdHJlYW07XG4vKipcbiAqIFJlcHJlc2VudHMgbWVtb3J5IGJhY2tlZCBwdXNoIGF1ZGlvIG91dHB1dCBzdHJlYW0gdXNlZCBmb3IgY3VzdG9tIGF1ZGlvIG91dHB1dCBjb25maWd1cmF0aW9ucy5cbiAqIEBwcml2YXRlXG4gKiBAY2xhc3MgUHVsbEF1ZGlvT3V0cHV0U3RyZWFtSW1wbFxuICovXG5jbGFzcyBQdWxsQXVkaW9PdXRwdXRTdHJlYW1JbXBsIGV4dGVuZHMgUHVsbEF1ZGlvT3V0cHV0U3RyZWFtIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCBpbml0aWFsaXplcyBhbiBpbnN0YW5jZSB3aXRoIHRoZSBnaXZlbiB2YWx1ZXMuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMucHJpdklkID0gRXhwb3J0c19qc18xLmNyZWF0ZU5vRGFzaEd1aWQoKTtcbiAgICAgICAgdGhpcy5wcml2U3RyZWFtID0gbmV3IEV4cG9ydHNfanNfMS5TdHJlYW0oKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgZm9ybWF0IGluZm9ybWF0aW9uIHRvIHRoZSBzdHJlYW0uIEZvciBpbnRlcm5hbCB1c2Ugb25seS5cbiAgICAgKiBAcGFyYW0ge0F1ZGlvU3RyZWFtRm9ybWF0fSBmb3JtYXQgLSB0aGUgZm9ybWF0IHRvIGJlIHNldC5cbiAgICAgKi9cbiAgICBzZXQgZm9ybWF0KGZvcm1hdCkge1xuICAgICAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQgfHwgZm9ybWF0ID09PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLnByaXZGb3JtYXQgPSBBdWRpb091dHB1dEZvcm1hdF9qc18xLkF1ZGlvT3V0cHV0Rm9ybWF0SW1wbC5nZXREZWZhdWx0T3V0cHV0Rm9ybWF0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcml2Rm9ybWF0ID0gZm9ybWF0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGb3JtYXQgaW5mb3JtYXRpb24gZm9yIHRoZSBhdWRpb1xuICAgICAqL1xuICAgIGdldCBmb3JtYXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZGb3JtYXQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENoZWNrcyBpZiB0aGUgc3RyZWFtIGlzIGNsb3NlZFxuICAgICAqIEBtZW1iZXIgUHVsbEF1ZGlvT3V0cHV0U3RyZWFtSW1wbC5wcm90b3R5cGUuaXNDbG9zZWRcbiAgICAgKiBAcHJvcGVydHlcbiAgICAgKiBAcHVibGljXG4gICAgICovXG4gICAgZ2V0IGlzQ2xvc2VkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3RyZWFtLmlzQ2xvc2VkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBpZCBvZiB0aGUgc3RyZWFtXG4gICAgICogQG1lbWJlciBQdWxsQXVkaW9PdXRwdXRTdHJlYW1JbXBsLnByb3RvdHlwZS5pZFxuICAgICAqIEBwcm9wZXJ0eVxuICAgICAqIEBwdWJsaWNcbiAgICAgKi9cbiAgICBpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdklkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkcyBhdWRpbyBkYXRhIGZyb20gdGhlIGludGVybmFsIGJ1ZmZlci5cbiAgICAgKiBAbWVtYmVyIFB1bGxBdWRpb091dHB1dFN0cmVhbUltcGwucHJvdG90eXBlLnJlYWRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtBcnJheUJ1ZmZlcn0gZGF0YUJ1ZmZlciAtIEFuIEFycmF5QnVmZmVyIHRvIHN0b3JlIHRoZSByZWFkIGRhdGEuXG4gICAgICogQHJldHVybnMge1Byb21pc2U8bnVtYmVyPn0gLSBBdWRpbyBidWZmZXIgbGVuZ3RoIGhhcyBiZWVuIHJlYWQuXG4gICAgICovXG4gICAgYXN5bmMgcmVhZChkYXRhQnVmZmVyKSB7XG4gICAgICAgIGNvbnN0IGludFZpZXcgPSBuZXcgSW50OEFycmF5KGRhdGFCdWZmZXIpO1xuICAgICAgICBsZXQgdG90YWxCeXRlcyA9IDA7XG4gICAgICAgIGlmICh0aGlzLnByaXZMYXN0Q2h1bmtWaWV3ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByaXZMYXN0Q2h1bmtWaWV3Lmxlbmd0aCA+IGRhdGFCdWZmZXIuYnl0ZUxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGludFZpZXcuc2V0KHRoaXMucHJpdkxhc3RDaHVua1ZpZXcuc2xpY2UoMCwgZGF0YUJ1ZmZlci5ieXRlTGVuZ3RoKSk7XG4gICAgICAgICAgICAgICAgdGhpcy5wcml2TGFzdENodW5rVmlldyA9IHRoaXMucHJpdkxhc3RDaHVua1ZpZXcuc2xpY2UoZGF0YUJ1ZmZlci5ieXRlTGVuZ3RoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGRhdGFCdWZmZXIuYnl0ZUxlbmd0aCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbnRWaWV3LnNldCh0aGlzLnByaXZMYXN0Q2h1bmtWaWV3KTtcbiAgICAgICAgICAgIHRvdGFsQnl0ZXMgPSB0aGlzLnByaXZMYXN0Q2h1bmtWaWV3Lmxlbmd0aDtcbiAgICAgICAgICAgIHRoaXMucHJpdkxhc3RDaHVua1ZpZXcgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVW50aWwgd2UgaGF2ZSB0aGUgbWluaW11bSBudW1iZXIgb2YgYnl0ZXMgdG8gc2VuZCBpbiBhIHRyYW5zbWlzc2lvbiwga2VlcCBhc2tpbmcgZm9yIG1vcmUuXG4gICAgICAgIHdoaWxlICh0b3RhbEJ5dGVzIDwgZGF0YUJ1ZmZlci5ieXRlTGVuZ3RoICYmICF0aGlzLnByaXZTdHJlYW0uaXNSZWFkRW5kZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGNodW5rID0gYXdhaXQgdGhpcy5wcml2U3RyZWFtLnJlYWQoKTtcbiAgICAgICAgICAgIGlmIChjaHVuayAhPT0gdW5kZWZpbmVkICYmICFjaHVuay5pc0VuZCkge1xuICAgICAgICAgICAgICAgIGxldCB0bXBCdWZmZXI7XG4gICAgICAgICAgICAgICAgaWYgKGNodW5rLmJ1ZmZlci5ieXRlTGVuZ3RoID4gZGF0YUJ1ZmZlci5ieXRlTGVuZ3RoIC0gdG90YWxCeXRlcykge1xuICAgICAgICAgICAgICAgICAgICB0bXBCdWZmZXIgPSBjaHVuay5idWZmZXIuc2xpY2UoMCwgZGF0YUJ1ZmZlci5ieXRlTGVuZ3RoIC0gdG90YWxCeXRlcyk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJpdkxhc3RDaHVua1ZpZXcgPSBuZXcgSW50OEFycmF5KGNodW5rLmJ1ZmZlci5zbGljZShkYXRhQnVmZmVyLmJ5dGVMZW5ndGggLSB0b3RhbEJ5dGVzKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0bXBCdWZmZXIgPSBjaHVuay5idWZmZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGludFZpZXcuc2V0KG5ldyBJbnQ4QXJyYXkodG1wQnVmZmVyKSwgdG90YWxCeXRlcyk7XG4gICAgICAgICAgICAgICAgdG90YWxCeXRlcyArPSB0bXBCdWZmZXIuYnl0ZUxlbmd0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMucHJpdlN0cmVhbS5yZWFkRW5kZWQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdG90YWxCeXRlcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGVzIHRoZSBhdWRpbyBkYXRhIHNwZWNpZmllZCBieSBtYWtpbmcgYW4gaW50ZXJuYWwgY29weSBvZiB0aGUgZGF0YS5cbiAgICAgKiBAbWVtYmVyIFB1bGxBdWRpb091dHB1dFN0cmVhbUltcGwucHJvdG90eXBlLndyaXRlXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7QXJyYXlCdWZmZXJ9IGRhdGFCdWZmZXIgLSBUaGUgYXVkaW8gYnVmZmVyIG9mIHdoaWNoIHRoaXMgZnVuY3Rpb24gd2lsbCBtYWtlIGEgY29weS5cbiAgICAgKi9cbiAgICB3cml0ZShkYXRhQnVmZmVyKSB7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yVW5kZWZpbmVkKHRoaXMucHJpdlN0cmVhbSwgXCJtdXN0IHNldCBmb3JtYXQgYmVmb3JlIHdyaXRpbmdcIik7XG4gICAgICAgIHRoaXMucHJpdlN0cmVhbS53cml0ZVN0cmVhbUNodW5rKHtcbiAgICAgICAgICAgIGJ1ZmZlcjogZGF0YUJ1ZmZlcixcbiAgICAgICAgICAgIGlzRW5kOiBmYWxzZSxcbiAgICAgICAgICAgIHRpbWVSZWNlaXZlZDogRGF0ZS5ub3coKVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xvc2VzIHRoZSBzdHJlYW0uXG4gICAgICogQG1lbWJlciBQdWxsQXVkaW9PdXRwdXRTdHJlYW1JbXBsLnByb3RvdHlwZS5jbG9zZVxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKi9cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy5wcml2U3RyZWFtLmNsb3NlKCk7XG4gICAgfVxufVxuZXhwb3J0cy5QdWxsQXVkaW9PdXRwdXRTdHJlYW1JbXBsID0gUHVsbEF1ZGlvT3V0cHV0U3RyZWFtSW1wbDtcbi8qXG4gKiBSZXByZXNlbnRzIGF1ZGlvIG91dHB1dCBzdHJlYW0gdXNlZCBmb3IgY3VzdG9tIGF1ZGlvIG91dHB1dCBjb25maWd1cmF0aW9ucy5cbiAqIEBjbGFzcyBQdXNoQXVkaW9PdXRwdXRTdHJlYW1cbiAqL1xuY2xhc3MgUHVzaEF1ZGlvT3V0cHV0U3RyZWFtIGV4dGVuZHMgQXVkaW9PdXRwdXRTdHJlYW0ge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuZCBpbnN0YW5jZS5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIFB1c2hBdWRpb091dHB1dFN0cmVhbSB0aGF0IGRlbGVnYXRlcyB0byB0aGUgc3BlY2lmaWVkIGNhbGxiYWNrIGludGVyZmFjZSBmb3JcbiAgICAgKiB3cml0ZSgpIGFuZCBjbG9zZSgpIG1ldGhvZHMuXG4gICAgICogQG1lbWJlciBQdXNoQXVkaW9PdXRwdXRTdHJlYW0uY3JlYXRlXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7UHVzaEF1ZGlvT3V0cHV0U3RyZWFtQ2FsbGJhY2t9IGNhbGxiYWNrIC0gVGhlIGN1c3RvbSBhdWRpbyBvdXRwdXQgb2JqZWN0LFxuICAgICAqIGRlcml2ZWQgZnJvbSBQdXNoQXVkaW9PdXRwdXRTdHJlYW1DYWxsYmFja1xuICAgICAqIEByZXR1cm5zIHtQdXNoQXVkaW9PdXRwdXRTdHJlYW19IFRoZSBwdXNoIGF1ZGlvIG91dHB1dCBzdHJlYW0gYmVpbmcgY3JlYXRlZC5cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlKGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHVzaEF1ZGlvT3V0cHV0U3RyZWFtSW1wbChjYWxsYmFjayk7XG4gICAgfVxufVxuZXhwb3J0cy5QdXNoQXVkaW9PdXRwdXRTdHJlYW0gPSBQdXNoQXVkaW9PdXRwdXRTdHJlYW07XG4vKipcbiAqIFJlcHJlc2VudHMgYXVkaW8gb3V0cHV0IHN0cmVhbSB1c2VkIGZvciBjdXN0b20gYXVkaW8gb3V0cHV0IGNvbmZpZ3VyYXRpb25zLlxuICogQHByaXZhdGVcbiAqIEBjbGFzcyBQdXNoQXVkaW9PdXRwdXRTdHJlYW1JbXBsXG4gKi9cbmNsYXNzIFB1c2hBdWRpb091dHB1dFN0cmVhbUltcGwgZXh0ZW5kcyBQdXNoQXVkaW9PdXRwdXRTdHJlYW0ge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBQdXNoQXVkaW9PdXRwdXRTdHJlYW0gdGhhdCBkZWxlZ2F0ZXMgdG8gdGhlIHNwZWNpZmllZCBjYWxsYmFjayBpbnRlcmZhY2UgZm9yXG4gICAgICogcmVhZCgpIGFuZCBjbG9zZSgpIG1ldGhvZHMuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtQdXNoQXVkaW9PdXRwdXRTdHJlYW1DYWxsYmFja30gY2FsbGJhY2sgLSBUaGUgY3VzdG9tIGF1ZGlvIG91dHB1dCBvYmplY3QsXG4gICAgICogZGVyaXZlZCBmcm9tIFB1c2hBdWRpb091dHB1dFN0cmVhbUNhbGxiYWNrXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2FsbGJhY2spIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5wcml2SWQgPSBFeHBvcnRzX2pzXzEuY3JlYXRlTm9EYXNoR3VpZCgpO1xuICAgICAgICB0aGlzLnByaXZDYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gICAgc2V0IGZvcm1hdChmb3JtYXQpIHsgfVxuICAgIHdyaXRlKGJ1ZmZlcikge1xuICAgICAgICBpZiAoISF0aGlzLnByaXZDYWxsYmFjay53cml0ZSkge1xuICAgICAgICAgICAgdGhpcy5wcml2Q2FsbGJhY2sud3JpdGUoYnVmZmVyKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgaWYgKCEhdGhpcy5wcml2Q2FsbGJhY2suY2xvc2UpIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkNhbGxiYWNrLmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZJZDtcbiAgICB9XG59XG5leHBvcnRzLlB1c2hBdWRpb091dHB1dFN0cmVhbUltcGwgPSBQdXNoQXVkaW9PdXRwdXRTdHJlYW1JbXBsO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdWRpb091dHB1dFN0cmVhbS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AudioStreamFormatImpl = exports.AudioStreamFormat = exports.AudioFormatTag = void 0;\n// eslint-disable-next-line max-classes-per-file\nvar AudioFormatTag;\n(function (AudioFormatTag) {\n    AudioFormatTag[AudioFormatTag[\"PCM\"] = 1] = \"PCM\";\n    AudioFormatTag[AudioFormatTag[\"MuLaw\"] = 2] = \"MuLaw\";\n    AudioFormatTag[AudioFormatTag[\"Siren\"] = 3] = \"Siren\";\n    AudioFormatTag[AudioFormatTag[\"MP3\"] = 4] = \"MP3\";\n    AudioFormatTag[AudioFormatTag[\"SILKSkype\"] = 5] = \"SILKSkype\";\n    AudioFormatTag[AudioFormatTag[\"OGG_OPUS\"] = 6] = \"OGG_OPUS\";\n    AudioFormatTag[AudioFormatTag[\"WEBM_OPUS\"] = 7] = \"WEBM_OPUS\";\n    AudioFormatTag[AudioFormatTag[\"ALaw\"] = 8] = \"ALaw\";\n    AudioFormatTag[AudioFormatTag[\"FLAC\"] = 9] = \"FLAC\";\n    AudioFormatTag[AudioFormatTag[\"OPUS\"] = 10] = \"OPUS\";\n    AudioFormatTag[AudioFormatTag[\"AMR_WB\"] = 11] = \"AMR_WB\";\n    AudioFormatTag[AudioFormatTag[\"G722\"] = 12] = \"G722\";\n})(AudioFormatTag = exports.AudioFormatTag || (exports.AudioFormatTag = {}));\n/**\n * Represents audio stream format used for custom audio input configurations.\n * @class AudioStreamFormat\n */\nclass AudioStreamFormat {\n    /**\n     * Creates an audio stream format object representing the default audio stream\n     * format (16KHz 16bit mono PCM).\n     * @member AudioStreamFormat.getDefaultInputFormat\n     * @function\n     * @public\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    static getDefaultInputFormat() {\n        return AudioStreamFormatImpl.getDefaultInputFormat();\n    }\n    /**\n     * Creates an audio stream format object with the specified format characteristics.\n     * @member AudioStreamFormat.getWaveFormat\n     * @function\n     * @public\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\n     * uses one channel and stereo data uses two channels.\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    static getWaveFormat(samplesPerSecond, bitsPerSample, channels, format) {\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels, format);\n    }\n    /**\n     * Creates an audio stream format object with the specified pcm waveformat characteristics.\n     * @member AudioStreamFormat.getWaveFormatPCM\n     * @function\n     * @public\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\n     * uses one channel and stereo data uses two channels.\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    static getWaveFormatPCM(samplesPerSecond, bitsPerSample, channels) {\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels);\n    }\n}\nexports.AudioStreamFormat = AudioStreamFormat;\n/**\n * @private\n * @class AudioStreamFormatImpl\n */\nclass AudioStreamFormatImpl extends AudioStreamFormat {\n    /**\n     * Creates an instance with the given values.\n     * @constructor\n     * @param {number} samplesPerSec - Samples per second.\n     * @param {number} bitsPerSample - Bits per sample.\n     * @param {number} channels - Number of channels.\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\n     */\n    constructor(samplesPerSec = 16000, bitsPerSample = 16, channels = 1, format = AudioFormatTag.PCM) {\n        super();\n        let isWavFormat = true;\n        /* 1 for PCM; 6 for alaw; 7 for mulaw */\n        switch (format) {\n            case AudioFormatTag.PCM:\n                this.formatTag = 1;\n                break;\n            case AudioFormatTag.ALaw:\n                this.formatTag = 6;\n                break;\n            case AudioFormatTag.MuLaw:\n                this.formatTag = 7;\n                break;\n            default:\n                isWavFormat = false;\n        }\n        this.bitsPerSample = bitsPerSample;\n        this.samplesPerSec = samplesPerSec;\n        this.channels = channels;\n        this.avgBytesPerSec = this.samplesPerSec * this.channels * (this.bitsPerSample / 8);\n        this.blockAlign = this.channels * Math.max(this.bitsPerSample, 8);\n        if (isWavFormat) {\n            this.privHeader = new ArrayBuffer(44);\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\n            const view = new DataView(this.privHeader);\n            /* RIFF identifier */\n            this.setString(view, 0, \"RIFF\");\n            /* file length */\n            view.setUint32(4, 0, true);\n            /* RIFF type & Format */\n            this.setString(view, 8, \"WAVEfmt \");\n            /* format chunk length */\n            view.setUint32(16, 16, true);\n            /* audio format */\n            view.setUint16(20, this.formatTag, true);\n            /* channel count */\n            view.setUint16(22, this.channels, true);\n            /* sample rate */\n            view.setUint32(24, this.samplesPerSec, true);\n            /* byte rate (sample rate * block align) */\n            view.setUint32(28, this.avgBytesPerSec, true);\n            /* block align (channel count * bytes per sample) */\n            view.setUint16(32, this.channels * (this.bitsPerSample / 8), true);\n            /* bits per sample */\n            view.setUint16(34, this.bitsPerSample, true);\n            /* data chunk identifier */\n            this.setString(view, 36, \"data\");\n            /* data chunk length */\n            view.setUint32(40, 0, true);\n        }\n    }\n    /**\n     * Retrieves the default input format.\n     * @member AudioStreamFormatImpl.getDefaultInputFormat\n     * @function\n     * @public\n     * @returns {AudioStreamFormatImpl} The default input format.\n     */\n    static getDefaultInputFormat() {\n        return new AudioStreamFormatImpl();\n    }\n    /**\n     * Creates an audio context appropriate to current browser\n     * @member AudioStreamFormatImpl.getAudioContext\n     * @function\n     * @public\n     * @returns {AudioContext} An audio context instance\n     */\n    /* eslint-disable */\n    static getAudioContext(sampleRate) {\n        // Workaround for Speech SDK bug in Safari.\n        const AudioContext = window.AudioContext // our preferred impl\n            || window.webkitAudioContext // fallback, mostly when on Safari\n            || false; // could not find.\n        // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\n        if (!!AudioContext) {\n            if (sampleRate !== undefined && navigator.mediaDevices.getSupportedConstraints().sampleRate) {\n                return new AudioContext({ sampleRate });\n            }\n            else {\n                return new AudioContext();\n            }\n        }\n        else {\n            throw new Error(\"Browser does not support Web Audio API (AudioContext is not available).\");\n        }\n    }\n    /* eslint-enable */\n    /**\n     * Closes the configuration object.\n     * @member AudioStreamFormatImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n    get header() {\n        return this.privHeader;\n    }\n    setString(view, offset, str) {\n        for (let i = 0; i < str.length; i++) {\n            view.setUint8(offset + i, str.charCodeAt(i));\n        }\n    }\n}\nexports.AudioStreamFormatImpl = AudioStreamFormatImpl;\n\n//# sourceMappingURL=AudioStreamFormat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/BaseAudioPlayer.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/BaseAudioPlayer.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaseAudioPlayer = void 0;\nconst Error_js_1 = __webpack_require__(/*! ../../common/Error.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Error.js\");\nconst Exports_js_1 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst AudioStreamFormat_js_1 = __webpack_require__(/*! ./AudioStreamFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js\");\n/**\n * Base audio player class\n * TODO: Plays only PCM for now.\n * @class\n */\nclass BaseAudioPlayer {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {AudioStreamFormat} audioFormat audio stream format recognized by the player.\n     */\n    constructor(audioFormat) {\n        this.audioContext = null;\n        this.gainNode = null;\n        this.autoUpdateBufferTimer = 0;\n        if (audioFormat === undefined) {\n            audioFormat = Exports_js_1.AudioStreamFormat.getDefaultInputFormat();\n        }\n        this.init(audioFormat);\n    }\n    /**\n     * play Audio sample\n     * @param newAudioData audio data to be played.\n     */\n    playAudioSample(newAudioData, cb, err) {\n        try {\n            this.ensureInitializedContext();\n            const audioData = this.formatAudioData(newAudioData);\n            const newSamplesData = new Float32Array(this.samples.length + audioData.length);\n            newSamplesData.set(this.samples, 0);\n            newSamplesData.set(audioData, this.samples.length);\n            this.samples = newSamplesData;\n            if (!!cb) {\n                cb();\n            }\n        }\n        catch (e) {\n            if (!!err) {\n                err(e);\n            }\n        }\n    }\n    /**\n     * stops audio and clears the buffers\n     */\n    stopAudio(cb, err) {\n        if (this.audioContext !== null) {\n            this.samples = new Float32Array();\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            clearInterval(this.autoUpdateBufferTimer);\n            this.audioContext.close().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n            this.audioContext = null;\n        }\n    }\n    init(audioFormat) {\n        this.audioFormat = audioFormat;\n        this.samples = new Float32Array();\n    }\n    ensureInitializedContext() {\n        if (this.audioContext === null) {\n            this.createAudioContext();\n            const timerPeriod = 200;\n            this.autoUpdateBufferTimer = setInterval(() => {\n                this.updateAudioBuffer();\n            }, timerPeriod);\n        }\n    }\n    createAudioContext() {\n        // new ((window as any).AudioContext || (window as any).webkitAudioContext)();\n        this.audioContext = AudioStreamFormat_js_1.AudioStreamFormatImpl.getAudioContext();\n        // TODO: Various examples shows this gain node, it does not seem to be needed unless we plan\n        // to control the volume, not likely\n        this.gainNode = this.audioContext.createGain();\n        this.gainNode.gain.value = 1;\n        this.gainNode.connect(this.audioContext.destination);\n        this.startTime = this.audioContext.currentTime;\n    }\n    formatAudioData(audioData) {\n        switch (this.audioFormat.bitsPerSample) {\n            case 8:\n                return this.formatArrayBuffer(new Int8Array(audioData), 128);\n            case 16:\n                return this.formatArrayBuffer(new Int16Array(audioData), 32768);\n            case 32:\n                return this.formatArrayBuffer(new Int32Array(audioData), 2147483648);\n            default:\n                throw new Error_js_1.InvalidOperationError(\"Only WAVE_FORMAT_PCM (8/16/32 bps) format supported at this time\");\n        }\n    }\n    formatArrayBuffer(audioData, maxValue) {\n        const float32Data = new Float32Array(audioData.length);\n        for (let i = 0; i < audioData.length; i++) {\n            float32Data[i] = audioData[i] / maxValue;\n        }\n        return float32Data;\n    }\n    updateAudioBuffer() {\n        if (this.samples.length === 0) {\n            return;\n        }\n        const channelCount = this.audioFormat.channels;\n        const bufferSource = this.audioContext.createBufferSource();\n        const frameCount = this.samples.length / channelCount;\n        const audioBuffer = this.audioContext.createBuffer(channelCount, frameCount, this.audioFormat.samplesPerSec);\n        // TODO: Should we do the conversion in the pushAudioSample instead?\n        for (let channel = 0; channel < channelCount; channel++) {\n            // Fill in individual channel data\n            let channelOffset = channel;\n            const audioData = audioBuffer.getChannelData(channel);\n            for (let i = 0; i < this.samples.length; i++, channelOffset += channelCount) {\n                audioData[i] = this.samples[channelOffset];\n            }\n        }\n        if (this.startTime < this.audioContext.currentTime) {\n            this.startTime = this.audioContext.currentTime;\n        }\n        bufferSource.buffer = audioBuffer;\n        bufferSource.connect(this.gainNode);\n        bufferSource.start(this.startTime);\n        // Make sure we play the next sample after the current one.\n        this.startTime += audioBuffer.duration;\n        // Clear the samples for the next pushed data.\n        this.samples = new Float32Array();\n    }\n    async playAudio(audioData) {\n        if (this.audioContext === null) {\n            this.createAudioContext();\n        }\n        const source = this.audioContext.createBufferSource();\n        const destination = this.audioContext.destination;\n        await this.audioContext.decodeAudioData(audioData, (newBuffer) => {\n            source.buffer = newBuffer;\n            source.connect(destination);\n            source.start(0);\n        });\n    }\n}\nexports.BaseAudioPlayer = BaseAudioPlayer;\n\n//# sourceMappingURL=BaseAudioPlayer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/BaseAudioPlayer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PullAudioInputStreamCallback.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PullAudioInputStreamCallback.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PullAudioInputStreamCallback = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * An abstract base class that defines callback methods (read() and close()) for\n * custom audio input streams).\n * @class PullAudioInputStreamCallback\n */\nclass PullAudioInputStreamCallback {\n}\nexports.PullAudioInputStreamCallback = PullAudioInputStreamCallback;\n\n//# sourceMappingURL=PullAudioInputStreamCallback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdWRpby9QdWxsQXVkaW9JbnB1dFN0cmVhbUNhbGxiYWNrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7O0FBRXBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdWRpby9QdWxsQXVkaW9JbnB1dFN0cmVhbUNhbGxiYWNrLmpzP2JiZjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlB1bGxBdWRpb0lucHV0U3RyZWFtQ2FsbGJhY2sgPSB2b2lkIDA7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8qKlxuICogQW4gYWJzdHJhY3QgYmFzZSBjbGFzcyB0aGF0IGRlZmluZXMgY2FsbGJhY2sgbWV0aG9kcyAocmVhZCgpIGFuZCBjbG9zZSgpKSBmb3JcbiAqIGN1c3RvbSBhdWRpbyBpbnB1dCBzdHJlYW1zKS5cbiAqIEBjbGFzcyBQdWxsQXVkaW9JbnB1dFN0cmVhbUNhbGxiYWNrXG4gKi9cbmNsYXNzIFB1bGxBdWRpb0lucHV0U3RyZWFtQ2FsbGJhY2sge1xufVxuZXhwb3J0cy5QdWxsQXVkaW9JbnB1dFN0cmVhbUNhbGxiYWNrID0gUHVsbEF1ZGlvSW5wdXRTdHJlYW1DYWxsYmFjaztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UHVsbEF1ZGlvSW5wdXRTdHJlYW1DYWxsYmFjay5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PullAudioInputStreamCallback.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PushAudioOutputStreamCallback.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PushAudioOutputStreamCallback.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PushAudioOutputStreamCallback = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * An abstract base class that defines callback methods (write() and close()) for\n * custom audio output streams).\n * @class PushAudioOutputStreamCallback\n */\nclass PushAudioOutputStreamCallback {\n}\nexports.PushAudioOutputStreamCallback = PushAudioOutputStreamCallback;\n\n//# sourceMappingURL=PushAudioOutputStreamCallback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdWRpby9QdXNoQXVkaW9PdXRwdXRTdHJlYW1DYWxsYmFjay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDOztBQUVyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvQXVkaW8vUHVzaEF1ZGlvT3V0cHV0U3RyZWFtQ2FsbGJhY2suanM/OGIxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHVzaEF1ZGlvT3V0cHV0U3RyZWFtQ2FsbGJhY2sgPSB2b2lkIDA7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8qKlxuICogQW4gYWJzdHJhY3QgYmFzZSBjbGFzcyB0aGF0IGRlZmluZXMgY2FsbGJhY2sgbWV0aG9kcyAod3JpdGUoKSBhbmQgY2xvc2UoKSkgZm9yXG4gKiBjdXN0b20gYXVkaW8gb3V0cHV0IHN0cmVhbXMpLlxuICogQGNsYXNzIFB1c2hBdWRpb091dHB1dFN0cmVhbUNhbGxiYWNrXG4gKi9cbmNsYXNzIFB1c2hBdWRpb091dHB1dFN0cmVhbUNhbGxiYWNrIHtcbn1cbmV4cG9ydHMuUHVzaEF1ZGlvT3V0cHV0U3RyZWFtQ2FsbGJhY2sgPSBQdXNoQXVkaW9PdXRwdXRTdHJlYW1DYWxsYmFjaztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UHVzaEF1ZGlvT3V0cHV0U3RyZWFtQ2FsbGJhY2suanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PushAudioOutputStreamCallback.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/SpeakerAudioDestination.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/SpeakerAudioDestination.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeakerAudioDestination = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst AudioOutputStream_js_1 = __webpack_require__(/*! ./AudioOutputStream.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputStream.js\");\nconst AudioStreamFormat_js_1 = __webpack_require__(/*! ./AudioStreamFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js\");\nconst MediaDurationPlaceholderSeconds = 60 * 30;\nconst AudioFormatToMimeType = {\n    [AudioStreamFormat_js_1.AudioFormatTag.PCM]: \"audio/wav\",\n    [AudioStreamFormat_js_1.AudioFormatTag.MuLaw]: \"audio/x-wav\",\n    [AudioStreamFormat_js_1.AudioFormatTag.MP3]: \"audio/mpeg\",\n    [AudioStreamFormat_js_1.AudioFormatTag.OGG_OPUS]: \"audio/ogg\",\n    [AudioStreamFormat_js_1.AudioFormatTag.WEBM_OPUS]: \"audio/webm; codecs=opus\",\n    [AudioStreamFormat_js_1.AudioFormatTag.ALaw]: \"audio/x-wav\",\n    [AudioStreamFormat_js_1.AudioFormatTag.FLAC]: \"audio/flac\",\n    [AudioStreamFormat_js_1.AudioFormatTag.AMR_WB]: \"audio/amr-wb\",\n    [AudioStreamFormat_js_1.AudioFormatTag.G722]: \"audio/G722\",\n};\n/**\n * Represents the speaker playback audio destination, which only works in browser.\n * Note: the SDK will try to use <a href=\"https://www.w3.org/TR/media-source/\">Media Source Extensions</a> to play audio.\n * Mp3 format has better supports on Microsoft Edge, Chrome and Safari (desktop), so, it's better to specify mp3 format for playback.\n * @class SpeakerAudioDestination\n * Updated in version 1.17.0\n */\nclass SpeakerAudioDestination {\n    constructor(audioDestinationId) {\n        this.privPlaybackStarted = false;\n        this.privAppendingToBuffer = false;\n        this.privMediaSourceOpened = false;\n        this.privBytesReceived = 0;\n        this.privId = audioDestinationId ? audioDestinationId : Exports_js_1.createNoDashGuid();\n        this.privIsPaused = false;\n        this.privIsClosed = false;\n    }\n    id() {\n        return this.privId;\n    }\n    write(buffer, cb, err) {\n        if (this.privAudioBuffer !== undefined) {\n            this.privAudioBuffer.push(buffer);\n            this.updateSourceBuffer().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        else if (this.privAudioOutputStream !== undefined) {\n            this.privAudioOutputStream.write(buffer);\n            this.privBytesReceived += buffer.byteLength;\n        }\n    }\n    close(cb, err) {\n        this.privIsClosed = true;\n        if (this.privSourceBuffer !== undefined) {\n            this.handleSourceBufferUpdateEnd().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        else if (this.privAudioOutputStream !== undefined && typeof window !== \"undefined\") {\n            if ((this.privFormat.formatTag === AudioStreamFormat_js_1.AudioFormatTag.PCM || this.privFormat.formatTag === AudioStreamFormat_js_1.AudioFormatTag.MuLaw\n                || this.privFormat.formatTag === AudioStreamFormat_js_1.AudioFormatTag.ALaw) && this.privFormat.hasHeader === false) {\n                // eslint-disable-next-line no-console\n                console.warn(\"Play back is not supported for raw PCM, mulaw or alaw format without header.\");\n                if (!!this.onAudioEnd) {\n                    this.onAudioEnd(this);\n                }\n            }\n            else {\n                let receivedAudio = new ArrayBuffer(this.privBytesReceived);\n                this.privAudioOutputStream.read(receivedAudio).then(() => {\n                    receivedAudio = this.privFormat.addHeader(receivedAudio);\n                    const audioBlob = new Blob([receivedAudio], { type: AudioFormatToMimeType[this.privFormat.formatTag] });\n                    this.privAudio.src = window.URL.createObjectURL(audioBlob);\n                    this.notifyPlayback().then(() => {\n                        if (!!cb) {\n                            cb();\n                        }\n                    }, (error) => {\n                        if (!!err) {\n                            err(error);\n                        }\n                    });\n                }, (error) => {\n                    if (!!err) {\n                        err(error);\n                    }\n                });\n            }\n        }\n        else {\n            // unsupported format, call onAudioEnd directly.\n            if (!!this.onAudioEnd) {\n                this.onAudioEnd(this);\n            }\n        }\n    }\n    set format(format) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (typeof (AudioContext) !== \"undefined\" || (typeof (window) !== \"undefined\" && typeof (window.webkitAudioContext) !== \"undefined\")) {\n            this.privFormat = format;\n            const mimeType = AudioFormatToMimeType[this.privFormat.formatTag];\n            if (mimeType === undefined) {\n                // eslint-disable-next-line no-console\n                console.warn(`Unknown mimeType for format ${AudioStreamFormat_js_1.AudioFormatTag[this.privFormat.formatTag]}; playback is not supported.`);\n            }\n            else if (typeof (MediaSource) !== \"undefined\" && MediaSource.isTypeSupported(mimeType)) {\n                this.privAudio = new Audio();\n                this.privAudioBuffer = [];\n                this.privMediaSource = new MediaSource();\n                this.privAudio.src = URL.createObjectURL(this.privMediaSource);\n                this.privAudio.load();\n                this.privMediaSource.onsourceopen = () => {\n                    this.privMediaSourceOpened = true;\n                    this.privMediaSource.duration = MediaDurationPlaceholderSeconds;\n                    this.privSourceBuffer = this.privMediaSource.addSourceBuffer(mimeType);\n                    this.privSourceBuffer.onupdate = () => {\n                        this.updateSourceBuffer().catch((reason) => {\n                            Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n                        });\n                    };\n                    this.privSourceBuffer.onupdateend = () => {\n                        this.handleSourceBufferUpdateEnd().catch((reason) => {\n                            Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n                        });\n                    };\n                    this.privSourceBuffer.onupdatestart = () => {\n                        this.privAppendingToBuffer = false;\n                    };\n                };\n                this.updateSourceBuffer().catch((reason) => {\n                    Exports_js_1.Events.instance.onEvent(new Exports_js_1.BackgroundEvent(reason));\n                });\n            }\n            else {\n                // eslint-disable-next-line no-console\n                console.warn(`Format ${AudioStreamFormat_js_1.AudioFormatTag[this.privFormat.formatTag]} could not be played by MSE, streaming playback is not enabled.`);\n                this.privAudioOutputStream = new AudioOutputStream_js_1.PullAudioOutputStreamImpl();\n                this.privAudioOutputStream.format = this.privFormat;\n                this.privAudio = new Audio();\n            }\n        }\n    }\n    get volume() {\n        return this.privAudio?.volume ?? -1;\n    }\n    set volume(volume) {\n        if (!!this.privAudio) {\n            this.privAudio.volume = volume;\n        }\n    }\n    mute() {\n        if (!!this.privAudio) {\n            this.privAudio.muted = true;\n        }\n    }\n    unmute() {\n        if (!!this.privAudio) {\n            this.privAudio.muted = false;\n        }\n    }\n    get isClosed() {\n        return this.privIsClosed;\n    }\n    get currentTime() {\n        if (this.privAudio !== undefined) {\n            return this.privAudio.currentTime;\n        }\n        return -1;\n    }\n    pause() {\n        if (!this.privIsPaused && this.privAudio !== undefined) {\n            this.privAudio.pause();\n            this.privIsPaused = true;\n        }\n    }\n    resume(cb, err) {\n        if (this.privIsPaused && this.privAudio !== undefined) {\n            this.privAudio.play().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n            this.privIsPaused = false;\n        }\n    }\n    get internalAudio() {\n        return this.privAudio;\n    }\n    async updateSourceBuffer() {\n        if (this.privAudioBuffer !== undefined && (this.privAudioBuffer.length > 0) && this.sourceBufferAvailable()) {\n            this.privAppendingToBuffer = true;\n            const binary = this.privAudioBuffer.shift();\n            try {\n                this.privSourceBuffer.appendBuffer(binary);\n            }\n            catch (error) {\n                this.privAudioBuffer.unshift(binary);\n                // eslint-disable-next-line no-console\n                console.log(\"buffer filled, pausing addition of binaries until space is made\");\n                return;\n            }\n            await this.notifyPlayback();\n        }\n        else if (this.canEndStream()) {\n            await this.handleSourceBufferUpdateEnd();\n        }\n    }\n    async handleSourceBufferUpdateEnd() {\n        if (this.canEndStream() && this.sourceBufferAvailable()) {\n            this.privMediaSource.endOfStream();\n            await this.notifyPlayback();\n        }\n    }\n    async notifyPlayback() {\n        if (!this.privPlaybackStarted && this.privAudio !== undefined) {\n            this.privPlaybackStarted = true;\n            if (!!this.onAudioStart) {\n                this.onAudioStart(this);\n            }\n            this.privAudio.onended = () => {\n                if (!!this.onAudioEnd) {\n                    this.onAudioEnd(this);\n                }\n            };\n            if (!this.privIsPaused) {\n                await this.privAudio.play();\n            }\n        }\n    }\n    canEndStream() {\n        return (this.isClosed && this.privSourceBuffer !== undefined && (this.privAudioBuffer.length === 0)\n            && this.privMediaSourceOpened && !this.privAppendingToBuffer && this.privMediaSource.readyState === \"open\");\n    }\n    sourceBufferAvailable() {\n        return (this.privSourceBuffer !== undefined && !this.privSourceBuffer.updating);\n    }\n}\nexports.SpeakerAudioDestination = SpeakerAudioDestination;\n\n//# sourceMappingURL=SpeakerAudioDestination.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/SpeakerAudioDestination.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AutoDetectSourceLanguageConfig.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AutoDetectSourceLanguageConfig.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AutoDetectSourceLanguageConfig = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst LanguageIdMode_js_1 = __webpack_require__(/*! ./LanguageIdMode.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageIdMode.js\");\n/**\n * Language auto detect configuration.\n * @class AutoDetectSourceLanguageConfig\n * Added in version 1.13.0.\n */\nclass AutoDetectSourceLanguageConfig {\n    constructor() {\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_LanguageIdMode, \"AtStart\");\n        this.privLanguageIdMode = LanguageIdMode_js_1.LanguageIdMode.AtStart;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.fromOpenRange\n     * @function\n     * @public\n     * Only [[SpeechSynthesizer]] supports source language auto detection from open range,\n     * for [[Recognizer]], please use AutoDetectSourceLanguageConfig with specific source languages.\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with open range.\n     */\n    static fromOpenRange() {\n        const config = new AutoDetectSourceLanguageConfig();\n        config.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, Exports_js_1.AutoDetectSourceLanguagesOpenRangeOptionName);\n        return config;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.fromLanguages\n     * @function\n     * @public\n     * @param {string[]} languages Comma-separated string of languages (eg. \"en-US,fr-FR\") to populate properties of config.\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given languages.\n     */\n    static fromLanguages(languages) {\n        Contracts_js_1.Contracts.throwIfArrayEmptyOrWhitespace(languages, \"languages\");\n        const config = new AutoDetectSourceLanguageConfig();\n        config.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, languages.join());\n        return config;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.fromSourceLanguageConfigs\n     * @function\n     * @public\n     * @param {SourceLanguageConfig[]} configs SourceLanguageConfigs to populate properties of config.\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given SourceLanguageConfigs.\n     */\n    static fromSourceLanguageConfigs(configs) {\n        if (configs.length < 1) {\n            throw new Error(\"Expected non-empty SourceLanguageConfig array.\");\n        }\n        const autoConfig = new AutoDetectSourceLanguageConfig();\n        const langs = [];\n        configs.forEach((config) => {\n            langs.push(config.language);\n            if (config.endpointId !== undefined && config.endpointId !== \"\") {\n                const customProperty = config.language + Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId.toString();\n                autoConfig.properties.setProperty(customProperty, config.endpointId);\n            }\n        });\n        autoConfig.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, langs.join());\n        return autoConfig;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.prototype.properties\n     * @function\n     * @public\n     * @return {PropertyCollection} Properties of the config.\n     * @summary Gets an auto detected language config properties\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.prototype.mode\n     * @function\n     * @public\n     * @param {LanguageIdMode} mode LID mode desired.\n     * @summary Sets LID operation to desired mode\n     */\n    set mode(mode) {\n        if (mode === LanguageIdMode_js_1.LanguageIdMode.Continuous) {\n            this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"2\");\n            this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_LanguageIdMode, \"Continuous\");\n        }\n        else { // LanguageIdMode.AtStart\n            this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"1\");\n            this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_LanguageIdMode, \"AtStart\");\n        }\n        this.privLanguageIdMode = mode;\n    }\n}\nexports.AutoDetectSourceLanguageConfig = AutoDetectSourceLanguageConfig;\n\n//# sourceMappingURL=AutoDetectSourceLanguageConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AutoDetectSourceLanguageConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AutoDetectSourceLanguageResult.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AutoDetectSourceLanguageResult.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AutoDetectSourceLanguageResult = void 0;\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\n/**\n * Output format\n * @class AutoDetectSourceLanguageResult\n */\nclass AutoDetectSourceLanguageResult {\n    constructor(language, languageDetectionConfidence) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(language, \"language\");\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\n        this.privLanguage = language;\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\n    }\n    /**\n     * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\n     * @member AutoDetectSourceLanguageResult.fromResult\n     * @function\n     * @public\n     * @param {SpeechRecognitionResult} result - The recognition result.\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\n     */\n    static fromResult(result) {\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\n    }\n    /**\n     * Creates an instance of AutoDetectSourceLanguageResult object from a ConversationTranscriptionResult instance.\n     * @member AutoDetectSourceLanguageResult.fromConversationTranscriptionResult\n     * @function\n     * @public\n     * @param {ConversationTranscriptionResult} result - The transcription result.\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\n     */\n    static fromConversationTranscriptionResult(result) {\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\n    }\n    get language() {\n        return this.privLanguage;\n    }\n    get languageDetectionConfidence() {\n        return this.privLanguageDetectionConfidence;\n    }\n}\nexports.AutoDetectSourceLanguageResult = AutoDetectSourceLanguageResult;\n\n//# sourceMappingURL=AutoDetectSourceLanguageResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdXRvRGV0ZWN0U291cmNlTGFuZ3VhZ2VSZXN1bHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNDQUFzQztBQUN0Qyx1QkFBdUIsbUJBQU8sQ0FBQyxvSEFBZ0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHlCQUF5QjtBQUN4QyxpQkFBaUIsZ0NBQWdDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUNBQWlDO0FBQ2hELGlCQUFpQixnQ0FBZ0M7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQzs7QUFFdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL0F1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZVJlc3VsdC5qcz9kNmFmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkF1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZVJlc3VsdCA9IHZvaWQgMDtcbmNvbnN0IENvbnRyYWN0c19qc18xID0gcmVxdWlyZShcIi4vQ29udHJhY3RzLmpzXCIpO1xuLyoqXG4gKiBPdXRwdXQgZm9ybWF0XG4gKiBAY2xhc3MgQXV0b0RldGVjdFNvdXJjZUxhbmd1YWdlUmVzdWx0XG4gKi9cbmNsYXNzIEF1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZVJlc3VsdCB7XG4gICAgY29uc3RydWN0b3IobGFuZ3VhZ2UsIGxhbmd1YWdlRGV0ZWN0aW9uQ29uZmlkZW5jZSkge1xuICAgICAgICBDb250cmFjdHNfanNfMS5Db250cmFjdHMudGhyb3dJZk51bGxPclVuZGVmaW5lZChsYW5ndWFnZSwgXCJsYW5ndWFnZVwiKTtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZOdWxsT3JVbmRlZmluZWQobGFuZ3VhZ2VEZXRlY3Rpb25Db25maWRlbmNlLCBcImxhbmd1YWdlRGV0ZWN0aW9uQ29uZmlkZW5jZVwiKTtcbiAgICAgICAgdGhpcy5wcml2TGFuZ3VhZ2UgPSBsYW5ndWFnZTtcbiAgICAgICAgdGhpcy5wcml2TGFuZ3VhZ2VEZXRlY3Rpb25Db25maWRlbmNlID0gbGFuZ3VhZ2VEZXRlY3Rpb25Db25maWRlbmNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIEF1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZVJlc3VsdCBvYmplY3QgZnJvbSBhIFNwZWVjaFJlY29nbml0aW9uUmVzdWx0IGluc3RhbmNlLlxuICAgICAqIEBtZW1iZXIgQXV0b0RldGVjdFNvdXJjZUxhbmd1YWdlUmVzdWx0LmZyb21SZXN1bHRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtTcGVlY2hSZWNvZ25pdGlvblJlc3VsdH0gcmVzdWx0IC0gVGhlIHJlY29nbml0aW9uIHJlc3VsdC5cbiAgICAgKiBAcmV0dXJucyB7QXV0b0RldGVjdFNvdXJjZUxhbmd1YWdlUmVzdWx0fSBBdXRvRGV0ZWN0U291cmNlTGFuZ3VhZ2VSZXN1bHQgb2JqZWN0IGJlaW5nIGNyZWF0ZWQuXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SZXN1bHQocmVzdWx0KSB7XG4gICAgICAgIHJldHVybiBuZXcgQXV0b0RldGVjdFNvdXJjZUxhbmd1YWdlUmVzdWx0KHJlc3VsdC5sYW5ndWFnZSwgcmVzdWx0Lmxhbmd1YWdlRGV0ZWN0aW9uQ29uZmlkZW5jZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgQXV0b0RldGVjdFNvdXJjZUxhbmd1YWdlUmVzdWx0IG9iamVjdCBmcm9tIGEgQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvblJlc3VsdCBpbnN0YW5jZS5cbiAgICAgKiBAbWVtYmVyIEF1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZVJlc3VsdC5mcm9tQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvblJlc3VsdFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge0NvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25SZXN1bHR9IHJlc3VsdCAtIFRoZSB0cmFuc2NyaXB0aW9uIHJlc3VsdC5cbiAgICAgKiBAcmV0dXJucyB7QXV0b0RldGVjdFNvdXJjZUxhbmd1YWdlUmVzdWx0fSBBdXRvRGV0ZWN0U291cmNlTGFuZ3VhZ2VSZXN1bHQgb2JqZWN0IGJlaW5nIGNyZWF0ZWQuXG4gICAgICovXG4gICAgc3RhdGljIGZyb21Db252ZXJzYXRpb25UcmFuc2NyaXB0aW9uUmVzdWx0KHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gbmV3IEF1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZVJlc3VsdChyZXN1bHQubGFuZ3VhZ2UsIHJlc3VsdC5sYW5ndWFnZURldGVjdGlvbkNvbmZpZGVuY2UpO1xuICAgIH1cbiAgICBnZXQgbGFuZ3VhZ2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZMYW5ndWFnZTtcbiAgICB9XG4gICAgZ2V0IGxhbmd1YWdlRGV0ZWN0aW9uQ29uZmlkZW5jZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkxhbmd1YWdlRGV0ZWN0aW9uQ29uZmlkZW5jZTtcbiAgICB9XG59XG5leHBvcnRzLkF1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZVJlc3VsdCA9IEF1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZVJlc3VsdDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0b0RldGVjdFNvdXJjZUxhbmd1YWdlUmVzdWx0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AutoDetectSourceLanguageResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarConfig.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarConfig.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AvatarConfig = void 0;\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines the talking avatar configuration.\n * @class AvatarConfig\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change or have limited support.\n */\nclass AvatarConfig {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} character - The avatar character.\n     * @param {string} style - The avatar style.\n     * @param {AvatarVideoFormat} videoFormat - The talking avatar output video format.\n     */\n    constructor(character, style, videoFormat) {\n        this.privCustomized = false;\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(character, \"character\");\n        this.character = character;\n        this.style = style;\n        if (videoFormat === undefined) {\n            videoFormat = new Exports_js_1.AvatarVideoFormat();\n        }\n        this.videoFormat = videoFormat;\n    }\n    /**\n     * Indicates if the talking avatar is customized.\n     */\n    get customized() {\n        return this.privCustomized;\n    }\n    /**\n     * Sets if the talking avatar is customized.\n     */\n    set customized(value) {\n        this.privCustomized = value;\n    }\n    /**\n     * Gets the background color.\n     */\n    get backgroundColor() {\n        return this.privBackgroundColor;\n    }\n    /**\n     * Sets the background color.\n     */\n    set backgroundColor(value) {\n        this.privBackgroundColor = value;\n    }\n    /**\n     * Gets the background image.\n     */\n    get backgroundImage() {\n        return this.privBackgroundImage;\n    }\n    /**\n     * Sets the background image.\n     * @param {URL} value - The background image.\n     */\n    set backgroundImage(value) {\n        this.privBackgroundImage = value;\n    }\n    /**\n     * Gets the remote ICE servers.\n     * @remarks This method is designed to be used internally in the SDK.\n     * @returns {RTCIceServer[]} The remote ICE servers.\n     */\n    get remoteIceServers() {\n        return this.privRemoteIceServers;\n    }\n    /**\n     * Sets the remote ICE servers.\n     * @remarks Normally, the ICE servers are gathered from the PeerConnection,\n     * set this property to override the ICE servers. E.g., the ICE servers are\n     * different in client and server side.\n     * @param {RTCIceServer[]} value - The remote ICE servers.\n     */\n    set remoteIceServers(value) {\n        this.privRemoteIceServers = value;\n    }\n}\nexports.AvatarConfig = AvatarConfig;\n\n//# sourceMappingURL=AvatarConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdmF0YXJDb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQix1QkFBdUIsbUJBQU8sQ0FBQyxvSEFBZ0I7QUFDL0MscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxtQkFBbUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLEtBQUs7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZ0JBQWdCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7O0FBRXBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdmF0YXJDb25maWcuanM/NzMwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BdmF0YXJDb25maWcgPSB2b2lkIDA7XG5jb25zdCBDb250cmFjdHNfanNfMSA9IHJlcXVpcmUoXCIuL0NvbnRyYWN0cy5qc1wiKTtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG4vKipcbiAqIERlZmluZXMgdGhlIHRhbGtpbmcgYXZhdGFyIGNvbmZpZ3VyYXRpb24uXG4gKiBAY2xhc3MgQXZhdGFyQ29uZmlnXG4gKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMzMuMFxuICpcbiAqIEBleHBlcmltZW50YWwgVGhpcyBmZWF0dXJlIGlzIGV4cGVyaW1lbnRhbCBhbmQgbWlnaHQgY2hhbmdlIG9yIGhhdmUgbGltaXRlZCBzdXBwb3J0LlxuICovXG5jbGFzcyBBdmF0YXJDb25maWcge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNoYXJhY3RlciAtIFRoZSBhdmF0YXIgY2hhcmFjdGVyLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzdHlsZSAtIFRoZSBhdmF0YXIgc3R5bGUuXG4gICAgICogQHBhcmFtIHtBdmF0YXJWaWRlb0Zvcm1hdH0gdmlkZW9Gb3JtYXQgLSBUaGUgdGFsa2luZyBhdmF0YXIgb3V0cHV0IHZpZGVvIGZvcm1hdC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjaGFyYWN0ZXIsIHN0eWxlLCB2aWRlb0Zvcm1hdCkge1xuICAgICAgICB0aGlzLnByaXZDdXN0b21pemVkID0gZmFsc2U7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yV2hpdGVzcGFjZShjaGFyYWN0ZXIsIFwiY2hhcmFjdGVyXCIpO1xuICAgICAgICB0aGlzLmNoYXJhY3RlciA9IGNoYXJhY3RlcjtcbiAgICAgICAgdGhpcy5zdHlsZSA9IHN0eWxlO1xuICAgICAgICBpZiAodmlkZW9Gb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdmlkZW9Gb3JtYXQgPSBuZXcgRXhwb3J0c19qc18xLkF2YXRhclZpZGVvRm9ybWF0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52aWRlb0Zvcm1hdCA9IHZpZGVvRm9ybWF0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgaWYgdGhlIHRhbGtpbmcgYXZhdGFyIGlzIGN1c3RvbWl6ZWQuXG4gICAgICovXG4gICAgZ2V0IGN1c3RvbWl6ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZDdXN0b21pemVkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXRzIGlmIHRoZSB0YWxraW5nIGF2YXRhciBpcyBjdXN0b21pemVkLlxuICAgICAqL1xuICAgIHNldCBjdXN0b21pemVkKHZhbHVlKSB7XG4gICAgICAgIHRoaXMucHJpdkN1c3RvbWl6ZWQgPSB2YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgYmFja2dyb3VuZCBjb2xvci5cbiAgICAgKi9cbiAgICBnZXQgYmFja2dyb3VuZENvbG9yKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2QmFja2dyb3VuZENvbG9yO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBiYWNrZ3JvdW5kIGNvbG9yLlxuICAgICAqL1xuICAgIHNldCBiYWNrZ3JvdW5kQ29sb3IodmFsdWUpIHtcbiAgICAgICAgdGhpcy5wcml2QmFja2dyb3VuZENvbG9yID0gdmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGJhY2tncm91bmQgaW1hZ2UuXG4gICAgICovXG4gICAgZ2V0IGJhY2tncm91bmRJbWFnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkJhY2tncm91bmRJbWFnZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgYmFja2dyb3VuZCBpbWFnZS5cbiAgICAgKiBAcGFyYW0ge1VSTH0gdmFsdWUgLSBUaGUgYmFja2dyb3VuZCBpbWFnZS5cbiAgICAgKi9cbiAgICBzZXQgYmFja2dyb3VuZEltYWdlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMucHJpdkJhY2tncm91bmRJbWFnZSA9IHZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSByZW1vdGUgSUNFIHNlcnZlcnMuXG4gICAgICogQHJlbWFya3MgVGhpcyBtZXRob2QgaXMgZGVzaWduZWQgdG8gYmUgdXNlZCBpbnRlcm5hbGx5IGluIHRoZSBTREsuXG4gICAgICogQHJldHVybnMge1JUQ0ljZVNlcnZlcltdfSBUaGUgcmVtb3RlIElDRSBzZXJ2ZXJzLlxuICAgICAqL1xuICAgIGdldCByZW1vdGVJY2VTZXJ2ZXJzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVtb3RlSWNlU2VydmVycztcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgcmVtb3RlIElDRSBzZXJ2ZXJzLlxuICAgICAqIEByZW1hcmtzIE5vcm1hbGx5LCB0aGUgSUNFIHNlcnZlcnMgYXJlIGdhdGhlcmVkIGZyb20gdGhlIFBlZXJDb25uZWN0aW9uLFxuICAgICAqIHNldCB0aGlzIHByb3BlcnR5IHRvIG92ZXJyaWRlIHRoZSBJQ0Ugc2VydmVycy4gRS5nLiwgdGhlIElDRSBzZXJ2ZXJzIGFyZVxuICAgICAqIGRpZmZlcmVudCBpbiBjbGllbnQgYW5kIHNlcnZlciBzaWRlLlxuICAgICAqIEBwYXJhbSB7UlRDSWNlU2VydmVyW119IHZhbHVlIC0gVGhlIHJlbW90ZSBJQ0Ugc2VydmVycy5cbiAgICAgKi9cbiAgICBzZXQgcmVtb3RlSWNlU2VydmVycyh2YWx1ZSkge1xuICAgICAgICB0aGlzLnByaXZSZW1vdGVJY2VTZXJ2ZXJzID0gdmFsdWU7XG4gICAgfVxufVxuZXhwb3J0cy5BdmF0YXJDb25maWcgPSBBdmF0YXJDb25maWc7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF2YXRhckNvbmZpZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarEventArgs.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarEventArgs.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AvatarEventArgs = exports.AvatarEventTypes = void 0;\nvar AvatarEventTypes;\n(function (AvatarEventTypes) {\n    AvatarEventTypes[\"SwitchedToSpeaking\"] = \"SwitchedToSpeaking\";\n    AvatarEventTypes[\"SwitchedToIdle\"] = \"SwitchedToIdle\";\n    AvatarEventTypes[\"SessionClosed\"] = \"SessionClosed\";\n})(AvatarEventTypes = exports.AvatarEventTypes || (exports.AvatarEventTypes = {}));\n/**\n * Defines content for talking avatar events.\n * @class AvatarEventArgs\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change or have limited support.\n */\nclass AvatarEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {string} description - The description of the event.\n     */\n    constructor(audioOffset, description) {\n        this.privOffset = audioOffset;\n        this.privDescription = description;\n    }\n    /**\n     * The type of the event.\n     * @public\n     * @returns {AvatarEventTypes} The type of the event.\n     */\n    get type() {\n        return this.privType;\n    }\n    /**\n     * The time offset associated with this event.\n     * @public\n     * @returns {number} The time offset associated with this event.\n     */\n    get offset() {\n        return this.privOffset;\n    }\n    /**\n     * The description of the event.\n     * @public\n     * @returns {string} The description of the event.\n     */\n    get description() {\n        return this.privDescription;\n    }\n}\nexports.AvatarEventArgs = AvatarEventArgs;\n\n//# sourceMappingURL=AvatarEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdmF0YXJFdmVudEFyZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLHdCQUF3QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrREFBa0Qsd0JBQXdCLEtBQUs7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixrQkFBa0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7O0FBRXZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdmF0YXJFdmVudEFyZ3MuanM/YzZkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BdmF0YXJFdmVudEFyZ3MgPSBleHBvcnRzLkF2YXRhckV2ZW50VHlwZXMgPSB2b2lkIDA7XG52YXIgQXZhdGFyRXZlbnRUeXBlcztcbihmdW5jdGlvbiAoQXZhdGFyRXZlbnRUeXBlcykge1xuICAgIEF2YXRhckV2ZW50VHlwZXNbXCJTd2l0Y2hlZFRvU3BlYWtpbmdcIl0gPSBcIlN3aXRjaGVkVG9TcGVha2luZ1wiO1xuICAgIEF2YXRhckV2ZW50VHlwZXNbXCJTd2l0Y2hlZFRvSWRsZVwiXSA9IFwiU3dpdGNoZWRUb0lkbGVcIjtcbiAgICBBdmF0YXJFdmVudFR5cGVzW1wiU2Vzc2lvbkNsb3NlZFwiXSA9IFwiU2Vzc2lvbkNsb3NlZFwiO1xufSkoQXZhdGFyRXZlbnRUeXBlcyA9IGV4cG9ydHMuQXZhdGFyRXZlbnRUeXBlcyB8fCAoZXhwb3J0cy5BdmF0YXJFdmVudFR5cGVzID0ge30pKTtcbi8qKlxuICogRGVmaW5lcyBjb250ZW50IGZvciB0YWxraW5nIGF2YXRhciBldmVudHMuXG4gKiBAY2xhc3MgQXZhdGFyRXZlbnRBcmdzXG4gKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMzMuMFxuICpcbiAqIEBleHBlcmltZW50YWwgVGhpcyBmZWF0dXJlIGlzIGV4cGVyaW1lbnRhbCBhbmQgbWlnaHQgY2hhbmdlIG9yIGhhdmUgbGltaXRlZCBzdXBwb3J0LlxuICovXG5jbGFzcyBBdmF0YXJFdmVudEFyZ3Mge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGF1ZGlvT2Zmc2V0IC0gVGhlIGF1ZGlvIG9mZnNldC5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZGVzY3JpcHRpb24gLSBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIGV2ZW50LlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGF1ZGlvT2Zmc2V0LCBkZXNjcmlwdGlvbikge1xuICAgICAgICB0aGlzLnByaXZPZmZzZXQgPSBhdWRpb09mZnNldDtcbiAgICAgICAgdGhpcy5wcml2RGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIHR5cGUgb2YgdGhlIGV2ZW50LlxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7QXZhdGFyRXZlbnRUeXBlc30gVGhlIHR5cGUgb2YgdGhlIGV2ZW50LlxuICAgICAqL1xuICAgIGdldCB0eXBlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VHlwZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIHRpbWUgb2Zmc2V0IGFzc29jaWF0ZWQgd2l0aCB0aGlzIGV2ZW50LlxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBUaGUgdGltZSBvZmZzZXQgYXNzb2NpYXRlZCB3aXRoIHRoaXMgZXZlbnQuXG4gICAgICovXG4gICAgZ2V0IG9mZnNldCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdk9mZnNldDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVudC5cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge3N0cmluZ30gVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVudC5cbiAgICAgKi9cbiAgICBnZXQgZGVzY3JpcHRpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZEZXNjcmlwdGlvbjtcbiAgICB9XG59XG5leHBvcnRzLkF2YXRhckV2ZW50QXJncyA9IEF2YXRhckV2ZW50QXJncztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXZhdGFyRXZlbnRBcmdzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarSynthesizer.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarSynthesizer.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AvatarSynthesizer = void 0;\nconst SpeechSynthesisConnectionFactory_js_1 = __webpack_require__(/*! ../common.speech/SpeechSynthesisConnectionFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/SpeechSynthesisConnectionFactory.js\");\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst AudioOutputFormat_js_1 = __webpack_require__(/*! ./Audio/AudioOutputFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputFormat.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Synthesizer_js_1 = __webpack_require__(/*! ./Synthesizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Synthesizer.js\");\n/**\n * Defines the avatar synthesizer.\n * @class AvatarSynthesizer\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change or have limited support.\n */\nclass AvatarSynthesizer extends Exports_js_3.Synthesizer {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The speech config.\n     * @param {AvatarConfig} avatarConfig - The talking avatar config.\n     */\n    constructor(speechConfig, avatarConfig) {\n        super(speechConfig);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(avatarConfig, \"avatarConfig\");\n        this.privConnectionFactory = new SpeechSynthesisConnectionFactory_js_1.SpeechSynthesisConnectionFactory();\n        this.privAvatarConfig = avatarConfig;\n        this.implCommonSynthesizeSetup();\n    }\n    implCommonSynthesizeSetup() {\n        super.implCommonSynthesizeSetup();\n        // The service checks the audio format setting while it ignores it in avatar synthesis.\n        this.privAdapter.audioOutputFormat = AudioOutputFormat_js_1.AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(Exports_js_3.SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm);\n    }\n    /**\n     * Starts the talking avatar session and establishes the WebRTC connection.\n     * @member AvatarSynthesizer.prototype.startAvatarAsync\n     * @function\n     * @public\n     * @param {AvatarWebRTCConnectionInfo} peerConnection - The peer connection.\n     * @returns {Promise<SynthesisResult>} The promise of the connection result.\n     */\n    async startAvatarAsync(peerConnection) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(peerConnection, \"peerConnection\");\n        this.privIceServers = peerConnection.getConfiguration().iceServers;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privIceServers, \"Ice servers must be set.\");\n        const iceGatheringDone = new Exports_js_2.Deferred();\n        // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\n        peerConnection.onicegatheringstatechange = () => {\n            Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice gathering state: \" + peerConnection.iceGatheringState, Exports_js_2.EventType.Debug));\n            if (peerConnection.iceGatheringState === \"complete\") {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice gathering complete.\", Exports_js_2.EventType.Info));\n                iceGatheringDone.resolve();\n            }\n        };\n        peerConnection.onicecandidate = (event) => {\n            if (event.candidate) {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice candidate: \" + event.candidate.candidate, Exports_js_2.EventType.Debug));\n            }\n            else {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice candidate: complete\", Exports_js_2.EventType.Debug));\n                iceGatheringDone.resolve();\n            }\n        };\n        // Set a timeout for ice gathering, currently 2 seconds.\n        setTimeout(() => {\n            if (peerConnection.iceGatheringState !== \"complete\") {\n                Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: ice gathering timeout.\", Exports_js_2.EventType.Warning));\n                iceGatheringDone.resolve();\n            }\n        }, 2000);\n        const sdp = await peerConnection.createOffer();\n        await peerConnection.setLocalDescription(sdp);\n        await iceGatheringDone.promise;\n        Exports_js_2.Events.instance.onEvent(new Exports_js_2.PlatformEvent(\"peer connection: got local SDP.\", Exports_js_2.EventType.Info));\n        this.privProperties.setProperty(Exports_js_3.PropertyId.TalkingAvatarService_WebRTC_SDP, JSON.stringify(peerConnection.localDescription));\n        const result = await this.speak(\"\", false);\n        if (result.reason !== Exports_js_3.ResultReason.SynthesizingAudioCompleted) {\n            return new Exports_js_3.SynthesisResult(result.resultId, result.reason, result.errorDetails, result.properties);\n        }\n        const sdpAnswerString = atob(result.properties.getProperty(Exports_js_3.PropertyId.TalkingAvatarService_WebRTC_SDP));\n        const sdpAnswer = new RTCSessionDescription(JSON.parse(sdpAnswerString));\n        await peerConnection.setRemoteDescription(sdpAnswer);\n        return new Exports_js_3.SynthesisResult(result.resultId, result.reason, undefined, result.properties);\n    }\n    /**\n     * Speaks plain text asynchronously. The rendered audio and video will be sent via the WebRTC connection.\n     * @member AvatarSynthesizer.prototype.speakTextAsync\n     * @function\n     * @public\n     * @param {string} text - The plain text to speak.\n     * @returns {Promise<SynthesisResult>} The promise of the synthesis result.\n     */\n    async speakTextAsync(text) {\n        const r = await this.speak(text, false);\n        return new Exports_js_3.SynthesisResult(r.resultId, r.reason, r.errorDetails, r.properties);\n    }\n    /**\n     * Speaks SSML asynchronously. The rendered audio and video will be sent via the WebRTC connection.\n     * @member AvatarSynthesizer.prototype.speakSsmlAsync\n     * @function\n     * @public\n     * @param {string} ssml - The SSML text to speak.\n     * @returns {Promise<SynthesisResult>} The promise of the synthesis result.\n     */\n    async speakSsmlAsync(ssml) {\n        const r = await this.speak(ssml, true);\n        return new Exports_js_3.SynthesisResult(r.resultId, r.reason, r.errorDetails, r.properties);\n    }\n    /**\n     * Speaks text asynchronously. The avatar will switch to idle state.\n     * @member AvatarSynthesizer.prototype.stopSpeakingAsync\n     * @function\n     * @public\n     * @returns {Promise<void>} The promise of the void result.\n     */\n    async stopSpeakingAsync() {\n        while (this.synthesisRequestQueue.length() > 0) {\n            const request = await this.synthesisRequestQueue.dequeue();\n            request.err(\"Synthesis is canceled by user.\");\n        }\n        return this.privAdapter.stopSpeaking();\n    }\n    /**\n     * Stops the talking avatar session and closes the WebRTC connection.\n     * For now, this is the same as close().\n     * You need to create a new AvatarSynthesizer instance to start a new session.\n     * @member AvatarSynthesizer.prototype.stopAvatarAsync\n     * @function\n     * @public\n     * @returns {Promise<void>} The promise of the void result.\n     */\n    async stopAvatarAsync() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        return this.dispose(true);\n    }\n    /**\n     * Dispose of associated resources.\n     * @member AvatarSynthesizer.prototype.close\n     * @function\n     * @public\n     */\n    async close() {\n        if (this.privDisposed) {\n            return;\n        }\n        return this.dispose(true);\n    }\n    /**\n     * Gets the ICE servers. Internal use only.\n     */\n    get iceServers() {\n        return this.privIceServers;\n    }\n    // Creates the synthesis adapter\n    createSynthesisAdapter(authentication, connectionFactory, synthesizerConfig) {\n        return new Exports_js_1.AvatarSynthesisAdapter(authentication, connectionFactory, synthesizerConfig, this, this.privAvatarConfig);\n    }\n    createRestSynthesisAdapter(_authentication, _synthesizerConfig) {\n        return undefined;\n    }\n    createSynthesizerConfig(speechConfig) {\n        const config = super.createSynthesizerConfig(speechConfig);\n        config.avatarEnabled = true;\n        return config;\n    }\n    async speak(text, isSSML) {\n        const requestId = Exports_js_2.createNoDashGuid();\n        const deferredResult = new Exports_js_2.Deferred();\n        this.synthesisRequestQueue.enqueue(new Synthesizer_js_1.SynthesisRequest(requestId, text, isSSML, (e) => {\n            deferredResult.resolve(e);\n            this.privSynthesizing = false;\n            void this.adapterSpeak();\n        }, (e) => {\n            deferredResult.reject(e);\n            this.privSynthesizing = false;\n        }));\n        void this.adapterSpeak();\n        return deferredResult.promise;\n    }\n}\nexports.AvatarSynthesizer = AvatarSynthesizer;\n\n//# sourceMappingURL=AvatarSynthesizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarSynthesizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarVideoFormat.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarVideoFormat.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AvatarVideoFormat = exports.Coordinate = void 0;\n/* eslint-disable max-classes-per-file */\n/**\n * Defines a coordinate in 2D space.\n * @class Coordinate\n * Added in version 1.33.0\n */\nclass Coordinate {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\nexports.Coordinate = Coordinate;\n/**\n * Defines the avatar output video format.\n * @class AvatarVideoFormat\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change in the future.\n */\nclass AvatarVideoFormat {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} codec - The video codec.\n     * @param {number} bitrate - The video bitrate.\n     * @param {number} width - The video width.\n     * @param {number} height - The video height.\n     */\n    constructor(codec = \"H264\", bitrate = 2000000, width = 1920, height = 1080) {\n        this.codec = codec;\n        this.bitrate = bitrate;\n        this.width = width;\n        this.height = height;\n    }\n    /**\n     * Sets the video crop range.\n     */\n    setCropRange(topLeft, bottomRight) {\n        this.cropRange = {\n            bottomRight,\n            topLeft,\n        };\n    }\n}\nexports.AvatarVideoFormat = AvatarVideoFormat;\n\n//# sourceMappingURL=AvatarVideoFormat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdmF0YXJWaWRlb0Zvcm1hdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCLEdBQUcsa0JBQWtCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7O0FBRXpCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdmF0YXJWaWRlb0Zvcm1hdC5qcz84MGNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkF2YXRhclZpZGVvRm9ybWF0ID0gZXhwb3J0cy5Db29yZGluYXRlID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgbWF4LWNsYXNzZXMtcGVyLWZpbGUgKi9cbi8qKlxuICogRGVmaW5lcyBhIGNvb3JkaW5hdGUgaW4gMkQgc3BhY2UuXG4gKiBAY2xhc3MgQ29vcmRpbmF0ZVxuICogQWRkZWQgaW4gdmVyc2lvbiAxLjMzLjBcbiAqL1xuY2xhc3MgQ29vcmRpbmF0ZSB7XG4gICAgY29uc3RydWN0b3IoeCwgeSkge1xuICAgICAgICB0aGlzLnggPSB4O1xuICAgICAgICB0aGlzLnkgPSB5O1xuICAgIH1cbn1cbmV4cG9ydHMuQ29vcmRpbmF0ZSA9IENvb3JkaW5hdGU7XG4vKipcbiAqIERlZmluZXMgdGhlIGF2YXRhciBvdXRwdXQgdmlkZW8gZm9ybWF0LlxuICogQGNsYXNzIEF2YXRhclZpZGVvRm9ybWF0XG4gKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMzMuMFxuICpcbiAqIEBleHBlcmltZW50YWwgVGhpcyBmZWF0dXJlIGlzIGV4cGVyaW1lbnRhbCBhbmQgbWlnaHQgY2hhbmdlIGluIHRoZSBmdXR1cmUuXG4gKi9cbmNsYXNzIEF2YXRhclZpZGVvRm9ybWF0IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCBpbml0aWFsaXplcyBhbiBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzLlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2RlYyAtIFRoZSB2aWRlbyBjb2RlYy5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gYml0cmF0ZSAtIFRoZSB2aWRlbyBiaXRyYXRlLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB3aWR0aCAtIFRoZSB2aWRlbyB3aWR0aC5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gaGVpZ2h0IC0gVGhlIHZpZGVvIGhlaWdodC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb2RlYyA9IFwiSDI2NFwiLCBiaXRyYXRlID0gMjAwMDAwMCwgd2lkdGggPSAxOTIwLCBoZWlnaHQgPSAxMDgwKSB7XG4gICAgICAgIHRoaXMuY29kZWMgPSBjb2RlYztcbiAgICAgICAgdGhpcy5iaXRyYXRlID0gYml0cmF0ZTtcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xuICAgICAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgdmlkZW8gY3JvcCByYW5nZS5cbiAgICAgKi9cbiAgICBzZXRDcm9wUmFuZ2UodG9wTGVmdCwgYm90dG9tUmlnaHQpIHtcbiAgICAgICAgdGhpcy5jcm9wUmFuZ2UgPSB7XG4gICAgICAgICAgICBib3R0b21SaWdodCxcbiAgICAgICAgICAgIHRvcExlZnQsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0cy5BdmF0YXJWaWRlb0Zvcm1hdCA9IEF2YXRhclZpZGVvRm9ybWF0O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdmF0YXJWaWRlb0Zvcm1hdC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarVideoFormat.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarWebRTCConnectionResult.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarWebRTCConnectionResult.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AvatarWebRTCConnectionResult = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines the avatar WebRTC connection result.\n * @class AvatarWebRTCConnectionResult\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change in the future.\n */\nclass AvatarWebRTCConnectionResult extends Exports_js_1.SynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {RTCSessionDescriptionInit} SDPAnswer - The SDP answer of WebRTC connection.\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(SDPAnswer, resultId, reason, errorDetails, properties) {\n        super(resultId, reason, errorDetails, properties);\n        this.privSDPAnswer = SDPAnswer;\n    }\n    /**\n     * Specifies SDP (Session Description Protocol) answer of WebRTC connection.\n     * @member AvatarWebRTCConnectionResult.prototype.SDPAnswer\n     * @function\n     * @public\n     * @returns {RTCSessionDescriptionInit} Specifies the SDP answer of WebRTC connection.\n     */\n    get SDPAnswer() {\n        return this.privSDPAnswer;\n    }\n}\nexports.AvatarWebRTCConnectionResult = AvatarWebRTCConnectionResult;\n\n//# sourceMappingURL=AvatarWebRTCConnectionResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9BdmF0YXJXZWJSVENDb25uZWN0aW9uUmVzdWx0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQ0FBb0M7QUFDcEMscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMkJBQTJCO0FBQzFDLGVBQWUsUUFBUTtBQUN2QixlQUFlLGNBQWM7QUFDN0IsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsb0JBQW9CO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDJCQUEyQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DOztBQUVwQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvQXZhdGFyV2ViUlRDQ29ubmVjdGlvblJlc3VsdC5qcz80OTU5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkF2YXRhcldlYlJUQ0Nvbm5lY3Rpb25SZXN1bHQgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuLyoqXG4gKiBEZWZpbmVzIHRoZSBhdmF0YXIgV2ViUlRDIGNvbm5lY3Rpb24gcmVzdWx0LlxuICogQGNsYXNzIEF2YXRhcldlYlJUQ0Nvbm5lY3Rpb25SZXN1bHRcbiAqIEFkZGVkIGluIHZlcnNpb24gMS4zMy4wXG4gKlxuICogQGV4cGVyaW1lbnRhbCBUaGlzIGZlYXR1cmUgaXMgZXhwZXJpbWVudGFsIGFuZCBtaWdodCBjaGFuZ2UgaW4gdGhlIGZ1dHVyZS5cbiAqL1xuY2xhc3MgQXZhdGFyV2ViUlRDQ29ubmVjdGlvblJlc3VsdCBleHRlbmRzIEV4cG9ydHNfanNfMS5TeW50aGVzaXNSZXN1bHQge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtSVENTZXNzaW9uRGVzY3JpcHRpb25Jbml0fSBTRFBBbnN3ZXIgLSBUaGUgU0RQIGFuc3dlciBvZiBXZWJSVEMgY29ubmVjdGlvbi5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcmVzdWx0SWQgLSBUaGUgcmVzdWx0IGlkLlxuICAgICAqIEBwYXJhbSB7UmVzdWx0UmVhc29ufSByZWFzb24gLSBUaGUgcmVhc29uLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBlcnJvckRldGFpbHMgLSBFcnJvciBkZXRhaWxzLCBpZiBwcm92aWRlZC5cbiAgICAgKiBAcGFyYW0ge1Byb3BlcnR5Q29sbGVjdGlvbn0gcHJvcGVydGllcyAtIEFkZGl0aW9uYWwgcHJvcGVydGllcywgaWYgcHJvdmlkZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoU0RQQW5zd2VyLCByZXN1bHRJZCwgcmVhc29uLCBlcnJvckRldGFpbHMsIHByb3BlcnRpZXMpIHtcbiAgICAgICAgc3VwZXIocmVzdWx0SWQsIHJlYXNvbiwgZXJyb3JEZXRhaWxzLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgdGhpcy5wcml2U0RQQW5zd2VyID0gU0RQQW5zd2VyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgU0RQIChTZXNzaW9uIERlc2NyaXB0aW9uIFByb3RvY29sKSBhbnN3ZXIgb2YgV2ViUlRDIGNvbm5lY3Rpb24uXG4gICAgICogQG1lbWJlciBBdmF0YXJXZWJSVENDb25uZWN0aW9uUmVzdWx0LnByb3RvdHlwZS5TRFBBbnN3ZXJcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge1JUQ1Nlc3Npb25EZXNjcmlwdGlvbkluaXR9IFNwZWNpZmllcyB0aGUgU0RQIGFuc3dlciBvZiBXZWJSVEMgY29ubmVjdGlvbi5cbiAgICAgKi9cbiAgICBnZXQgU0RQQW5zd2VyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U0RQQW5zd2VyO1xuICAgIH1cbn1cbmV4cG9ydHMuQXZhdGFyV2ViUlRDQ29ubmVjdGlvblJlc3VsdCA9IEF2YXRhcldlYlJUQ0Nvbm5lY3Rpb25SZXN1bHQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF2YXRhcldlYlJUQ0Nvbm5lY3Rpb25SZXN1bHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarWebRTCConnectionResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/BotFrameworkConfig.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/BotFrameworkConfig.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BotFrameworkConfig = void 0;\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst DialogServiceConfig_js_1 = __webpack_require__(/*! ./DialogServiceConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConfig.js\");\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Class that defines configurations for the dialog service connector object for using a Bot Framework backend.\n * @class BotFrameworkConfig\n */\nclass BotFrameworkConfig extends DialogServiceConfig_js_1.DialogServiceConfigImpl {\n    /**\n     * Creates an instance of BotFrameworkConfig.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates a bot framework configuration instance with the provided subscription information.\n     * @member BotFrameworkConfig.fromSubscription\n     * @function\n     * @public\n     * @param subscription Subscription key associated with the bot\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\n     * resource name.\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\n     */\n    static fromSubscription(subscription, region, botId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const botFrameworkConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.BotFramework);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Key, subscription);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Region, region);\n        if (botId) {\n            botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, botId);\n        }\n        return botFrameworkConfig;\n    }\n    /**\n     * Creates a bot framework configuration instance for the specified authorization token and region.\n     * Note: The caller must ensure that an authorization token is valid. Before an authorization token expires, the\n     * caller must refresh it by setting the authorizationToken property on the corresponding\n     * DialogServiceConnector instance created with this config. The contents of configuration objects are copied\n     * when connectors are created, so setting authorizationToken on a DialogServiceConnector will not update the\n     * original configuration's authorization token. Create a new configuration instance or set the\n     * SpeechServiceAuthorization_Token property to update an existing instance if it will be used to create\n     * further DialogServiceConnectors.\n     * @member BotFrameworkConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param authorizationToken The authorization token associated with the bot\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\n     * resource name.\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\n     */\n    static fromAuthorizationToken(authorizationToken, region, botId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const botFrameworkConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.BotFramework);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Region, region);\n        if (botId) {\n            botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, botId);\n        }\n        return botFrameworkConfig;\n    }\n    /**\n     * Creates an instance of a BotFrameworkConfig.\n     * This method is intended only for users who use a non-default service host. The standard resource path will be\n     * assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead.\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\n     * Note: To use an authorization token with fromHost, use fromHost(URL) and then set the AuthorizationToken\n     * property on the created BotFrameworkConfig instance.\n     * Note: Added in version 1.15.0.\n     * @member BotFrameworkConfig.fromHost\n     * @function\n     * @public\n     * @param {URL | string} host - If a URL is provided, the fully-qualified host with protocol (e.g.\n     * wss://your.host.com:1234) will be used. If a string is provided, it will be embedded in\n     * wss://{host}.convai.speech.azure.us.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\n     * token must be set.\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\n     * resource name.\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\n     */\n    static fromHost(host, subscriptionKey, botId) {\n        void botId;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(host, \"host\");\n        const resolvedHost = host instanceof URL ? host : new URL(`wss://${host}.convai.speech.azure.us`);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(resolvedHost, \"resolvedHost\");\n        const botFrameworkConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.BotFramework);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Host, resolvedHost.toString());\n        if (undefined !== subscriptionKey) {\n            botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return botFrameworkConfig;\n    }\n    /**\n     * Creates an instance of a BotFrameworkConfig.\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\n     * fromEndpoint method, and then set authorizationToken=\"token\" on the created BotFrameworkConfig instance to\n     * use the authorization token.\n     * Note: Added in version 1.15.0.\n     * @member BotFrameworkConfig.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} endpoint - The service endpoint to connect to.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\n     * token must be set.\n     * @returns {BotFrameworkConfig} - A new bot framework configuration instance using the provided endpoint.\n     */\n    static fromEndpoint(endpoint, subscriptionKey) {\n        Contracts_js_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n        const botFrameworkConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.BotFramework);\n        botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Endpoint, endpoint.toString());\n        if (undefined !== subscriptionKey) {\n            botFrameworkConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return botFrameworkConfig;\n    }\n}\nexports.BotFrameworkConfig = BotFrameworkConfig;\n\n//# sourceMappingURL=BotFrameworkConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/BotFrameworkConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetails.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetails.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CancellationDetails = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst CancellationDetailsBase_js_1 = __webpack_require__(/*! ./CancellationDetailsBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetailsBase.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Contains detailed information about why a result was canceled.\n * @class CancellationDetails\n */\nclass CancellationDetails extends CancellationDetailsBase_js_1.CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of CancellationDetails object for the canceled RecognitionResult.\n     * @member CancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {RecognitionResult | SpeechSynthesisResult} result - The result that was canceled.\n     * @returns {CancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        let reason = Exports_js_2.CancellationReason.Error;\n        let errorCode = Exports_js_2.CancellationErrorCode.NoError;\n        if (result instanceof Exports_js_2.RecognitionResult && !!result.json) {\n            const simpleSpeech = Exports_js_1.SimpleSpeechPhrase.fromJSON(result.json, 0); // Offset fixups are already done.\n            reason = Exports_js_1.EnumTranslation.implTranslateCancelResult(simpleSpeech.RecognitionStatus);\n        }\n        if (!!result.properties) {\n            errorCode = Exports_js_2.CancellationErrorCode[result.properties.getProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.NoError])];\n        }\n        return new CancellationDetails(reason, result.errorDetails || Exports_js_1.EnumTranslation.implTranslateErrorDetails(errorCode), errorCode);\n    }\n}\nexports.CancellationDetails = CancellationDetails;\n\n//# sourceMappingURL=CancellationDetails.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9DYW5jZWxsYXRpb25EZXRhaWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0IscUJBQXFCLG1CQUFPLENBQUMseUlBQTZCO0FBQzFELHFDQUFxQyxtQkFBTyxDQUFDLGdKQUE4QjtBQUMzRSxxQkFBcUIsbUJBQU8sQ0FBQyxnSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMkNBQTJDO0FBQzFELGlCQUFpQixxQkFBcUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJGQUEyRjtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCOztBQUUzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvQ2FuY2VsbGF0aW9uRGV0YWlscy5qcz9iZjc0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNhbmNlbGxhdGlvbkRldGFpbHMgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uLnNwZWVjaC9FeHBvcnRzLmpzXCIpO1xuY29uc3QgQ2FuY2VsbGF0aW9uRGV0YWlsc0Jhc2VfanNfMSA9IHJlcXVpcmUoXCIuL0NhbmNlbGxhdGlvbkRldGFpbHNCYXNlLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18yID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbi8qKlxuICogQ29udGFpbnMgZGV0YWlsZWQgaW5mb3JtYXRpb24gYWJvdXQgd2h5IGEgcmVzdWx0IHdhcyBjYW5jZWxlZC5cbiAqIEBjbGFzcyBDYW5jZWxsYXRpb25EZXRhaWxzXG4gKi9cbmNsYXNzIENhbmNlbGxhdGlvbkRldGFpbHMgZXh0ZW5kcyBDYW5jZWxsYXRpb25EZXRhaWxzQmFzZV9qc18xLkNhbmNlbGxhdGlvbkRldGFpbHNCYXNlIHtcbiAgICBjb25zdHJ1Y3RvcihyZWFzb24sIGVycm9yRGV0YWlscywgZXJyb3JDb2RlKSB7XG4gICAgICAgIHN1cGVyKHJlYXNvbiwgZXJyb3JEZXRhaWxzLCBlcnJvckNvZGUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIENhbmNlbGxhdGlvbkRldGFpbHMgb2JqZWN0IGZvciB0aGUgY2FuY2VsZWQgUmVjb2duaXRpb25SZXN1bHQuXG4gICAgICogQG1lbWJlciBDYW5jZWxsYXRpb25EZXRhaWxzLmZyb21SZXN1bHRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtSZWNvZ25pdGlvblJlc3VsdCB8IFNwZWVjaFN5bnRoZXNpc1Jlc3VsdH0gcmVzdWx0IC0gVGhlIHJlc3VsdCB0aGF0IHdhcyBjYW5jZWxlZC5cbiAgICAgKiBAcmV0dXJucyB7Q2FuY2VsbGF0aW9uRGV0YWlsc30gVGhlIGNhbmNlbGxhdGlvbiBkZXRhaWxzIG9iamVjdCBiZWluZyBjcmVhdGVkLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tUmVzdWx0KHJlc3VsdCkge1xuICAgICAgICBsZXQgcmVhc29uID0gRXhwb3J0c19qc18yLkNhbmNlbGxhdGlvblJlYXNvbi5FcnJvcjtcbiAgICAgICAgbGV0IGVycm9yQ29kZSA9IEV4cG9ydHNfanNfMi5DYW5jZWxsYXRpb25FcnJvckNvZGUuTm9FcnJvcjtcbiAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIEV4cG9ydHNfanNfMi5SZWNvZ25pdGlvblJlc3VsdCAmJiAhIXJlc3VsdC5qc29uKSB7XG4gICAgICAgICAgICBjb25zdCBzaW1wbGVTcGVlY2ggPSBFeHBvcnRzX2pzXzEuU2ltcGxlU3BlZWNoUGhyYXNlLmZyb21KU09OKHJlc3VsdC5qc29uLCAwKTsgLy8gT2Zmc2V0IGZpeHVwcyBhcmUgYWxyZWFkeSBkb25lLlxuICAgICAgICAgICAgcmVhc29uID0gRXhwb3J0c19qc18xLkVudW1UcmFuc2xhdGlvbi5pbXBsVHJhbnNsYXRlQ2FuY2VsUmVzdWx0KHNpbXBsZVNwZWVjaC5SZWNvZ25pdGlvblN0YXR1cyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCEhcmVzdWx0LnByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgIGVycm9yQ29kZSA9IEV4cG9ydHNfanNfMi5DYW5jZWxsYXRpb25FcnJvckNvZGVbcmVzdWx0LnByb3BlcnRpZXMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18xLkNhbmNlbGxhdGlvbkVycm9yQ29kZVByb3BlcnR5TmFtZSwgRXhwb3J0c19qc18yLkNhbmNlbGxhdGlvbkVycm9yQ29kZVtFeHBvcnRzX2pzXzIuQ2FuY2VsbGF0aW9uRXJyb3JDb2RlLk5vRXJyb3JdKV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBDYW5jZWxsYXRpb25EZXRhaWxzKHJlYXNvbiwgcmVzdWx0LmVycm9yRGV0YWlscyB8fCBFeHBvcnRzX2pzXzEuRW51bVRyYW5zbGF0aW9uLmltcGxUcmFuc2xhdGVFcnJvckRldGFpbHMoZXJyb3JDb2RlKSwgZXJyb3JDb2RlKTtcbiAgICB9XG59XG5leHBvcnRzLkNhbmNlbGxhdGlvbkRldGFpbHMgPSBDYW5jZWxsYXRpb25EZXRhaWxzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1DYW5jZWxsYXRpb25EZXRhaWxzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetails.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetailsBase.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetailsBase.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CancellationDetailsBase = void 0;\n/**\n * Contains detailed information about why a result was canceled.\n * @class CancellationDetailsBase\n */\nclass CancellationDetailsBase {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} reason - The cancellation reason.\n     * @param {string} errorDetails - The error details, if provided.\n     */\n    constructor(reason, errorDetails, errorCode) {\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member CancellationDetailsBase.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member CancellationDetailsBase.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    /**\n     * The error code in case of an unsuccessful recognition.\n     * Added in version 1.1.0.\n     * @return An error code that represents the error reason.\n     */\n    get ErrorCode() {\n        return this.privErrorCode;\n    }\n}\nexports.CancellationDetailsBase = CancellationDetailsBase;\n\n//# sourceMappingURL=CancellationDetailsBase.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9DYW5jZWxsYXRpb25EZXRhaWxzQmFzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9CQUFvQjtBQUNuQyxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvQkFBb0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7O0FBRS9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9DYW5jZWxsYXRpb25EZXRhaWxzQmFzZS5qcz81NDc1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNhbmNlbGxhdGlvbkRldGFpbHNCYXNlID0gdm9pZCAwO1xuLyoqXG4gKiBDb250YWlucyBkZXRhaWxlZCBpbmZvcm1hdGlvbiBhYm91dCB3aHkgYSByZXN1bHQgd2FzIGNhbmNlbGVkLlxuICogQGNsYXNzIENhbmNlbGxhdGlvbkRldGFpbHNCYXNlXG4gKi9cbmNsYXNzIENhbmNlbGxhdGlvbkRldGFpbHNCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCBpbml0aWFsaXplcyBhbiBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzLlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7Q2FuY2VsbGF0aW9uUmVhc29ufSByZWFzb24gLSBUaGUgY2FuY2VsbGF0aW9uIHJlYXNvbi5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZXJyb3JEZXRhaWxzIC0gVGhlIGVycm9yIGRldGFpbHMsIGlmIHByb3ZpZGVkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHJlYXNvbiwgZXJyb3JEZXRhaWxzLCBlcnJvckNvZGUpIHtcbiAgICAgICAgdGhpcy5wcml2UmVhc29uID0gcmVhc29uO1xuICAgICAgICB0aGlzLnByaXZFcnJvckRldGFpbHMgPSBlcnJvckRldGFpbHM7XG4gICAgICAgIHRoaXMucHJpdkVycm9yQ29kZSA9IGVycm9yQ29kZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIHJlYXNvbiB0aGUgcmVjb2duaXRpb24gd2FzIGNhbmNlbGVkLlxuICAgICAqIEBtZW1iZXIgQ2FuY2VsbGF0aW9uRGV0YWlsc0Jhc2UucHJvdG90eXBlLnJlYXNvblxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7Q2FuY2VsbGF0aW9uUmVhc29ufSBTcGVjaWZpZXMgdGhlIHJlYXNvbiBjYW5jZWxlZC5cbiAgICAgKi9cbiAgICBnZXQgcmVhc29uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVhc29uO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbiBjYXNlIG9mIGFuIHVuc3VjY2Vzc2Z1bCByZWNvZ25pdGlvbiwgcHJvdmlkZXMgZGV0YWlscyBvZiB0aGUgb2NjdXJyZWQgZXJyb3IuXG4gICAgICogQG1lbWJlciBDYW5jZWxsYXRpb25EZXRhaWxzQmFzZS5wcm90b3R5cGUuZXJyb3JEZXRhaWxzXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IEEgU3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgZXJyb3IgZGV0YWlscy5cbiAgICAgKi9cbiAgICBnZXQgZXJyb3JEZXRhaWxzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RXJyb3JEZXRhaWxzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgZXJyb3IgY29kZSBpbiBjYXNlIG9mIGFuIHVuc3VjY2Vzc2Z1bCByZWNvZ25pdGlvbi5cbiAgICAgKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMS4wLlxuICAgICAqIEByZXR1cm4gQW4gZXJyb3IgY29kZSB0aGF0IHJlcHJlc2VudHMgdGhlIGVycm9yIHJlYXNvbi5cbiAgICAgKi9cbiAgICBnZXQgRXJyb3JDb2RlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RXJyb3JDb2RlO1xuICAgIH1cbn1cbmV4cG9ydHMuQ2FuY2VsbGF0aW9uRGV0YWlsc0Jhc2UgPSBDYW5jZWxsYXRpb25EZXRhaWxzQmFzZTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2FuY2VsbGF0aW9uRGV0YWlsc0Jhc2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetailsBase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationErrorCodes.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationErrorCodes.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CancellationErrorCode = void 0;\n/**\n * Defines error code in case that CancellationReason is Error.\n * Added in version 1.1.0.\n */\nvar CancellationErrorCode;\n(function (CancellationErrorCode) {\n    /**\n     * Indicates that no error occurred during speech recognition.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"NoError\"] = 0] = \"NoError\";\n    /**\n     * Indicates an authentication error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"AuthenticationFailure\"] = 1] = \"AuthenticationFailure\";\n    /**\n     * Indicates that one or more recognition parameters are invalid.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"BadRequestParameters\"] = 2] = \"BadRequestParameters\";\n    /**\n     * Indicates that the number of parallel requests exceeded the number of allowed\n     * concurrent transcriptions for the subscription.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"TooManyRequests\"] = 3] = \"TooManyRequests\";\n    /**\n     * Indicates a connection error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ConnectionFailure\"] = 4] = \"ConnectionFailure\";\n    /**\n     * Indicates a time-out error when waiting for response from service.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ServiceTimeout\"] = 5] = \"ServiceTimeout\";\n    /**\n     * Indicates that an error is returned by the service.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ServiceError\"] = 6] = \"ServiceError\";\n    /**\n     * Indicates an unexpected runtime error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"RuntimeError\"] = 7] = \"RuntimeError\";\n    /**\n     * Indicates an quota overrun on existing key.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"Forbidden\"] = 8] = \"Forbidden\";\n})(CancellationErrorCode = exports.CancellationErrorCode || (exports.CancellationErrorCode = {}));\n\n//# sourceMappingURL=CancellationErrorCodes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9DYW5jZWxsYXRpb25FcnJvckNvZGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDREQUE0RCw2QkFBNkIsS0FBSzs7QUFFL0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL0NhbmNlbGxhdGlvbkVycm9yQ29kZXMuanM/MWY4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DYW5jZWxsYXRpb25FcnJvckNvZGUgPSB2b2lkIDA7XG4vKipcbiAqIERlZmluZXMgZXJyb3IgY29kZSBpbiBjYXNlIHRoYXQgQ2FuY2VsbGF0aW9uUmVhc29uIGlzIEVycm9yLlxuICogQWRkZWQgaW4gdmVyc2lvbiAxLjEuMC5cbiAqL1xudmFyIENhbmNlbGxhdGlvbkVycm9yQ29kZTtcbihmdW5jdGlvbiAoQ2FuY2VsbGF0aW9uRXJyb3JDb2RlKSB7XG4gICAgLyoqXG4gICAgICogSW5kaWNhdGVzIHRoYXQgbm8gZXJyb3Igb2NjdXJyZWQgZHVyaW5nIHNwZWVjaCByZWNvZ25pdGlvbi5cbiAgICAgKi9cbiAgICBDYW5jZWxsYXRpb25FcnJvckNvZGVbQ2FuY2VsbGF0aW9uRXJyb3JDb2RlW1wiTm9FcnJvclwiXSA9IDBdID0gXCJOb0Vycm9yXCI7XG4gICAgLyoqXG4gICAgICogSW5kaWNhdGVzIGFuIGF1dGhlbnRpY2F0aW9uIGVycm9yLlxuICAgICAqL1xuICAgIENhbmNlbGxhdGlvbkVycm9yQ29kZVtDYW5jZWxsYXRpb25FcnJvckNvZGVbXCJBdXRoZW50aWNhdGlvbkZhaWx1cmVcIl0gPSAxXSA9IFwiQXV0aGVudGljYXRpb25GYWlsdXJlXCI7XG4gICAgLyoqXG4gICAgICogSW5kaWNhdGVzIHRoYXQgb25lIG9yIG1vcmUgcmVjb2duaXRpb24gcGFyYW1ldGVycyBhcmUgaW52YWxpZC5cbiAgICAgKi9cbiAgICBDYW5jZWxsYXRpb25FcnJvckNvZGVbQ2FuY2VsbGF0aW9uRXJyb3JDb2RlW1wiQmFkUmVxdWVzdFBhcmFtZXRlcnNcIl0gPSAyXSA9IFwiQmFkUmVxdWVzdFBhcmFtZXRlcnNcIjtcbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgdGhhdCB0aGUgbnVtYmVyIG9mIHBhcmFsbGVsIHJlcXVlc3RzIGV4Y2VlZGVkIHRoZSBudW1iZXIgb2YgYWxsb3dlZFxuICAgICAqIGNvbmN1cnJlbnQgdHJhbnNjcmlwdGlvbnMgZm9yIHRoZSBzdWJzY3JpcHRpb24uXG4gICAgICovXG4gICAgQ2FuY2VsbGF0aW9uRXJyb3JDb2RlW0NhbmNlbGxhdGlvbkVycm9yQ29kZVtcIlRvb01hbnlSZXF1ZXN0c1wiXSA9IDNdID0gXCJUb29NYW55UmVxdWVzdHNcIjtcbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgYSBjb25uZWN0aW9uIGVycm9yLlxuICAgICAqL1xuICAgIENhbmNlbGxhdGlvbkVycm9yQ29kZVtDYW5jZWxsYXRpb25FcnJvckNvZGVbXCJDb25uZWN0aW9uRmFpbHVyZVwiXSA9IDRdID0gXCJDb25uZWN0aW9uRmFpbHVyZVwiO1xuICAgIC8qKlxuICAgICAqIEluZGljYXRlcyBhIHRpbWUtb3V0IGVycm9yIHdoZW4gd2FpdGluZyBmb3IgcmVzcG9uc2UgZnJvbSBzZXJ2aWNlLlxuICAgICAqL1xuICAgIENhbmNlbGxhdGlvbkVycm9yQ29kZVtDYW5jZWxsYXRpb25FcnJvckNvZGVbXCJTZXJ2aWNlVGltZW91dFwiXSA9IDVdID0gXCJTZXJ2aWNlVGltZW91dFwiO1xuICAgIC8qKlxuICAgICAqIEluZGljYXRlcyB0aGF0IGFuIGVycm9yIGlzIHJldHVybmVkIGJ5IHRoZSBzZXJ2aWNlLlxuICAgICAqL1xuICAgIENhbmNlbGxhdGlvbkVycm9yQ29kZVtDYW5jZWxsYXRpb25FcnJvckNvZGVbXCJTZXJ2aWNlRXJyb3JcIl0gPSA2XSA9IFwiU2VydmljZUVycm9yXCI7XG4gICAgLyoqXG4gICAgICogSW5kaWNhdGVzIGFuIHVuZXhwZWN0ZWQgcnVudGltZSBlcnJvci5cbiAgICAgKi9cbiAgICBDYW5jZWxsYXRpb25FcnJvckNvZGVbQ2FuY2VsbGF0aW9uRXJyb3JDb2RlW1wiUnVudGltZUVycm9yXCJdID0gN10gPSBcIlJ1bnRpbWVFcnJvclwiO1xuICAgIC8qKlxuICAgICAqIEluZGljYXRlcyBhbiBxdW90YSBvdmVycnVuIG9uIGV4aXN0aW5nIGtleS5cbiAgICAgKi9cbiAgICBDYW5jZWxsYXRpb25FcnJvckNvZGVbQ2FuY2VsbGF0aW9uRXJyb3JDb2RlW1wiRm9yYmlkZGVuXCJdID0gOF0gPSBcIkZvcmJpZGRlblwiO1xufSkoQ2FuY2VsbGF0aW9uRXJyb3JDb2RlID0gZXhwb3J0cy5DYW5jZWxsYXRpb25FcnJvckNvZGUgfHwgKGV4cG9ydHMuQ2FuY2VsbGF0aW9uRXJyb3JDb2RlID0ge30pKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2FuY2VsbGF0aW9uRXJyb3JDb2Rlcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationErrorCodes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationEventArgsBase.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationEventArgsBase.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CancellationEventArgsBase = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines content of a CancellationEvent.\n * @class CancellationEventArgsBase\n */\nclass CancellationEventArgsBase extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} reason - The cancellation reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(reason, errorDetails, errorCode, offset, sessionId) {\n        super(offset, sessionId);\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member CancellationEventArgsBase.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * The error code in case of an unsuccessful operation.\n     * @return An error code that represents the error reason.\n     */\n    get errorCode() {\n        return this.privErrorCode;\n    }\n    /**\n     * In case of an unsuccessful operation, provides details of the occurred error.\n     * @member CancellationEventArgsBase.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\nexports.CancellationEventArgsBase = CancellationEventArgsBase;\n\n//# sourceMappingURL=CancellationEventArgsBase.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9DYW5jZWxsYXRpb25FdmVudEFyZ3NCYXNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUM7QUFDakMscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0JBQW9CO0FBQ25DLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvQkFBb0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDOztBQUVqQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZS5qcz8wYjhjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNhbmNlbGxhdGlvbkV2ZW50QXJnc0Jhc2UgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuLyoqXG4gKiBEZWZpbmVzIGNvbnRlbnQgb2YgYSBDYW5jZWxsYXRpb25FdmVudC5cbiAqIEBjbGFzcyBDYW5jZWxsYXRpb25FdmVudEFyZ3NCYXNlXG4gKi9cbmNsYXNzIENhbmNlbGxhdGlvbkV2ZW50QXJnc0Jhc2UgZXh0ZW5kcyBFeHBvcnRzX2pzXzEuUmVjb2duaXRpb25FdmVudEFyZ3Mge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtDYW5jZWxsYXRpb25SZWFzb259IHJlYXNvbiAtIFRoZSBjYW5jZWxsYXRpb24gcmVhc29uLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBlcnJvckRldGFpbHMgLSBFcnJvciBkZXRhaWxzLCBpZiBwcm92aWRlZC5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0IC0gVGhlIG9mZnNldC5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2Vzc2lvbklkIC0gVGhlIHNlc3Npb24gaWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocmVhc29uLCBlcnJvckRldGFpbHMsIGVycm9yQ29kZSwgb2Zmc2V0LCBzZXNzaW9uSWQpIHtcbiAgICAgICAgc3VwZXIob2Zmc2V0LCBzZXNzaW9uSWQpO1xuICAgICAgICB0aGlzLnByaXZSZWFzb24gPSByZWFzb247XG4gICAgICAgIHRoaXMucHJpdkVycm9yRGV0YWlscyA9IGVycm9yRGV0YWlscztcbiAgICAgICAgdGhpcy5wcml2RXJyb3JDb2RlID0gZXJyb3JDb2RlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgcmVhc29uIHRoZSByZWNvZ25pdGlvbiB3YXMgY2FuY2VsZWQuXG4gICAgICogQG1lbWJlciBDYW5jZWxsYXRpb25FdmVudEFyZ3NCYXNlLnByb3RvdHlwZS5yZWFzb25cbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge0NhbmNlbGxhdGlvblJlYXNvbn0gU3BlY2lmaWVzIHRoZSByZWFzb24gY2FuY2VsZWQuXG4gICAgICovXG4gICAgZ2V0IHJlYXNvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlJlYXNvbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIGVycm9yIGNvZGUgaW4gY2FzZSBvZiBhbiB1bnN1Y2Nlc3NmdWwgb3BlcmF0aW9uLlxuICAgICAqIEByZXR1cm4gQW4gZXJyb3IgY29kZSB0aGF0IHJlcHJlc2VudHMgdGhlIGVycm9yIHJlYXNvbi5cbiAgICAgKi9cbiAgICBnZXQgZXJyb3JDb2RlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RXJyb3JDb2RlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbiBjYXNlIG9mIGFuIHVuc3VjY2Vzc2Z1bCBvcGVyYXRpb24sIHByb3ZpZGVzIGRldGFpbHMgb2YgdGhlIG9jY3VycmVkIGVycm9yLlxuICAgICAqIEBtZW1iZXIgQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZS5wcm90b3R5cGUuZXJyb3JEZXRhaWxzXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IEEgU3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgZXJyb3IgZGV0YWlscy5cbiAgICAgKi9cbiAgICBnZXQgZXJyb3JEZXRhaWxzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RXJyb3JEZXRhaWxzO1xuICAgIH1cbn1cbmV4cG9ydHMuQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZSA9IENhbmNlbGxhdGlvbkV2ZW50QXJnc0Jhc2U7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNhbmNlbGxhdGlvbkV2ZW50QXJnc0Jhc2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationEventArgsBase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationReason.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationReason.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CancellationReason = void 0;\n/**\n * Defines the possible reasons a recognition result might be canceled.\n * @class CancellationReason\n */\nvar CancellationReason;\n(function (CancellationReason) {\n    /**\n     * Indicates that an error occurred during speech recognition.\n     * @member CancellationReason.Error\n     */\n    CancellationReason[CancellationReason[\"Error\"] = 0] = \"Error\";\n    /**\n     * Indicates that the end of the audio stream was reached.\n     * @member CancellationReason.EndOfStream\n     */\n    CancellationReason[CancellationReason[\"EndOfStream\"] = 1] = \"EndOfStream\";\n})(CancellationReason = exports.CancellationReason || (exports.CancellationReason = {}));\n\n//# sourceMappingURL=CancellationReason.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9DYW5jZWxsYXRpb25SZWFzb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0RBQXNELDBCQUEwQixLQUFLOztBQUV0RiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvQ2FuY2VsbGF0aW9uUmVhc29uLmpzPzczYmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ2FuY2VsbGF0aW9uUmVhc29uID0gdm9pZCAwO1xuLyoqXG4gKiBEZWZpbmVzIHRoZSBwb3NzaWJsZSByZWFzb25zIGEgcmVjb2duaXRpb24gcmVzdWx0IG1pZ2h0IGJlIGNhbmNlbGVkLlxuICogQGNsYXNzIENhbmNlbGxhdGlvblJlYXNvblxuICovXG52YXIgQ2FuY2VsbGF0aW9uUmVhc29uO1xuKGZ1bmN0aW9uIChDYW5jZWxsYXRpb25SZWFzb24pIHtcbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgdGhhdCBhbiBlcnJvciBvY2N1cnJlZCBkdXJpbmcgc3BlZWNoIHJlY29nbml0aW9uLlxuICAgICAqIEBtZW1iZXIgQ2FuY2VsbGF0aW9uUmVhc29uLkVycm9yXG4gICAgICovXG4gICAgQ2FuY2VsbGF0aW9uUmVhc29uW0NhbmNlbGxhdGlvblJlYXNvbltcIkVycm9yXCJdID0gMF0gPSBcIkVycm9yXCI7XG4gICAgLyoqXG4gICAgICogSW5kaWNhdGVzIHRoYXQgdGhlIGVuZCBvZiB0aGUgYXVkaW8gc3RyZWFtIHdhcyByZWFjaGVkLlxuICAgICAqIEBtZW1iZXIgQ2FuY2VsbGF0aW9uUmVhc29uLkVuZE9mU3RyZWFtXG4gICAgICovXG4gICAgQ2FuY2VsbGF0aW9uUmVhc29uW0NhbmNlbGxhdGlvblJlYXNvbltcIkVuZE9mU3RyZWFtXCJdID0gMV0gPSBcIkVuZE9mU3RyZWFtXCI7XG59KShDYW5jZWxsYXRpb25SZWFzb24gPSBleHBvcnRzLkNhbmNlbGxhdGlvblJlYXNvbiB8fCAoZXhwb3J0cy5DYW5jZWxsYXRpb25SZWFzb24gPSB7fSkpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1DYW5jZWxsYXRpb25SZWFzb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationReason.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Connection.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Connection.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Connection = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst ConnectionMessage_js_1 = __webpack_require__(/*! ./ConnectionMessage.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessage.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Connection is a proxy class for managing connection to the speech service of the specified Recognizer.\n * By default, a Recognizer autonomously manages connection to service when needed.\n * The Connection class provides additional methods for users to explicitly open or close a connection and\n * to subscribe to connection status changes.\n * The use of Connection is optional, and mainly for scenarios where fine tuning of application\n * behavior based on connection status is needed. Users can optionally call Open() to manually set up a connection\n * in advance before starting recognition on the Recognizer associated with this Connection.\n * If the Recognizer needs to connect or disconnect to service, it will\n * setup or shutdown the connection independently. In this case the Connection will be notified by change of connection\n * status via Connected/Disconnected events.\n * Added in version 1.2.1.\n */\nclass Connection {\n    /**\n     * Gets the Connection instance from the specified recognizer.\n     * @param recognizer The recognizer associated with the connection.\n     * @return The Connection instance of the recognizer.\n     */\n    static fromRecognizer(recognizer) {\n        const recoBase = recognizer.internalData;\n        const ret = new Connection();\n        ret.privInternalData = recoBase;\n        ret.setupEvents();\n        return ret;\n    }\n    /**\n     * Gets the Connection instance from the specified synthesizer.\n     * @param synthesizer The synthesizer associated with the connection.\n     * @return The Connection instance of the synthesizer.\n     */\n    static fromSynthesizer(synthesizer) {\n        const synthBase = synthesizer.internalData;\n        const ret = new Connection();\n        ret.privInternalData = synthBase;\n        ret.setupEvents();\n        return ret;\n    }\n    /**\n     * Starts to set up connection to the service.\n     * Users can optionally call openConnection() to manually set up a connection in advance before starting recognition on the\n     * Recognizer associated with this Connection. After starting recognition, calling Open() will have no effect\n     *\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\n     * be notified when the connection is established.\n     */\n    openConnection(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.privInternalData.connect(), cb, err);\n    }\n    /**\n     * Closes the connection the service.\n     * Users can optionally call closeConnection() to manually shutdown the connection of the associated Recognizer.\n     *\n     * If closeConnection() is called during recognition, recognition will fail and cancel with an error.\n     */\n    closeConnection(cb, err) {\n        if (this.privInternalData instanceof Exports_js_1.SynthesisAdapterBase) {\n            throw new Error(\"Disconnecting a synthesizer's connection is currently not supported\");\n        }\n        else {\n            Exports_js_2.marshalPromiseToCallbacks(this.privInternalData.disconnect(), cb, err);\n        }\n    }\n    /**\n     * Appends a parameter in a message to service.\n     * Added in version 1.12.1.\n     * @param path The path of the network message.\n     * @param propertyName Name of the property\n     * @param propertyValue Value of the property. This is a json string.\n     */\n    setMessageProperty(path, propertyName, propertyValue) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(propertyName, \"propertyName\");\n        if (this.privInternalData instanceof Exports_js_1.ServiceRecognizerBase) {\n            if (path.toLowerCase() !== \"speech.context\") {\n                throw new Error(\"Only speech.context message property sets are currently supported for recognizer\");\n            }\n            else {\n                this.privInternalData.speechContext.setSection(propertyName, propertyValue);\n            }\n        }\n        else if (this.privInternalData instanceof Exports_js_1.SynthesisAdapterBase) {\n            if (path.toLowerCase() !== \"synthesis.context\") {\n                throw new Error(\"Only synthesis.context message property sets are currently supported for synthesizer\");\n            }\n            else {\n                this.privInternalData.synthesisContext.setSection(propertyName, propertyValue);\n            }\n        }\n    }\n    /**\n     * Sends a message to the speech service.\n     * Added in version 1.13.0.\n     * @param path The WebSocket path of the message\n     * @param payload The payload of the message. This is a json string or a ArrayBuffer.\n     * @param success A callback to indicate success.\n     * @param error A callback to indicate an error.\n     */\n    sendMessageAsync(path, payload, success, error) {\n        Exports_js_2.marshalPromiseToCallbacks(this.privInternalData.sendNetworkMessage(path, payload), success, error);\n    }\n    /**\n     * Dispose of associated resources.\n     */\n    close() {\n        /* eslint-disable no-empty */\n    }\n    setupEvents() {\n        this.privEventListener = this.privInternalData.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\n                if (!!this.connected) {\n                    this.connected(new Exports_js_3.ConnectionEventArgs(connectionEvent.connectionId));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                if (!!this.disconnected) {\n                    this.disconnected(new Exports_js_3.ConnectionEventArgs(connectionEvent.connectionId));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionMessageSentEvent\") {\n                if (!!this.messageSent) {\n                    this.messageSent(new Exports_js_3.ConnectionMessageEventArgs(new ConnectionMessage_js_1.ConnectionMessageImpl(connectionEvent.message)));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionMessageReceivedEvent\") {\n                if (!!this.messageReceived) {\n                    this.messageReceived(new Exports_js_3.ConnectionMessageEventArgs(new ConnectionMessage_js_1.ConnectionMessageImpl(connectionEvent.message)));\n                }\n            }\n        });\n        this.privServiceEventListener = this.privInternalData.serviceEvents.attach((e) => {\n            if (!!this.receivedServiceMessage) {\n                this.receivedServiceMessage(new Exports_js_3.ServiceEventArgs(e.jsonString, e.name));\n            }\n        });\n    }\n}\nexports.Connection = Connection;\n\n//# sourceMappingURL=Connection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Connection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionEventArgs.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionEventArgs.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConnectionEventArgs = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines payload for connection events like Connected/Disconnected.\n * Added in version 1.2.0\n */\nclass ConnectionEventArgs extends Exports_js_1.SessionEventArgs {\n}\nexports.ConnectionEventArgs = ConnectionEventArgs;\n\n//# sourceMappingURL=ConnectionEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Db25uZWN0aW9uRXZlbnRBcmdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCLHFCQUFxQixtQkFBTyxDQUFDLGdIQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjs7QUFFM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL0Nvbm5lY3Rpb25FdmVudEFyZ3MuanM/NDZhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vXG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgZmlsZSBpbiB0aGUgcHJvamVjdCByb290IGZvciBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4vL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25uZWN0aW9uRXZlbnRBcmdzID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbi8qKlxuICogRGVmaW5lcyBwYXlsb2FkIGZvciBjb25uZWN0aW9uIGV2ZW50cyBsaWtlIENvbm5lY3RlZC9EaXNjb25uZWN0ZWQuXG4gKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMi4wXG4gKi9cbmNsYXNzIENvbm5lY3Rpb25FdmVudEFyZ3MgZXh0ZW5kcyBFeHBvcnRzX2pzXzEuU2Vzc2lvbkV2ZW50QXJncyB7XG59XG5leHBvcnRzLkNvbm5lY3Rpb25FdmVudEFyZ3MgPSBDb25uZWN0aW9uRXZlbnRBcmdzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25uZWN0aW9uRXZlbnRBcmdzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessage.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessage.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConnectionMessageImpl = exports.ConnectionMessage = void 0;\n// eslint-disable-next-line max-classes-per-file\nconst HeaderNames_js_1 = __webpack_require__(/*! ../common.speech/HeaderNames.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/HeaderNames.js\");\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst PropertyCollection_js_1 = __webpack_require__(/*! ./PropertyCollection.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyCollection.js\");\nconst PropertyId_js_1 = __webpack_require__(/*! ./PropertyId.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyId.js\");\n/**\n * ConnectionMessage represents implementation specific messages sent to and received from\n * the speech service. These messages are provided for debugging purposes and should not\n * be used for production use cases with the Azure Cognitive Services Speech Service.\n * Messages sent to and received from the Speech Service are subject to change without\n * notice. This includes message contents, headers, payloads, ordering, etc.\n * Added in version 1.11.0.\n */\nclass ConnectionMessage {\n}\nexports.ConnectionMessage = ConnectionMessage;\nclass ConnectionMessageImpl {\n    constructor(message) {\n        this.privConnectionMessage = message;\n        this.privProperties = new PropertyCollection_js_1.PropertyCollection();\n        if (!!this.privConnectionMessage.headers[HeaderNames_js_1.HeaderNames.ConnectionId]) {\n            this.privProperties.setProperty(PropertyId_js_1.PropertyId.Speech_SessionId, this.privConnectionMessage.headers[HeaderNames_js_1.HeaderNames.ConnectionId]);\n        }\n        Object.keys(this.privConnectionMessage.headers).forEach((header) => {\n            this.privProperties.setProperty(header, this.privConnectionMessage.headers[header]);\n        });\n    }\n    /**\n     * The message path.\n     */\n    get path() {\n        return this.privConnectionMessage.headers[Object.keys(this.privConnectionMessage.headers).find((key) => key.toLowerCase() === \"path\".toLowerCase())];\n    }\n    /**\n     * Checks to see if the ConnectionMessage is a text message.\n     * See also IsBinaryMessage().\n     */\n    get isTextMessage() {\n        return this.privConnectionMessage.messageType === Exports_js_1.MessageType.Text;\n    }\n    /**\n     * Checks to see if the ConnectionMessage is a binary message.\n     * See also GetBinaryMessage().\n     */\n    get isBinaryMessage() {\n        return this.privConnectionMessage.messageType === Exports_js_1.MessageType.Binary;\n    }\n    /**\n     * Gets the text message payload. Typically the text message content-type is\n     * application/json. To determine other content-types use\n     * Properties.GetProperty(\"Content-Type\").\n     */\n    get TextMessage() {\n        return this.privConnectionMessage.textBody;\n    }\n    /**\n     * Gets the binary message payload.\n     */\n    get binaryMessage() {\n        return this.privConnectionMessage.binaryBody;\n    }\n    /**\n     * A collection of properties and their values defined for this <see cref=\"ConnectionMessage\"/>.\n     * Message headers can be accessed via this collection (e.g. \"Content-Type\").\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Returns a string that represents the connection message.\n     */\n    toString() {\n        return \"\";\n    }\n}\nexports.ConnectionMessageImpl = ConnectionMessageImpl;\n\n//# sourceMappingURL=ConnectionMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Db25uZWN0aW9uTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QixHQUFHLHlCQUF5QjtBQUN6RDtBQUNBLHlCQUF5QixtQkFBTyxDQUFDLGlKQUFpQztBQUNsRSxxQkFBcUIsbUJBQU8sQ0FBQywySEFBc0I7QUFDbkQsZ0NBQWdDLG1CQUFPLENBQUMsc0lBQXlCO0FBQ2pFLHdCQUF3QixtQkFBTyxDQUFDLHNIQUFpQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7O0FBRTdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Db25uZWN0aW9uTWVzc2FnZS5qcz80ZmI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy9cbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0LiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBmaWxlIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbi5cbi8vXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbm5lY3Rpb25NZXNzYWdlSW1wbCA9IGV4cG9ydHMuQ29ubmVjdGlvbk1lc3NhZ2UgPSB2b2lkIDA7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LWNsYXNzZXMtcGVyLWZpbGVcbmNvbnN0IEhlYWRlck5hbWVzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uLnNwZWVjaC9IZWFkZXJOYW1lcy5qc1wiKTtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi9jb21tb24vRXhwb3J0cy5qc1wiKTtcbmNvbnN0IFByb3BlcnR5Q29sbGVjdGlvbl9qc18xID0gcmVxdWlyZShcIi4vUHJvcGVydHlDb2xsZWN0aW9uLmpzXCIpO1xuY29uc3QgUHJvcGVydHlJZF9qc18xID0gcmVxdWlyZShcIi4vUHJvcGVydHlJZC5qc1wiKTtcbi8qKlxuICogQ29ubmVjdGlvbk1lc3NhZ2UgcmVwcmVzZW50cyBpbXBsZW1lbnRhdGlvbiBzcGVjaWZpYyBtZXNzYWdlcyBzZW50IHRvIGFuZCByZWNlaXZlZCBmcm9tXG4gKiB0aGUgc3BlZWNoIHNlcnZpY2UuIFRoZXNlIG1lc3NhZ2VzIGFyZSBwcm92aWRlZCBmb3IgZGVidWdnaW5nIHB1cnBvc2VzIGFuZCBzaG91bGQgbm90XG4gKiBiZSB1c2VkIGZvciBwcm9kdWN0aW9uIHVzZSBjYXNlcyB3aXRoIHRoZSBBenVyZSBDb2duaXRpdmUgU2VydmljZXMgU3BlZWNoIFNlcnZpY2UuXG4gKiBNZXNzYWdlcyBzZW50IHRvIGFuZCByZWNlaXZlZCBmcm9tIHRoZSBTcGVlY2ggU2VydmljZSBhcmUgc3ViamVjdCB0byBjaGFuZ2Ugd2l0aG91dFxuICogbm90aWNlLiBUaGlzIGluY2x1ZGVzIG1lc3NhZ2UgY29udGVudHMsIGhlYWRlcnMsIHBheWxvYWRzLCBvcmRlcmluZywgZXRjLlxuICogQWRkZWQgaW4gdmVyc2lvbiAxLjExLjAuXG4gKi9cbmNsYXNzIENvbm5lY3Rpb25NZXNzYWdlIHtcbn1cbmV4cG9ydHMuQ29ubmVjdGlvbk1lc3NhZ2UgPSBDb25uZWN0aW9uTWVzc2FnZTtcbmNsYXNzIENvbm5lY3Rpb25NZXNzYWdlSW1wbCB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICB0aGlzLnByaXZDb25uZWN0aW9uTWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgICAgIHRoaXMucHJpdlByb3BlcnRpZXMgPSBuZXcgUHJvcGVydHlDb2xsZWN0aW9uX2pzXzEuUHJvcGVydHlDb2xsZWN0aW9uKCk7XG4gICAgICAgIGlmICghIXRoaXMucHJpdkNvbm5lY3Rpb25NZXNzYWdlLmhlYWRlcnNbSGVhZGVyTmFtZXNfanNfMS5IZWFkZXJOYW1lcy5Db25uZWN0aW9uSWRdKSB7XG4gICAgICAgICAgICB0aGlzLnByaXZQcm9wZXJ0aWVzLnNldFByb3BlcnR5KFByb3BlcnR5SWRfanNfMS5Qcm9wZXJ0eUlkLlNwZWVjaF9TZXNzaW9uSWQsIHRoaXMucHJpdkNvbm5lY3Rpb25NZXNzYWdlLmhlYWRlcnNbSGVhZGVyTmFtZXNfanNfMS5IZWFkZXJOYW1lcy5Db25uZWN0aW9uSWRdKTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3Qua2V5cyh0aGlzLnByaXZDb25uZWN0aW9uTWVzc2FnZS5oZWFkZXJzKS5mb3JFYWNoKChoZWFkZXIpID0+IHtcbiAgICAgICAgICAgIHRoaXMucHJpdlByb3BlcnRpZXMuc2V0UHJvcGVydHkoaGVhZGVyLCB0aGlzLnByaXZDb25uZWN0aW9uTWVzc2FnZS5oZWFkZXJzW2hlYWRlcl0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIG1lc3NhZ2UgcGF0aC5cbiAgICAgKi9cbiAgICBnZXQgcGF0aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbm5lY3Rpb25NZXNzYWdlLmhlYWRlcnNbT2JqZWN0LmtleXModGhpcy5wcml2Q29ubmVjdGlvbk1lc3NhZ2UuaGVhZGVycykuZmluZCgoa2V5KSA9PiBrZXkudG9Mb3dlckNhc2UoKSA9PT0gXCJwYXRoXCIudG9Mb3dlckNhc2UoKSldO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGVja3MgdG8gc2VlIGlmIHRoZSBDb25uZWN0aW9uTWVzc2FnZSBpcyBhIHRleHQgbWVzc2FnZS5cbiAgICAgKiBTZWUgYWxzbyBJc0JpbmFyeU1lc3NhZ2UoKS5cbiAgICAgKi9cbiAgICBnZXQgaXNUZXh0TWVzc2FnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbm5lY3Rpb25NZXNzYWdlLm1lc3NhZ2VUeXBlID09PSBFeHBvcnRzX2pzXzEuTWVzc2FnZVR5cGUuVGV4dDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHRvIHNlZSBpZiB0aGUgQ29ubmVjdGlvbk1lc3NhZ2UgaXMgYSBiaW5hcnkgbWVzc2FnZS5cbiAgICAgKiBTZWUgYWxzbyBHZXRCaW5hcnlNZXNzYWdlKCkuXG4gICAgICovXG4gICAgZ2V0IGlzQmluYXJ5TWVzc2FnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbm5lY3Rpb25NZXNzYWdlLm1lc3NhZ2VUeXBlID09PSBFeHBvcnRzX2pzXzEuTWVzc2FnZVR5cGUuQmluYXJ5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSB0ZXh0IG1lc3NhZ2UgcGF5bG9hZC4gVHlwaWNhbGx5IHRoZSB0ZXh0IG1lc3NhZ2UgY29udGVudC10eXBlIGlzXG4gICAgICogYXBwbGljYXRpb24vanNvbi4gVG8gZGV0ZXJtaW5lIG90aGVyIGNvbnRlbnQtdHlwZXMgdXNlXG4gICAgICogUHJvcGVydGllcy5HZXRQcm9wZXJ0eShcIkNvbnRlbnQtVHlwZVwiKS5cbiAgICAgKi9cbiAgICBnZXQgVGV4dE1lc3NhZ2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZDb25uZWN0aW9uTWVzc2FnZS50ZXh0Qm9keTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgYmluYXJ5IG1lc3NhZ2UgcGF5bG9hZC5cbiAgICAgKi9cbiAgICBnZXQgYmluYXJ5TWVzc2FnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbm5lY3Rpb25NZXNzYWdlLmJpbmFyeUJvZHk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEEgY29sbGVjdGlvbiBvZiBwcm9wZXJ0aWVzIGFuZCB0aGVpciB2YWx1ZXMgZGVmaW5lZCBmb3IgdGhpcyA8c2VlIGNyZWY9XCJDb25uZWN0aW9uTWVzc2FnZVwiLz4uXG4gICAgICogTWVzc2FnZSBoZWFkZXJzIGNhbiBiZSBhY2Nlc3NlZCB2aWEgdGhpcyBjb2xsZWN0aW9uIChlLmcuIFwiQ29udGVudC1UeXBlXCIpLlxuICAgICAqL1xuICAgIGdldCBwcm9wZXJ0aWVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UHJvcGVydGllcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHN0cmluZyB0aGF0IHJlcHJlc2VudHMgdGhlIGNvbm5lY3Rpb24gbWVzc2FnZS5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxufVxuZXhwb3J0cy5Db25uZWN0aW9uTWVzc2FnZUltcGwgPSBDb25uZWN0aW9uTWVzc2FnZUltcGw7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbm5lY3Rpb25NZXNzYWdlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessageEventArgs.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessageEventArgs.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConnectionMessageEventArgs = void 0;\nclass ConnectionMessageEventArgs {\n    constructor(message) {\n        this.privConnectionMessage = message;\n    }\n    /**\n     * Gets the <see cref=\"ConnectionMessage\"/> associated with this <see cref=\"ConnectionMessageEventArgs\"/>.\n     */\n    get message() {\n        return this.privConnectionMessage;\n    }\n    /**\n     * Returns a string that represents the connection message event.\n     */\n    toString() {\n        return \"Message: \" + this.privConnectionMessage.toString();\n    }\n}\nexports.ConnectionMessageEventArgs = ConnectionMessageEventArgs;\n\n//# sourceMappingURL=ConnectionMessageEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Db25uZWN0aW9uTWVzc2FnZUV2ZW50QXJncy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDOztBQUVsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvQ29ubmVjdGlvbk1lc3NhZ2VFdmVudEFyZ3MuanM/NzFjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vXG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdC4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgZmlsZSBpbiB0aGUgcHJvamVjdCByb290IGZvciBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4vL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25uZWN0aW9uTWVzc2FnZUV2ZW50QXJncyA9IHZvaWQgMDtcbmNsYXNzIENvbm5lY3Rpb25NZXNzYWdlRXZlbnRBcmdzIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHRoaXMucHJpdkNvbm5lY3Rpb25NZXNzYWdlID0gbWVzc2FnZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgPHNlZSBjcmVmPVwiQ29ubmVjdGlvbk1lc3NhZ2VcIi8+IGFzc29jaWF0ZWQgd2l0aCB0aGlzIDxzZWUgY3JlZj1cIkNvbm5lY3Rpb25NZXNzYWdlRXZlbnRBcmdzXCIvPi5cbiAgICAgKi9cbiAgICBnZXQgbWVzc2FnZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkNvbm5lY3Rpb25NZXNzYWdlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgc3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgY29ubmVjdGlvbiBtZXNzYWdlIGV2ZW50LlxuICAgICAqL1xuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gXCJNZXNzYWdlOiBcIiArIHRoaXMucHJpdkNvbm5lY3Rpb25NZXNzYWdlLnRvU3RyaW5nKCk7XG4gICAgfVxufVxuZXhwb3J0cy5Db25uZWN0aW9uTWVzc2FnZUV2ZW50QXJncyA9IENvbm5lY3Rpb25NZXNzYWdlRXZlbnRBcmdzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db25uZWN0aW9uTWVzc2FnZUV2ZW50QXJncy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessageEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Contracts = void 0;\n/**\n * @class Contracts\n * @private\n */\nclass Contracts {\n    static throwIfNullOrUndefined(param, name) {\n        if (param === undefined || param === null) {\n            throw new Error(\"throwIfNullOrUndefined:\" + name);\n        }\n    }\n    static throwIfNull(param, name) {\n        if (param === null) {\n            throw new Error(\"throwIfNull:\" + name);\n        }\n    }\n    static throwIfNullOrWhitespace(param, name) {\n        Contracts.throwIfNullOrUndefined(param, name);\n        if ((\"\" + param).trim().length < 1) {\n            throw new Error(\"throwIfNullOrWhitespace:\" + name);\n        }\n    }\n    static throwIfNullOrTooLong(param, name, maxLength) {\n        Contracts.throwIfNullOrUndefined(param, name);\n        if ((\"\" + param).length > maxLength) {\n            throw new Error(\"throwIfNullOrTooLong:\" + name + \" (more than \" + maxLength.toString() + \" characters)\");\n        }\n    }\n    static throwIfNullOrTooShort(param, name, minLength) {\n        Contracts.throwIfNullOrUndefined(param, name);\n        if ((\"\" + param).length < minLength) {\n            throw new Error(\"throwIfNullOrTooShort:\" + name + \" (less than \" + minLength.toString() + \" characters)\");\n        }\n    }\n    static throwIfDisposed(isDisposed) {\n        if (isDisposed) {\n            throw new Error(\"the object is already disposed\");\n        }\n    }\n    static throwIfArrayEmptyOrWhitespace(array, name) {\n        Contracts.throwIfNullOrUndefined(array, name);\n        if (array.length === 0) {\n            throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\n        }\n        for (const item of array) {\n            Contracts.throwIfNullOrWhitespace(item, name);\n        }\n    }\n    static throwIfFileDoesNotExist(param, name) {\n        Contracts.throwIfNullOrWhitespace(param, name);\n        // TODO check for file existence.\n    }\n    static throwIfNotUndefined(param, name) {\n        if (param !== undefined) {\n            throw new Error(\"throwIfNotUndefined:\" + name);\n        }\n    }\n}\nexports.Contracts = Contracts;\n\n//# sourceMappingURL=Contracts.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Db250cmFjdHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7O0FBRWpCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Db250cmFjdHMuanM/OTU0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db250cmFjdHMgPSB2b2lkIDA7XG4vKipcbiAqIEBjbGFzcyBDb250cmFjdHNcbiAqIEBwcml2YXRlXG4gKi9cbmNsYXNzIENvbnRyYWN0cyB7XG4gICAgc3RhdGljIHRocm93SWZOdWxsT3JVbmRlZmluZWQocGFyYW0sIG5hbWUpIHtcbiAgICAgICAgaWYgKHBhcmFtID09PSB1bmRlZmluZWQgfHwgcGFyYW0gPT09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInRocm93SWZOdWxsT3JVbmRlZmluZWQ6XCIgKyBuYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgdGhyb3dJZk51bGwocGFyYW0sIG5hbWUpIHtcbiAgICAgICAgaWYgKHBhcmFtID09PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0aHJvd0lmTnVsbDpcIiArIG5hbWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyB0aHJvd0lmTnVsbE9yV2hpdGVzcGFjZShwYXJhbSwgbmFtZSkge1xuICAgICAgICBDb250cmFjdHMudGhyb3dJZk51bGxPclVuZGVmaW5lZChwYXJhbSwgbmFtZSk7XG4gICAgICAgIGlmICgoXCJcIiArIHBhcmFtKS50cmltKCkubGVuZ3RoIDwgMSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGhyb3dJZk51bGxPcldoaXRlc3BhY2U6XCIgKyBuYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgdGhyb3dJZk51bGxPclRvb0xvbmcocGFyYW0sIG5hbWUsIG1heExlbmd0aCkge1xuICAgICAgICBDb250cmFjdHMudGhyb3dJZk51bGxPclVuZGVmaW5lZChwYXJhbSwgbmFtZSk7XG4gICAgICAgIGlmICgoXCJcIiArIHBhcmFtKS5sZW5ndGggPiBtYXhMZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInRocm93SWZOdWxsT3JUb29Mb25nOlwiICsgbmFtZSArIFwiIChtb3JlIHRoYW4gXCIgKyBtYXhMZW5ndGgudG9TdHJpbmcoKSArIFwiIGNoYXJhY3RlcnMpXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyB0aHJvd0lmTnVsbE9yVG9vU2hvcnQocGFyYW0sIG5hbWUsIG1pbkxlbmd0aCkge1xuICAgICAgICBDb250cmFjdHMudGhyb3dJZk51bGxPclVuZGVmaW5lZChwYXJhbSwgbmFtZSk7XG4gICAgICAgIGlmICgoXCJcIiArIHBhcmFtKS5sZW5ndGggPCBtaW5MZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInRocm93SWZOdWxsT3JUb29TaG9ydDpcIiArIG5hbWUgKyBcIiAobGVzcyB0aGFuIFwiICsgbWluTGVuZ3RoLnRvU3RyaW5nKCkgKyBcIiBjaGFyYWN0ZXJzKVwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgdGhyb3dJZkRpc3Bvc2VkKGlzRGlzcG9zZWQpIHtcbiAgICAgICAgaWYgKGlzRGlzcG9zZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInRoZSBvYmplY3QgaXMgYWxyZWFkeSBkaXNwb3NlZFwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgdGhyb3dJZkFycmF5RW1wdHlPcldoaXRlc3BhY2UoYXJyYXksIG5hbWUpIHtcbiAgICAgICAgQ29udHJhY3RzLnRocm93SWZOdWxsT3JVbmRlZmluZWQoYXJyYXksIG5hbWUpO1xuICAgICAgICBpZiAoYXJyYXkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0aHJvd0lmQXJyYXlFbXB0eU9yV2hpdGVzcGFjZTpcIiArIG5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBhcnJheSkge1xuICAgICAgICAgICAgQ29udHJhY3RzLnRocm93SWZOdWxsT3JXaGl0ZXNwYWNlKGl0ZW0sIG5hbWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyB0aHJvd0lmRmlsZURvZXNOb3RFeGlzdChwYXJhbSwgbmFtZSkge1xuICAgICAgICBDb250cmFjdHMudGhyb3dJZk51bGxPcldoaXRlc3BhY2UocGFyYW0sIG5hbWUpO1xuICAgICAgICAvLyBUT0RPIGNoZWNrIGZvciBmaWxlIGV4aXN0ZW5jZS5cbiAgICB9XG4gICAgc3RhdGljIHRocm93SWZOb3RVbmRlZmluZWQocGFyYW0sIG5hbWUpIHtcbiAgICAgICAgaWYgKHBhcmFtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInRocm93SWZOb3RVbmRlZmluZWQ6XCIgKyBuYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQ29udHJhY3RzID0gQ29udHJhY3RzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db250cmFjdHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConversationTranscriptionCanceledEventArgs.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConversationTranscriptionCanceledEventArgs.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationTranscriptionCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = __webpack_require__(/*! ./CancellationEventArgsBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationEventArgsBase.js\");\n/**\n * Defines content of a RecognitionErrorEvent.\n * @class ConversationTranscriptionCanceledEventArgs\n */\nclass ConversationTranscriptionCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.ConversationTranscriptionCanceledEventArgs = ConversationTranscriptionCanceledEventArgs;\n\n//# sourceMappingURL=ConversationTranscriptionCanceledEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Db252ZXJzYXRpb25UcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtEQUFrRDtBQUNsRCx1Q0FBdUMsbUJBQU8sQ0FBQyxvSkFBZ0M7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEOztBQUVsRCIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvbkNhbmNlbGVkRXZlbnRBcmdzLmpzP2Y1YzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvbkNhbmNlbGVkRXZlbnRBcmdzID0gdm9pZCAwO1xuY29uc3QgQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZV9qc18xID0gcmVxdWlyZShcIi4vQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZS5qc1wiKTtcbi8qKlxuICogRGVmaW5lcyBjb250ZW50IG9mIGEgUmVjb2duaXRpb25FcnJvckV2ZW50LlxuICogQGNsYXNzIENvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25DYW5jZWxlZEV2ZW50QXJnc1xuICovXG5jbGFzcyBDb252ZXJzYXRpb25UcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3MgZXh0ZW5kcyBDYW5jZWxsYXRpb25FdmVudEFyZ3NCYXNlX2pzXzEuQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZSB7XG59XG5leHBvcnRzLkNvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25DYW5jZWxlZEV2ZW50QXJncyA9IENvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25DYW5jZWxlZEV2ZW50QXJncztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29udmVyc2F0aW9uVHJhbnNjcmlwdGlvbkNhbmNlbGVkRXZlbnRBcmdzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConversationTranscriptionCanceledEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CustomCommandsConfig.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CustomCommandsConfig.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CustomCommandsConfig = void 0;\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst DialogServiceConfig_js_1 = __webpack_require__(/*! ./DialogServiceConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConfig.js\");\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Class that defines configurations for the dialog service connector object for using a CustomCommands backend.\n * @class CustomCommandsConfig\n */\nclass CustomCommandsConfig extends DialogServiceConfig_js_1.DialogServiceConfigImpl {\n    /**\n     * Creates an instance of CustomCommandsConfig.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates an instance of the bot framework config with the specified subscription and region.\n     * @member CustomCommandsConfig.fromSubscription\n     * @function\n     * @public\n     * @param applicationId Speech Commands application id.\n     * @param subscription Subscription key associated with the bot\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {CustomCommandsConfig} A new bot framework config.\n     */\n    static fromSubscription(applicationId, subscription, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const customCommandsConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.CustomCommands);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, applicationId);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Key, subscription);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Region, region);\n        return customCommandsConfig;\n    }\n    /**\n     * Creates an instance of the bot framework config with the specified Speech Commands application id, authorization token and region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created.\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member CustomCommandsConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param applicationId Speech Commands application id.\n     * @param authorizationToken The authorization token associated with the application.\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {CustomCommandsConfig} A new speech commands config.\n     */\n    static fromAuthorizationToken(applicationId, authorizationToken, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const customCommandsConfig = new DialogServiceConfig_js_1.DialogServiceConfigImpl();\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.Conversation_DialogType, DialogServiceConfig_js_1.DialogServiceConfig.DialogTypes.CustomCommands);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, applicationId);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        customCommandsConfig.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_Region, region);\n        return customCommandsConfig;\n    }\n    /**\n     * Sets the corresponding backend application identifier.\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\n     * @function\n     * @public\n     * @param {string} value - The application identifier to set.\n     */\n    set applicationId(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.setProperty(Exports_js_1.PropertyId.Conversation_ApplicationId, value);\n    }\n    /**\n     * Gets the corresponding backend application identifier.\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\n     * @function\n     * @public\n     * @param {string} value - The application identifier to get.\n     */\n    get applicationId() {\n        return this.getProperty(Exports_js_1.PropertyId.Conversation_ApplicationId);\n    }\n}\nexports.CustomCommandsConfig = CustomCommandsConfig;\n\n//# sourceMappingURL=CustomCommandsConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9DdXN0b21Db21tYW5kc0NvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCLHVCQUF1QixtQkFBTyxDQUFDLG9IQUFnQjtBQUMvQyxpQ0FBaUMsbUJBQU8sQ0FBQyx3SUFBMEI7QUFDbkUscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsc0JBQXNCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHNCQUFzQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7O0FBRTVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9DdXN0b21Db21tYW5kc0NvbmZpZy5qcz83ZDRjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkN1c3RvbUNvbW1hbmRzQ29uZmlnID0gdm9pZCAwO1xuY29uc3QgQ29udHJhY3RzX2pzXzEgPSByZXF1aXJlKFwiLi9Db250cmFjdHMuanNcIik7XG5jb25zdCBEaWFsb2dTZXJ2aWNlQ29uZmlnX2pzXzEgPSByZXF1aXJlKFwiLi9EaWFsb2dTZXJ2aWNlQ29uZmlnLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbi8qKlxuICogQ2xhc3MgdGhhdCBkZWZpbmVzIGNvbmZpZ3VyYXRpb25zIGZvciB0aGUgZGlhbG9nIHNlcnZpY2UgY29ubmVjdG9yIG9iamVjdCBmb3IgdXNpbmcgYSBDdXN0b21Db21tYW5kcyBiYWNrZW5kLlxuICogQGNsYXNzIEN1c3RvbUNvbW1hbmRzQ29uZmlnXG4gKi9cbmNsYXNzIEN1c3RvbUNvbW1hbmRzQ29uZmlnIGV4dGVuZHMgRGlhbG9nU2VydmljZUNvbmZpZ19qc18xLkRpYWxvZ1NlcnZpY2VDb25maWdJbXBsIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIEN1c3RvbUNvbW1hbmRzQ29uZmlnLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIHRoZSBib3QgZnJhbWV3b3JrIGNvbmZpZyB3aXRoIHRoZSBzcGVjaWZpZWQgc3Vic2NyaXB0aW9uIGFuZCByZWdpb24uXG4gICAgICogQG1lbWJlciBDdXN0b21Db21tYW5kc0NvbmZpZy5mcm9tU3Vic2NyaXB0aW9uXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSBhcHBsaWNhdGlvbklkIFNwZWVjaCBDb21tYW5kcyBhcHBsaWNhdGlvbiBpZC5cbiAgICAgKiBAcGFyYW0gc3Vic2NyaXB0aW9uIFN1YnNjcmlwdGlvbiBrZXkgYXNzb2NpYXRlZCB3aXRoIHRoZSBib3RcbiAgICAgKiBAcGFyYW0gcmVnaW9uIFRoZSByZWdpb24gbmFtZSAoc2VlIHRoZSA8YSBocmVmPVwiaHR0cHM6Ly9ha2EubXMvY3NzcGVlY2gvcmVnaW9uXCI+cmVnaW9uIHBhZ2U8L2E+KS5cbiAgICAgKiBAcmV0dXJucyB7Q3VzdG9tQ29tbWFuZHNDb25maWd9IEEgbmV3IGJvdCBmcmFtZXdvcmsgY29uZmlnLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tU3Vic2NyaXB0aW9uKGFwcGxpY2F0aW9uSWQsIHN1YnNjcmlwdGlvbiwgcmVnaW9uKSB7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yV2hpdGVzcGFjZShhcHBsaWNhdGlvbklkLCBcImFwcGxpY2F0aW9uSWRcIik7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yV2hpdGVzcGFjZShzdWJzY3JpcHRpb24sIFwic3Vic2NyaXB0aW9uXCIpO1xuICAgICAgICBDb250cmFjdHNfanNfMS5Db250cmFjdHMudGhyb3dJZk51bGxPcldoaXRlc3BhY2UocmVnaW9uLCBcInJlZ2lvblwiKTtcbiAgICAgICAgY29uc3QgY3VzdG9tQ29tbWFuZHNDb25maWcgPSBuZXcgRGlhbG9nU2VydmljZUNvbmZpZ19qc18xLkRpYWxvZ1NlcnZpY2VDb25maWdJbXBsKCk7XG4gICAgICAgIGN1c3RvbUNvbW1hbmRzQ29uZmlnLnNldFByb3BlcnR5KEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkLkNvbnZlcnNhdGlvbl9EaWFsb2dUeXBlLCBEaWFsb2dTZXJ2aWNlQ29uZmlnX2pzXzEuRGlhbG9nU2VydmljZUNvbmZpZy5EaWFsb2dUeXBlcy5DdXN0b21Db21tYW5kcyk7XG4gICAgICAgIGN1c3RvbUNvbW1hbmRzQ29uZmlnLnNldFByb3BlcnR5KEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkLkNvbnZlcnNhdGlvbl9BcHBsaWNhdGlvbklkLCBhcHBsaWNhdGlvbklkKTtcbiAgICAgICAgY3VzdG9tQ29tbWFuZHNDb25maWcuc2V0UHJvcGVydHkoRXhwb3J0c19qc18xLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUNvbm5lY3Rpb25fS2V5LCBzdWJzY3JpcHRpb24pO1xuICAgICAgICBjdXN0b21Db21tYW5kc0NvbmZpZy5zZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzEuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9SZWdpb24sIHJlZ2lvbik7XG4gICAgICAgIHJldHVybiBjdXN0b21Db21tYW5kc0NvbmZpZztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiB0aGUgYm90IGZyYW1ld29yayBjb25maWcgd2l0aCB0aGUgc3BlY2lmaWVkIFNwZWVjaCBDb21tYW5kcyBhcHBsaWNhdGlvbiBpZCwgYXV0aG9yaXphdGlvbiB0b2tlbiBhbmQgcmVnaW9uLlxuICAgICAqIE5vdGU6IFRoZSBjYWxsZXIgbmVlZHMgdG8gZW5zdXJlIHRoYXQgdGhlIGF1dGhvcml6YXRpb24gdG9rZW4gaXMgdmFsaWQuIEJlZm9yZSB0aGUgYXV0aG9yaXphdGlvbiB0b2tlblxuICAgICAqIGV4cGlyZXMsIHRoZSBjYWxsZXIgbmVlZHMgdG8gcmVmcmVzaCBpdCBieSBjYWxsaW5nIHRoaXMgc2V0dGVyIHdpdGggYSBuZXcgdmFsaWQgdG9rZW4uXG4gICAgICogQXMgY29uZmlndXJhdGlvbiB2YWx1ZXMgYXJlIGNvcGllZCB3aGVuIGNyZWF0aW5nIGEgbmV3IHJlY29nbml6ZXIsIHRoZSBuZXcgdG9rZW4gdmFsdWUgd2lsbCBub3QgYXBwbHkgdG8gcmVjb2duaXplcnMgdGhhdCBoYXZlIGFscmVhZHkgYmVlbiBjcmVhdGVkLlxuICAgICAqIEZvciByZWNvZ25pemVycyB0aGF0IGhhdmUgYmVlbiBjcmVhdGVkIGJlZm9yZSwgeW91IG5lZWQgdG8gc2V0IGF1dGhvcml6YXRpb24gdG9rZW4gb2YgdGhlIGNvcnJlc3BvbmRpbmcgcmVjb2duaXplclxuICAgICAqIHRvIHJlZnJlc2ggdGhlIHRva2VuLiBPdGhlcndpc2UsIHRoZSByZWNvZ25pemVycyB3aWxsIGVuY291bnRlciBlcnJvcnMgZHVyaW5nIHJlY29nbml0aW9uLlxuICAgICAqIEBtZW1iZXIgQ3VzdG9tQ29tbWFuZHNDb25maWcuZnJvbUF1dGhvcml6YXRpb25Ub2tlblxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0gYXBwbGljYXRpb25JZCBTcGVlY2ggQ29tbWFuZHMgYXBwbGljYXRpb24gaWQuXG4gICAgICogQHBhcmFtIGF1dGhvcml6YXRpb25Ub2tlbiBUaGUgYXV0aG9yaXphdGlvbiB0b2tlbiBhc3NvY2lhdGVkIHdpdGggdGhlIGFwcGxpY2F0aW9uLlxuICAgICAqIEBwYXJhbSByZWdpb24gVGhlIHJlZ2lvbiBuYW1lIChzZWUgdGhlIDxhIGhyZWY9XCJodHRwczovL2FrYS5tcy9jc3NwZWVjaC9yZWdpb25cIj5yZWdpb24gcGFnZTwvYT4pLlxuICAgICAqIEByZXR1cm5zIHtDdXN0b21Db21tYW5kc0NvbmZpZ30gQSBuZXcgc3BlZWNoIGNvbW1hbmRzIGNvbmZpZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbUF1dGhvcml6YXRpb25Ub2tlbihhcHBsaWNhdGlvbklkLCBhdXRob3JpemF0aW9uVG9rZW4sIHJlZ2lvbikge1xuICAgICAgICBDb250cmFjdHNfanNfMS5Db250cmFjdHMudGhyb3dJZk51bGxPcldoaXRlc3BhY2UoYXBwbGljYXRpb25JZCwgXCJhcHBsaWNhdGlvbklkXCIpO1xuICAgICAgICBDb250cmFjdHNfanNfMS5Db250cmFjdHMudGhyb3dJZk51bGxPcldoaXRlc3BhY2UoYXV0aG9yaXphdGlvblRva2VuLCBcImF1dGhvcml6YXRpb25Ub2tlblwiKTtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZOdWxsT3JXaGl0ZXNwYWNlKHJlZ2lvbiwgXCJyZWdpb25cIik7XG4gICAgICAgIGNvbnN0IGN1c3RvbUNvbW1hbmRzQ29uZmlnID0gbmV3IERpYWxvZ1NlcnZpY2VDb25maWdfanNfMS5EaWFsb2dTZXJ2aWNlQ29uZmlnSW1wbCgpO1xuICAgICAgICBjdXN0b21Db21tYW5kc0NvbmZpZy5zZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzEuUHJvcGVydHlJZC5Db252ZXJzYXRpb25fRGlhbG9nVHlwZSwgRGlhbG9nU2VydmljZUNvbmZpZ19qc18xLkRpYWxvZ1NlcnZpY2VDb25maWcuRGlhbG9nVHlwZXMuQ3VzdG9tQ29tbWFuZHMpO1xuICAgICAgICBjdXN0b21Db21tYW5kc0NvbmZpZy5zZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzEuUHJvcGVydHlJZC5Db252ZXJzYXRpb25fQXBwbGljYXRpb25JZCwgYXBwbGljYXRpb25JZCk7XG4gICAgICAgIGN1c3RvbUNvbW1hbmRzQ29uZmlnLnNldFByb3BlcnR5KEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VBdXRob3JpemF0aW9uX1Rva2VuLCBhdXRob3JpemF0aW9uVG9rZW4pO1xuICAgICAgICBjdXN0b21Db21tYW5kc0NvbmZpZy5zZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzEuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQ29ubmVjdGlvbl9SZWdpb24sIHJlZ2lvbik7XG4gICAgICAgIHJldHVybiBjdXN0b21Db21tYW5kc0NvbmZpZztcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgY29ycmVzcG9uZGluZyBiYWNrZW5kIGFwcGxpY2F0aW9uIGlkZW50aWZpZXIuXG4gICAgICogQG1lbWJlciBDdXN0b21Db21tYW5kc0NvbmZpZy5wcm90b3R5cGUuQ29udmVyc2F0aW9uX0FwcGxpY2F0aW9uSWRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIC0gVGhlIGFwcGxpY2F0aW9uIGlkZW50aWZpZXIgdG8gc2V0LlxuICAgICAqL1xuICAgIHNldCBhcHBsaWNhdGlvbklkKHZhbHVlKSB7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yV2hpdGVzcGFjZSh2YWx1ZSwgXCJ2YWx1ZVwiKTtcbiAgICAgICAgdGhpcy5zZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzEuUHJvcGVydHlJZC5Db252ZXJzYXRpb25fQXBwbGljYXRpb25JZCwgdmFsdWUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBjb3JyZXNwb25kaW5nIGJhY2tlbmQgYXBwbGljYXRpb24gaWRlbnRpZmllci5cbiAgICAgKiBAbWVtYmVyIEN1c3RvbUNvbW1hbmRzQ29uZmlnLnByb3RvdHlwZS5Db252ZXJzYXRpb25fQXBwbGljYXRpb25JZFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgLSBUaGUgYXBwbGljYXRpb24gaWRlbnRpZmllciB0byBnZXQuXG4gICAgICovXG4gICAgZ2V0IGFwcGxpY2F0aW9uSWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkLkNvbnZlcnNhdGlvbl9BcHBsaWNhdGlvbklkKTtcbiAgICB9XG59XG5leHBvcnRzLkN1c3RvbUNvbW1hbmRzQ29uZmlnID0gQ3VzdG9tQ29tbWFuZHNDb25maWc7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUN1c3RvbUNvbW1hbmRzQ29uZmlnLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CustomCommandsConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Diagnostics.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Diagnostics.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Diagnostics = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.browser/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\n/**\n * Defines diagnostics API for managing console output\n * Added in version 1.21.0\n */\nclass Diagnostics {\n    static SetLoggingLevel(logLevel) {\n        this.privListener = new Exports_js_1.ConsoleLoggingListener(logLevel);\n        Exports_js_2.Events.instance.attachConsoleListener(this.privListener);\n    }\n    static StartConsoleOutput() {\n        if (!!this.privListener) {\n            this.privListener.enableConsoleOutput = true;\n        }\n    }\n    static StopConsoleOutput() {\n        if (!!this.privListener) {\n            this.privListener.enableConsoleOutput = false;\n        }\n    }\n    static SetLogOutputPath(path) {\n        if (typeof window === \"undefined\") {\n            if (!!this.privListener) {\n                this.privListener.logPath = path;\n            }\n        }\n        else {\n            throw new Error(\"File system logging not available in browser.\");\n        }\n    }\n    static set onLogOutput(callback) {\n        if (!!this.privListener) {\n            this.privListener.logCallback = callback;\n        }\n    }\n}\nexports.Diagnostics = Diagnostics;\nDiagnostics.privListener = undefined;\n\n//# sourceMappingURL=Diagnostics.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9EaWFnbm9zdGljcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixxQkFBcUIsbUJBQU8sQ0FBQywySUFBOEI7QUFDM0QscUJBQXFCLG1CQUFPLENBQUMsMkhBQXNCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL0RpYWdub3N0aWNzLmpzP2I1NDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vL1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGZpbGUgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uLlxuLy9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGlhZ25vc3RpY3MgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uLmJyb3dzZXIvRXhwb3J0cy5qc1wiKTtcbmNvbnN0IEV4cG9ydHNfanNfMiA9IHJlcXVpcmUoXCIuLi9jb21tb24vRXhwb3J0cy5qc1wiKTtcbi8qKlxuICogRGVmaW5lcyBkaWFnbm9zdGljcyBBUEkgZm9yIG1hbmFnaW5nIGNvbnNvbGUgb3V0cHV0XG4gKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMjEuMFxuICovXG5jbGFzcyBEaWFnbm9zdGljcyB7XG4gICAgc3RhdGljIFNldExvZ2dpbmdMZXZlbChsb2dMZXZlbCkge1xuICAgICAgICB0aGlzLnByaXZMaXN0ZW5lciA9IG5ldyBFeHBvcnRzX2pzXzEuQ29uc29sZUxvZ2dpbmdMaXN0ZW5lcihsb2dMZXZlbCk7XG4gICAgICAgIEV4cG9ydHNfanNfMi5FdmVudHMuaW5zdGFuY2UuYXR0YWNoQ29uc29sZUxpc3RlbmVyKHRoaXMucHJpdkxpc3RlbmVyKTtcbiAgICB9XG4gICAgc3RhdGljIFN0YXJ0Q29uc29sZU91dHB1dCgpIHtcbiAgICAgICAgaWYgKCEhdGhpcy5wcml2TGlzdGVuZXIpIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkxpc3RlbmVyLmVuYWJsZUNvbnNvbGVPdXRwdXQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBTdG9wQ29uc29sZU91dHB1dCgpIHtcbiAgICAgICAgaWYgKCEhdGhpcy5wcml2TGlzdGVuZXIpIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkxpc3RlbmVyLmVuYWJsZUNvbnNvbGVPdXRwdXQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgU2V0TG9nT3V0cHV0UGF0aChwYXRoKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICBpZiAoISF0aGlzLnByaXZMaXN0ZW5lcikge1xuICAgICAgICAgICAgICAgIHRoaXMucHJpdkxpc3RlbmVyLmxvZ1BhdGggPSBwYXRoO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmlsZSBzeXN0ZW0gbG9nZ2luZyBub3QgYXZhaWxhYmxlIGluIGJyb3dzZXIuXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBzZXQgb25Mb2dPdXRwdXQoY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKCEhdGhpcy5wcml2TGlzdGVuZXIpIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkxpc3RlbmVyLmxvZ0NhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkRpYWdub3N0aWNzID0gRGlhZ25vc3RpY3M7XG5EaWFnbm9zdGljcy5wcml2TGlzdGVuZXIgPSB1bmRlZmluZWQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURpYWdub3N0aWNzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Diagnostics.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConfig.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConfig.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DialogServiceConfigImpl = exports.DialogServiceConfig = void 0;\n/* eslint-disable max-classes-per-file */\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Class that defines base configurations for dialog service connector\n * @class DialogServiceConfig\n */\nclass DialogServiceConfig {\n    /**\n     * Creates an instance of DialogService config.\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Sets the corresponding backend application identifier.\n     * @member DialogServiceConfig.prototype.Conversation_ApplicationId\n     * @function\n     * @public\n     * @param {string} value - The application identifier to set.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    set applicationId(value) { }\n    static get DialogTypes() {\n        return {\n            BotFramework: \"bot_framework\",\n            CustomCommands: \"custom_commands\"\n        };\n    }\n}\nexports.DialogServiceConfig = DialogServiceConfig;\n/**\n * Dialog Service configuration.\n * @class DialogServiceConfigImpl\n */\nclass DialogServiceConfigImpl extends DialogServiceConfig {\n    /**\n     * Creates an instance of dialogService config.\n     */\n    constructor() {\n        super();\n        this.privSpeechConfig = new Exports_js_1.SpeechConfigImpl();\n    }\n    /**\n     * Provides access to custom properties.\n     * @member DialogServiceConfigImpl.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The properties.\n     */\n    get properties() {\n        return this.privSpeechConfig.properties;\n    }\n    /**\n     * Gets the speech recognition language.\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     */\n    get speechRecognitionLanguage() {\n        return this.privSpeechConfig.speechRecognitionLanguage;\n    }\n    /**\n     * Sets the speech recognition language.\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @param {string} value - The language to set.\n     */\n    set speechRecognitionLanguage(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechConfig.speechRecognitionLanguage = value;\n    }\n    get outputFormat() {\n        return this.privSpeechConfig.outputFormat;\n    }\n    set outputFormat(value) {\n        this.privSpeechConfig.outputFormat = value;\n    }\n    /**\n     * Sets a named property as value\n     * @member DialogServiceConfigImpl.prototype.setProperty\n     * @function\n     * @public\n     * @param {PropertyId | string} name - The property to set.\n     * @param {string} value - The value.\n     */\n    setProperty(name, value) {\n        this.privSpeechConfig.setProperty(name, value);\n    }\n    /**\n     * Sets a named property as value\n     * @member DialogServiceConfigImpl.prototype.getProperty\n     * @function\n     * @public\n     * @param {PropertyId | string} name - The property to get.\n     * @param {string} def - The default value to return in case the property is not known.\n     * @returns {string} The current value, or provided default, of the given property.\n     */\n    getProperty(name, def) {\n        void def;\n        return this.privSpeechConfig.getProperty(name);\n    }\n    /**\n     * Sets the proxy configuration.\n     * Only relevant in Node.js environments.\n     * Added in version 1.4.0.\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\n     * @param proxyPort The port number of the proxy server.\n     * @param proxyUserName The user name of the proxy server.\n     * @param proxyPassword The password of the proxy server.\n     */\n    setProxy(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyHostName, proxyHostName);\n        this.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyPort, `${proxyPort}`);\n        if (proxyUserName) {\n            this.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyUserName, proxyUserName);\n        }\n        if (proxyPassword) {\n            this.setProperty(Exports_js_1.PropertyId.SpeechServiceConnection_ProxyPassword, proxyPassword);\n        }\n    }\n    setServiceProperty(name, value, channel) {\n        void channel;\n        this.privSpeechConfig.setServiceProperty(name, value);\n    }\n    /**\n     * Dispose of associated resources.\n     * @member DialogServiceConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n}\nexports.DialogServiceConfigImpl = DialogServiceConfigImpl;\n\n//# sourceMappingURL=DialogServiceConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConnector.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConnector.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DialogServiceConnector = void 0;\nconst DialogConnectorFactory_js_1 = __webpack_require__(/*! ../common.speech/DialogConnectorFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/DialogConnectorFactory.js\");\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst PropertyId_js_1 = __webpack_require__(/*! ./PropertyId.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyId.js\");\n/**\n * Dialog Service Connector\n * @class DialogServiceConnector\n */\nclass DialogServiceConnector extends Exports_js_3.Recognizer {\n    /**\n     * Initializes an instance of the DialogServiceConnector.\n     * @constructor\n     * @param {DialogServiceConfig} dialogConfig - Set of properties to configure this recognizer.\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\n     */\n    constructor(dialogConfig, audioConfig) {\n        const dialogServiceConfigImpl = dialogConfig;\n        Contracts_js_1.Contracts.throwIfNull(dialogConfig, \"dialogConfig\");\n        super(audioConfig, dialogServiceConfigImpl.properties, new DialogConnectorFactory_js_1.DialogConnectionFactory());\n        this.isTurnComplete = true;\n        this.privIsDisposed = false;\n        this.privProperties = dialogServiceConfigImpl.properties.clone();\n        const agentConfig = this.buildAgentConfig();\n        this.privReco.agentConfig.set(agentConfig);\n    }\n    /**\n     * Starts a connection to the service.\n     * Users can optionally call connect() to manually set up a connection in advance, before starting interactions.\n     *\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\n     * be notified when the connection is established.\n     * @member DialogServiceConnector.prototype.connect\n     * @function\n     * @public\n     */\n    connect(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.privReco.connect(), cb, err);\n    }\n    /**\n     * Closes the connection the service.\n     * Users can optionally call disconnect() to manually shutdown the connection of the associated DialogServiceConnector.\n     *\n     * If disconnect() is called during a recognition, recognition will fail and cancel with an error.\n     */\n    disconnect(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.privReco.disconnect(), cb, err);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member DialogServiceConnector.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(PropertyId_js_1.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Sets the authorization token used to communicate with the service.\n     * @member DialogServiceConnector.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(PropertyId_js_1.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this DialogServiceConnector.\n     * @member DialogServiceConnector.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this DialogServiceConnector.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /** Gets the template for the activity generated by service from speech.\n     * Properties from the template will be stamped on the generated activity.\n     * It can be empty\n     */\n    get speechActivityTemplate() {\n        return this.properties.getProperty(PropertyId_js_1.PropertyId.Conversation_Speech_Activity_Template);\n    }\n    /** Sets the template for the activity generated by service from speech.\n     * Properties from the template will be stamped on the generated activity.\n     * It can be null or empty.\n     * Note: it has to be a valid Json object.\n     */\n    set speechActivityTemplate(speechActivityTemplate) {\n        this.properties.setProperty(PropertyId_js_1.PropertyId.Conversation_Speech_Activity_Template, speechActivityTemplate);\n    }\n    /**\n     * Starts recognition and stops after the first utterance is recognized.\n     * @member DialogServiceConnector.prototype.listenOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the result when the reco has completed.\n     * @param err - Callback invoked in case of an error.\n     */\n    listenOnceAsync(cb, err) {\n        if (this.isTurnComplete) {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            const callbackHolder = async () => {\n                await this.privReco.connect();\n                await this.implRecognizerStop();\n                this.isTurnComplete = false;\n                const ret = new Exports_js_2.Deferred();\n                await this.privReco.recognize(Exports_js_1.RecognitionMode.Conversation, ret.resolve, ret.reject);\n                const e = await ret.promise;\n                await this.implRecognizerStop();\n                return e;\n            };\n            const retPromise = callbackHolder();\n            retPromise.catch(() => {\n                // Destroy the recognizer.\n                // We've done all we can here.\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                this.dispose(true).catch(() => { });\n            });\n            Exports_js_2.marshalPromiseToCallbacks(retPromise.finally(() => {\n                this.isTurnComplete = true;\n            }), cb, err);\n        }\n    }\n    sendActivityAsync(activity, cb, errCb) {\n        Exports_js_2.marshalPromiseToCallbacks(this.privReco.sendMessage(activity), cb, errCb);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member DialogServiceConnector.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, err) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n        Exports_js_2.marshalPromiseToCallbacks(this.dispose(true), cb, err);\n    }\n    async dispose(disposing) {\n        if (this.privIsDisposed) {\n            return;\n        }\n        if (disposing) {\n            this.privIsDisposed = true;\n            await this.implRecognizerStop();\n            await super.dispose(disposing);\n        }\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioSource = audioConfig;\n        return new Exports_js_1.DialogServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\n    }\n    buildAgentConfig() {\n        const communicationType = this.properties.getProperty(\"Conversation_Communication_Type\", \"Default\");\n        return {\n            botInfo: {\n                commType: communicationType,\n                commandsCulture: undefined,\n                connectionId: this.properties.getProperty(PropertyId_js_1.PropertyId.Conversation_Agent_Connection_Id),\n                conversationId: this.properties.getProperty(PropertyId_js_1.PropertyId.Conversation_Conversation_Id, undefined),\n                fromId: this.properties.getProperty(PropertyId_js_1.PropertyId.Conversation_From_Id, undefined),\n                ttsAudioFormat: this.properties.getProperty(PropertyId_js_1.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)\n            },\n            version: 0.2\n        };\n    }\n}\nexports.DialogServiceConnector = DialogServiceConnector;\n\n//# sourceMappingURL=DialogServiceConnector.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConnector.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar AudioConfig_js_1 = __webpack_require__(/*! ./Audio/AudioConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioConfig.js\");\nObject.defineProperty(exports, \"AudioConfig\", ({ enumerable: true, get: function () { return AudioConfig_js_1.AudioConfig; } }));\nvar AudioStreamFormat_js_1 = __webpack_require__(/*! ./Audio/AudioStreamFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioStreamFormat.js\");\nObject.defineProperty(exports, \"AudioStreamFormat\", ({ enumerable: true, get: function () { return AudioStreamFormat_js_1.AudioStreamFormat; } }));\nObject.defineProperty(exports, \"AudioFormatTag\", ({ enumerable: true, get: function () { return AudioStreamFormat_js_1.AudioFormatTag; } }));\nvar AudioInputStream_js_1 = __webpack_require__(/*! ./Audio/AudioInputStream.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioInputStream.js\");\nObject.defineProperty(exports, \"AudioInputStream\", ({ enumerable: true, get: function () { return AudioInputStream_js_1.AudioInputStream; } }));\nObject.defineProperty(exports, \"PullAudioInputStream\", ({ enumerable: true, get: function () { return AudioInputStream_js_1.PullAudioInputStream; } }));\nObject.defineProperty(exports, \"PushAudioInputStream\", ({ enumerable: true, get: function () { return AudioInputStream_js_1.PushAudioInputStream; } }));\nvar AudioOutputStream_js_1 = __webpack_require__(/*! ./Audio/AudioOutputStream.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputStream.js\");\nObject.defineProperty(exports, \"AudioOutputStream\", ({ enumerable: true, get: function () { return AudioOutputStream_js_1.AudioOutputStream; } }));\nObject.defineProperty(exports, \"PullAudioOutputStream\", ({ enumerable: true, get: function () { return AudioOutputStream_js_1.PullAudioOutputStream; } }));\nObject.defineProperty(exports, \"PushAudioOutputStream\", ({ enumerable: true, get: function () { return AudioOutputStream_js_1.PushAudioOutputStream; } }));\nvar CancellationReason_js_1 = __webpack_require__(/*! ./CancellationReason.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationReason.js\");\nObject.defineProperty(exports, \"CancellationReason\", ({ enumerable: true, get: function () { return CancellationReason_js_1.CancellationReason; } }));\nvar PullAudioInputStreamCallback_js_1 = __webpack_require__(/*! ./Audio/PullAudioInputStreamCallback.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PullAudioInputStreamCallback.js\");\nObject.defineProperty(exports, \"PullAudioInputStreamCallback\", ({ enumerable: true, get: function () { return PullAudioInputStreamCallback_js_1.PullAudioInputStreamCallback; } }));\nvar PushAudioOutputStreamCallback_js_1 = __webpack_require__(/*! ./Audio/PushAudioOutputStreamCallback.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/PushAudioOutputStreamCallback.js\");\nObject.defineProperty(exports, \"PushAudioOutputStreamCallback\", ({ enumerable: true, get: function () { return PushAudioOutputStreamCallback_js_1.PushAudioOutputStreamCallback; } }));\nvar KeywordRecognitionModel_js_1 = __webpack_require__(/*! ./KeywordRecognitionModel.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/KeywordRecognitionModel.js\");\nObject.defineProperty(exports, \"KeywordRecognitionModel\", ({ enumerable: true, get: function () { return KeywordRecognitionModel_js_1.KeywordRecognitionModel; } }));\nvar SessionEventArgs_js_1 = __webpack_require__(/*! ./SessionEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SessionEventArgs.js\");\nObject.defineProperty(exports, \"SessionEventArgs\", ({ enumerable: true, get: function () { return SessionEventArgs_js_1.SessionEventArgs; } }));\nvar RecognitionEventArgs_js_1 = __webpack_require__(/*! ./RecognitionEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionEventArgs.js\");\nObject.defineProperty(exports, \"RecognitionEventArgs\", ({ enumerable: true, get: function () { return RecognitionEventArgs_js_1.RecognitionEventArgs; } }));\nvar OutputFormat_js_1 = __webpack_require__(/*! ./OutputFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/OutputFormat.js\");\nObject.defineProperty(exports, \"OutputFormat\", ({ enumerable: true, get: function () { return OutputFormat_js_1.OutputFormat; } }));\nvar IntentRecognitionEventArgs_js_1 = __webpack_require__(/*! ./IntentRecognitionEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionEventArgs.js\");\nObject.defineProperty(exports, \"IntentRecognitionEventArgs\", ({ enumerable: true, get: function () { return IntentRecognitionEventArgs_js_1.IntentRecognitionEventArgs; } }));\nvar RecognitionResult_js_1 = __webpack_require__(/*! ./RecognitionResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionResult.js\");\nObject.defineProperty(exports, \"RecognitionResult\", ({ enumerable: true, get: function () { return RecognitionResult_js_1.RecognitionResult; } }));\nvar SpeechRecognitionResult_js_1 = __webpack_require__(/*! ./SpeechRecognitionResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionResult.js\");\nObject.defineProperty(exports, \"SpeechRecognitionResult\", ({ enumerable: true, get: function () { return SpeechRecognitionResult_js_1.SpeechRecognitionResult; } }));\nvar IntentRecognitionResult_js_1 = __webpack_require__(/*! ./IntentRecognitionResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionResult.js\");\nObject.defineProperty(exports, \"IntentRecognitionResult\", ({ enumerable: true, get: function () { return IntentRecognitionResult_js_1.IntentRecognitionResult; } }));\nvar LanguageUnderstandingModel_js_1 = __webpack_require__(/*! ./LanguageUnderstandingModel.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageUnderstandingModel.js\");\nObject.defineProperty(exports, \"LanguageUnderstandingModel\", ({ enumerable: true, get: function () { return LanguageUnderstandingModel_js_1.LanguageUnderstandingModel; } }));\nvar SpeechRecognitionEventArgs_js_1 = __webpack_require__(/*! ./SpeechRecognitionEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionEventArgs.js\");\nObject.defineProperty(exports, \"SpeechRecognitionEventArgs\", ({ enumerable: true, get: function () { return SpeechRecognitionEventArgs_js_1.SpeechRecognitionEventArgs; } }));\nObject.defineProperty(exports, \"ConversationTranscriptionEventArgs\", ({ enumerable: true, get: function () { return SpeechRecognitionEventArgs_js_1.ConversationTranscriptionEventArgs; } }));\nObject.defineProperty(exports, \"MeetingTranscriptionEventArgs\", ({ enumerable: true, get: function () { return SpeechRecognitionEventArgs_js_1.MeetingTranscriptionEventArgs; } }));\nvar SpeechRecognitionCanceledEventArgs_js_1 = __webpack_require__(/*! ./SpeechRecognitionCanceledEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"SpeechRecognitionCanceledEventArgs\", ({ enumerable: true, get: function () { return SpeechRecognitionCanceledEventArgs_js_1.SpeechRecognitionCanceledEventArgs; } }));\nvar TranslationRecognitionEventArgs_js_1 = __webpack_require__(/*! ./TranslationRecognitionEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionEventArgs.js\");\nObject.defineProperty(exports, \"TranslationRecognitionEventArgs\", ({ enumerable: true, get: function () { return TranslationRecognitionEventArgs_js_1.TranslationRecognitionEventArgs; } }));\nvar TranslationSynthesisEventArgs_js_1 = __webpack_require__(/*! ./TranslationSynthesisEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisEventArgs.js\");\nObject.defineProperty(exports, \"TranslationSynthesisEventArgs\", ({ enumerable: true, get: function () { return TranslationSynthesisEventArgs_js_1.TranslationSynthesisEventArgs; } }));\nvar TranslationRecognitionResult_js_1 = __webpack_require__(/*! ./TranslationRecognitionResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionResult.js\");\nObject.defineProperty(exports, \"TranslationRecognitionResult\", ({ enumerable: true, get: function () { return TranslationRecognitionResult_js_1.TranslationRecognitionResult; } }));\nvar TranslationSynthesisResult_js_1 = __webpack_require__(/*! ./TranslationSynthesisResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisResult.js\");\nObject.defineProperty(exports, \"TranslationSynthesisResult\", ({ enumerable: true, get: function () { return TranslationSynthesisResult_js_1.TranslationSynthesisResult; } }));\nvar ResultReason_js_1 = __webpack_require__(/*! ./ResultReason.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ResultReason.js\");\nObject.defineProperty(exports, \"ResultReason\", ({ enumerable: true, get: function () { return ResultReason_js_1.ResultReason; } }));\nvar SpeechConfig_js_1 = __webpack_require__(/*! ./SpeechConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechConfig.js\");\nObject.defineProperty(exports, \"SpeechConfig\", ({ enumerable: true, get: function () { return SpeechConfig_js_1.SpeechConfig; } }));\nObject.defineProperty(exports, \"SpeechConfigImpl\", ({ enumerable: true, get: function () { return SpeechConfig_js_1.SpeechConfigImpl; } }));\nvar SpeechTranslationConfig_js_1 = __webpack_require__(/*! ./SpeechTranslationConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechTranslationConfig.js\");\nObject.defineProperty(exports, \"SpeechTranslationConfig\", ({ enumerable: true, get: function () { return SpeechTranslationConfig_js_1.SpeechTranslationConfig; } }));\nObject.defineProperty(exports, \"SpeechTranslationConfigImpl\", ({ enumerable: true, get: function () { return SpeechTranslationConfig_js_1.SpeechTranslationConfigImpl; } }));\nvar PropertyCollection_js_1 = __webpack_require__(/*! ./PropertyCollection.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyCollection.js\");\nObject.defineProperty(exports, \"PropertyCollection\", ({ enumerable: true, get: function () { return PropertyCollection_js_1.PropertyCollection; } }));\nvar PropertyId_js_1 = __webpack_require__(/*! ./PropertyId.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyId.js\");\nObject.defineProperty(exports, \"PropertyId\", ({ enumerable: true, get: function () { return PropertyId_js_1.PropertyId; } }));\nvar Recognizer_js_1 = __webpack_require__(/*! ./Recognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Recognizer.js\");\nObject.defineProperty(exports, \"Recognizer\", ({ enumerable: true, get: function () { return Recognizer_js_1.Recognizer; } }));\nvar SpeechRecognizer_js_1 = __webpack_require__(/*! ./SpeechRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognizer.js\");\nObject.defineProperty(exports, \"SpeechRecognizer\", ({ enumerable: true, get: function () { return SpeechRecognizer_js_1.SpeechRecognizer; } }));\nvar IntentRecognizer_js_1 = __webpack_require__(/*! ./IntentRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognizer.js\");\nObject.defineProperty(exports, \"IntentRecognizer\", ({ enumerable: true, get: function () { return IntentRecognizer_js_1.IntentRecognizer; } }));\nvar VoiceProfileType_js_1 = __webpack_require__(/*! ./VoiceProfileType.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileType.js\");\nObject.defineProperty(exports, \"VoiceProfileType\", ({ enumerable: true, get: function () { return VoiceProfileType_js_1.VoiceProfileType; } }));\nvar TranslationRecognizer_js_1 = __webpack_require__(/*! ./TranslationRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognizer.js\");\nObject.defineProperty(exports, \"TranslationRecognizer\", ({ enumerable: true, get: function () { return TranslationRecognizer_js_1.TranslationRecognizer; } }));\nvar Translations_js_1 = __webpack_require__(/*! ./Translations.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Translations.js\");\nObject.defineProperty(exports, \"Translations\", ({ enumerable: true, get: function () { return Translations_js_1.Translations; } }));\nvar NoMatchReason_js_1 = __webpack_require__(/*! ./NoMatchReason.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchReason.js\");\nObject.defineProperty(exports, \"NoMatchReason\", ({ enumerable: true, get: function () { return NoMatchReason_js_1.NoMatchReason; } }));\nvar NoMatchDetails_js_1 = __webpack_require__(/*! ./NoMatchDetails.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchDetails.js\");\nObject.defineProperty(exports, \"NoMatchDetails\", ({ enumerable: true, get: function () { return NoMatchDetails_js_1.NoMatchDetails; } }));\nvar TranslationRecognitionCanceledEventArgs_js_1 = __webpack_require__(/*! ./TranslationRecognitionCanceledEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"TranslationRecognitionCanceledEventArgs\", ({ enumerable: true, get: function () { return TranslationRecognitionCanceledEventArgs_js_1.TranslationRecognitionCanceledEventArgs; } }));\nvar IntentRecognitionCanceledEventArgs_js_1 = __webpack_require__(/*! ./IntentRecognitionCanceledEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"IntentRecognitionCanceledEventArgs\", ({ enumerable: true, get: function () { return IntentRecognitionCanceledEventArgs_js_1.IntentRecognitionCanceledEventArgs; } }));\nvar CancellationDetailsBase_js_1 = __webpack_require__(/*! ./CancellationDetailsBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetailsBase.js\");\nObject.defineProperty(exports, \"CancellationDetailsBase\", ({ enumerable: true, get: function () { return CancellationDetailsBase_js_1.CancellationDetailsBase; } }));\nvar CancellationDetails_js_1 = __webpack_require__(/*! ./CancellationDetails.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationDetails.js\");\nObject.defineProperty(exports, \"CancellationDetails\", ({ enumerable: true, get: function () { return CancellationDetails_js_1.CancellationDetails; } }));\nvar CancellationErrorCodes_js_1 = __webpack_require__(/*! ./CancellationErrorCodes.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationErrorCodes.js\");\nObject.defineProperty(exports, \"CancellationErrorCode\", ({ enumerable: true, get: function () { return CancellationErrorCodes_js_1.CancellationErrorCode; } }));\nvar ConnectionEventArgs_js_1 = __webpack_require__(/*! ./ConnectionEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionEventArgs.js\");\nObject.defineProperty(exports, \"ConnectionEventArgs\", ({ enumerable: true, get: function () { return ConnectionEventArgs_js_1.ConnectionEventArgs; } }));\nvar ServiceEventArgs_js_1 = __webpack_require__(/*! ./ServiceEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ServiceEventArgs.js\");\nObject.defineProperty(exports, \"ServiceEventArgs\", ({ enumerable: true, get: function () { return ServiceEventArgs_js_1.ServiceEventArgs; } }));\nvar Connection_js_1 = __webpack_require__(/*! ./Connection.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Connection.js\");\nObject.defineProperty(exports, \"Connection\", ({ enumerable: true, get: function () { return Connection_js_1.Connection; } }));\nvar PhraseListGrammar_js_1 = __webpack_require__(/*! ./PhraseListGrammar.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PhraseListGrammar.js\");\nObject.defineProperty(exports, \"PhraseListGrammar\", ({ enumerable: true, get: function () { return PhraseListGrammar_js_1.PhraseListGrammar; } }));\nvar DialogServiceConfig_js_1 = __webpack_require__(/*! ./DialogServiceConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConfig.js\");\nObject.defineProperty(exports, \"DialogServiceConfig\", ({ enumerable: true, get: function () { return DialogServiceConfig_js_1.DialogServiceConfig; } }));\nvar BotFrameworkConfig_js_1 = __webpack_require__(/*! ./BotFrameworkConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/BotFrameworkConfig.js\");\nObject.defineProperty(exports, \"BotFrameworkConfig\", ({ enumerable: true, get: function () { return BotFrameworkConfig_js_1.BotFrameworkConfig; } }));\nvar CustomCommandsConfig_js_1 = __webpack_require__(/*! ./CustomCommandsConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CustomCommandsConfig.js\");\nObject.defineProperty(exports, \"CustomCommandsConfig\", ({ enumerable: true, get: function () { return CustomCommandsConfig_js_1.CustomCommandsConfig; } }));\nvar DialogServiceConnector_js_1 = __webpack_require__(/*! ./DialogServiceConnector.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/DialogServiceConnector.js\");\nObject.defineProperty(exports, \"DialogServiceConnector\", ({ enumerable: true, get: function () { return DialogServiceConnector_js_1.DialogServiceConnector; } }));\nvar ActivityReceivedEventArgs_js_1 = __webpack_require__(/*! ./ActivityReceivedEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ActivityReceivedEventArgs.js\");\nObject.defineProperty(exports, \"ActivityReceivedEventArgs\", ({ enumerable: true, get: function () { return ActivityReceivedEventArgs_js_1.ActivityReceivedEventArgs; } }));\nvar TurnStatusReceivedEventArgs_js_1 = __webpack_require__(/*! ./TurnStatusReceivedEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TurnStatusReceivedEventArgs.js\");\nObject.defineProperty(exports, \"TurnStatusReceivedEventArgs\", ({ enumerable: true, get: function () { return TurnStatusReceivedEventArgs_js_1.TurnStatusReceivedEventArgs; } }));\nvar ServicePropertyChannel_js_1 = __webpack_require__(/*! ./ServicePropertyChannel.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ServicePropertyChannel.js\");\nObject.defineProperty(exports, \"ServicePropertyChannel\", ({ enumerable: true, get: function () { return ServicePropertyChannel_js_1.ServicePropertyChannel; } }));\nvar ProfanityOption_js_1 = __webpack_require__(/*! ./ProfanityOption.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ProfanityOption.js\");\nObject.defineProperty(exports, \"ProfanityOption\", ({ enumerable: true, get: function () { return ProfanityOption_js_1.ProfanityOption; } }));\nvar BaseAudioPlayer_js_1 = __webpack_require__(/*! ./Audio/BaseAudioPlayer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/BaseAudioPlayer.js\");\nObject.defineProperty(exports, \"BaseAudioPlayer\", ({ enumerable: true, get: function () { return BaseAudioPlayer_js_1.BaseAudioPlayer; } }));\nvar ConnectionMessageEventArgs_js_1 = __webpack_require__(/*! ./ConnectionMessageEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessageEventArgs.js\");\nObject.defineProperty(exports, \"ConnectionMessageEventArgs\", ({ enumerable: true, get: function () { return ConnectionMessageEventArgs_js_1.ConnectionMessageEventArgs; } }));\nvar ConnectionMessage_js_1 = __webpack_require__(/*! ./ConnectionMessage.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConnectionMessage.js\");\nObject.defineProperty(exports, \"ConnectionMessage\", ({ enumerable: true, get: function () { return ConnectionMessage_js_1.ConnectionMessage; } }));\nvar VoiceProfile_js_1 = __webpack_require__(/*! ./VoiceProfile.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfile.js\");\nObject.defineProperty(exports, \"VoiceProfile\", ({ enumerable: true, get: function () { return VoiceProfile_js_1.VoiceProfile; } }));\nvar VoiceProfileEnrollmentResult_js_1 = __webpack_require__(/*! ./VoiceProfileEnrollmentResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileEnrollmentResult.js\");\nObject.defineProperty(exports, \"VoiceProfileEnrollmentResult\", ({ enumerable: true, get: function () { return VoiceProfileEnrollmentResult_js_1.VoiceProfileEnrollmentResult; } }));\nObject.defineProperty(exports, \"VoiceProfileEnrollmentCancellationDetails\", ({ enumerable: true, get: function () { return VoiceProfileEnrollmentResult_js_1.VoiceProfileEnrollmentCancellationDetails; } }));\nvar VoiceProfileResult_js_1 = __webpack_require__(/*! ./VoiceProfileResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileResult.js\");\nObject.defineProperty(exports, \"VoiceProfileResult\", ({ enumerable: true, get: function () { return VoiceProfileResult_js_1.VoiceProfileResult; } }));\nObject.defineProperty(exports, \"VoiceProfileCancellationDetails\", ({ enumerable: true, get: function () { return VoiceProfileResult_js_1.VoiceProfileCancellationDetails; } }));\nvar VoiceProfilePhraseResult_js_1 = __webpack_require__(/*! ./VoiceProfilePhraseResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfilePhraseResult.js\");\nObject.defineProperty(exports, \"VoiceProfilePhraseResult\", ({ enumerable: true, get: function () { return VoiceProfilePhraseResult_js_1.VoiceProfilePhraseResult; } }));\nvar VoiceProfileClient_js_1 = __webpack_require__(/*! ./VoiceProfileClient.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileClient.js\");\nObject.defineProperty(exports, \"VoiceProfileClient\", ({ enumerable: true, get: function () { return VoiceProfileClient_js_1.VoiceProfileClient; } }));\nvar SpeakerRecognizer_js_1 = __webpack_require__(/*! ./SpeakerRecognizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerRecognizer.js\");\nObject.defineProperty(exports, \"SpeakerRecognizer\", ({ enumerable: true, get: function () { return SpeakerRecognizer_js_1.SpeakerRecognizer; } }));\nvar SpeakerIdentificationModel_js_1 = __webpack_require__(/*! ./SpeakerIdentificationModel.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerIdentificationModel.js\");\nObject.defineProperty(exports, \"SpeakerIdentificationModel\", ({ enumerable: true, get: function () { return SpeakerIdentificationModel_js_1.SpeakerIdentificationModel; } }));\nvar SpeakerVerificationModel_js_1 = __webpack_require__(/*! ./SpeakerVerificationModel.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerVerificationModel.js\");\nObject.defineProperty(exports, \"SpeakerVerificationModel\", ({ enumerable: true, get: function () { return SpeakerVerificationModel_js_1.SpeakerVerificationModel; } }));\nvar AutoDetectSourceLanguageConfig_js_1 = __webpack_require__(/*! ./AutoDetectSourceLanguageConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AutoDetectSourceLanguageConfig.js\");\nObject.defineProperty(exports, \"AutoDetectSourceLanguageConfig\", ({ enumerable: true, get: function () { return AutoDetectSourceLanguageConfig_js_1.AutoDetectSourceLanguageConfig; } }));\nvar AutoDetectSourceLanguageResult_js_1 = __webpack_require__(/*! ./AutoDetectSourceLanguageResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AutoDetectSourceLanguageResult.js\");\nObject.defineProperty(exports, \"AutoDetectSourceLanguageResult\", ({ enumerable: true, get: function () { return AutoDetectSourceLanguageResult_js_1.AutoDetectSourceLanguageResult; } }));\nvar SourceLanguageConfig_js_1 = __webpack_require__(/*! ./SourceLanguageConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SourceLanguageConfig.js\");\nObject.defineProperty(exports, \"SourceLanguageConfig\", ({ enumerable: true, get: function () { return SourceLanguageConfig_js_1.SourceLanguageConfig; } }));\nvar SpeakerRecognitionResult_js_1 = __webpack_require__(/*! ./SpeakerRecognitionResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerRecognitionResult.js\");\nObject.defineProperty(exports, \"SpeakerRecognitionResult\", ({ enumerable: true, get: function () { return SpeakerRecognitionResult_js_1.SpeakerRecognitionResult; } }));\nObject.defineProperty(exports, \"SpeakerRecognitionResultType\", ({ enumerable: true, get: function () { return SpeakerRecognitionResult_js_1.SpeakerRecognitionResultType; } }));\nObject.defineProperty(exports, \"SpeakerRecognitionCancellationDetails\", ({ enumerable: true, get: function () { return SpeakerRecognitionResult_js_1.SpeakerRecognitionCancellationDetails; } }));\nvar Exports_js_1 = __webpack_require__(/*! ./Transcription/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Exports.js\");\nObject.defineProperty(exports, \"Conversation\", ({ enumerable: true, get: function () { return Exports_js_1.Conversation; } }));\nObject.defineProperty(exports, \"ConversationExpirationEventArgs\", ({ enumerable: true, get: function () { return Exports_js_1.ConversationExpirationEventArgs; } }));\nObject.defineProperty(exports, \"ConversationParticipantsChangedEventArgs\", ({ enumerable: true, get: function () { return Exports_js_1.ConversationParticipantsChangedEventArgs; } }));\nObject.defineProperty(exports, \"ConversationTranslationCanceledEventArgs\", ({ enumerable: true, get: function () { return Exports_js_1.ConversationTranslationCanceledEventArgs; } }));\nObject.defineProperty(exports, \"ConversationTranslationEventArgs\", ({ enumerable: true, get: function () { return Exports_js_1.ConversationTranslationEventArgs; } }));\nObject.defineProperty(exports, \"ConversationTranslationResult\", ({ enumerable: true, get: function () { return Exports_js_1.ConversationTranslationResult; } }));\nObject.defineProperty(exports, \"ConversationTranslator\", ({ enumerable: true, get: function () { return Exports_js_1.ConversationTranslator; } }));\nObject.defineProperty(exports, \"ConversationTranscriber\", ({ enumerable: true, get: function () { return Exports_js_1.ConversationTranscriber; } }));\nObject.defineProperty(exports, \"ConversationTranscriptionResult\", ({ enumerable: true, get: function () { return Exports_js_1.ConversationTranscriptionResult; } }));\nObject.defineProperty(exports, \"Meeting\", ({ enumerable: true, get: function () { return Exports_js_1.Meeting; } }));\nObject.defineProperty(exports, \"MeetingTranscriber\", ({ enumerable: true, get: function () { return Exports_js_1.MeetingTranscriber; } }));\nObject.defineProperty(exports, \"Participant\", ({ enumerable: true, get: function () { return Exports_js_1.Participant; } }));\nObject.defineProperty(exports, \"ParticipantChangedReason\", ({ enumerable: true, get: function () { return Exports_js_1.ParticipantChangedReason; } }));\nObject.defineProperty(exports, \"User\", ({ enumerable: true, get: function () { return Exports_js_1.User; } }));\nvar Synthesizer_js_1 = __webpack_require__(/*! ./Synthesizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Synthesizer.js\");\nObject.defineProperty(exports, \"Synthesizer\", ({ enumerable: true, get: function () { return Synthesizer_js_1.Synthesizer; } }));\nvar SpeechSynthesisOutputFormat_js_1 = __webpack_require__(/*! ./SpeechSynthesisOutputFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisOutputFormat.js\");\nObject.defineProperty(exports, \"SpeechSynthesisOutputFormat\", ({ enumerable: true, get: function () { return SpeechSynthesisOutputFormat_js_1.SpeechSynthesisOutputFormat; } }));\nvar SpeechSynthesizer_js_1 = __webpack_require__(/*! ./SpeechSynthesizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesizer.js\");\nObject.defineProperty(exports, \"SpeechSynthesizer\", ({ enumerable: true, get: function () { return SpeechSynthesizer_js_1.SpeechSynthesizer; } }));\nvar SynthesisResult_js_1 = __webpack_require__(/*! ./SynthesisResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SynthesisResult.js\");\nObject.defineProperty(exports, \"SynthesisResult\", ({ enumerable: true, get: function () { return SynthesisResult_js_1.SynthesisResult; } }));\nvar SpeechSynthesisResult_js_1 = __webpack_require__(/*! ./SpeechSynthesisResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisResult.js\");\nObject.defineProperty(exports, \"SpeechSynthesisResult\", ({ enumerable: true, get: function () { return SpeechSynthesisResult_js_1.SpeechSynthesisResult; } }));\nvar SpeechSynthesisEventArgs_js_1 = __webpack_require__(/*! ./SpeechSynthesisEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisEventArgs.js\");\nObject.defineProperty(exports, \"SpeechSynthesisEventArgs\", ({ enumerable: true, get: function () { return SpeechSynthesisEventArgs_js_1.SpeechSynthesisEventArgs; } }));\nvar SpeechSynthesisWordBoundaryEventArgs_js_1 = __webpack_require__(/*! ./SpeechSynthesisWordBoundaryEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisWordBoundaryEventArgs.js\");\nObject.defineProperty(exports, \"SpeechSynthesisWordBoundaryEventArgs\", ({ enumerable: true, get: function () { return SpeechSynthesisWordBoundaryEventArgs_js_1.SpeechSynthesisWordBoundaryEventArgs; } }));\nvar SpeechSynthesisBookmarkEventArgs_js_1 = __webpack_require__(/*! ./SpeechSynthesisBookmarkEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisBookmarkEventArgs.js\");\nObject.defineProperty(exports, \"SpeechSynthesisBookmarkEventArgs\", ({ enumerable: true, get: function () { return SpeechSynthesisBookmarkEventArgs_js_1.SpeechSynthesisBookmarkEventArgs; } }));\nvar SpeechSynthesisVisemeEventArgs_js_1 = __webpack_require__(/*! ./SpeechSynthesisVisemeEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisVisemeEventArgs.js\");\nObject.defineProperty(exports, \"SpeechSynthesisVisemeEventArgs\", ({ enumerable: true, get: function () { return SpeechSynthesisVisemeEventArgs_js_1.SpeechSynthesisVisemeEventArgs; } }));\nvar SpeechSynthesisBoundaryType_js_1 = __webpack_require__(/*! ./SpeechSynthesisBoundaryType.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisBoundaryType.js\");\nObject.defineProperty(exports, \"SpeechSynthesisBoundaryType\", ({ enumerable: true, get: function () { return SpeechSynthesisBoundaryType_js_1.SpeechSynthesisBoundaryType; } }));\nvar SynthesisVoicesResult_js_1 = __webpack_require__(/*! ./SynthesisVoicesResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SynthesisVoicesResult.js\");\nObject.defineProperty(exports, \"SynthesisVoicesResult\", ({ enumerable: true, get: function () { return SynthesisVoicesResult_js_1.SynthesisVoicesResult; } }));\nvar VoiceInfo_js_1 = __webpack_require__(/*! ./VoiceInfo.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceInfo.js\");\nObject.defineProperty(exports, \"VoiceInfo\", ({ enumerable: true, get: function () { return VoiceInfo_js_1.VoiceInfo; } }));\nvar SpeakerAudioDestination_js_1 = __webpack_require__(/*! ./Audio/SpeakerAudioDestination.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/SpeakerAudioDestination.js\");\nObject.defineProperty(exports, \"SpeakerAudioDestination\", ({ enumerable: true, get: function () { return SpeakerAudioDestination_js_1.SpeakerAudioDestination; } }));\nvar ConversationTranscriptionCanceledEventArgs_js_1 = __webpack_require__(/*! ./ConversationTranscriptionCanceledEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ConversationTranscriptionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"ConversationTranscriptionCanceledEventArgs\", ({ enumerable: true, get: function () { return ConversationTranscriptionCanceledEventArgs_js_1.ConversationTranscriptionCanceledEventArgs; } }));\nvar MeetingTranscriptionCanceledEventArgs_js_1 = __webpack_require__(/*! ./MeetingTranscriptionCanceledEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/MeetingTranscriptionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"MeetingTranscriptionCanceledEventArgs\", ({ enumerable: true, get: function () { return MeetingTranscriptionCanceledEventArgs_js_1.MeetingTranscriptionCanceledEventArgs; } }));\nvar PronunciationAssessmentGradingSystem_js_1 = __webpack_require__(/*! ./PronunciationAssessmentGradingSystem.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentGradingSystem.js\");\nObject.defineProperty(exports, \"PronunciationAssessmentGradingSystem\", ({ enumerable: true, get: function () { return PronunciationAssessmentGradingSystem_js_1.PronunciationAssessmentGradingSystem; } }));\nvar PronunciationAssessmentGranularity_js_1 = __webpack_require__(/*! ./PronunciationAssessmentGranularity.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentGranularity.js\");\nObject.defineProperty(exports, \"PronunciationAssessmentGranularity\", ({ enumerable: true, get: function () { return PronunciationAssessmentGranularity_js_1.PronunciationAssessmentGranularity; } }));\nvar PronunciationAssessmentConfig_js_1 = __webpack_require__(/*! ./PronunciationAssessmentConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentConfig.js\");\nObject.defineProperty(exports, \"PronunciationAssessmentConfig\", ({ enumerable: true, get: function () { return PronunciationAssessmentConfig_js_1.PronunciationAssessmentConfig; } }));\nvar PronunciationAssessmentResult_js_1 = __webpack_require__(/*! ./PronunciationAssessmentResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentResult.js\");\nObject.defineProperty(exports, \"PronunciationAssessmentResult\", ({ enumerable: true, get: function () { return PronunciationAssessmentResult_js_1.PronunciationAssessmentResult; } }));\nvar LanguageIdMode_js_1 = __webpack_require__(/*! ./LanguageIdMode.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageIdMode.js\");\nObject.defineProperty(exports, \"LanguageIdMode\", ({ enumerable: true, get: function () { return LanguageIdMode_js_1.LanguageIdMode; } }));\nvar AvatarConfig_js_1 = __webpack_require__(/*! ./AvatarConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarConfig.js\");\nObject.defineProperty(exports, \"AvatarConfig\", ({ enumerable: true, get: function () { return AvatarConfig_js_1.AvatarConfig; } }));\nvar AvatarEventArgs_js_1 = __webpack_require__(/*! ./AvatarEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarEventArgs.js\");\nObject.defineProperty(exports, \"AvatarEventArgs\", ({ enumerable: true, get: function () { return AvatarEventArgs_js_1.AvatarEventArgs; } }));\nvar AvatarSynthesizer_js_1 = __webpack_require__(/*! ./AvatarSynthesizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarSynthesizer.js\");\nObject.defineProperty(exports, \"AvatarSynthesizer\", ({ enumerable: true, get: function () { return AvatarSynthesizer_js_1.AvatarSynthesizer; } }));\nvar AvatarVideoFormat_js_1 = __webpack_require__(/*! ./AvatarVideoFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarVideoFormat.js\");\nObject.defineProperty(exports, \"AvatarVideoFormat\", ({ enumerable: true, get: function () { return AvatarVideoFormat_js_1.AvatarVideoFormat; } }));\nObject.defineProperty(exports, \"Coordinate\", ({ enumerable: true, get: function () { return AvatarVideoFormat_js_1.Coordinate; } }));\nvar AvatarWebRTCConnectionResult_js_1 = __webpack_require__(/*! ./AvatarWebRTCConnectionResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/AvatarWebRTCConnectionResult.js\");\nObject.defineProperty(exports, \"AvatarWebRTCConnectionResult\", ({ enumerable: true, get: function () { return AvatarWebRTCConnectionResult_js_1.AvatarWebRTCConnectionResult; } }));\nvar Diagnostics_js_1 = __webpack_require__(/*! ./Diagnostics.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Diagnostics.js\");\nObject.defineProperty(exports, \"Diagnostics\", ({ enumerable: true, get: function () { return Diagnostics_js_1.Diagnostics; } }));\nvar LogLevel_js_1 = __webpack_require__(/*! ./LogLevel.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LogLevel.js\");\nObject.defineProperty(exports, \"LogLevel\", ({ enumerable: true, get: function () { return LogLevel_js_1.LogLevel; } }));\n\n//# sourceMappingURL=Exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9FeHBvcnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsbUJBQU8sQ0FBQyxvSUFBd0I7QUFDdkQsK0NBQThDLEVBQUUscUNBQXFDLHdDQUF3QyxFQUFDO0FBQzlILDZCQUE2QixtQkFBTyxDQUFDLGdKQUE4QjtBQUNuRSxxREFBb0QsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDaEosa0RBQWlELEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQzFJLDRCQUE0QixtQkFBTyxDQUFDLDhJQUE2QjtBQUNqRSxvREFBbUQsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDN0ksd0RBQXVELEVBQUUscUNBQXFDLHNEQUFzRCxFQUFDO0FBQ3JKLHdEQUF1RCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUNySiw2QkFBNkIsbUJBQU8sQ0FBQyxnSkFBOEI7QUFDbkUscURBQW9ELEVBQUUscUNBQXFDLG9EQUFvRCxFQUFDO0FBQ2hKLHlEQUF3RCxFQUFFLHFDQUFxQyx3REFBd0QsRUFBQztBQUN4Six5REFBd0QsRUFBRSxxQ0FBcUMsd0RBQXdELEVBQUM7QUFDeEosOEJBQThCLG1CQUFPLENBQUMsc0lBQXlCO0FBQy9ELHNEQUFxRCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUNuSix3Q0FBd0MsbUJBQU8sQ0FBQyxzS0FBeUM7QUFDekYsZ0VBQStELEVBQUUscUNBQXFDLDBFQUEwRSxFQUFDO0FBQ2pMLHlDQUF5QyxtQkFBTyxDQUFDLHdLQUEwQztBQUMzRixpRUFBZ0UsRUFBRSxxQ0FBcUMsNEVBQTRFLEVBQUM7QUFDcEwsbUNBQW1DLG1CQUFPLENBQUMsZ0pBQThCO0FBQ3pFLDJEQUEwRCxFQUFFLHFDQUFxQyxnRUFBZ0UsRUFBQztBQUNsSyw0QkFBNEIsbUJBQU8sQ0FBQyxrSUFBdUI7QUFDM0Qsb0RBQW1ELEVBQUUscUNBQXFDLGtEQUFrRCxFQUFDO0FBQzdJLGdDQUFnQyxtQkFBTyxDQUFDLDBJQUEyQjtBQUNuRSx3REFBdUQsRUFBRSxxQ0FBcUMsMERBQTBELEVBQUM7QUFDekosd0JBQXdCLG1CQUFPLENBQUMsMEhBQW1CO0FBQ25ELGdEQUErQyxFQUFFLHFDQUFxQywwQ0FBMEMsRUFBQztBQUNqSSxzQ0FBc0MsbUJBQU8sQ0FBQyxzSkFBaUM7QUFDL0UsOERBQTZELEVBQUUscUNBQXFDLHNFQUFzRSxFQUFDO0FBQzNLLDZCQUE2QixtQkFBTyxDQUFDLG9JQUF3QjtBQUM3RCxxREFBb0QsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDaEosbUNBQW1DLG1CQUFPLENBQUMsZ0pBQThCO0FBQ3pFLDJEQUEwRCxFQUFFLHFDQUFxQyxnRUFBZ0UsRUFBQztBQUNsSyxtQ0FBbUMsbUJBQU8sQ0FBQyxnSkFBOEI7QUFDekUsMkRBQTBELEVBQUUscUNBQXFDLGdFQUFnRSxFQUFDO0FBQ2xLLHNDQUFzQyxtQkFBTyxDQUFDLHNKQUFpQztBQUMvRSw4REFBNkQsRUFBRSxxQ0FBcUMsc0VBQXNFLEVBQUM7QUFDM0ssc0NBQXNDLG1CQUFPLENBQUMsc0pBQWlDO0FBQy9FLDhEQUE2RCxFQUFFLHFDQUFxQyxzRUFBc0UsRUFBQztBQUMzSyxzRUFBcUUsRUFBRSxxQ0FBcUMsOEVBQThFLEVBQUM7QUFDM0wsaUVBQWdFLEVBQUUscUNBQXFDLHlFQUF5RSxFQUFDO0FBQ2pMLDhDQUE4QyxtQkFBTyxDQUFDLHNLQUF5QztBQUMvRixzRUFBcUUsRUFBRSxxQ0FBcUMsc0ZBQXNGLEVBQUM7QUFDbk0sMkNBQTJDLG1CQUFPLENBQUMsZ0tBQXNDO0FBQ3pGLG1FQUFrRSxFQUFFLHFDQUFxQyxnRkFBZ0YsRUFBQztBQUMxTCx5Q0FBeUMsbUJBQU8sQ0FBQyw0SkFBb0M7QUFDckYsaUVBQWdFLEVBQUUscUNBQXFDLDRFQUE0RSxFQUFDO0FBQ3BMLHdDQUF3QyxtQkFBTyxDQUFDLDBKQUFtQztBQUNuRixnRUFBK0QsRUFBRSxxQ0FBcUMsMEVBQTBFLEVBQUM7QUFDakwsc0NBQXNDLG1CQUFPLENBQUMsc0pBQWlDO0FBQy9FLDhEQUE2RCxFQUFFLHFDQUFxQyxzRUFBc0UsRUFBQztBQUMzSyx3QkFBd0IsbUJBQU8sQ0FBQywwSEFBbUI7QUFDbkQsZ0RBQStDLEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQ2pJLHdCQUF3QixtQkFBTyxDQUFDLDBIQUFtQjtBQUNuRCxnREFBK0MsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDakksb0RBQW1ELEVBQUUscUNBQXFDLDhDQUE4QyxFQUFDO0FBQ3pJLG1DQUFtQyxtQkFBTyxDQUFDLGdKQUE4QjtBQUN6RSwyREFBMEQsRUFBRSxxQ0FBcUMsZ0VBQWdFLEVBQUM7QUFDbEssK0RBQThELEVBQUUscUNBQXFDLG9FQUFvRSxFQUFDO0FBQzFLLDhCQUE4QixtQkFBTyxDQUFDLHNJQUF5QjtBQUMvRCxzREFBcUQsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDbkosc0JBQXNCLG1CQUFPLENBQUMsc0hBQWlCO0FBQy9DLDhDQUE2QyxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQztBQUMzSCxzQkFBc0IsbUJBQU8sQ0FBQyxzSEFBaUI7QUFDL0MsOENBQTZDLEVBQUUscUNBQXFDLHNDQUFzQyxFQUFDO0FBQzNILDRCQUE0QixtQkFBTyxDQUFDLGtJQUF1QjtBQUMzRCxvREFBbUQsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDN0ksNEJBQTRCLG1CQUFPLENBQUMsa0lBQXVCO0FBQzNELG9EQUFtRCxFQUFFLHFDQUFxQyxrREFBa0QsRUFBQztBQUM3SSw0QkFBNEIsbUJBQU8sQ0FBQyxrSUFBdUI7QUFDM0Qsb0RBQW1ELEVBQUUscUNBQXFDLGtEQUFrRCxFQUFDO0FBQzdJLGlDQUFpQyxtQkFBTyxDQUFDLDRJQUE0QjtBQUNyRSx5REFBd0QsRUFBRSxxQ0FBcUMsNERBQTRELEVBQUM7QUFDNUosd0JBQXdCLG1CQUFPLENBQUMsMEhBQW1CO0FBQ25ELGdEQUErQyxFQUFFLHFDQUFxQywwQ0FBMEMsRUFBQztBQUNqSSx5QkFBeUIsbUJBQU8sQ0FBQyw0SEFBb0I7QUFDckQsaURBQWdELEVBQUUscUNBQXFDLDRDQUE0QyxFQUFDO0FBQ3BJLDBCQUEwQixtQkFBTyxDQUFDLDhIQUFxQjtBQUN2RCxrREFBaUQsRUFBRSxxQ0FBcUMsOENBQThDLEVBQUM7QUFDdkksbURBQW1ELG1CQUFPLENBQUMsZ0xBQThDO0FBQ3pHLDJFQUEwRSxFQUFFLHFDQUFxQyxnR0FBZ0csRUFBQztBQUNsTiw4Q0FBOEMsbUJBQU8sQ0FBQyxzS0FBeUM7QUFDL0Ysc0VBQXFFLEVBQUUscUNBQXFDLHNGQUFzRixFQUFDO0FBQ25NLG1DQUFtQyxtQkFBTyxDQUFDLGdKQUE4QjtBQUN6RSwyREFBMEQsRUFBRSxxQ0FBcUMsZ0VBQWdFLEVBQUM7QUFDbEssK0JBQStCLG1CQUFPLENBQUMsd0lBQTBCO0FBQ2pFLHVEQUFzRCxFQUFFLHFDQUFxQyx3REFBd0QsRUFBQztBQUN0SixrQ0FBa0MsbUJBQU8sQ0FBQyw4SUFBNkI7QUFDdkUseURBQXdELEVBQUUscUNBQXFDLDZEQUE2RCxFQUFDO0FBQzdKLCtCQUErQixtQkFBTyxDQUFDLHdJQUEwQjtBQUNqRSx1REFBc0QsRUFBRSxxQ0FBcUMsd0RBQXdELEVBQUM7QUFDdEosNEJBQTRCLG1CQUFPLENBQUMsa0lBQXVCO0FBQzNELG9EQUFtRCxFQUFFLHFDQUFxQyxrREFBa0QsRUFBQztBQUM3SSxzQkFBc0IsbUJBQU8sQ0FBQyxzSEFBaUI7QUFDL0MsOENBQTZDLEVBQUUscUNBQXFDLHNDQUFzQyxFQUFDO0FBQzNILDZCQUE2QixtQkFBTyxDQUFDLG9JQUF3QjtBQUM3RCxxREFBb0QsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDaEosK0JBQStCLG1CQUFPLENBQUMsd0lBQTBCO0FBQ2pFLHVEQUFzRCxFQUFFLHFDQUFxQyx3REFBd0QsRUFBQztBQUN0Siw4QkFBOEIsbUJBQU8sQ0FBQyxzSUFBeUI7QUFDL0Qsc0RBQXFELEVBQUUscUNBQXFDLHNEQUFzRCxFQUFDO0FBQ25KLGdDQUFnQyxtQkFBTyxDQUFDLDBJQUEyQjtBQUNuRSx3REFBdUQsRUFBRSxxQ0FBcUMsMERBQTBELEVBQUM7QUFDekosa0NBQWtDLG1CQUFPLENBQUMsOElBQTZCO0FBQ3ZFLDBEQUF5RCxFQUFFLHFDQUFxQyw4REFBOEQsRUFBQztBQUMvSixxQ0FBcUMsbUJBQU8sQ0FBQyxvSkFBZ0M7QUFDN0UsNkRBQTRELEVBQUUscUNBQXFDLG9FQUFvRSxFQUFDO0FBQ3hLLHVDQUF1QyxtQkFBTyxDQUFDLHdKQUFrQztBQUNqRiwrREFBOEQsRUFBRSxxQ0FBcUMsd0VBQXdFLEVBQUM7QUFDOUssa0NBQWtDLG1CQUFPLENBQUMsOElBQTZCO0FBQ3ZFLDBEQUF5RCxFQUFFLHFDQUFxQyw4REFBOEQsRUFBQztBQUMvSiwyQkFBMkIsbUJBQU8sQ0FBQyxnSUFBc0I7QUFDekQsbURBQWtELEVBQUUscUNBQXFDLGdEQUFnRCxFQUFDO0FBQzFJLDJCQUEyQixtQkFBTyxDQUFDLDRJQUE0QjtBQUMvRCxtREFBa0QsRUFBRSxxQ0FBcUMsZ0RBQWdELEVBQUM7QUFDMUksc0NBQXNDLG1CQUFPLENBQUMsc0pBQWlDO0FBQy9FLDhEQUE2RCxFQUFFLHFDQUFxQyxzRUFBc0UsRUFBQztBQUMzSyw2QkFBNkIsbUJBQU8sQ0FBQyxvSUFBd0I7QUFDN0QscURBQW9ELEVBQUUscUNBQXFDLG9EQUFvRCxFQUFDO0FBQ2hKLHdCQUF3QixtQkFBTyxDQUFDLDBIQUFtQjtBQUNuRCxnREFBK0MsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDakksd0NBQXdDLG1CQUFPLENBQUMsMEpBQW1DO0FBQ25GLGdFQUErRCxFQUFFLHFDQUFxQywwRUFBMEUsRUFBQztBQUNqTCw2RUFBNEUsRUFBRSxxQ0FBcUMsdUZBQXVGLEVBQUM7QUFDM00sOEJBQThCLG1CQUFPLENBQUMsc0lBQXlCO0FBQy9ELHNEQUFxRCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUNuSixtRUFBa0UsRUFBRSxxQ0FBcUMsbUVBQW1FLEVBQUM7QUFDN0ssb0NBQW9DLG1CQUFPLENBQUMsa0pBQStCO0FBQzNFLDREQUEyRCxFQUFFLHFDQUFxQyxrRUFBa0UsRUFBQztBQUNySyw4QkFBOEIsbUJBQU8sQ0FBQyxzSUFBeUI7QUFDL0Qsc0RBQXFELEVBQUUscUNBQXFDLHNEQUFzRCxFQUFDO0FBQ25KLDZCQUE2QixtQkFBTyxDQUFDLG9JQUF3QjtBQUM3RCxxREFBb0QsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDaEosc0NBQXNDLG1CQUFPLENBQUMsc0pBQWlDO0FBQy9FLDhEQUE2RCxFQUFFLHFDQUFxQyxzRUFBc0UsRUFBQztBQUMzSyxvQ0FBb0MsbUJBQU8sQ0FBQyxrSkFBK0I7QUFDM0UsNERBQTJELEVBQUUscUNBQXFDLGtFQUFrRSxFQUFDO0FBQ3JLLDBDQUEwQyxtQkFBTyxDQUFDLDhKQUFxQztBQUN2RixrRUFBaUUsRUFBRSxxQ0FBcUMsOEVBQThFLEVBQUM7QUFDdkwsMENBQTBDLG1CQUFPLENBQUMsOEpBQXFDO0FBQ3ZGLGtFQUFpRSxFQUFFLHFDQUFxQyw4RUFBOEUsRUFBQztBQUN2TCxnQ0FBZ0MsbUJBQU8sQ0FBQywwSUFBMkI7QUFDbkUsd0RBQXVELEVBQUUscUNBQXFDLDBEQUEwRCxFQUFDO0FBQ3pKLG9DQUFvQyxtQkFBTyxDQUFDLGtKQUErQjtBQUMzRSw0REFBMkQsRUFBRSxxQ0FBcUMsa0VBQWtFLEVBQUM7QUFDckssZ0VBQStELEVBQUUscUNBQXFDLHNFQUFzRSxFQUFDO0FBQzdLLHlFQUF3RSxFQUFFLHFDQUFxQywrRUFBK0UsRUFBQztBQUMvTCxtQkFBbUIsbUJBQU8sQ0FBQyw0SUFBNEI7QUFDdkQsZ0RBQStDLEVBQUUscUNBQXFDLHFDQUFxQyxFQUFDO0FBQzVILG1FQUFrRSxFQUFFLHFDQUFxQyx3REFBd0QsRUFBQztBQUNsSyw0RUFBMkUsRUFBRSxxQ0FBcUMsaUVBQWlFLEVBQUM7QUFDcEwsNEVBQTJFLEVBQUUscUNBQXFDLGlFQUFpRSxFQUFDO0FBQ3BMLG9FQUFtRSxFQUFFLHFDQUFxQyx5REFBeUQsRUFBQztBQUNwSyxpRUFBZ0UsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDOUosMERBQXlELEVBQUUscUNBQXFDLCtDQUErQyxFQUFDO0FBQ2hKLDJEQUEwRCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQztBQUNsSixtRUFBa0UsRUFBRSxxQ0FBcUMsd0RBQXdELEVBQUM7QUFDbEssMkNBQTBDLEVBQUUscUNBQXFDLGdDQUFnQyxFQUFDO0FBQ2xILHNEQUFxRCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUN4SSwrQ0FBOEMsRUFBRSxxQ0FBcUMsb0NBQW9DLEVBQUM7QUFDMUgsNERBQTJELEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQ3BKLHdDQUF1QyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUM1Ryx1QkFBdUIsbUJBQU8sQ0FBQyx3SEFBa0I7QUFDakQsK0NBQThDLEVBQUUscUNBQXFDLHdDQUF3QyxFQUFDO0FBQzlILHVDQUF1QyxtQkFBTyxDQUFDLHdKQUFrQztBQUNqRiwrREFBOEQsRUFBRSxxQ0FBcUMsd0VBQXdFLEVBQUM7QUFDOUssNkJBQTZCLG1CQUFPLENBQUMsb0lBQXdCO0FBQzdELHFEQUFvRCxFQUFFLHFDQUFxQyxvREFBb0QsRUFBQztBQUNoSiwyQkFBMkIsbUJBQU8sQ0FBQyxnSUFBc0I7QUFDekQsbURBQWtELEVBQUUscUNBQXFDLGdEQUFnRCxFQUFDO0FBQzFJLGlDQUFpQyxtQkFBTyxDQUFDLDRJQUE0QjtBQUNyRSx5REFBd0QsRUFBRSxxQ0FBcUMsNERBQTRELEVBQUM7QUFDNUosb0NBQW9DLG1CQUFPLENBQUMsa0pBQStCO0FBQzNFLDREQUEyRCxFQUFFLHFDQUFxQyxrRUFBa0UsRUFBQztBQUNySyxnREFBZ0QsbUJBQU8sQ0FBQywwS0FBMkM7QUFDbkcsd0VBQXVFLEVBQUUscUNBQXFDLDBGQUEwRixFQUFDO0FBQ3pNLDRDQUE0QyxtQkFBTyxDQUFDLGtLQUF1QztBQUMzRixvRUFBbUUsRUFBRSxxQ0FBcUMsa0ZBQWtGLEVBQUM7QUFDN0wsMENBQTBDLG1CQUFPLENBQUMsOEpBQXFDO0FBQ3ZGLGtFQUFpRSxFQUFFLHFDQUFxQyw4RUFBOEUsRUFBQztBQUN2TCx1Q0FBdUMsbUJBQU8sQ0FBQyx3SkFBa0M7QUFDakYsK0RBQThELEVBQUUscUNBQXFDLHdFQUF3RSxFQUFDO0FBQzlLLGlDQUFpQyxtQkFBTyxDQUFDLDRJQUE0QjtBQUNyRSx5REFBd0QsRUFBRSxxQ0FBcUMsNERBQTRELEVBQUM7QUFDNUoscUJBQXFCLG1CQUFPLENBQUMsb0hBQWdCO0FBQzdDLDZDQUE0QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUN4SCxtQ0FBbUMsbUJBQU8sQ0FBQyw0SkFBb0M7QUFDL0UsMkRBQTBELEVBQUUscUNBQXFDLGdFQUFnRSxFQUFDO0FBQ2xLLHNEQUFzRCxtQkFBTyxDQUFDLHNMQUFpRDtBQUMvRyw4RUFBNkUsRUFBRSxxQ0FBcUMsc0dBQXNHLEVBQUM7QUFDM04saURBQWlELG1CQUFPLENBQUMsNEtBQTRDO0FBQ3JHLHlFQUF3RSxFQUFFLHFDQUFxQyw0RkFBNEYsRUFBQztBQUM1TSxnREFBZ0QsbUJBQU8sQ0FBQywwS0FBMkM7QUFDbkcsd0VBQXVFLEVBQUUscUNBQXFDLDBGQUEwRixFQUFDO0FBQ3pNLDhDQUE4QyxtQkFBTyxDQUFDLHNLQUF5QztBQUMvRixzRUFBcUUsRUFBRSxxQ0FBcUMsc0ZBQXNGLEVBQUM7QUFDbk0seUNBQXlDLG1CQUFPLENBQUMsNEpBQW9DO0FBQ3JGLGlFQUFnRSxFQUFFLHFDQUFxQyw0RUFBNEUsRUFBQztBQUNwTCx5Q0FBeUMsbUJBQU8sQ0FBQyw0SkFBb0M7QUFDckYsaUVBQWdFLEVBQUUscUNBQXFDLDRFQUE0RSxFQUFDO0FBQ3BMLDBCQUEwQixtQkFBTyxDQUFDLDhIQUFxQjtBQUN2RCxrREFBaUQsRUFBRSxxQ0FBcUMsOENBQThDLEVBQUM7QUFDdkksd0JBQXdCLG1CQUFPLENBQUMsMEhBQW1CO0FBQ25ELGdEQUErQyxFQUFFLHFDQUFxQywwQ0FBMEMsRUFBQztBQUNqSSwyQkFBMkIsbUJBQU8sQ0FBQyxnSUFBc0I7QUFDekQsbURBQWtELEVBQUUscUNBQXFDLGdEQUFnRCxFQUFDO0FBQzFJLDZCQUE2QixtQkFBTyxDQUFDLG9JQUF3QjtBQUM3RCxxREFBb0QsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDaEosNkJBQTZCLG1CQUFPLENBQUMsb0lBQXdCO0FBQzdELHFEQUFvRCxFQUFFLHFDQUFxQyxvREFBb0QsRUFBQztBQUNoSiw4Q0FBNkMsRUFBRSxxQ0FBcUMsNkNBQTZDLEVBQUM7QUFDbEksd0NBQXdDLG1CQUFPLENBQUMsMEpBQW1DO0FBQ25GLGdFQUErRCxFQUFFLHFDQUFxQywwRUFBMEUsRUFBQztBQUNqTCx1QkFBdUIsbUJBQU8sQ0FBQyx3SEFBa0I7QUFDakQsK0NBQThDLEVBQUUscUNBQXFDLHdDQUF3QyxFQUFDO0FBQzlILG9CQUFvQixtQkFBTyxDQUFDLGtIQUFlO0FBQzNDLDRDQUEyQyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQzs7QUFFckgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL0V4cG9ydHMuanM/YWI4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIEF1ZGlvQ29uZmlnX2pzXzEgPSByZXF1aXJlKFwiLi9BdWRpby9BdWRpb0NvbmZpZy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF1ZGlvQ29uZmlnXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBBdWRpb0NvbmZpZ19qc18xLkF1ZGlvQ29uZmlnOyB9IH0pO1xudmFyIEF1ZGlvU3RyZWFtRm9ybWF0X2pzXzEgPSByZXF1aXJlKFwiLi9BdWRpby9BdWRpb1N0cmVhbUZvcm1hdC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF1ZGlvU3RyZWFtRm9ybWF0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBBdWRpb1N0cmVhbUZvcm1hdF9qc18xLkF1ZGlvU3RyZWFtRm9ybWF0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXVkaW9Gb3JtYXRUYWdcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEF1ZGlvU3RyZWFtRm9ybWF0X2pzXzEuQXVkaW9Gb3JtYXRUYWc7IH0gfSk7XG52YXIgQXVkaW9JbnB1dFN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vQXVkaW8vQXVkaW9JbnB1dFN0cmVhbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF1ZGlvSW5wdXRTdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEF1ZGlvSW5wdXRTdHJlYW1fanNfMS5BdWRpb0lucHV0U3RyZWFtOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUHVsbEF1ZGlvSW5wdXRTdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEF1ZGlvSW5wdXRTdHJlYW1fanNfMS5QdWxsQXVkaW9JbnB1dFN0cmVhbTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlB1c2hBdWRpb0lucHV0U3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBBdWRpb0lucHV0U3RyZWFtX2pzXzEuUHVzaEF1ZGlvSW5wdXRTdHJlYW07IH0gfSk7XG52YXIgQXVkaW9PdXRwdXRTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL0F1ZGlvL0F1ZGlvT3V0cHV0U3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXVkaW9PdXRwdXRTdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEF1ZGlvT3V0cHV0U3RyZWFtX2pzXzEuQXVkaW9PdXRwdXRTdHJlYW07IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQdWxsQXVkaW9PdXRwdXRTdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEF1ZGlvT3V0cHV0U3RyZWFtX2pzXzEuUHVsbEF1ZGlvT3V0cHV0U3RyZWFtOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUHVzaEF1ZGlvT3V0cHV0U3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBBdWRpb091dHB1dFN0cmVhbV9qc18xLlB1c2hBdWRpb091dHB1dFN0cmVhbTsgfSB9KTtcbnZhciBDYW5jZWxsYXRpb25SZWFzb25fanNfMSA9IHJlcXVpcmUoXCIuL0NhbmNlbGxhdGlvblJlYXNvbi5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNhbmNlbGxhdGlvblJlYXNvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ2FuY2VsbGF0aW9uUmVhc29uX2pzXzEuQ2FuY2VsbGF0aW9uUmVhc29uOyB9IH0pO1xudmFyIFB1bGxBdWRpb0lucHV0U3RyZWFtQ2FsbGJhY2tfanNfMSA9IHJlcXVpcmUoXCIuL0F1ZGlvL1B1bGxBdWRpb0lucHV0U3RyZWFtQ2FsbGJhY2suanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQdWxsQXVkaW9JbnB1dFN0cmVhbUNhbGxiYWNrXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBQdWxsQXVkaW9JbnB1dFN0cmVhbUNhbGxiYWNrX2pzXzEuUHVsbEF1ZGlvSW5wdXRTdHJlYW1DYWxsYmFjazsgfSB9KTtcbnZhciBQdXNoQXVkaW9PdXRwdXRTdHJlYW1DYWxsYmFja19qc18xID0gcmVxdWlyZShcIi4vQXVkaW8vUHVzaEF1ZGlvT3V0cHV0U3RyZWFtQ2FsbGJhY2suanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQdXNoQXVkaW9PdXRwdXRTdHJlYW1DYWxsYmFja1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUHVzaEF1ZGlvT3V0cHV0U3RyZWFtQ2FsbGJhY2tfanNfMS5QdXNoQXVkaW9PdXRwdXRTdHJlYW1DYWxsYmFjazsgfSB9KTtcbnZhciBLZXl3b3JkUmVjb2duaXRpb25Nb2RlbF9qc18xID0gcmVxdWlyZShcIi4vS2V5d29yZFJlY29nbml0aW9uTW9kZWwuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXl3b3JkUmVjb2duaXRpb25Nb2RlbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gS2V5d29yZFJlY29nbml0aW9uTW9kZWxfanNfMS5LZXl3b3JkUmVjb2duaXRpb25Nb2RlbDsgfSB9KTtcbnZhciBTZXNzaW9uRXZlbnRBcmdzX2pzXzEgPSByZXF1aXJlKFwiLi9TZXNzaW9uRXZlbnRBcmdzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2Vzc2lvbkV2ZW50QXJnc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU2Vzc2lvbkV2ZW50QXJnc19qc18xLlNlc3Npb25FdmVudEFyZ3M7IH0gfSk7XG52YXIgUmVjb2duaXRpb25FdmVudEFyZ3NfanNfMSA9IHJlcXVpcmUoXCIuL1JlY29nbml0aW9uRXZlbnRBcmdzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVjb2duaXRpb25FdmVudEFyZ3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFJlY29nbml0aW9uRXZlbnRBcmdzX2pzXzEuUmVjb2duaXRpb25FdmVudEFyZ3M7IH0gfSk7XG52YXIgT3V0cHV0Rm9ybWF0X2pzXzEgPSByZXF1aXJlKFwiLi9PdXRwdXRGb3JtYXQuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJPdXRwdXRGb3JtYXRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE91dHB1dEZvcm1hdF9qc18xLk91dHB1dEZvcm1hdDsgfSB9KTtcbnZhciBJbnRlbnRSZWNvZ25pdGlvbkV2ZW50QXJnc19qc18xID0gcmVxdWlyZShcIi4vSW50ZW50UmVjb2duaXRpb25FdmVudEFyZ3MuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJbnRlbnRSZWNvZ25pdGlvbkV2ZW50QXJnc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gSW50ZW50UmVjb2duaXRpb25FdmVudEFyZ3NfanNfMS5JbnRlbnRSZWNvZ25pdGlvbkV2ZW50QXJnczsgfSB9KTtcbnZhciBSZWNvZ25pdGlvblJlc3VsdF9qc18xID0gcmVxdWlyZShcIi4vUmVjb2duaXRpb25SZXN1bHQuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZWNvZ25pdGlvblJlc3VsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUmVjb2duaXRpb25SZXN1bHRfanNfMS5SZWNvZ25pdGlvblJlc3VsdDsgfSB9KTtcbnZhciBTcGVlY2hSZWNvZ25pdGlvblJlc3VsdF9qc18xID0gcmVxdWlyZShcIi4vU3BlZWNoUmVjb2duaXRpb25SZXN1bHQuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTcGVlY2hSZWNvZ25pdGlvblJlc3VsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU3BlZWNoUmVjb2duaXRpb25SZXN1bHRfanNfMS5TcGVlY2hSZWNvZ25pdGlvblJlc3VsdDsgfSB9KTtcbnZhciBJbnRlbnRSZWNvZ25pdGlvblJlc3VsdF9qc18xID0gcmVxdWlyZShcIi4vSW50ZW50UmVjb2duaXRpb25SZXN1bHQuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJbnRlbnRSZWNvZ25pdGlvblJlc3VsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gSW50ZW50UmVjb2duaXRpb25SZXN1bHRfanNfMS5JbnRlbnRSZWNvZ25pdGlvblJlc3VsdDsgfSB9KTtcbnZhciBMYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbF9qc18xID0gcmVxdWlyZShcIi4vTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nTW9kZWwuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJMYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nTW9kZWxfanNfMS5MYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbDsgfSB9KTtcbnZhciBTcGVlY2hSZWNvZ25pdGlvbkV2ZW50QXJnc19qc18xID0gcmVxdWlyZShcIi4vU3BlZWNoUmVjb2duaXRpb25FdmVudEFyZ3MuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTcGVlY2hSZWNvZ25pdGlvbkV2ZW50QXJnc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU3BlZWNoUmVjb2duaXRpb25FdmVudEFyZ3NfanNfMS5TcGVlY2hSZWNvZ25pdGlvbkV2ZW50QXJnczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25FdmVudEFyZ3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWVjaFJlY29nbml0aW9uRXZlbnRBcmdzX2pzXzEuQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvbkV2ZW50QXJnczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk1lZXRpbmdUcmFuc2NyaXB0aW9uRXZlbnRBcmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBTcGVlY2hSZWNvZ25pdGlvbkV2ZW50QXJnc19qc18xLk1lZXRpbmdUcmFuc2NyaXB0aW9uRXZlbnRBcmdzOyB9IH0pO1xudmFyIFNwZWVjaFJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3NfanNfMSA9IHJlcXVpcmUoXCIuL1NwZWVjaFJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3MuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTcGVlY2hSZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBTcGVlY2hSZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzX2pzXzEuU3BlZWNoUmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJnczsgfSB9KTtcbnZhciBUcmFuc2xhdGlvblJlY29nbml0aW9uRXZlbnRBcmdzX2pzXzEgPSByZXF1aXJlKFwiLi9UcmFuc2xhdGlvblJlY29nbml0aW9uRXZlbnRBcmdzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVHJhbnNsYXRpb25SZWNvZ25pdGlvbkV2ZW50QXJnc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVHJhbnNsYXRpb25SZWNvZ25pdGlvbkV2ZW50QXJnc19qc18xLlRyYW5zbGF0aW9uUmVjb2duaXRpb25FdmVudEFyZ3M7IH0gfSk7XG52YXIgVHJhbnNsYXRpb25TeW50aGVzaXNFdmVudEFyZ3NfanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zbGF0aW9uU3ludGhlc2lzRXZlbnRBcmdzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVHJhbnNsYXRpb25TeW50aGVzaXNFdmVudEFyZ3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRyYW5zbGF0aW9uU3ludGhlc2lzRXZlbnRBcmdzX2pzXzEuVHJhbnNsYXRpb25TeW50aGVzaXNFdmVudEFyZ3M7IH0gfSk7XG52YXIgVHJhbnNsYXRpb25SZWNvZ25pdGlvblJlc3VsdF9qc18xID0gcmVxdWlyZShcIi4vVHJhbnNsYXRpb25SZWNvZ25pdGlvblJlc3VsdC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRyYW5zbGF0aW9uUmVjb2duaXRpb25SZXN1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRyYW5zbGF0aW9uUmVjb2duaXRpb25SZXN1bHRfanNfMS5UcmFuc2xhdGlvblJlY29nbml0aW9uUmVzdWx0OyB9IH0pO1xudmFyIFRyYW5zbGF0aW9uU3ludGhlc2lzUmVzdWx0X2pzXzEgPSByZXF1aXJlKFwiLi9UcmFuc2xhdGlvblN5bnRoZXNpc1Jlc3VsdC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRyYW5zbGF0aW9uU3ludGhlc2lzUmVzdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUcmFuc2xhdGlvblN5bnRoZXNpc1Jlc3VsdF9qc18xLlRyYW5zbGF0aW9uU3ludGhlc2lzUmVzdWx0OyB9IH0pO1xudmFyIFJlc3VsdFJlYXNvbl9qc18xID0gcmVxdWlyZShcIi4vUmVzdWx0UmVhc29uLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVzdWx0UmVhc29uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBSZXN1bHRSZWFzb25fanNfMS5SZXN1bHRSZWFzb247IH0gfSk7XG52YXIgU3BlZWNoQ29uZmlnX2pzXzEgPSByZXF1aXJlKFwiLi9TcGVlY2hDb25maWcuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTcGVlY2hDb25maWdcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWVjaENvbmZpZ19qc18xLlNwZWVjaENvbmZpZzsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNwZWVjaENvbmZpZ0ltcGxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWVjaENvbmZpZ19qc18xLlNwZWVjaENvbmZpZ0ltcGw7IH0gfSk7XG52YXIgU3BlZWNoVHJhbnNsYXRpb25Db25maWdfanNfMSA9IHJlcXVpcmUoXCIuL1NwZWVjaFRyYW5zbGF0aW9uQ29uZmlnLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3BlZWNoVHJhbnNsYXRpb25Db25maWdcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWVjaFRyYW5zbGF0aW9uQ29uZmlnX2pzXzEuU3BlZWNoVHJhbnNsYXRpb25Db25maWc7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTcGVlY2hUcmFuc2xhdGlvbkNvbmZpZ0ltcGxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWVjaFRyYW5zbGF0aW9uQ29uZmlnX2pzXzEuU3BlZWNoVHJhbnNsYXRpb25Db25maWdJbXBsOyB9IH0pO1xudmFyIFByb3BlcnR5Q29sbGVjdGlvbl9qc18xID0gcmVxdWlyZShcIi4vUHJvcGVydHlDb2xsZWN0aW9uLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUHJvcGVydHlDb2xsZWN0aW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBQcm9wZXJ0eUNvbGxlY3Rpb25fanNfMS5Qcm9wZXJ0eUNvbGxlY3Rpb247IH0gfSk7XG52YXIgUHJvcGVydHlJZF9qc18xID0gcmVxdWlyZShcIi4vUHJvcGVydHlJZC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlByb3BlcnR5SWRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFByb3BlcnR5SWRfanNfMS5Qcm9wZXJ0eUlkOyB9IH0pO1xudmFyIFJlY29nbml6ZXJfanNfMSA9IHJlcXVpcmUoXCIuL1JlY29nbml6ZXIuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZWNvZ25pemVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBSZWNvZ25pemVyX2pzXzEuUmVjb2duaXplcjsgfSB9KTtcbnZhciBTcGVlY2hSZWNvZ25pemVyX2pzXzEgPSByZXF1aXJlKFwiLi9TcGVlY2hSZWNvZ25pemVyLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3BlZWNoUmVjb2duaXplclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU3BlZWNoUmVjb2duaXplcl9qc18xLlNwZWVjaFJlY29nbml6ZXI7IH0gfSk7XG52YXIgSW50ZW50UmVjb2duaXplcl9qc18xID0gcmVxdWlyZShcIi4vSW50ZW50UmVjb2duaXplci5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkludGVudFJlY29nbml6ZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEludGVudFJlY29nbml6ZXJfanNfMS5JbnRlbnRSZWNvZ25pemVyOyB9IH0pO1xudmFyIFZvaWNlUHJvZmlsZVR5cGVfanNfMSA9IHJlcXVpcmUoXCIuL1ZvaWNlUHJvZmlsZVR5cGUuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJWb2ljZVByb2ZpbGVUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBWb2ljZVByb2ZpbGVUeXBlX2pzXzEuVm9pY2VQcm9maWxlVHlwZTsgfSB9KTtcbnZhciBUcmFuc2xhdGlvblJlY29nbml6ZXJfanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zbGF0aW9uUmVjb2duaXplci5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRyYW5zbGF0aW9uUmVjb2duaXplclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVHJhbnNsYXRpb25SZWNvZ25pemVyX2pzXzEuVHJhbnNsYXRpb25SZWNvZ25pemVyOyB9IH0pO1xudmFyIFRyYW5zbGF0aW9uc19qc18xID0gcmVxdWlyZShcIi4vVHJhbnNsYXRpb25zLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVHJhbnNsYXRpb25zXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUcmFuc2xhdGlvbnNfanNfMS5UcmFuc2xhdGlvbnM7IH0gfSk7XG52YXIgTm9NYXRjaFJlYXNvbl9qc18xID0gcmVxdWlyZShcIi4vTm9NYXRjaFJlYXNvbi5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk5vTWF0Y2hSZWFzb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE5vTWF0Y2hSZWFzb25fanNfMS5Ob01hdGNoUmVhc29uOyB9IH0pO1xudmFyIE5vTWF0Y2hEZXRhaWxzX2pzXzEgPSByZXF1aXJlKFwiLi9Ob01hdGNoRGV0YWlscy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk5vTWF0Y2hEZXRhaWxzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBOb01hdGNoRGV0YWlsc19qc18xLk5vTWF0Y2hEZXRhaWxzOyB9IH0pO1xudmFyIFRyYW5zbGF0aW9uUmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJnc19qc18xID0gcmVxdWlyZShcIi4vVHJhbnNsYXRpb25SZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVHJhbnNsYXRpb25SZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUcmFuc2xhdGlvblJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3NfanNfMS5UcmFuc2xhdGlvblJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3M7IH0gfSk7XG52YXIgSW50ZW50UmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJnc19qc18xID0gcmVxdWlyZShcIi4vSW50ZW50UmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJncy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkludGVudFJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEludGVudFJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3NfanNfMS5JbnRlbnRSZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzOyB9IH0pO1xudmFyIENhbmNlbGxhdGlvbkRldGFpbHNCYXNlX2pzXzEgPSByZXF1aXJlKFwiLi9DYW5jZWxsYXRpb25EZXRhaWxzQmFzZS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNhbmNlbGxhdGlvbkRldGFpbHNCYXNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDYW5jZWxsYXRpb25EZXRhaWxzQmFzZV9qc18xLkNhbmNlbGxhdGlvbkRldGFpbHNCYXNlOyB9IH0pO1xudmFyIENhbmNlbGxhdGlvbkRldGFpbHNfanNfMSA9IHJlcXVpcmUoXCIuL0NhbmNlbGxhdGlvbkRldGFpbHMuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDYW5jZWxsYXRpb25EZXRhaWxzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDYW5jZWxsYXRpb25EZXRhaWxzX2pzXzEuQ2FuY2VsbGF0aW9uRGV0YWlsczsgfSB9KTtcbnZhciBDYW5jZWxsYXRpb25FcnJvckNvZGVzX2pzXzEgPSByZXF1aXJlKFwiLi9DYW5jZWxsYXRpb25FcnJvckNvZGVzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ2FuY2VsbGF0aW9uRXJyb3JDb2RlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDYW5jZWxsYXRpb25FcnJvckNvZGVzX2pzXzEuQ2FuY2VsbGF0aW9uRXJyb3JDb2RlOyB9IH0pO1xudmFyIENvbm5lY3Rpb25FdmVudEFyZ3NfanNfMSA9IHJlcXVpcmUoXCIuL0Nvbm5lY3Rpb25FdmVudEFyZ3MuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb25uZWN0aW9uRXZlbnRBcmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDb25uZWN0aW9uRXZlbnRBcmdzX2pzXzEuQ29ubmVjdGlvbkV2ZW50QXJnczsgfSB9KTtcbnZhciBTZXJ2aWNlRXZlbnRBcmdzX2pzXzEgPSByZXF1aXJlKFwiLi9TZXJ2aWNlRXZlbnRBcmdzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmljZUV2ZW50QXJnc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU2VydmljZUV2ZW50QXJnc19qc18xLlNlcnZpY2VFdmVudEFyZ3M7IH0gfSk7XG52YXIgQ29ubmVjdGlvbl9qc18xID0gcmVxdWlyZShcIi4vQ29ubmVjdGlvbi5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbm5lY3Rpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENvbm5lY3Rpb25fanNfMS5Db25uZWN0aW9uOyB9IH0pO1xudmFyIFBocmFzZUxpc3RHcmFtbWFyX2pzXzEgPSByZXF1aXJlKFwiLi9QaHJhc2VMaXN0R3JhbW1hci5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlBocmFzZUxpc3RHcmFtbWFyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBQaHJhc2VMaXN0R3JhbW1hcl9qc18xLlBocmFzZUxpc3RHcmFtbWFyOyB9IH0pO1xudmFyIERpYWxvZ1NlcnZpY2VDb25maWdfanNfMSA9IHJlcXVpcmUoXCIuL0RpYWxvZ1NlcnZpY2VDb25maWcuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJEaWFsb2dTZXJ2aWNlQ29uZmlnXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBEaWFsb2dTZXJ2aWNlQ29uZmlnX2pzXzEuRGlhbG9nU2VydmljZUNvbmZpZzsgfSB9KTtcbnZhciBCb3RGcmFtZXdvcmtDb25maWdfanNfMSA9IHJlcXVpcmUoXCIuL0JvdEZyYW1ld29ya0NvbmZpZy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJvdEZyYW1ld29ya0NvbmZpZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQm90RnJhbWV3b3JrQ29uZmlnX2pzXzEuQm90RnJhbWV3b3JrQ29uZmlnOyB9IH0pO1xudmFyIEN1c3RvbUNvbW1hbmRzQ29uZmlnX2pzXzEgPSByZXF1aXJlKFwiLi9DdXN0b21Db21tYW5kc0NvbmZpZy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkN1c3RvbUNvbW1hbmRzQ29uZmlnXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDdXN0b21Db21tYW5kc0NvbmZpZ19qc18xLkN1c3RvbUNvbW1hbmRzQ29uZmlnOyB9IH0pO1xudmFyIERpYWxvZ1NlcnZpY2VDb25uZWN0b3JfanNfMSA9IHJlcXVpcmUoXCIuL0RpYWxvZ1NlcnZpY2VDb25uZWN0b3IuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJEaWFsb2dTZXJ2aWNlQ29ubmVjdG9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBEaWFsb2dTZXJ2aWNlQ29ubmVjdG9yX2pzXzEuRGlhbG9nU2VydmljZUNvbm5lY3RvcjsgfSB9KTtcbnZhciBBY3Rpdml0eVJlY2VpdmVkRXZlbnRBcmdzX2pzXzEgPSByZXF1aXJlKFwiLi9BY3Rpdml0eVJlY2VpdmVkRXZlbnRBcmdzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWN0aXZpdHlSZWNlaXZlZEV2ZW50QXJnc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQWN0aXZpdHlSZWNlaXZlZEV2ZW50QXJnc19qc18xLkFjdGl2aXR5UmVjZWl2ZWRFdmVudEFyZ3M7IH0gfSk7XG52YXIgVHVyblN0YXR1c1JlY2VpdmVkRXZlbnRBcmdzX2pzXzEgPSByZXF1aXJlKFwiLi9UdXJuU3RhdHVzUmVjZWl2ZWRFdmVudEFyZ3MuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUdXJuU3RhdHVzUmVjZWl2ZWRFdmVudEFyZ3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFR1cm5TdGF0dXNSZWNlaXZlZEV2ZW50QXJnc19qc18xLlR1cm5TdGF0dXNSZWNlaXZlZEV2ZW50QXJnczsgfSB9KTtcbnZhciBTZXJ2aWNlUHJvcGVydHlDaGFubmVsX2pzXzEgPSByZXF1aXJlKFwiLi9TZXJ2aWNlUHJvcGVydHlDaGFubmVsLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmljZVByb3BlcnR5Q2hhbm5lbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU2VydmljZVByb3BlcnR5Q2hhbm5lbF9qc18xLlNlcnZpY2VQcm9wZXJ0eUNoYW5uZWw7IH0gfSk7XG52YXIgUHJvZmFuaXR5T3B0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi9Qcm9mYW5pdHlPcHRpb24uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQcm9mYW5pdHlPcHRpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFByb2Zhbml0eU9wdGlvbl9qc18xLlByb2Zhbml0eU9wdGlvbjsgfSB9KTtcbnZhciBCYXNlQXVkaW9QbGF5ZXJfanNfMSA9IHJlcXVpcmUoXCIuL0F1ZGlvL0Jhc2VBdWRpb1BsYXllci5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJhc2VBdWRpb1BsYXllclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQmFzZUF1ZGlvUGxheWVyX2pzXzEuQmFzZUF1ZGlvUGxheWVyOyB9IH0pO1xudmFyIENvbm5lY3Rpb25NZXNzYWdlRXZlbnRBcmdzX2pzXzEgPSByZXF1aXJlKFwiLi9Db25uZWN0aW9uTWVzc2FnZUV2ZW50QXJncy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbm5lY3Rpb25NZXNzYWdlRXZlbnRBcmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDb25uZWN0aW9uTWVzc2FnZUV2ZW50QXJnc19qc18xLkNvbm5lY3Rpb25NZXNzYWdlRXZlbnRBcmdzOyB9IH0pO1xudmFyIENvbm5lY3Rpb25NZXNzYWdlX2pzXzEgPSByZXF1aXJlKFwiLi9Db25uZWN0aW9uTWVzc2FnZS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbm5lY3Rpb25NZXNzYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDb25uZWN0aW9uTWVzc2FnZV9qc18xLkNvbm5lY3Rpb25NZXNzYWdlOyB9IH0pO1xudmFyIFZvaWNlUHJvZmlsZV9qc18xID0gcmVxdWlyZShcIi4vVm9pY2VQcm9maWxlLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVm9pY2VQcm9maWxlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBWb2ljZVByb2ZpbGVfanNfMS5Wb2ljZVByb2ZpbGU7IH0gfSk7XG52YXIgVm9pY2VQcm9maWxlRW5yb2xsbWVudFJlc3VsdF9qc18xID0gcmVxdWlyZShcIi4vVm9pY2VQcm9maWxlRW5yb2xsbWVudFJlc3VsdC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlZvaWNlUHJvZmlsZUVucm9sbG1lbnRSZXN1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFZvaWNlUHJvZmlsZUVucm9sbG1lbnRSZXN1bHRfanNfMS5Wb2ljZVByb2ZpbGVFbnJvbGxtZW50UmVzdWx0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVm9pY2VQcm9maWxlRW5yb2xsbWVudENhbmNlbGxhdGlvbkRldGFpbHNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFZvaWNlUHJvZmlsZUVucm9sbG1lbnRSZXN1bHRfanNfMS5Wb2ljZVByb2ZpbGVFbnJvbGxtZW50Q2FuY2VsbGF0aW9uRGV0YWlsczsgfSB9KTtcbnZhciBWb2ljZVByb2ZpbGVSZXN1bHRfanNfMSA9IHJlcXVpcmUoXCIuL1ZvaWNlUHJvZmlsZVJlc3VsdC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlZvaWNlUHJvZmlsZVJlc3VsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVm9pY2VQcm9maWxlUmVzdWx0X2pzXzEuVm9pY2VQcm9maWxlUmVzdWx0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVm9pY2VQcm9maWxlQ2FuY2VsbGF0aW9uRGV0YWlsc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVm9pY2VQcm9maWxlUmVzdWx0X2pzXzEuVm9pY2VQcm9maWxlQ2FuY2VsbGF0aW9uRGV0YWlsczsgfSB9KTtcbnZhciBWb2ljZVByb2ZpbGVQaHJhc2VSZXN1bHRfanNfMSA9IHJlcXVpcmUoXCIuL1ZvaWNlUHJvZmlsZVBocmFzZVJlc3VsdC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlZvaWNlUHJvZmlsZVBocmFzZVJlc3VsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVm9pY2VQcm9maWxlUGhyYXNlUmVzdWx0X2pzXzEuVm9pY2VQcm9maWxlUGhyYXNlUmVzdWx0OyB9IH0pO1xudmFyIFZvaWNlUHJvZmlsZUNsaWVudF9qc18xID0gcmVxdWlyZShcIi4vVm9pY2VQcm9maWxlQ2xpZW50LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVm9pY2VQcm9maWxlQ2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBWb2ljZVByb2ZpbGVDbGllbnRfanNfMS5Wb2ljZVByb2ZpbGVDbGllbnQ7IH0gfSk7XG52YXIgU3BlYWtlclJlY29nbml6ZXJfanNfMSA9IHJlcXVpcmUoXCIuL1NwZWFrZXJSZWNvZ25pemVyLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3BlYWtlclJlY29nbml6ZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWFrZXJSZWNvZ25pemVyX2pzXzEuU3BlYWtlclJlY29nbml6ZXI7IH0gfSk7XG52YXIgU3BlYWtlcklkZW50aWZpY2F0aW9uTW9kZWxfanNfMSA9IHJlcXVpcmUoXCIuL1NwZWFrZXJJZGVudGlmaWNhdGlvbk1vZGVsLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3BlYWtlcklkZW50aWZpY2F0aW9uTW9kZWxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWFrZXJJZGVudGlmaWNhdGlvbk1vZGVsX2pzXzEuU3BlYWtlcklkZW50aWZpY2F0aW9uTW9kZWw7IH0gfSk7XG52YXIgU3BlYWtlclZlcmlmaWNhdGlvbk1vZGVsX2pzXzEgPSByZXF1aXJlKFwiLi9TcGVha2VyVmVyaWZpY2F0aW9uTW9kZWwuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTcGVha2VyVmVyaWZpY2F0aW9uTW9kZWxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWFrZXJWZXJpZmljYXRpb25Nb2RlbF9qc18xLlNwZWFrZXJWZXJpZmljYXRpb25Nb2RlbDsgfSB9KTtcbnZhciBBdXRvRGV0ZWN0U291cmNlTGFuZ3VhZ2VDb25maWdfanNfMSA9IHJlcXVpcmUoXCIuL0F1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZUNvbmZpZy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZUNvbmZpZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQXV0b0RldGVjdFNvdXJjZUxhbmd1YWdlQ29uZmlnX2pzXzEuQXV0b0RldGVjdFNvdXJjZUxhbmd1YWdlQ29uZmlnOyB9IH0pO1xudmFyIEF1dG9EZXRlY3RTb3VyY2VMYW5ndWFnZVJlc3VsdF9qc18xID0gcmVxdWlyZShcIi4vQXV0b0RldGVjdFNvdXJjZUxhbmd1YWdlUmVzdWx0LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXV0b0RldGVjdFNvdXJjZUxhbmd1YWdlUmVzdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBBdXRvRGV0ZWN0U291cmNlTGFuZ3VhZ2VSZXN1bHRfanNfMS5BdXRvRGV0ZWN0U291cmNlTGFuZ3VhZ2VSZXN1bHQ7IH0gfSk7XG52YXIgU291cmNlTGFuZ3VhZ2VDb25maWdfanNfMSA9IHJlcXVpcmUoXCIuL1NvdXJjZUxhbmd1YWdlQ29uZmlnLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU291cmNlTGFuZ3VhZ2VDb25maWdcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNvdXJjZUxhbmd1YWdlQ29uZmlnX2pzXzEuU291cmNlTGFuZ3VhZ2VDb25maWc7IH0gfSk7XG52YXIgU3BlYWtlclJlY29nbml0aW9uUmVzdWx0X2pzXzEgPSByZXF1aXJlKFwiLi9TcGVha2VyUmVjb2duaXRpb25SZXN1bHQuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTcGVha2VyUmVjb2duaXRpb25SZXN1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWFrZXJSZWNvZ25pdGlvblJlc3VsdF9qc18xLlNwZWFrZXJSZWNvZ25pdGlvblJlc3VsdDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNwZWFrZXJSZWNvZ25pdGlvblJlc3VsdFR5cGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWFrZXJSZWNvZ25pdGlvblJlc3VsdF9qc18xLlNwZWFrZXJSZWNvZ25pdGlvblJlc3VsdFR5cGU7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTcGVha2VyUmVjb2duaXRpb25DYW5jZWxsYXRpb25EZXRhaWxzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBTcGVha2VyUmVjb2duaXRpb25SZXN1bHRfanNfMS5TcGVha2VyUmVjb2duaXRpb25DYW5jZWxsYXRpb25EZXRhaWxzOyB9IH0pO1xudmFyIEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zY3JpcHRpb24vRXhwb3J0cy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbnZlcnNhdGlvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRXhwb3J0c19qc18xLkNvbnZlcnNhdGlvbjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbnZlcnNhdGlvbkV4cGlyYXRpb25FdmVudEFyZ3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEV4cG9ydHNfanNfMS5Db252ZXJzYXRpb25FeHBpcmF0aW9uRXZlbnRBcmdzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29udmVyc2F0aW9uUGFydGljaXBhbnRzQ2hhbmdlZEV2ZW50QXJnc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRXhwb3J0c19qc18xLkNvbnZlcnNhdGlvblBhcnRpY2lwYW50c0NoYW5nZWRFdmVudEFyZ3M7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb252ZXJzYXRpb25UcmFuc2xhdGlvbkNhbmNlbGVkRXZlbnRBcmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBFeHBvcnRzX2pzXzEuQ29udmVyc2F0aW9uVHJhbnNsYXRpb25DYW5jZWxlZEV2ZW50QXJnczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbnZlcnNhdGlvblRyYW5zbGF0aW9uRXZlbnRBcmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBFeHBvcnRzX2pzXzEuQ29udmVyc2F0aW9uVHJhbnNsYXRpb25FdmVudEFyZ3M7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb252ZXJzYXRpb25UcmFuc2xhdGlvblJlc3VsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRXhwb3J0c19qc18xLkNvbnZlcnNhdGlvblRyYW5zbGF0aW9uUmVzdWx0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29udmVyc2F0aW9uVHJhbnNsYXRvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRXhwb3J0c19qc18xLkNvbnZlcnNhdGlvblRyYW5zbGF0b3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb252ZXJzYXRpb25UcmFuc2NyaWJlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRXhwb3J0c19qc18xLkNvbnZlcnNhdGlvblRyYW5zY3JpYmVyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvblJlc3VsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRXhwb3J0c19qc18xLkNvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25SZXN1bHQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNZWV0aW5nXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBFeHBvcnRzX2pzXzEuTWVldGluZzsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk1lZXRpbmdUcmFuc2NyaWJlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRXhwb3J0c19qc18xLk1lZXRpbmdUcmFuc2NyaWJlcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlBhcnRpY2lwYW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBFeHBvcnRzX2pzXzEuUGFydGljaXBhbnQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQYXJ0aWNpcGFudENoYW5nZWRSZWFzb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEV4cG9ydHNfanNfMS5QYXJ0aWNpcGFudENoYW5nZWRSZWFzb247IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVc2VyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBFeHBvcnRzX2pzXzEuVXNlcjsgfSB9KTtcbnZhciBTeW50aGVzaXplcl9qc18xID0gcmVxdWlyZShcIi4vU3ludGhlc2l6ZXIuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTeW50aGVzaXplclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU3ludGhlc2l6ZXJfanNfMS5TeW50aGVzaXplcjsgfSB9KTtcbnZhciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRfanNfMSA9IHJlcXVpcmUoXCIuL1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0X2pzXzEuU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0OyB9IH0pO1xudmFyIFNwZWVjaFN5bnRoZXNpemVyX2pzXzEgPSByZXF1aXJlKFwiLi9TcGVlY2hTeW50aGVzaXplci5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNwZWVjaFN5bnRoZXNpemVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBTcGVlY2hTeW50aGVzaXplcl9qc18xLlNwZWVjaFN5bnRoZXNpemVyOyB9IH0pO1xudmFyIFN5bnRoZXNpc1Jlc3VsdF9qc18xID0gcmVxdWlyZShcIi4vU3ludGhlc2lzUmVzdWx0LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3ludGhlc2lzUmVzdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBTeW50aGVzaXNSZXN1bHRfanNfMS5TeW50aGVzaXNSZXN1bHQ7IH0gfSk7XG52YXIgU3BlZWNoU3ludGhlc2lzUmVzdWx0X2pzXzEgPSByZXF1aXJlKFwiLi9TcGVlY2hTeW50aGVzaXNSZXN1bHQuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTcGVlY2hTeW50aGVzaXNSZXN1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWVjaFN5bnRoZXNpc1Jlc3VsdF9qc18xLlNwZWVjaFN5bnRoZXNpc1Jlc3VsdDsgfSB9KTtcbnZhciBTcGVlY2hTeW50aGVzaXNFdmVudEFyZ3NfanNfMSA9IHJlcXVpcmUoXCIuL1NwZWVjaFN5bnRoZXNpc0V2ZW50QXJncy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNwZWVjaFN5bnRoZXNpc0V2ZW50QXJnc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU3BlZWNoU3ludGhlc2lzRXZlbnRBcmdzX2pzXzEuU3BlZWNoU3ludGhlc2lzRXZlbnRBcmdzOyB9IH0pO1xudmFyIFNwZWVjaFN5bnRoZXNpc1dvcmRCb3VuZGFyeUV2ZW50QXJnc19qc18xID0gcmVxdWlyZShcIi4vU3BlZWNoU3ludGhlc2lzV29yZEJvdW5kYXJ5RXZlbnRBcmdzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3BlZWNoU3ludGhlc2lzV29yZEJvdW5kYXJ5RXZlbnRBcmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBTcGVlY2hTeW50aGVzaXNXb3JkQm91bmRhcnlFdmVudEFyZ3NfanNfMS5TcGVlY2hTeW50aGVzaXNXb3JkQm91bmRhcnlFdmVudEFyZ3M7IH0gfSk7XG52YXIgU3BlZWNoU3ludGhlc2lzQm9va21hcmtFdmVudEFyZ3NfanNfMSA9IHJlcXVpcmUoXCIuL1NwZWVjaFN5bnRoZXNpc0Jvb2ttYXJrRXZlbnRBcmdzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3BlZWNoU3ludGhlc2lzQm9va21hcmtFdmVudEFyZ3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWVjaFN5bnRoZXNpc0Jvb2ttYXJrRXZlbnRBcmdzX2pzXzEuU3BlZWNoU3ludGhlc2lzQm9va21hcmtFdmVudEFyZ3M7IH0gfSk7XG52YXIgU3BlZWNoU3ludGhlc2lzVmlzZW1lRXZlbnRBcmdzX2pzXzEgPSByZXF1aXJlKFwiLi9TcGVlY2hTeW50aGVzaXNWaXNlbWVFdmVudEFyZ3MuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTcGVlY2hTeW50aGVzaXNWaXNlbWVFdmVudEFyZ3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFNwZWVjaFN5bnRoZXNpc1Zpc2VtZUV2ZW50QXJnc19qc18xLlNwZWVjaFN5bnRoZXNpc1Zpc2VtZUV2ZW50QXJnczsgfSB9KTtcbnZhciBTcGVlY2hTeW50aGVzaXNCb3VuZGFyeVR5cGVfanNfMSA9IHJlcXVpcmUoXCIuL1NwZWVjaFN5bnRoZXNpc0JvdW5kYXJ5VHlwZS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNwZWVjaFN5bnRoZXNpc0JvdW5kYXJ5VHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU3BlZWNoU3ludGhlc2lzQm91bmRhcnlUeXBlX2pzXzEuU3BlZWNoU3ludGhlc2lzQm91bmRhcnlUeXBlOyB9IH0pO1xudmFyIFN5bnRoZXNpc1ZvaWNlc1Jlc3VsdF9qc18xID0gcmVxdWlyZShcIi4vU3ludGhlc2lzVm9pY2VzUmVzdWx0LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3ludGhlc2lzVm9pY2VzUmVzdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBTeW50aGVzaXNWb2ljZXNSZXN1bHRfanNfMS5TeW50aGVzaXNWb2ljZXNSZXN1bHQ7IH0gfSk7XG52YXIgVm9pY2VJbmZvX2pzXzEgPSByZXF1aXJlKFwiLi9Wb2ljZUluZm8uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJWb2ljZUluZm9cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFZvaWNlSW5mb19qc18xLlZvaWNlSW5mbzsgfSB9KTtcbnZhciBTcGVha2VyQXVkaW9EZXN0aW5hdGlvbl9qc18xID0gcmVxdWlyZShcIi4vQXVkaW8vU3BlYWtlckF1ZGlvRGVzdGluYXRpb24uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTcGVha2VyQXVkaW9EZXN0aW5hdGlvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU3BlYWtlckF1ZGlvRGVzdGluYXRpb25fanNfMS5TcGVha2VyQXVkaW9EZXN0aW5hdGlvbjsgfSB9KTtcbnZhciBDb252ZXJzYXRpb25UcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3NfanNfMSA9IHJlcXVpcmUoXCIuL0NvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25DYW5jZWxlZEV2ZW50QXJncy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25DYW5jZWxlZEV2ZW50QXJnc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvbkNhbmNlbGVkRXZlbnRBcmdzX2pzXzEuQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvbkNhbmNlbGVkRXZlbnRBcmdzOyB9IH0pO1xudmFyIE1lZXRpbmdUcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3NfanNfMSA9IHJlcXVpcmUoXCIuL01lZXRpbmdUcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3MuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNZWV0aW5nVHJhbnNjcmlwdGlvbkNhbmNlbGVkRXZlbnRBcmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBNZWV0aW5nVHJhbnNjcmlwdGlvbkNhbmNlbGVkRXZlbnRBcmdzX2pzXzEuTWVldGluZ1RyYW5zY3JpcHRpb25DYW5jZWxlZEV2ZW50QXJnczsgfSB9KTtcbnZhciBQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYWRpbmdTeXN0ZW1fanNfMSA9IHJlcXVpcmUoXCIuL1Byb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhZGluZ1N5c3RlbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlByb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhZGluZ1N5c3RlbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRHcmFkaW5nU3lzdGVtX2pzXzEuUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRHcmFkaW5nU3lzdGVtOyB9IH0pO1xudmFyIFByb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhbnVsYXJpdHlfanNfMSA9IHJlcXVpcmUoXCIuL1Byb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhbnVsYXJpdHkuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYW51bGFyaXR5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYW51bGFyaXR5X2pzXzEuUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRHcmFudWxhcml0eTsgfSB9KTtcbnZhciBQcm9udW5jaWF0aW9uQXNzZXNzbWVudENvbmZpZ19qc18xID0gcmVxdWlyZShcIi4vUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRDb25maWcuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQcm9udW5jaWF0aW9uQXNzZXNzbWVudENvbmZpZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRDb25maWdfanNfMS5Qcm9udW5jaWF0aW9uQXNzZXNzbWVudENvbmZpZzsgfSB9KTtcbnZhciBQcm9udW5jaWF0aW9uQXNzZXNzbWVudFJlc3VsdF9qc18xID0gcmVxdWlyZShcIi4vUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRSZXN1bHQuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQcm9udW5jaWF0aW9uQXNzZXNzbWVudFJlc3VsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRSZXN1bHRfanNfMS5Qcm9udW5jaWF0aW9uQXNzZXNzbWVudFJlc3VsdDsgfSB9KTtcbnZhciBMYW5ndWFnZUlkTW9kZV9qc18xID0gcmVxdWlyZShcIi4vTGFuZ3VhZ2VJZE1vZGUuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJMYW5ndWFnZUlkTW9kZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gTGFuZ3VhZ2VJZE1vZGVfanNfMS5MYW5ndWFnZUlkTW9kZTsgfSB9KTtcbnZhciBBdmF0YXJDb25maWdfanNfMSA9IHJlcXVpcmUoXCIuL0F2YXRhckNvbmZpZy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF2YXRhckNvbmZpZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQXZhdGFyQ29uZmlnX2pzXzEuQXZhdGFyQ29uZmlnOyB9IH0pO1xudmFyIEF2YXRhckV2ZW50QXJnc19qc18xID0gcmVxdWlyZShcIi4vQXZhdGFyRXZlbnRBcmdzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXZhdGFyRXZlbnRBcmdzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBBdmF0YXJFdmVudEFyZ3NfanNfMS5BdmF0YXJFdmVudEFyZ3M7IH0gfSk7XG52YXIgQXZhdGFyU3ludGhlc2l6ZXJfanNfMSA9IHJlcXVpcmUoXCIuL0F2YXRhclN5bnRoZXNpemVyLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXZhdGFyU3ludGhlc2l6ZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEF2YXRhclN5bnRoZXNpemVyX2pzXzEuQXZhdGFyU3ludGhlc2l6ZXI7IH0gfSk7XG52YXIgQXZhdGFyVmlkZW9Gb3JtYXRfanNfMSA9IHJlcXVpcmUoXCIuL0F2YXRhclZpZGVvRm9ybWF0LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXZhdGFyVmlkZW9Gb3JtYXRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEF2YXRhclZpZGVvRm9ybWF0X2pzXzEuQXZhdGFyVmlkZW9Gb3JtYXQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb29yZGluYXRlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBBdmF0YXJWaWRlb0Zvcm1hdF9qc18xLkNvb3JkaW5hdGU7IH0gfSk7XG52YXIgQXZhdGFyV2ViUlRDQ29ubmVjdGlvblJlc3VsdF9qc18xID0gcmVxdWlyZShcIi4vQXZhdGFyV2ViUlRDQ29ubmVjdGlvblJlc3VsdC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF2YXRhcldlYlJUQ0Nvbm5lY3Rpb25SZXN1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEF2YXRhcldlYlJUQ0Nvbm5lY3Rpb25SZXN1bHRfanNfMS5BdmF0YXJXZWJSVENDb25uZWN0aW9uUmVzdWx0OyB9IH0pO1xudmFyIERpYWdub3N0aWNzX2pzXzEgPSByZXF1aXJlKFwiLi9EaWFnbm9zdGljcy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkRpYWdub3N0aWNzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBEaWFnbm9zdGljc19qc18xLkRpYWdub3N0aWNzOyB9IH0pO1xudmFyIExvZ0xldmVsX2pzXzEgPSByZXF1aXJlKFwiLi9Mb2dMZXZlbC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkxvZ0xldmVsXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBMb2dMZXZlbF9qc18xLkxvZ0xldmVsOyB9IH0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1FeHBvcnRzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionCanceledEventArgs.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionCanceledEventArgs.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IntentRecognitionCanceledEventArgs = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Define payload of intent recognition canceled result events.\n * @class IntentRecognitionCanceledEventArgs\n */\nclass IntentRecognitionCanceledEventArgs extends Exports_js_1.IntentRecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} result - The result of the intent recognition.\n     * @param {string} offset - The offset.\n     * @param {IntentRecognitionResult} sessionId - The session id.\n     */\n    constructor(reason, errorDetails, errorCode, result, offset, sessionId) {\n        super(result, offset, sessionId);\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member IntentRecognitionCanceledEventArgs.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * The error code in case of an unsuccessful recognition.\n     * Added in version 1.1.0.\n     * @return An error code that represents the error reason.\n     */\n    get errorCode() {\n        return this.privErrorCode;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member IntentRecognitionCanceledEventArgs.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\nexports.IntentRecognitionCanceledEventArgs = IntentRecognitionCanceledEventArgs;\n\n//# sourceMappingURL=IntentRecognitionCanceledEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9JbnRlbnRSZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQ0FBMEM7QUFDMUMscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0JBQW9CO0FBQ25DLGVBQWUsUUFBUTtBQUN2QixlQUFlLHlCQUF5QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsb0JBQW9CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDOztBQUUxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvSW50ZW50UmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJncy5qcz9mYWQ2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkludGVudFJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3MgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuLyoqXG4gKiBEZWZpbmUgcGF5bG9hZCBvZiBpbnRlbnQgcmVjb2duaXRpb24gY2FuY2VsZWQgcmVzdWx0IGV2ZW50cy5cbiAqIEBjbGFzcyBJbnRlbnRSZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzXG4gKi9cbmNsYXNzIEludGVudFJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3MgZXh0ZW5kcyBFeHBvcnRzX2pzXzEuSW50ZW50UmVjb2duaXRpb25FdmVudEFyZ3Mge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtDYW5jZWxsYXRpb25SZWFzb259IHJlc3VsdCAtIFRoZSByZXN1bHQgb2YgdGhlIGludGVudCByZWNvZ25pdGlvbi5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gb2Zmc2V0IC0gVGhlIG9mZnNldC5cbiAgICAgKiBAcGFyYW0ge0ludGVudFJlY29nbml0aW9uUmVzdWx0fSBzZXNzaW9uSWQgLSBUaGUgc2Vzc2lvbiBpZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyZWFzb24sIGVycm9yRGV0YWlscywgZXJyb3JDb2RlLCByZXN1bHQsIG9mZnNldCwgc2Vzc2lvbklkKSB7XG4gICAgICAgIHN1cGVyKHJlc3VsdCwgb2Zmc2V0LCBzZXNzaW9uSWQpO1xuICAgICAgICB0aGlzLnByaXZSZWFzb24gPSByZWFzb247XG4gICAgICAgIHRoaXMucHJpdkVycm9yRGV0YWlscyA9IGVycm9yRGV0YWlscztcbiAgICAgICAgdGhpcy5wcml2RXJyb3JDb2RlID0gZXJyb3JDb2RlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgcmVhc29uIHRoZSByZWNvZ25pdGlvbiB3YXMgY2FuY2VsZWQuXG4gICAgICogQG1lbWJlciBJbnRlbnRSZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzLnByb3RvdHlwZS5yZWFzb25cbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge0NhbmNlbGxhdGlvblJlYXNvbn0gU3BlY2lmaWVzIHRoZSByZWFzb24gY2FuY2VsZWQuXG4gICAgICovXG4gICAgZ2V0IHJlYXNvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlJlYXNvbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIGVycm9yIGNvZGUgaW4gY2FzZSBvZiBhbiB1bnN1Y2Nlc3NmdWwgcmVjb2duaXRpb24uXG4gICAgICogQWRkZWQgaW4gdmVyc2lvbiAxLjEuMC5cbiAgICAgKiBAcmV0dXJuIEFuIGVycm9yIGNvZGUgdGhhdCByZXByZXNlbnRzIHRoZSBlcnJvciByZWFzb24uXG4gICAgICovXG4gICAgZ2V0IGVycm9yQ29kZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkVycm9yQ29kZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW4gY2FzZSBvZiBhbiB1bnN1Y2Nlc3NmdWwgcmVjb2duaXRpb24sIHByb3ZpZGVzIGRldGFpbHMgb2YgdGhlIG9jY3VycmVkIGVycm9yLlxuICAgICAqIEBtZW1iZXIgSW50ZW50UmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJncy5wcm90b3R5cGUuZXJyb3JEZXRhaWxzXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IEEgU3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgZXJyb3IgZGV0YWlscy5cbiAgICAgKi9cbiAgICBnZXQgZXJyb3JEZXRhaWxzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RXJyb3JEZXRhaWxzO1xuICAgIH1cbn1cbmV4cG9ydHMuSW50ZW50UmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJncyA9IEludGVudFJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3M7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUludGVudFJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3MuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionCanceledEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionEventArgs.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionEventArgs.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IntentRecognitionEventArgs = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Intent recognition result event arguments.\n * @class\n */\nclass IntentRecognitionEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param result - The result of the intent recognition.\n     * @param offset - The offset.\n     * @param sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Represents the intent recognition result.\n     * @member IntentRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {IntentRecognitionResult} Represents the intent recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.IntentRecognitionEventArgs = IntentRecognitionEventArgs;\n\n//# sourceMappingURL=IntentRecognitionEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9JbnRlbnRSZWNvZ25pdGlvbkV2ZW50QXJncy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDLHFCQUFxQixtQkFBTyxDQUFDLGdIQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix5QkFBeUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQzs7QUFFbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL0ludGVudFJlY29nbml0aW9uRXZlbnRBcmdzLmpzP2I4ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW50ZW50UmVjb2duaXRpb25FdmVudEFyZ3MgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuLyoqXG4gKiBJbnRlbnQgcmVjb2duaXRpb24gcmVzdWx0IGV2ZW50IGFyZ3VtZW50cy5cbiAqIEBjbGFzc1xuICovXG5jbGFzcyBJbnRlbnRSZWNvZ25pdGlvbkV2ZW50QXJncyBleHRlbmRzIEV4cG9ydHNfanNfMS5SZWNvZ25pdGlvbkV2ZW50QXJncyB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYW4gaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcy5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0gcmVzdWx0IC0gVGhlIHJlc3VsdCBvZiB0aGUgaW50ZW50IHJlY29nbml0aW9uLlxuICAgICAqIEBwYXJhbSBvZmZzZXQgLSBUaGUgb2Zmc2V0LlxuICAgICAqIEBwYXJhbSBzZXNzaW9uSWQgLSBUaGUgc2Vzc2lvbiBpZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyZXN1bHQsIG9mZnNldCwgc2Vzc2lvbklkKSB7XG4gICAgICAgIHN1cGVyKG9mZnNldCwgc2Vzc2lvbklkKTtcbiAgICAgICAgdGhpcy5wcml2UmVzdWx0ID0gcmVzdWx0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXByZXNlbnRzIHRoZSBpbnRlbnQgcmVjb2duaXRpb24gcmVzdWx0LlxuICAgICAqIEBtZW1iZXIgSW50ZW50UmVjb2duaXRpb25FdmVudEFyZ3MucHJvdG90eXBlLnJlc3VsdFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7SW50ZW50UmVjb2duaXRpb25SZXN1bHR9IFJlcHJlc2VudHMgdGhlIGludGVudCByZWNvZ25pdGlvbiByZXN1bHQuXG4gICAgICovXG4gICAgZ2V0IHJlc3VsdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlJlc3VsdDtcbiAgICB9XG59XG5leHBvcnRzLkludGVudFJlY29nbml0aW9uRXZlbnRBcmdzID0gSW50ZW50UmVjb2duaXRpb25FdmVudEFyZ3M7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUludGVudFJlY29nbml0aW9uRXZlbnRBcmdzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionResult.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionResult.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IntentRecognitionResult = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Intent recognition result.\n * @class\n */\nclass IntentRecognitionResult extends Exports_js_1.SpeechRecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param intentId - The intent id.\n     * @param resultId - The result id.\n     * @param reason - The reason.\n     * @param text - The recognized text.\n     * @param duration - The duration.\n     * @param offset - The offset into the stream.\n     * @param language - Primary Language detected, if provided.\n     * @param languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param errorDetails - Error details, if provided.\n     * @param json - Additional Json, if provided.\n     * @param properties - Additional properties, if provided.\n     */\n    constructor(intentId, resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\n        this.privIntentId = intentId;\n    }\n    /**\n     * A String that represents the intent identifier being recognized.\n     * @member IntentRecognitionResult.prototype.intentId\n     * @function\n     * @public\n     * @returns {string} A String that represents the intent identifier being recognized.\n     */\n    get intentId() {\n        return this.privIntentId;\n    }\n}\nexports.IntentRecognitionResult = IntentRecognitionResult;\n\n//# sourceMappingURL=IntentRecognitionResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9JbnRlbnRSZWNvZ25pdGlvblJlc3VsdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CLHFCQUFxQixtQkFBTyxDQUFDLGdIQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCOztBQUUvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvSW50ZW50UmVjb2duaXRpb25SZXN1bHQuanM/N2I0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JbnRlbnRSZWNvZ25pdGlvblJlc3VsdCA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG4vKipcbiAqIEludGVudCByZWNvZ25pdGlvbiByZXN1bHQuXG4gKiBAY2xhc3NcbiAqL1xuY2xhc3MgSW50ZW50UmVjb2duaXRpb25SZXN1bHQgZXh0ZW5kcyBFeHBvcnRzX2pzXzEuU3BlZWNoUmVjb2duaXRpb25SZXN1bHQge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIGludGVudElkIC0gVGhlIGludGVudCBpZC5cbiAgICAgKiBAcGFyYW0gcmVzdWx0SWQgLSBUaGUgcmVzdWx0IGlkLlxuICAgICAqIEBwYXJhbSByZWFzb24gLSBUaGUgcmVhc29uLlxuICAgICAqIEBwYXJhbSB0ZXh0IC0gVGhlIHJlY29nbml6ZWQgdGV4dC5cbiAgICAgKiBAcGFyYW0gZHVyYXRpb24gLSBUaGUgZHVyYXRpb24uXG4gICAgICogQHBhcmFtIG9mZnNldCAtIFRoZSBvZmZzZXQgaW50byB0aGUgc3RyZWFtLlxuICAgICAqIEBwYXJhbSBsYW5ndWFnZSAtIFByaW1hcnkgTGFuZ3VhZ2UgZGV0ZWN0ZWQsIGlmIHByb3ZpZGVkLlxuICAgICAqIEBwYXJhbSBsYW5ndWFnZURldGVjdGlvbkNvbmZpZGVuY2UgLSBQcmltYXJ5IExhbmd1YWdlIGNvbmZpZGVuY2UgKFwiVW5rbm93bixcIiBcIkxvdyxcIiBcIk1lZGl1bSxcIiBcIkhpZ2hcIi4uLiksIGlmIHByb3ZpZGVkLlxuICAgICAqIEBwYXJhbSBlcnJvckRldGFpbHMgLSBFcnJvciBkZXRhaWxzLCBpZiBwcm92aWRlZC5cbiAgICAgKiBAcGFyYW0ganNvbiAtIEFkZGl0aW9uYWwgSnNvbiwgaWYgcHJvdmlkZWQuXG4gICAgICogQHBhcmFtIHByb3BlcnRpZXMgLSBBZGRpdGlvbmFsIHByb3BlcnRpZXMsIGlmIHByb3ZpZGVkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGludGVudElkLCByZXN1bHRJZCwgcmVhc29uLCB0ZXh0LCBkdXJhdGlvbiwgb2Zmc2V0LCBsYW5ndWFnZSwgbGFuZ3VhZ2VEZXRlY3Rpb25Db25maWRlbmNlLCBlcnJvckRldGFpbHMsIGpzb24sIHByb3BlcnRpZXMpIHtcbiAgICAgICAgc3VwZXIocmVzdWx0SWQsIHJlYXNvbiwgdGV4dCwgZHVyYXRpb24sIG9mZnNldCwgbGFuZ3VhZ2UsIGxhbmd1YWdlRGV0ZWN0aW9uQ29uZmlkZW5jZSwgdW5kZWZpbmVkLCBlcnJvckRldGFpbHMsIGpzb24sIHByb3BlcnRpZXMpO1xuICAgICAgICB0aGlzLnByaXZJbnRlbnRJZCA9IGludGVudElkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBIFN0cmluZyB0aGF0IHJlcHJlc2VudHMgdGhlIGludGVudCBpZGVudGlmaWVyIGJlaW5nIHJlY29nbml6ZWQuXG4gICAgICogQG1lbWJlciBJbnRlbnRSZWNvZ25pdGlvblJlc3VsdC5wcm90b3R5cGUuaW50ZW50SWRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge3N0cmluZ30gQSBTdHJpbmcgdGhhdCByZXByZXNlbnRzIHRoZSBpbnRlbnQgaWRlbnRpZmllciBiZWluZyByZWNvZ25pemVkLlxuICAgICAqL1xuICAgIGdldCBpbnRlbnRJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkludGVudElkO1xuICAgIH1cbn1cbmV4cG9ydHMuSW50ZW50UmVjb2duaXRpb25SZXN1bHQgPSBJbnRlbnRSZWNvZ25pdGlvblJlc3VsdDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW50ZW50UmVjb2duaXRpb25SZXN1bHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognitionResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognizer.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognizer.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IntentRecognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Intent recognizer.\n * @class\n */\nclass IntentRecognizer extends Exports_js_3.Recognizer {\n    /**\n     * Initializes an instance of the IntentRecognizer.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\n        super(audioConfig, configImpl.properties, new Exports_js_1.IntentConnectionFactory());\n        this.privAddedIntents = [];\n        this.privAddedLmIntents = {};\n        this.privDisposedIntentRecognizer = false;\n        this.privProperties = configImpl.properties;\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n    }\n    /**\n     * Gets the spoken language of recognition.\n     * @member IntentRecognizer.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} the spoken language of recognition.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member IntentRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key for the Intent recognizer.\n     * @member IntentRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} value - Authorization token.\n     */\n    set authorizationToken(value) {\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    /**\n     * The collection of properties and their values defined for this IntentRecognizer.\n     * @member IntentRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their\n     * values defined for this IntentRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts intent recognition, and stops after the first utterance is recognized.\n     * The task returns the recognition text and intent as result.\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\n     * so it is suitable only for single shot recognition like command or query.\n     * For long-running recognition, use StartContinuousRecognitionAsync() instead.\n     * @member IntentRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the recognition has finished with an IntentRecognitionResult.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(cb, err) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\n            const context = this.buildSpeechContext();\n            this.privReco.speechContext.setSection(\"intent\", context.Intent);\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\n            const intentReco = this.privReco;\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\n        }\n        Exports_js_2.marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(Exports_js_1.RecognitionMode.Interactive), cb, err);\n    }\n    /**\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * @member IntentRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startContinuousRecognitionAsync(cb, err) {\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\n            const context = this.buildSpeechContext();\n            this.privReco.speechContext.setSection(\"intent\", context.Intent);\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\n            const intentReco = this.privReco;\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\n        }\n        Exports_js_2.marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(Exports_js_1.RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops continuous intent recognition.\n     * @member IntentRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopContinuousRecognitionAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * Starts speech recognition with keyword spotting, until stopKeywordRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\n     * This functionality is currently not included in the SDK itself.\n     * @member IntentRecognizer.prototype.startKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param {KeywordRecognitionModel} model - The keyword recognition model that specifies the keyword to be recognized.\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startKeywordRecognitionAsync(model, cb, err) {\n        Contracts_js_1.Contracts.throwIfNull(model, \"model\");\n        if (!!err) {\n            err(\"Not yet implemented.\");\n        }\n    }\n    /**\n     * Stops continuous speech recognition.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\n     * This functionality is currently not included in the SDK itself.\n     * @member IntentRecognizer.prototype.stopKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopKeywordRecognitionAsync(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n        }\n    }\n    /**\n     * Adds a phrase that should be recognized as intent.\n     * @member IntentRecognizer.prototype.addIntent\n     * @function\n     * @public\n     * @param {string} intentId - A String that represents the identifier of the intent to be recognized.\n     * @param {string} phrase - A String that specifies the phrase representing the intent.\n     */\n    addIntent(simplePhrase, intentId) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(simplePhrase, \"simplePhrase\");\n        this.privAddedIntents.push([intentId, simplePhrase]);\n    }\n    /**\n     * Adds an intent from Language Understanding service for recognition.\n     * @member IntentRecognizer.prototype.addIntentWithLanguageModel\n     * @function\n     * @public\n     * @param {string} intentId - A String that represents the identifier of the intent\n     * to be recognized. Ignored if intentName is empty.\n     * @param {string} model - The intent model from Language Understanding service.\n     * @param {string} intentName - The intent name defined in the intent model. If it\n     * is empty, all intent names defined in the model will be added.\n     */\n    addIntentWithLanguageModel(intentId, model, intentName) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\n        Contracts_js_1.Contracts.throwIfNull(model, \"model\");\n        const modelImpl = model;\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\n        this.privAddedLmIntents[intentId] = new Exports_js_1.AddedLmIntent(modelImpl, intentName);\n    }\n    /**\n     * @summary Adds all intents from the specified Language Understanding Model.\n     * @member IntentRecognizer.prototype.addAllIntents\n     * @function\n     * @public\n     * @function\n     * @public\n     * @param {LanguageUnderstandingModel} model - The language understanding model containing the intents.\n     * @param {string} intentId - A custom id String to be returned in the IntentRecognitionResult's getIntentId() method.\n     */\n    addAllIntents(model, intentId) {\n        Contracts_js_1.Contracts.throwIfNull(model, \"model\");\n        const modelImpl = model;\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\n        this.privUmbrellaIntent = new Exports_js_1.AddedLmIntent(modelImpl, intentId);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member IntentRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        Exports_js_2.marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioImpl = audioConfig;\n        return new Exports_js_1.IntentServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\n    }\n    async dispose(disposing) {\n        if (this.privDisposedIntentRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedIntentRecognizer = true;\n            await super.dispose(disposing);\n        }\n    }\n    buildSpeechContext() {\n        let appId;\n        let region;\n        let subscriptionKey;\n        const refGrammers = [];\n        if (undefined !== this.privUmbrellaIntent) {\n            appId = this.privUmbrellaIntent.modelImpl.appId;\n            region = this.privUmbrellaIntent.modelImpl.region;\n            subscriptionKey = this.privUmbrellaIntent.modelImpl.subscriptionKey;\n        }\n        // Build the reference grammer array.\n        for (const intentId of Object.keys(this.privAddedLmIntents)) {\n            const addedLmIntent = this.privAddedLmIntents[intentId];\n            // validate all the same model, region, and key...\n            if (appId === undefined) {\n                appId = addedLmIntent.modelImpl.appId;\n            }\n            else {\n                if (appId !== addedLmIntent.modelImpl.appId) {\n                    throw new Error(\"Intents must all be from the same LUIS model\");\n                }\n            }\n            if (region === undefined) {\n                region = addedLmIntent.modelImpl.region;\n            }\n            else {\n                if (region !== addedLmIntent.modelImpl.region) {\n                    throw new Error(\"Intents must all be from the same LUIS model in a single region\");\n                }\n            }\n            if (subscriptionKey === undefined) {\n                subscriptionKey = addedLmIntent.modelImpl.subscriptionKey;\n            }\n            else {\n                if (subscriptionKey !== addedLmIntent.modelImpl.subscriptionKey) {\n                    throw new Error(\"Intents must all use the same subscription key\");\n                }\n            }\n            const grammer = \"luis/\" + appId + \"-PRODUCTION#\" + intentId;\n            refGrammers.push(grammer);\n        }\n        return {\n            Intent: {\n                id: appId,\n                key: (subscriptionKey === undefined) ? this.privProperties.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_Key]) : subscriptionKey,\n                provider: \"LUIS\",\n            },\n            ReferenceGrammars: (undefined === this.privUmbrellaIntent) ? refGrammers : [\"luis/\" + appId + \"-PRODUCTION\"],\n        };\n    }\n}\nexports.IntentRecognizer = IntentRecognizer;\n\n//# sourceMappingURL=IntentRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/IntentRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/KeywordRecognitionModel.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/KeywordRecognitionModel.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeywordRecognitionModel = void 0;\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\n/**\n * Represents a keyword recognition model for recognizing when\n * the user says a keyword to initiate further speech recognition.\n * @class KeywordRecognitionModel\n */\nclass KeywordRecognitionModel {\n    /**\n     * Create and initializes a new instance.\n     * @constructor\n     */\n    constructor() {\n        this.privDisposed = false;\n        return;\n    }\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromFile\n     * @function\n     * @public\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\n     * Note, the file can point to a zip file in which case the model\n     * will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n    static fromFile(fileName) {\n        Contracts_js_1.Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\n        throw new Error(\"Not yet implemented.\");\n    }\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromStream\n     * @function\n     * @public\n     * @param {string} file - A File that represents file for the keyword recognition model.\n     * Note, the file can point to a zip file in which case the model will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n    static fromStream(file) {\n        Contracts_js_1.Contracts.throwIfNull(file, \"file\");\n        throw new Error(\"Not yet implemented.\");\n    }\n    /**\n     * Dispose of associated resources.\n     * @member KeywordRecognitionModel.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        if (this.privDisposed) {\n            return;\n        }\n        this.privDisposed = true;\n    }\n}\nexports.KeywordRecognitionModel = KeywordRecognitionModel;\n\n//# sourceMappingURL=KeywordRecognitionModel.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9LZXl3b3JkUmVjb2duaXRpb25Nb2RlbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CLHVCQUF1QixtQkFBTyxDQUFDLG9IQUFnQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0EsaUJBQWlCLHlCQUF5QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGlCQUFpQix5QkFBeUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCOztBQUUvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvS2V5d29yZFJlY29nbml0aW9uTW9kZWwuanM/ODcwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LZXl3b3JkUmVjb2duaXRpb25Nb2RlbCA9IHZvaWQgMDtcbmNvbnN0IENvbnRyYWN0c19qc18xID0gcmVxdWlyZShcIi4vQ29udHJhY3RzLmpzXCIpO1xuLyoqXG4gKiBSZXByZXNlbnRzIGEga2V5d29yZCByZWNvZ25pdGlvbiBtb2RlbCBmb3IgcmVjb2duaXppbmcgd2hlblxuICogdGhlIHVzZXIgc2F5cyBhIGtleXdvcmQgdG8gaW5pdGlhdGUgZnVydGhlciBzcGVlY2ggcmVjb2duaXRpb24uXG4gKiBAY2xhc3MgS2V5d29yZFJlY29nbml0aW9uTW9kZWxcbiAqL1xuY2xhc3MgS2V5d29yZFJlY29nbml0aW9uTW9kZWwge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbmQgaW5pdGlhbGl6ZXMgYSBuZXcgaW5zdGFuY2UuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucHJpdkRpc3Bvc2VkID0gZmFsc2U7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGtleXdvcmQgcmVjb2duaXRpb24gbW9kZWwgdXNpbmcgdGhlIHNwZWNpZmllZCBmaWxlbmFtZS5cbiAgICAgKiBAbWVtYmVyIEtleXdvcmRSZWNvZ25pdGlvbk1vZGVsLmZyb21GaWxlXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBmaWxlTmFtZSAtIEEgc3RyaW5nIHRoYXQgcmVwcmVzZW50cyBmaWxlIG5hbWUgZm9yIHRoZSBrZXl3b3JkIHJlY29nbml0aW9uIG1vZGVsLlxuICAgICAqIE5vdGUsIHRoZSBmaWxlIGNhbiBwb2ludCB0byBhIHppcCBmaWxlIGluIHdoaWNoIGNhc2UgdGhlIG1vZGVsXG4gICAgICogd2lsbCBiZSBleHRyYWN0ZWQgZnJvbSB0aGUgemlwLlxuICAgICAqIEByZXR1cm5zIHtLZXl3b3JkUmVjb2duaXRpb25Nb2RlbH0gVGhlIGtleXdvcmQgcmVjb2duaXRpb24gbW9kZWwgYmVpbmcgY3JlYXRlZC5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbUZpbGUoZmlsZU5hbWUpIHtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZGaWxlRG9lc05vdEV4aXN0KGZpbGVOYW1lLCBcImZpbGVOYW1lXCIpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkLlwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGtleXdvcmQgcmVjb2duaXRpb24gbW9kZWwgdXNpbmcgdGhlIHNwZWNpZmllZCBmaWxlbmFtZS5cbiAgICAgKiBAbWVtYmVyIEtleXdvcmRSZWNvZ25pdGlvbk1vZGVsLmZyb21TdHJlYW1cbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGZpbGUgLSBBIEZpbGUgdGhhdCByZXByZXNlbnRzIGZpbGUgZm9yIHRoZSBrZXl3b3JkIHJlY29nbml0aW9uIG1vZGVsLlxuICAgICAqIE5vdGUsIHRoZSBmaWxlIGNhbiBwb2ludCB0byBhIHppcCBmaWxlIGluIHdoaWNoIGNhc2UgdGhlIG1vZGVsIHdpbGwgYmUgZXh0cmFjdGVkIGZyb20gdGhlIHppcC5cbiAgICAgKiBAcmV0dXJucyB7S2V5d29yZFJlY29nbml0aW9uTW9kZWx9IFRoZSBrZXl3b3JkIHJlY29nbml0aW9uIG1vZGVsIGJlaW5nIGNyZWF0ZWQuXG4gICAgICovXG4gICAgc3RhdGljIGZyb21TdHJlYW0oZmlsZSkge1xuICAgICAgICBDb250cmFjdHNfanNfMS5Db250cmFjdHMudGhyb3dJZk51bGwoZmlsZSwgXCJmaWxlXCIpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgeWV0IGltcGxlbWVudGVkLlwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGlzcG9zZSBvZiBhc3NvY2lhdGVkIHJlc291cmNlcy5cbiAgICAgKiBAbWVtYmVyIEtleXdvcmRSZWNvZ25pdGlvbk1vZGVsLnByb3RvdHlwZS5jbG9zZVxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKi9cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgaWYgKHRoaXMucHJpdkRpc3Bvc2VkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcml2RGlzcG9zZWQgPSB0cnVlO1xuICAgIH1cbn1cbmV4cG9ydHMuS2V5d29yZFJlY29nbml0aW9uTW9kZWwgPSBLZXl3b3JkUmVjb2duaXRpb25Nb2RlbDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9S2V5d29yZFJlY29nbml0aW9uTW9kZWwuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/KeywordRecognitionModel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageIdMode.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageIdMode.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LanguageIdMode = void 0;\n/**\n * Language Identification mode\n * @class LanguageIdMode\n */\nvar LanguageIdMode;\n(function (LanguageIdMode) {\n    /**\n     * Detect language at audio start\n     * @member LanguageIdMode.AtStart\n     */\n    LanguageIdMode[LanguageIdMode[\"AtStart\"] = 0] = \"AtStart\";\n    /**\n     * Continuously detect language\n     * @member LanguageIdMode.Continuous\n     */\n    LanguageIdMode[LanguageIdMode[\"Continuous\"] = 1] = \"Continuous\";\n})(LanguageIdMode = exports.LanguageIdMode || (exports.LanguageIdMode = {}));\n\n//# sourceMappingURL=LanguageIdMode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9MYW5ndWFnZUlkTW9kZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw4Q0FBOEMsc0JBQXNCLEtBQUs7O0FBRTFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9MYW5ndWFnZUlkTW9kZS5qcz84YjkxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxhbmd1YWdlSWRNb2RlID0gdm9pZCAwO1xuLyoqXG4gKiBMYW5ndWFnZSBJZGVudGlmaWNhdGlvbiBtb2RlXG4gKiBAY2xhc3MgTGFuZ3VhZ2VJZE1vZGVcbiAqL1xudmFyIExhbmd1YWdlSWRNb2RlO1xuKGZ1bmN0aW9uIChMYW5ndWFnZUlkTW9kZSkge1xuICAgIC8qKlxuICAgICAqIERldGVjdCBsYW5ndWFnZSBhdCBhdWRpbyBzdGFydFxuICAgICAqIEBtZW1iZXIgTGFuZ3VhZ2VJZE1vZGUuQXRTdGFydFxuICAgICAqL1xuICAgIExhbmd1YWdlSWRNb2RlW0xhbmd1YWdlSWRNb2RlW1wiQXRTdGFydFwiXSA9IDBdID0gXCJBdFN0YXJ0XCI7XG4gICAgLyoqXG4gICAgICogQ29udGludW91c2x5IGRldGVjdCBsYW5ndWFnZVxuICAgICAqIEBtZW1iZXIgTGFuZ3VhZ2VJZE1vZGUuQ29udGludW91c1xuICAgICAqL1xuICAgIExhbmd1YWdlSWRNb2RlW0xhbmd1YWdlSWRNb2RlW1wiQ29udGludW91c1wiXSA9IDFdID0gXCJDb250aW51b3VzXCI7XG59KShMYW5ndWFnZUlkTW9kZSA9IGV4cG9ydHMuTGFuZ3VhZ2VJZE1vZGUgfHwgKGV4cG9ydHMuTGFuZ3VhZ2VJZE1vZGUgPSB7fSkpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1MYW5ndWFnZUlkTW9kZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageIdMode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageUnderstandingModel.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageUnderstandingModel.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LanguageUnderstandingModelImpl = exports.LanguageUnderstandingModel = void 0;\n// eslint-disable-next-line max-classes-per-file\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\n/**\n * Language understanding model\n * @class LanguageUnderstandingModel\n */\nclass LanguageUnderstandingModel {\n    /**\n     * Creates and initializes a new instance\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Creates an language understanding model using the specified endpoint.\n     * @member LanguageUnderstandingModel.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} uri - A String that represents the endpoint of the language understanding model.\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    static fromEndpoint(uri) {\n        Contracts_js_1.Contracts.throwIfNull(uri, \"uri\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(uri.hostname, \"uri\");\n        const langModelImp = new LanguageUnderstandingModelImpl();\n        // Need to extract the app ID from the URL.\n        // URL is in the format: https://<region>.api.cognitive.microsoft.com/luis/v2.0/apps/<Guid>?subscription-key=<key>&timezoneOffset=-360\n        // Start tearing the string apart.\n        // region can be extracted from the host name.\n        const firstDot = uri.host.indexOf(\".\");\n        if (-1 === firstDot) {\n            throw new Error(\"Could not determine region from endpoint\");\n        }\n        langModelImp.region = uri.host.substr(0, firstDot);\n        // Now the app ID.\n        const lastSegment = uri.pathname.lastIndexOf(\"/\") + 1;\n        if (-1 === lastSegment) {\n            throw new Error(\"Could not determine appId from endpoint\");\n        }\n        langModelImp.appId = uri.pathname.substr(lastSegment);\n        // And finally the key.\n        langModelImp.subscriptionKey = uri.searchParams.get(\"subscription-key\");\n        if (undefined === langModelImp.subscriptionKey) {\n            throw new Error(\"Could not determine subscription key from endpoint\");\n        }\n        return langModelImp;\n    }\n    /**\n     * Creates an language understanding model using the application id of Language Understanding service.\n     * @member LanguageUnderstandingModel.fromAppId\n     * @function\n     * @public\n     * @param {string} appId - A String that represents the application id of Language Understanding service.\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    static fromAppId(appId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(appId, \"appId\");\n        const langModelImp = new LanguageUnderstandingModelImpl();\n        langModelImp.appId = appId;\n        return langModelImp;\n    }\n    /**\n     * Creates a language understanding model using hostname, subscription key and application\n     * id of Language Understanding service.\n     * @member LanguageUnderstandingModel.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - A String that represents the subscription key of\n     * Language Understanding service.\n     * @param {string} appId - A String that represents the application id of Language\n     * Understanding service.\n     * @param {LanguageUnderstandingModel} region - A String that represents the region\n     * of the Language Understanding service (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    static fromSubscription(subscriptionKey, appId, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(appId, \"appId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const langModelImp = new LanguageUnderstandingModelImpl();\n        langModelImp.appId = appId;\n        langModelImp.region = region;\n        langModelImp.subscriptionKey = subscriptionKey;\n        return langModelImp;\n    }\n}\nexports.LanguageUnderstandingModel = LanguageUnderstandingModel;\n/**\n * @private\n * @class LanguageUnderstandingModelImpl\n */\nclass LanguageUnderstandingModelImpl extends LanguageUnderstandingModel {\n}\nexports.LanguageUnderstandingModelImpl = LanguageUnderstandingModelImpl;\n\n//# sourceMappingURL=LanguageUnderstandingModel.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9MYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0NBQXNDLEdBQUcsa0NBQWtDO0FBQzNFO0FBQ0EsdUJBQXVCLG1CQUFPLENBQUMsb0hBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLEtBQUs7QUFDcEIsaUJBQWlCLDRCQUE0QjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGlCQUFpQiw0QkFBNEI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLDRCQUE0QjtBQUMzQztBQUNBLGlCQUFpQiw0QkFBNEI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQzs7QUFFdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL0xhbmd1YWdlVW5kZXJzdGFuZGluZ01vZGVsLmpzPzE0NDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nTW9kZWxJbXBsID0gZXhwb3J0cy5MYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbCA9IHZvaWQgMDtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtY2xhc3Nlcy1wZXItZmlsZVxuY29uc3QgQ29udHJhY3RzX2pzXzEgPSByZXF1aXJlKFwiLi9Db250cmFjdHMuanNcIik7XG4vKipcbiAqIExhbmd1YWdlIHVuZGVyc3RhbmRpbmcgbW9kZWxcbiAqIEBjbGFzcyBMYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbFxuICovXG5jbGFzcyBMYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbCB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYSBuZXcgaW5zdGFuY2VcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGxhbmd1YWdlIHVuZGVyc3RhbmRpbmcgbW9kZWwgdXNpbmcgdGhlIHNwZWNpZmllZCBlbmRwb2ludC5cbiAgICAgKiBAbWVtYmVyIExhbmd1YWdlVW5kZXJzdGFuZGluZ01vZGVsLmZyb21FbmRwb2ludFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge1VSTH0gdXJpIC0gQSBTdHJpbmcgdGhhdCByZXByZXNlbnRzIHRoZSBlbmRwb2ludCBvZiB0aGUgbGFuZ3VhZ2UgdW5kZXJzdGFuZGluZyBtb2RlbC5cbiAgICAgKiBAcmV0dXJucyB7TGFuZ3VhZ2VVbmRlcnN0YW5kaW5nTW9kZWx9IFRoZSBsYW5ndWFnZSB1bmRlcnN0YW5kaW5nIG1vZGVsIGJlaW5nIGNyZWF0ZWQuXG4gICAgICovXG4gICAgc3RhdGljIGZyb21FbmRwb2ludCh1cmkpIHtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZOdWxsKHVyaSwgXCJ1cmlcIik7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yV2hpdGVzcGFjZSh1cmkuaG9zdG5hbWUsIFwidXJpXCIpO1xuICAgICAgICBjb25zdCBsYW5nTW9kZWxJbXAgPSBuZXcgTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nTW9kZWxJbXBsKCk7XG4gICAgICAgIC8vIE5lZWQgdG8gZXh0cmFjdCB0aGUgYXBwIElEIGZyb20gdGhlIFVSTC5cbiAgICAgICAgLy8gVVJMIGlzIGluIHRoZSBmb3JtYXQ6IGh0dHBzOi8vPHJlZ2lvbj4uYXBpLmNvZ25pdGl2ZS5taWNyb3NvZnQuY29tL2x1aXMvdjIuMC9hcHBzLzxHdWlkPj9zdWJzY3JpcHRpb24ta2V5PTxrZXk+JnRpbWV6b25lT2Zmc2V0PS0zNjBcbiAgICAgICAgLy8gU3RhcnQgdGVhcmluZyB0aGUgc3RyaW5nIGFwYXJ0LlxuICAgICAgICAvLyByZWdpb24gY2FuIGJlIGV4dHJhY3RlZCBmcm9tIHRoZSBob3N0IG5hbWUuXG4gICAgICAgIGNvbnN0IGZpcnN0RG90ID0gdXJpLmhvc3QuaW5kZXhPZihcIi5cIik7XG4gICAgICAgIGlmICgtMSA9PT0gZmlyc3REb3QpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBkZXRlcm1pbmUgcmVnaW9uIGZyb20gZW5kcG9pbnRcIik7XG4gICAgICAgIH1cbiAgICAgICAgbGFuZ01vZGVsSW1wLnJlZ2lvbiA9IHVyaS5ob3N0LnN1YnN0cigwLCBmaXJzdERvdCk7XG4gICAgICAgIC8vIE5vdyB0aGUgYXBwIElELlxuICAgICAgICBjb25zdCBsYXN0U2VnbWVudCA9IHVyaS5wYXRobmFtZS5sYXN0SW5kZXhPZihcIi9cIikgKyAxO1xuICAgICAgICBpZiAoLTEgPT09IGxhc3RTZWdtZW50KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgZGV0ZXJtaW5lIGFwcElkIGZyb20gZW5kcG9pbnRcIik7XG4gICAgICAgIH1cbiAgICAgICAgbGFuZ01vZGVsSW1wLmFwcElkID0gdXJpLnBhdGhuYW1lLnN1YnN0cihsYXN0U2VnbWVudCk7XG4gICAgICAgIC8vIEFuZCBmaW5hbGx5IHRoZSBrZXkuXG4gICAgICAgIGxhbmdNb2RlbEltcC5zdWJzY3JpcHRpb25LZXkgPSB1cmkuc2VhcmNoUGFyYW1zLmdldChcInN1YnNjcmlwdGlvbi1rZXlcIik7XG4gICAgICAgIGlmICh1bmRlZmluZWQgPT09IGxhbmdNb2RlbEltcC5zdWJzY3JpcHRpb25LZXkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBkZXRlcm1pbmUgc3Vic2NyaXB0aW9uIGtleSBmcm9tIGVuZHBvaW50XCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsYW5nTW9kZWxJbXA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gbGFuZ3VhZ2UgdW5kZXJzdGFuZGluZyBtb2RlbCB1c2luZyB0aGUgYXBwbGljYXRpb24gaWQgb2YgTGFuZ3VhZ2UgVW5kZXJzdGFuZGluZyBzZXJ2aWNlLlxuICAgICAqIEBtZW1iZXIgTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nTW9kZWwuZnJvbUFwcElkXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhcHBJZCAtIEEgU3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgYXBwbGljYXRpb24gaWQgb2YgTGFuZ3VhZ2UgVW5kZXJzdGFuZGluZyBzZXJ2aWNlLlxuICAgICAqIEByZXR1cm5zIHtMYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbH0gVGhlIGxhbmd1YWdlIHVuZGVyc3RhbmRpbmcgbW9kZWwgYmVpbmcgY3JlYXRlZC5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbUFwcElkKGFwcElkKSB7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yV2hpdGVzcGFjZShhcHBJZCwgXCJhcHBJZFwiKTtcbiAgICAgICAgY29uc3QgbGFuZ01vZGVsSW1wID0gbmV3IExhbmd1YWdlVW5kZXJzdGFuZGluZ01vZGVsSW1wbCgpO1xuICAgICAgICBsYW5nTW9kZWxJbXAuYXBwSWQgPSBhcHBJZDtcbiAgICAgICAgcmV0dXJuIGxhbmdNb2RlbEltcDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGxhbmd1YWdlIHVuZGVyc3RhbmRpbmcgbW9kZWwgdXNpbmcgaG9zdG5hbWUsIHN1YnNjcmlwdGlvbiBrZXkgYW5kIGFwcGxpY2F0aW9uXG4gICAgICogaWQgb2YgTGFuZ3VhZ2UgVW5kZXJzdGFuZGluZyBzZXJ2aWNlLlxuICAgICAqIEBtZW1iZXIgTGFuZ3VhZ2VVbmRlcnN0YW5kaW5nTW9kZWwuZnJvbVN1YnNjcmlwdGlvblxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc3Vic2NyaXB0aW9uS2V5IC0gQSBTdHJpbmcgdGhhdCByZXByZXNlbnRzIHRoZSBzdWJzY3JpcHRpb24ga2V5IG9mXG4gICAgICogTGFuZ3VhZ2UgVW5kZXJzdGFuZGluZyBzZXJ2aWNlLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhcHBJZCAtIEEgU3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgYXBwbGljYXRpb24gaWQgb2YgTGFuZ3VhZ2VcbiAgICAgKiBVbmRlcnN0YW5kaW5nIHNlcnZpY2UuXG4gICAgICogQHBhcmFtIHtMYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbH0gcmVnaW9uIC0gQSBTdHJpbmcgdGhhdCByZXByZXNlbnRzIHRoZSByZWdpb25cbiAgICAgKiBvZiB0aGUgTGFuZ3VhZ2UgVW5kZXJzdGFuZGluZyBzZXJ2aWNlIChzZWUgdGhlIDxhIGhyZWY9XCJodHRwczovL2FrYS5tcy9jc3NwZWVjaC9yZWdpb25cIj5yZWdpb24gcGFnZTwvYT4pLlxuICAgICAqIEByZXR1cm5zIHtMYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbH0gVGhlIGxhbmd1YWdlIHVuZGVyc3RhbmRpbmcgbW9kZWwgYmVpbmcgY3JlYXRlZC5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVN1YnNjcmlwdGlvbihzdWJzY3JpcHRpb25LZXksIGFwcElkLCByZWdpb24pIHtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZOdWxsT3JXaGl0ZXNwYWNlKHN1YnNjcmlwdGlvbktleSwgXCJzdWJzY3JpcHRpb25LZXlcIik7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yV2hpdGVzcGFjZShhcHBJZCwgXCJhcHBJZFwiKTtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZOdWxsT3JXaGl0ZXNwYWNlKHJlZ2lvbiwgXCJyZWdpb25cIik7XG4gICAgICAgIGNvbnN0IGxhbmdNb2RlbEltcCA9IG5ldyBMYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbEltcGwoKTtcbiAgICAgICAgbGFuZ01vZGVsSW1wLmFwcElkID0gYXBwSWQ7XG4gICAgICAgIGxhbmdNb2RlbEltcC5yZWdpb24gPSByZWdpb247XG4gICAgICAgIGxhbmdNb2RlbEltcC5zdWJzY3JpcHRpb25LZXkgPSBzdWJzY3JpcHRpb25LZXk7XG4gICAgICAgIHJldHVybiBsYW5nTW9kZWxJbXA7XG4gICAgfVxufVxuZXhwb3J0cy5MYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbCA9IExhbmd1YWdlVW5kZXJzdGFuZGluZ01vZGVsO1xuLyoqXG4gKiBAcHJpdmF0ZVxuICogQGNsYXNzIExhbmd1YWdlVW5kZXJzdGFuZGluZ01vZGVsSW1wbFxuICovXG5jbGFzcyBMYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbEltcGwgZXh0ZW5kcyBMYW5ndWFnZVVuZGVyc3RhbmRpbmdNb2RlbCB7XG59XG5leHBvcnRzLkxhbmd1YWdlVW5kZXJzdGFuZGluZ01vZGVsSW1wbCA9IExhbmd1YWdlVW5kZXJzdGFuZGluZ01vZGVsSW1wbDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TGFuZ3VhZ2VVbmRlcnN0YW5kaW5nTW9kZWwuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LanguageUnderstandingModel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LogLevel.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LogLevel.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LogLevel = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nObject.defineProperty(exports, \"LogLevel\", ({ enumerable: true, get: function () { return Exports_js_1.EventType; } }));\n\n//# sourceMappingURL=LogLevel.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Mb2dMZXZlbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLHFCQUFxQixtQkFBTyxDQUFDLDJIQUFzQjtBQUNuRCw0Q0FBMkMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7O0FBRXJIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Mb2dMZXZlbC5qcz9mYmI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxvZ0xldmVsID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uL2NvbW1vbi9FeHBvcnRzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTG9nTGV2ZWxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEV4cG9ydHNfanNfMS5FdmVudFR5cGU7IH0gfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxvZ0xldmVsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/LogLevel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/MeetingTranscriptionCanceledEventArgs.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/MeetingTranscriptionCanceledEventArgs.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MeetingTranscriptionCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = __webpack_require__(/*! ./CancellationEventArgsBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationEventArgsBase.js\");\n/**\n * Defines content of a MeetingTranscriptionCanceledEvent.\n * @class MeetingTranscriptionCanceledEventArgs\n */\nclass MeetingTranscriptionCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.MeetingTranscriptionCanceledEventArgs = MeetingTranscriptionCanceledEventArgs;\n\n//# sourceMappingURL=MeetingTranscriptionCanceledEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9NZWV0aW5nVHJhbnNjcmlwdGlvbkNhbmNlbGVkRXZlbnRBcmdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2Q0FBNkM7QUFDN0MsdUNBQXVDLG1CQUFPLENBQUMsb0pBQWdDO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qzs7QUFFN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL01lZXRpbmdUcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3MuanM/NDE2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NZWV0aW5nVHJhbnNjcmlwdGlvbkNhbmNlbGVkRXZlbnRBcmdzID0gdm9pZCAwO1xuY29uc3QgQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZV9qc18xID0gcmVxdWlyZShcIi4vQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZS5qc1wiKTtcbi8qKlxuICogRGVmaW5lcyBjb250ZW50IG9mIGEgTWVldGluZ1RyYW5zY3JpcHRpb25DYW5jZWxlZEV2ZW50LlxuICogQGNsYXNzIE1lZXRpbmdUcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3NcbiAqL1xuY2xhc3MgTWVldGluZ1RyYW5zY3JpcHRpb25DYW5jZWxlZEV2ZW50QXJncyBleHRlbmRzIENhbmNlbGxhdGlvbkV2ZW50QXJnc0Jhc2VfanNfMS5DYW5jZWxsYXRpb25FdmVudEFyZ3NCYXNlIHtcbn1cbmV4cG9ydHMuTWVldGluZ1RyYW5zY3JpcHRpb25DYW5jZWxlZEV2ZW50QXJncyA9IE1lZXRpbmdUcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3M7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1lZXRpbmdUcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3MuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/MeetingTranscriptionCanceledEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchDetails.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchDetails.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NoMatchDetails = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../../src/common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Contains detailed information for NoMatch recognition results.\n * @class NoMatchDetails\n */\nclass NoMatchDetails {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {NoMatchReason} reason - The no-match reason.\n     */\n    constructor(reason) {\n        this.privReason = reason;\n    }\n    /**\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\n     * @member NoMatchDetails.fromResult\n     * @function\n     * @public\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\n     * result - The recognition result that was not recognized.\n     * @returns {NoMatchDetails} The no match details object being created.\n     */\n    static fromResult(result) {\n        const simpleSpeech = Exports_js_1.SimpleSpeechPhrase.fromJSON(result.json, 0); // Offset fixups are already done.\n        let reason = Exports_js_2.NoMatchReason.NotRecognized;\n        switch (simpleSpeech.RecognitionStatus) {\n            case Exports_js_1.RecognitionStatus.BabbleTimeout:\n                reason = Exports_js_2.NoMatchReason.InitialBabbleTimeout;\n                break;\n            case Exports_js_1.RecognitionStatus.InitialSilenceTimeout:\n                reason = Exports_js_2.NoMatchReason.InitialSilenceTimeout;\n                break;\n            default:\n                reason = Exports_js_2.NoMatchReason.NotRecognized;\n                break;\n        }\n        return new NoMatchDetails(reason);\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member NoMatchDetails.prototype.reason\n     * @function\n     * @public\n     * @returns {NoMatchReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n}\nexports.NoMatchDetails = NoMatchDetails;\n\n//# sourceMappingURL=NoMatchDetails.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Ob01hdGNoRGV0YWlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLHFCQUFxQixtQkFBTyxDQUFDLGdKQUFvQztBQUNqRSxxQkFBcUIsbUJBQU8sQ0FBQyxnSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxlQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLGlCQUFpQixnQkFBZ0I7QUFDakM7QUFDQTtBQUNBLHVGQUF1RjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixlQUFlO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7O0FBRXRCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Ob01hdGNoRGV0YWlscy5qcz85NjZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5vTWF0Y2hEZXRhaWxzID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uLy4uL3NyYy9jb21tb24uc3BlZWNoL0V4cG9ydHMuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzIgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuLyoqXG4gKiBDb250YWlucyBkZXRhaWxlZCBpbmZvcm1hdGlvbiBmb3IgTm9NYXRjaCByZWNvZ25pdGlvbiByZXN1bHRzLlxuICogQGNsYXNzIE5vTWF0Y2hEZXRhaWxzXG4gKi9cbmNsYXNzIE5vTWF0Y2hEZXRhaWxzIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCBpbml0aWFsaXplcyBhbiBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzLlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7Tm9NYXRjaFJlYXNvbn0gcmVhc29uIC0gVGhlIG5vLW1hdGNoIHJlYXNvbi5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyZWFzb24pIHtcbiAgICAgICAgdGhpcy5wcml2UmVhc29uID0gcmVhc29uO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIE5vTWF0Y2hEZXRhaWxzIG9iamVjdCBmb3IgdGhlIE5vTWF0Y2ggU3BlZWNoUmVjb2duaXRpb25SZXN1bHRzLlxuICAgICAqIEBtZW1iZXIgTm9NYXRjaERldGFpbHMuZnJvbVJlc3VsdFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge1NwZWVjaFJlY29nbml0aW9uUmVzdWx0IHwgSW50ZW50UmVjb2duaXRpb25SZXN1bHQgfCBUcmFuc2xhdGlvblJlY29nbml0aW9uUmVzdWx0fVxuICAgICAqIHJlc3VsdCAtIFRoZSByZWNvZ25pdGlvbiByZXN1bHQgdGhhdCB3YXMgbm90IHJlY29nbml6ZWQuXG4gICAgICogQHJldHVybnMge05vTWF0Y2hEZXRhaWxzfSBUaGUgbm8gbWF0Y2ggZGV0YWlscyBvYmplY3QgYmVpbmcgY3JlYXRlZC5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVJlc3VsdChyZXN1bHQpIHtcbiAgICAgICAgY29uc3Qgc2ltcGxlU3BlZWNoID0gRXhwb3J0c19qc18xLlNpbXBsZVNwZWVjaFBocmFzZS5mcm9tSlNPTihyZXN1bHQuanNvbiwgMCk7IC8vIE9mZnNldCBmaXh1cHMgYXJlIGFscmVhZHkgZG9uZS5cbiAgICAgICAgbGV0IHJlYXNvbiA9IEV4cG9ydHNfanNfMi5Ob01hdGNoUmVhc29uLk5vdFJlY29nbml6ZWQ7XG4gICAgICAgIHN3aXRjaCAoc2ltcGxlU3BlZWNoLlJlY29nbml0aW9uU3RhdHVzKSB7XG4gICAgICAgICAgICBjYXNlIEV4cG9ydHNfanNfMS5SZWNvZ25pdGlvblN0YXR1cy5CYWJibGVUaW1lb3V0OlxuICAgICAgICAgICAgICAgIHJlYXNvbiA9IEV4cG9ydHNfanNfMi5Ob01hdGNoUmVhc29uLkluaXRpYWxCYWJibGVUaW1lb3V0O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBFeHBvcnRzX2pzXzEuUmVjb2duaXRpb25TdGF0dXMuSW5pdGlhbFNpbGVuY2VUaW1lb3V0OlxuICAgICAgICAgICAgICAgIHJlYXNvbiA9IEV4cG9ydHNfanNfMi5Ob01hdGNoUmVhc29uLkluaXRpYWxTaWxlbmNlVGltZW91dDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmVhc29uID0gRXhwb3J0c19qc18yLk5vTWF0Y2hSZWFzb24uTm90UmVjb2duaXplZDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IE5vTWF0Y2hEZXRhaWxzKHJlYXNvbik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSByZWFzb24gdGhlIHJlY29nbml0aW9uIHdhcyBjYW5jZWxlZC5cbiAgICAgKiBAbWVtYmVyIE5vTWF0Y2hEZXRhaWxzLnByb3RvdHlwZS5yZWFzb25cbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge05vTWF0Y2hSZWFzb259IFNwZWNpZmllcyB0aGUgcmVhc29uIGNhbmNlbGVkLlxuICAgICAqL1xuICAgIGdldCByZWFzb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZSZWFzb247XG4gICAgfVxufVxuZXhwb3J0cy5Ob01hdGNoRGV0YWlscyA9IE5vTWF0Y2hEZXRhaWxzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ob01hdGNoRGV0YWlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchDetails.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchReason.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchReason.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NoMatchReason = void 0;\n/**\n * Defines the possible reasons a recognition result might not be recognized.\n * @class NoMatchReason\n */\nvar NoMatchReason;\n(function (NoMatchReason) {\n    /**\n     * Indicates that speech was detected, but not recognized.\n     * @member NoMatchReason.NotRecognized\n     */\n    NoMatchReason[NoMatchReason[\"NotRecognized\"] = 0] = \"NotRecognized\";\n    /**\n     * Indicates that the start of the audio stream contained only silence,\n     * and the service timed out waiting for speech.\n     * @member NoMatchReason.InitialSilenceTimeout\n     */\n    NoMatchReason[NoMatchReason[\"InitialSilenceTimeout\"] = 1] = \"InitialSilenceTimeout\";\n    /**\n     * Indicates that the start of the audio stream contained only noise,\n     * and the service timed out waiting for speech.\n     * @member NoMatchReason.InitialBabbleTimeout\n     */\n    NoMatchReason[NoMatchReason[\"InitialBabbleTimeout\"] = 2] = \"InitialBabbleTimeout\";\n})(NoMatchReason = exports.NoMatchReason || (exports.NoMatchReason = {}));\n\n//# sourceMappingURL=NoMatchReason.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Ob01hdGNoUmVhc29uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDLHFCQUFxQixLQUFLOztBQUV2RSIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvTm9NYXRjaFJlYXNvbi5qcz8xYjU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5vTWF0Y2hSZWFzb24gPSB2b2lkIDA7XG4vKipcbiAqIERlZmluZXMgdGhlIHBvc3NpYmxlIHJlYXNvbnMgYSByZWNvZ25pdGlvbiByZXN1bHQgbWlnaHQgbm90IGJlIHJlY29nbml6ZWQuXG4gKiBAY2xhc3MgTm9NYXRjaFJlYXNvblxuICovXG52YXIgTm9NYXRjaFJlYXNvbjtcbihmdW5jdGlvbiAoTm9NYXRjaFJlYXNvbikge1xuICAgIC8qKlxuICAgICAqIEluZGljYXRlcyB0aGF0IHNwZWVjaCB3YXMgZGV0ZWN0ZWQsIGJ1dCBub3QgcmVjb2duaXplZC5cbiAgICAgKiBAbWVtYmVyIE5vTWF0Y2hSZWFzb24uTm90UmVjb2duaXplZFxuICAgICAqL1xuICAgIE5vTWF0Y2hSZWFzb25bTm9NYXRjaFJlYXNvbltcIk5vdFJlY29nbml6ZWRcIl0gPSAwXSA9IFwiTm90UmVjb2duaXplZFwiO1xuICAgIC8qKlxuICAgICAqIEluZGljYXRlcyB0aGF0IHRoZSBzdGFydCBvZiB0aGUgYXVkaW8gc3RyZWFtIGNvbnRhaW5lZCBvbmx5IHNpbGVuY2UsXG4gICAgICogYW5kIHRoZSBzZXJ2aWNlIHRpbWVkIG91dCB3YWl0aW5nIGZvciBzcGVlY2guXG4gICAgICogQG1lbWJlciBOb01hdGNoUmVhc29uLkluaXRpYWxTaWxlbmNlVGltZW91dFxuICAgICAqL1xuICAgIE5vTWF0Y2hSZWFzb25bTm9NYXRjaFJlYXNvbltcIkluaXRpYWxTaWxlbmNlVGltZW91dFwiXSA9IDFdID0gXCJJbml0aWFsU2lsZW5jZVRpbWVvdXRcIjtcbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgdGhhdCB0aGUgc3RhcnQgb2YgdGhlIGF1ZGlvIHN0cmVhbSBjb250YWluZWQgb25seSBub2lzZSxcbiAgICAgKiBhbmQgdGhlIHNlcnZpY2UgdGltZWQgb3V0IHdhaXRpbmcgZm9yIHNwZWVjaC5cbiAgICAgKiBAbWVtYmVyIE5vTWF0Y2hSZWFzb24uSW5pdGlhbEJhYmJsZVRpbWVvdXRcbiAgICAgKi9cbiAgICBOb01hdGNoUmVhc29uW05vTWF0Y2hSZWFzb25bXCJJbml0aWFsQmFiYmxlVGltZW91dFwiXSA9IDJdID0gXCJJbml0aWFsQmFiYmxlVGltZW91dFwiO1xufSkoTm9NYXRjaFJlYXNvbiA9IGV4cG9ydHMuTm9NYXRjaFJlYXNvbiB8fCAoZXhwb3J0cy5Ob01hdGNoUmVhc29uID0ge30pKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Tm9NYXRjaFJlYXNvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/NoMatchReason.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/OutputFormat.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/OutputFormat.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OutputFormat = void 0;\n/**\n * Define Speech Recognizer output formats.\n * @class OutputFormat\n */\nvar OutputFormat;\n(function (OutputFormat) {\n    /**\n     * @member OutputFormat.Simple\n     */\n    OutputFormat[OutputFormat[\"Simple\"] = 0] = \"Simple\";\n    /**\n     * @member OutputFormat.Detailed\n     */\n    OutputFormat[OutputFormat[\"Detailed\"] = 1] = \"Detailed\";\n})(OutputFormat = exports.OutputFormat || (exports.OutputFormat = {}));\n\n//# sourceMappingURL=OutputFormat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9PdXRwdXRGb3JtYXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwQ0FBMEMsb0JBQW9CLEtBQUs7O0FBRXBFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9PdXRwdXRGb3JtYXQuanM/OWNlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PdXRwdXRGb3JtYXQgPSB2b2lkIDA7XG4vKipcbiAqIERlZmluZSBTcGVlY2ggUmVjb2duaXplciBvdXRwdXQgZm9ybWF0cy5cbiAqIEBjbGFzcyBPdXRwdXRGb3JtYXRcbiAqL1xudmFyIE91dHB1dEZvcm1hdDtcbihmdW5jdGlvbiAoT3V0cHV0Rm9ybWF0KSB7XG4gICAgLyoqXG4gICAgICogQG1lbWJlciBPdXRwdXRGb3JtYXQuU2ltcGxlXG4gICAgICovXG4gICAgT3V0cHV0Rm9ybWF0W091dHB1dEZvcm1hdFtcIlNpbXBsZVwiXSA9IDBdID0gXCJTaW1wbGVcIjtcbiAgICAvKipcbiAgICAgKiBAbWVtYmVyIE91dHB1dEZvcm1hdC5EZXRhaWxlZFxuICAgICAqL1xuICAgIE91dHB1dEZvcm1hdFtPdXRwdXRGb3JtYXRbXCJEZXRhaWxlZFwiXSA9IDFdID0gXCJEZXRhaWxlZFwiO1xufSkoT3V0cHV0Rm9ybWF0ID0gZXhwb3J0cy5PdXRwdXRGb3JtYXQgfHwgKGV4cG9ydHMuT3V0cHV0Rm9ybWF0ID0ge30pKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T3V0cHV0Rm9ybWF0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/OutputFormat.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PhraseListGrammar.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PhraseListGrammar.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PhraseListGrammar = void 0;\n/**\n * Allows additions of new phrases to improve speech recognition.\n *\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\n * to the speech service.\n */\nclass PhraseListGrammar {\n    constructor(recogBase) {\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\n    }\n    /**\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\n     * @param recognizer The recognizer to add phrase lists to.\n     */\n    static fromRecognizer(recognizer) {\n        const recoBase = recognizer.internalData;\n        return new PhraseListGrammar(recoBase);\n    }\n    /**\n     * Adds a single phrase to the current recognizer.\n     * @param phrase Phrase to add.\n     */\n    addPhrase(phrase) {\n        this.privGrammerBuilder.addPhrase(phrase);\n    }\n    /**\n     * Adds multiple phrases to the current recognizer.\n     * @param phrases Array of phrases to add.\n     */\n    addPhrases(phrases) {\n        this.privGrammerBuilder.addPhrase(phrases);\n    }\n    /**\n     * Clears all phrases added to the current recognizer.\n     */\n    clear() {\n        this.privGrammerBuilder.clearPhrases();\n    }\n}\nexports.PhraseListGrammar = PhraseListGrammar;\n\n//# sourceMappingURL=PhraseListGrammar.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9QaHJhc2VMaXN0R3JhbW1hci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qjs7QUFFekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1BocmFzZUxpc3RHcmFtbWFyLmpzP2JhNmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUGhyYXNlTGlzdEdyYW1tYXIgPSB2b2lkIDA7XG4vKipcbiAqIEFsbG93cyBhZGRpdGlvbnMgb2YgbmV3IHBocmFzZXMgdG8gaW1wcm92ZSBzcGVlY2ggcmVjb2duaXRpb24uXG4gKlxuICogUGhyYXNlcyBhZGRlZCB0byB0aGUgcmVjb2duaXplciBhcmUgZWZmZWN0aXZlIGF0IHRoZSBzdGFydCBvZiB0aGUgbmV4dCByZWNvZ25pdGlvbiwgb3IgdGhlIG5leHQgdGltZSB0aGUgU3BlZWNoU0RLIG11c3QgcmVjb25uZWN0XG4gKiB0byB0aGUgc3BlZWNoIHNlcnZpY2UuXG4gKi9cbmNsYXNzIFBocmFzZUxpc3RHcmFtbWFyIHtcbiAgICBjb25zdHJ1Y3RvcihyZWNvZ0Jhc2UpIHtcbiAgICAgICAgdGhpcy5wcml2R3JhbW1lckJ1aWxkZXIgPSByZWNvZ0Jhc2UuZHluYW1pY0dyYW1tYXI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBQaHJhc2VMaXN0R3JhbW1hciBmcm9tIGEgZ2l2ZW4gc3BlZWNoIHJlY29nbml6ZXIuIFdpbGwgYWNjZXB0IGFueSByZWNvZ25pemVyIHRoYXQgZGVyaXZlcyBmcm9tIEBjbGFzcyBSZWNvZ25pemVyLlxuICAgICAqIEBwYXJhbSByZWNvZ25pemVyIFRoZSByZWNvZ25pemVyIHRvIGFkZCBwaHJhc2UgbGlzdHMgdG8uXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SZWNvZ25pemVyKHJlY29nbml6ZXIpIHtcbiAgICAgICAgY29uc3QgcmVjb0Jhc2UgPSByZWNvZ25pemVyLmludGVybmFsRGF0YTtcbiAgICAgICAgcmV0dXJuIG5ldyBQaHJhc2VMaXN0R3JhbW1hcihyZWNvQmFzZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFkZHMgYSBzaW5nbGUgcGhyYXNlIHRvIHRoZSBjdXJyZW50IHJlY29nbml6ZXIuXG4gICAgICogQHBhcmFtIHBocmFzZSBQaHJhc2UgdG8gYWRkLlxuICAgICAqL1xuICAgIGFkZFBocmFzZShwaHJhc2UpIHtcbiAgICAgICAgdGhpcy5wcml2R3JhbW1lckJ1aWxkZXIuYWRkUGhyYXNlKHBocmFzZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFkZHMgbXVsdGlwbGUgcGhyYXNlcyB0byB0aGUgY3VycmVudCByZWNvZ25pemVyLlxuICAgICAqIEBwYXJhbSBwaHJhc2VzIEFycmF5IG9mIHBocmFzZXMgdG8gYWRkLlxuICAgICAqL1xuICAgIGFkZFBocmFzZXMocGhyYXNlcykge1xuICAgICAgICB0aGlzLnByaXZHcmFtbWVyQnVpbGRlci5hZGRQaHJhc2UocGhyYXNlcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENsZWFycyBhbGwgcGhyYXNlcyBhZGRlZCB0byB0aGUgY3VycmVudCByZWNvZ25pemVyLlxuICAgICAqL1xuICAgIGNsZWFyKCkge1xuICAgICAgICB0aGlzLnByaXZHcmFtbWVyQnVpbGRlci5jbGVhclBocmFzZXMoKTtcbiAgICB9XG59XG5leHBvcnRzLlBocmFzZUxpc3RHcmFtbWFyID0gUGhyYXNlTGlzdEdyYW1tYXI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBocmFzZUxpc3RHcmFtbWFyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PhraseListGrammar.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ProfanityOption.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ProfanityOption.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ProfanityOption = void 0;\n/**\n * Profanity option.\n * Added in version 1.7.0.\n */\nvar ProfanityOption;\n(function (ProfanityOption) {\n    ProfanityOption[ProfanityOption[\"Masked\"] = 0] = \"Masked\";\n    ProfanityOption[ProfanityOption[\"Removed\"] = 1] = \"Removed\";\n    ProfanityOption[ProfanityOption[\"Raw\"] = 2] = \"Raw\";\n})(ProfanityOption = exports.ProfanityOption || (exports.ProfanityOption = {}));\n\n//# sourceMappingURL=ProfanityOption.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Qcm9mYW5pdHlPcHRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdEQUFnRCx1QkFBdUIsS0FBSzs7QUFFN0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1Byb2Zhbml0eU9wdGlvbi5qcz9kMTE4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByb2Zhbml0eU9wdGlvbiA9IHZvaWQgMDtcbi8qKlxuICogUHJvZmFuaXR5IG9wdGlvbi5cbiAqIEFkZGVkIGluIHZlcnNpb24gMS43LjAuXG4gKi9cbnZhciBQcm9mYW5pdHlPcHRpb247XG4oZnVuY3Rpb24gKFByb2Zhbml0eU9wdGlvbikge1xuICAgIFByb2Zhbml0eU9wdGlvbltQcm9mYW5pdHlPcHRpb25bXCJNYXNrZWRcIl0gPSAwXSA9IFwiTWFza2VkXCI7XG4gICAgUHJvZmFuaXR5T3B0aW9uW1Byb2Zhbml0eU9wdGlvbltcIlJlbW92ZWRcIl0gPSAxXSA9IFwiUmVtb3ZlZFwiO1xuICAgIFByb2Zhbml0eU9wdGlvbltQcm9mYW5pdHlPcHRpb25bXCJSYXdcIl0gPSAyXSA9IFwiUmF3XCI7XG59KShQcm9mYW5pdHlPcHRpb24gPSBleHBvcnRzLlByb2Zhbml0eU9wdGlvbiB8fCAoZXhwb3J0cy5Qcm9mYW5pdHlPcHRpb24gPSB7fSkpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qcm9mYW5pdHlPcHRpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ProfanityOption.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentConfig.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentConfig.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PronunciationAssessmentConfig = void 0;\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Pronunciation assessment configuration.\n * @class PronunciationAssessmentConfig\n * Added in version 1.15.0.\n */\nclass PronunciationAssessmentConfig {\n    /**\n     * PronunciationAssessmentConfig constructor.\n     * @constructor\n     * @param {string} referenceText\n     * @param gradingSystem\n     * @param granularity\n     * @param enableMiscue\n     */\n    constructor(referenceText, gradingSystem = Exports_js_1.PronunciationAssessmentGradingSystem.FivePoint, granularity = Exports_js_1.PronunciationAssessmentGranularity.Phoneme, enableMiscue = false) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\n        this.privProperties = new Exports_js_1.PropertyCollection();\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_GradingSystem, Exports_js_1.PronunciationAssessmentGradingSystem[gradingSystem]);\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_Granularity, Exports_js_1.PronunciationAssessmentGranularity[granularity]);\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\n    }\n    /**\n     * @member PronunciationAssessmentConfig.fromJSON\n     * @function\n     * @public\n     * @param {string} json The json string containing the pronunciation assessment parameters.\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\n     * This method is designed to support the pronunciation assessment parameters still in preview.\n     * Under normal circumstances, use the constructor instead.\n     */\n    static fromJSON(json) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(json, \"json\");\n        const config = new PronunciationAssessmentConfig(\"\");\n        config.privProperties = new Exports_js_1.PropertyCollection();\n        config.properties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_Json, json);\n        return config;\n    }\n    toJSON() {\n        this.updateJson();\n        return this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Params);\n    }\n    applyTo(recognizer) {\n        this.updateJson();\n        const recoBase = recognizer.internalData;\n        recoBase.expectContentAssessmentResponse = !!this.privContentAssessmentTopic;\n        recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Params), this.privContentAssessmentTopic, recoBase.isSpeakerDiarizationEnabled);\n    }\n    /**\n     * Gets the reference text.\n     * @member PronunciationAssessmentConfig.prototype.referenceText\n     * @function\n     * @public\n     * @returns {string} Reference text.\n     */\n    get referenceText() {\n        return this.properties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText);\n    }\n    /**\n     * Gets/Sets the reference text.\n     * @member PronunciationAssessmentConfig.prototype.referenceText\n     * @function\n     * @public\n     * @param {string} referenceText - Reference text.\n     */\n    set referenceText(referenceText) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\n        this.properties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n    }\n    /**\n     * Sets the phoneme alphabet.\n     * The valid values are \"SAPI\" (default) and \"IPA\".\n     * Added in version 1.20.0\n     * @member PronunciationAssessmentConfig.prototype.phonemeAlphabet\n     * @function\n     * @public\n     * @param {string} phonemeAlphabet - Phoneme alphabet.\n     */\n    set phonemeAlphabet(phonemeAlphabet) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(phonemeAlphabet, \"phonemeAlphabet\");\n        this.privPhonemeAlphabet = phonemeAlphabet;\n    }\n    /**\n     * Sets the boolean enableMiscue property.\n     * Added in version 1.26.0\n     * @member PronunciationAssessmentConfig.prototype.enableMiscue\n     * @function\n     * @public\n     * @param {boolean} enableMiscue - enable miscue.\n     */\n    set enableMiscue(enableMiscue) {\n        const enableMiscueString = enableMiscue ? \"true\" : \"false\";\n        this.properties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue, enableMiscueString);\n    }\n    /**\n     * Gets the boolean enableMiscue property.\n     * Added in version 1.26.0\n     * @member PronunciationAssessmentConfig.prototype.enableMiscue\n     * @function\n     * @public\n     * @return {boolean} enableMiscue - enable miscue.\n     */\n    get enableMiscue() {\n        const enableMiscueString = this.properties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue, \"false\");\n        return (enableMiscueString.toLowerCase() === \"true\");\n    }\n    /**\n     * Sets the nbest phoneme count\n     * Added in version 1.20.0\n     * @member PronunciationAssessmentConfig.prototype.nbestPhonemeCount\n     * @function\n     * @public\n     * @param {number} nbestPhonemeCount - NBest phoneme count.\n     */\n    set nbestPhonemeCount(nbestPhonemeCount) {\n        this.privNBestPhonemeCount = nbestPhonemeCount;\n    }\n    /**\n     * Enables the prosody assessment.\n     * Added in version 1.34.0\n     * @member PronunciationAssessmentConfig.prototype.enableProsodyAssessment\n     * @function\n     * @public\n     * @param {boolean} enableProsodyAssessment - enable prosody assessment.\n     */\n    set enableProsodyAssessment(enableProsodyAssessment) {\n        this.privEnableProsodyAssessment = enableProsodyAssessment;\n    }\n    /**\n     * Enables content assessment and sets the topic.\n     * Added in version 1.34.0\n     * @member PronunciationAssessmentConfig.prototype.enableContentAssessmentWithTopic\n     * @function\n     * @public\n     * @param {string} topic - Topic for content assessment.\n     */\n    enableContentAssessmentWithTopic(topic) {\n        this.privContentAssessmentTopic = topic;\n    }\n    /**\n     * @member PronunciationAssessmentConfig.prototype.properties\n     * @function\n     * @public\n     * @return {PropertyCollection} Properties of the config.\n     * @summary Gets a pronunciation assessment config properties\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    updateJson() {\n        const jsonString = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Json, \"{}\");\n        const paramsJson = JSON.parse(jsonString);\n        const referenceText = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText);\n        if (referenceText) {\n            paramsJson.referenceText = referenceText;\n        }\n        const gradingSystem = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_GradingSystem);\n        if (gradingSystem) {\n            paramsJson.gradingSystem = gradingSystem;\n        }\n        const granularity = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Granularity);\n        if (granularity) {\n            paramsJson.granularity = granularity;\n        }\n        if (this.privPhonemeAlphabet) {\n            paramsJson.phonemeAlphabet = this.privPhonemeAlphabet;\n        }\n        if (this.privNBestPhonemeCount) {\n            paramsJson.nbestPhonemeCount = this.privNBestPhonemeCount;\n        }\n        paramsJson.enableProsodyAssessment = this.privEnableProsodyAssessment;\n        // always set dimension to Comprehensive\n        paramsJson.dimension = \"Comprehensive\";\n        const enableMiscueString = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue);\n        if (enableMiscueString) {\n            paramsJson.enableMiscue = this.enableMiscue;\n        }\n        this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\n    }\n}\nexports.PronunciationAssessmentConfig = PronunciationAssessmentConfig;\n\n//# sourceMappingURL=PronunciationAssessmentConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentGradingSystem.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentGradingSystem.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PronunciationAssessmentGradingSystem = void 0;\n/**\n * Defines the point system for pronunciation score calibration; default value is FivePoint.\n * Added in version 1.15.0\n * @class PronunciationAssessmentGradingSystem\n */\nvar PronunciationAssessmentGradingSystem;\n(function (PronunciationAssessmentGradingSystem) {\n    /**\n     * Five point calibration\n     * @member PronunciationAssessmentGradingSystem.FivePoint\n     */\n    PronunciationAssessmentGradingSystem[PronunciationAssessmentGradingSystem[\"FivePoint\"] = 1] = \"FivePoint\";\n    /**\n     * Hundred mark\n     * @member PronunciationAssessmentGradingSystem.HundredMark\n     */\n    PronunciationAssessmentGradingSystem[PronunciationAssessmentGradingSystem[\"HundredMark\"] = 2] = \"HundredMark\";\n})(PronunciationAssessmentGradingSystem = exports.PronunciationAssessmentGradingSystem || (exports.PronunciationAssessmentGradingSystem = {}));\n\n//# sourceMappingURL=PronunciationAssessmentGradingSystem.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Qcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYWRpbmdTeXN0ZW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRDQUE0QztBQUM1QztBQUNBLGlFQUFpRTtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBGQUEwRiw0Q0FBNEMsS0FBSzs7QUFFNUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1Byb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhZGluZ1N5c3RlbS5qcz8xNzlkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhZGluZ1N5c3RlbSA9IHZvaWQgMDtcbi8qKlxuICogRGVmaW5lcyB0aGUgcG9pbnQgc3lzdGVtIGZvciBwcm9udW5jaWF0aW9uIHNjb3JlIGNhbGlicmF0aW9uOyBkZWZhdWx0IHZhbHVlIGlzIEZpdmVQb2ludC5cbiAqIEFkZGVkIGluIHZlcnNpb24gMS4xNS4wXG4gKiBAY2xhc3MgUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRHcmFkaW5nU3lzdGVtXG4gKi9cbnZhciBQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYWRpbmdTeXN0ZW07XG4oZnVuY3Rpb24gKFByb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhZGluZ1N5c3RlbSkge1xuICAgIC8qKlxuICAgICAqIEZpdmUgcG9pbnQgY2FsaWJyYXRpb25cbiAgICAgKiBAbWVtYmVyIFByb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhZGluZ1N5c3RlbS5GaXZlUG9pbnRcbiAgICAgKi9cbiAgICBQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYWRpbmdTeXN0ZW1bUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRHcmFkaW5nU3lzdGVtW1wiRml2ZVBvaW50XCJdID0gMV0gPSBcIkZpdmVQb2ludFwiO1xuICAgIC8qKlxuICAgICAqIEh1bmRyZWQgbWFya1xuICAgICAqIEBtZW1iZXIgUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRHcmFkaW5nU3lzdGVtLkh1bmRyZWRNYXJrXG4gICAgICovXG4gICAgUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRHcmFkaW5nU3lzdGVtW1Byb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhZGluZ1N5c3RlbVtcIkh1bmRyZWRNYXJrXCJdID0gMl0gPSBcIkh1bmRyZWRNYXJrXCI7XG59KShQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYWRpbmdTeXN0ZW0gPSBleHBvcnRzLlByb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhZGluZ1N5c3RlbSB8fCAoZXhwb3J0cy5Qcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYWRpbmdTeXN0ZW0gPSB7fSkpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYWRpbmdTeXN0ZW0uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentGradingSystem.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentGranularity.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentGranularity.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PronunciationAssessmentGranularity = void 0;\n/**\n * Defines the pronunciation evaluation granularity; default value is Phoneme.\n * Added in version 1.15.0\n * @class PronunciationAssessmentGranularity\n */\nvar PronunciationAssessmentGranularity;\n(function (PronunciationAssessmentGranularity) {\n    /**\n     * Shows the score on the full text, word and phoneme level\n     * @member PronunciationAssessmentGranularity.Phoneme\n     */\n    PronunciationAssessmentGranularity[PronunciationAssessmentGranularity[\"Phoneme\"] = 1] = \"Phoneme\";\n    /**\n     * Shows the score on the full text and word level\n     * @member PronunciationAssessmentGranularity.Word\n     */\n    PronunciationAssessmentGranularity[PronunciationAssessmentGranularity[\"Word\"] = 2] = \"Word\";\n    /**\n     * Shows the score on the full text level only\n     * @member PronunciationAssessmentGranularity.FullText\n     */\n    PronunciationAssessmentGranularity[PronunciationAssessmentGranularity[\"FullText\"] = 3] = \"FullText\";\n})(PronunciationAssessmentGranularity = exports.PronunciationAssessmentGranularity || (exports.PronunciationAssessmentGranularity = {}));\n\n//# sourceMappingURL=PronunciationAssessmentGranularity.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Qcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYW51bGFyaXR5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQ0FBMEM7QUFDMUM7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0ZBQXNGLDBDQUEwQyxLQUFLOztBQUV0SSIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRHcmFudWxhcml0eS5qcz9mMjAyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhbnVsYXJpdHkgPSB2b2lkIDA7XG4vKipcbiAqIERlZmluZXMgdGhlIHByb251bmNpYXRpb24gZXZhbHVhdGlvbiBncmFudWxhcml0eTsgZGVmYXVsdCB2YWx1ZSBpcyBQaG9uZW1lLlxuICogQWRkZWQgaW4gdmVyc2lvbiAxLjE1LjBcbiAqIEBjbGFzcyBQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYW51bGFyaXR5XG4gKi9cbnZhciBQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYW51bGFyaXR5O1xuKGZ1bmN0aW9uIChQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYW51bGFyaXR5KSB7XG4gICAgLyoqXG4gICAgICogU2hvd3MgdGhlIHNjb3JlIG9uIHRoZSBmdWxsIHRleHQsIHdvcmQgYW5kIHBob25lbWUgbGV2ZWxcbiAgICAgKiBAbWVtYmVyIFByb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhbnVsYXJpdHkuUGhvbmVtZVxuICAgICAqL1xuICAgIFByb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhbnVsYXJpdHlbUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRHcmFudWxhcml0eVtcIlBob25lbWVcIl0gPSAxXSA9IFwiUGhvbmVtZVwiO1xuICAgIC8qKlxuICAgICAqIFNob3dzIHRoZSBzY29yZSBvbiB0aGUgZnVsbCB0ZXh0IGFuZCB3b3JkIGxldmVsXG4gICAgICogQG1lbWJlciBQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYW51bGFyaXR5LldvcmRcbiAgICAgKi9cbiAgICBQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYW51bGFyaXR5W1Byb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhbnVsYXJpdHlbXCJXb3JkXCJdID0gMl0gPSBcIldvcmRcIjtcbiAgICAvKipcbiAgICAgKiBTaG93cyB0aGUgc2NvcmUgb24gdGhlIGZ1bGwgdGV4dCBsZXZlbCBvbmx5XG4gICAgICogQG1lbWJlciBQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYW51bGFyaXR5LkZ1bGxUZXh0XG4gICAgICovXG4gICAgUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRHcmFudWxhcml0eVtQcm9udW5jaWF0aW9uQXNzZXNzbWVudEdyYW51bGFyaXR5W1wiRnVsbFRleHRcIl0gPSAzXSA9IFwiRnVsbFRleHRcIjtcbn0pKFByb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhbnVsYXJpdHkgPSBleHBvcnRzLlByb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhbnVsYXJpdHkgfHwgKGV4cG9ydHMuUHJvbnVuY2lhdGlvbkFzc2Vzc21lbnRHcmFudWxhcml0eSA9IHt9KSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVByb251bmNpYXRpb25Bc3Nlc3NtZW50R3JhbnVsYXJpdHkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentGranularity.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentResult.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentResult.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PronunciationAssessmentResult = exports.ContentAssessmentResult = void 0;\n/* eslint-disable max-classes-per-file */\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nclass ContentAssessmentResult {\n    /**\n     * @Internal\n     * Do not use externally.\n     */\n    constructor(detailResult) {\n        this.privPronJson = detailResult;\n    }\n    /**\n     * Correctness in using grammar and variety of sentence patterns.\n     * Grammatical errors are jointly evaluated by lexical accuracy,\n     * grammatical accuracy and diversity of sentence structures.\n     * @member ContentAssessmentResult.prototype.grammarScore\n     * @function\n     * @public\n     * @returns {number} Grammar score.\n     */\n    get grammarScore() {\n        return this.privPronJson.ContentAssessment.GrammarScore;\n    }\n    /**\n     * Proficiency in lexical usage. It evaluates the speaker's effective usage\n     * of words and their appropriateness within the given context to express\n     * ideas accurately, as well as level of lexical complexity.\n     * @member ContentAssessmentResult.prototype.vocabularyScore\n     * @function\n     * @public\n     * @returns {number} Vocabulary score.\n     */\n    get vocabularyScore() {\n        return this.privPronJson.ContentAssessment.VocabularyScore;\n    }\n    /**\n     * Level of understanding and engagement with the topic, which provides\n     * insights into the speaker’s ability to express their thoughts and ideas\n     * effectively and the ability to engage with the topic.\n     * @member ContentAssessmentResult.prototype.topicScore\n     * @function\n     * @public\n     * @returns {number} Topic score.\n     */\n    get topicScore() {\n        return this.privPronJson.ContentAssessment.TopicScore;\n    }\n}\nexports.ContentAssessmentResult = ContentAssessmentResult;\n/**\n * Pronunciation assessment results.\n * @class PronunciationAssessmentResult\n * Added in version 1.15.0.\n */\nclass PronunciationAssessmentResult {\n    constructor(jsonString) {\n        const j = JSON.parse(jsonString);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(j.NBest[0], \"NBest\");\n        this.privPronJson = j.NBest[0];\n    }\n    /**\n     * @member PronunciationAssessmentResult.fromResult\n     * @function\n     * @public\n     * @param {RecognitionResult} result The recognition result.\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n     * @summary Creates an instance of the PronunciationAssessmentResult from recognition result.\n     */\n    static fromResult(result) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(result, \"result\");\n        const json = result.properties.getProperty(Exports_js_1.PropertyId.SpeechServiceResponse_JsonResult);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(json, \"json\");\n        return new PronunciationAssessmentResult(json);\n    }\n    /**\n     * Gets the detail result of pronunciation assessment.\n     * @member PronunciationAssessmentConfig.prototype.detailResult\n     * @function\n     * @public\n     * @returns {DetailResult} detail result.\n     */\n    get detailResult() {\n        return this.privPronJson;\n    }\n    /**\n     * The score indicating the pronunciation accuracy of the given speech, which indicates\n     * how closely the phonemes match a native speaker's pronunciation.\n     * @member PronunciationAssessmentResult.prototype.accuracyScore\n     * @function\n     * @public\n     * @returns {number} Accuracy score.\n     */\n    get accuracyScore() {\n        return this.detailResult.PronunciationAssessment?.AccuracyScore;\n    }\n    /**\n     * The overall score indicating the pronunciation quality of the given speech.\n     * This is calculated from AccuracyScore, FluencyScore and CompletenessScore with weight.\n     * @member PronunciationAssessmentResult.prototype.pronunciationScore\n     * @function\n     * @public\n     * @returns {number} Pronunciation score.\n     */\n    get pronunciationScore() {\n        return this.detailResult.PronunciationAssessment?.PronScore;\n    }\n    /**\n     * The score indicating the completeness of the given speech by calculating the ratio of pronounced words towards entire input.\n     * @member PronunciationAssessmentResult.prototype.completenessScore\n     * @function\n     * @public\n     * @returns {number} Completeness score.\n     */\n    get completenessScore() {\n        return this.detailResult.PronunciationAssessment?.CompletenessScore;\n    }\n    /**\n     * The score indicating the fluency of the given speech.\n     * @member PronunciationAssessmentResult.prototype.fluencyScore\n     * @function\n     * @public\n     * @returns {number} Fluency score.\n     */\n    get fluencyScore() {\n        return this.detailResult.PronunciationAssessment?.FluencyScore;\n    }\n    /**\n     * The prosody score, which indicates how nature of the given speech, including stress, intonation, speaking speed and rhythm.\n     * @member PronunciationAssessmentResult.prototype.prosodyScore\n     * @function\n     * @public\n     * @returns {number} Prosody score.\n     */\n    get prosodyScore() {\n        return this.detailResult.PronunciationAssessment?.ProsodyScore;\n    }\n    /**\n     * The concent assessment result.\n     * Only available when content assessment is enabled.\n     * @member PronunciationAssessmentResult.prototype.contentAssessmentResult\n     * @function\n     * @public\n     * @returns {ContentAssessmentResult} Content assessment result.\n     */\n    get contentAssessmentResult() {\n        if (this.detailResult.ContentAssessment === undefined) {\n            return undefined;\n        }\n        return new ContentAssessmentResult(this.detailResult);\n    }\n}\nexports.PronunciationAssessmentResult = PronunciationAssessmentResult;\n\n//# sourceMappingURL=PronunciationAssessmentResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PronunciationAssessmentResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyCollection.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyCollection.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PropertyCollection = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Represents collection of properties and their values.\n * @class PropertyCollection\n */\nclass PropertyCollection {\n    constructor() {\n        this.privKeys = [];\n        this.privValues = [];\n    }\n    /**\n     * Returns the property value in type String.\n     * Currently only String, int and bool are allowed.\n     * If the name is not available, the specified defaultValue is returned.\n     * @member PropertyCollection.prototype.getProperty\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string | number | boolean} def - The default value which is returned if the parameter\n     * is not available in the collection.\n     * @returns {string} value of the parameter.\n     */\n    getProperty(key, def) {\n        let keyToUse;\n        if (typeof key === \"string\") {\n            keyToUse = key;\n        }\n        else {\n            keyToUse = Exports_js_1.PropertyId[key];\n        }\n        for (let n = 0; n < this.privKeys.length; n++) {\n            if (this.privKeys[n] === keyToUse) {\n                return this.privValues[n];\n            }\n        }\n        if (def === undefined) {\n            return undefined;\n        }\n        return String(def);\n    }\n    /**\n     * Sets the String value of the parameter specified by name.\n     * @member PropertyCollection.prototype.setProperty\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} value - The value of the parameter.\n     */\n    setProperty(key, value) {\n        let keyToUse;\n        if (typeof key === \"string\") {\n            keyToUse = key;\n        }\n        else {\n            keyToUse = Exports_js_1.PropertyId[key];\n        }\n        for (let n = 0; n < this.privKeys.length; n++) {\n            if (this.privKeys[n] === keyToUse) {\n                this.privValues[n] = value;\n                return;\n            }\n        }\n        this.privKeys.push(keyToUse);\n        this.privValues.push(value);\n    }\n    /**\n     * Clones the collection.\n     * @member PropertyCollection.prototype.clone\n     * @function\n     * @public\n     * @returns {PropertyCollection} A copy of the collection.\n     */\n    clone() {\n        const clonedMap = new PropertyCollection();\n        for (let n = 0; n < this.privKeys.length; n++) {\n            clonedMap.privKeys.push(this.privKeys[n]);\n            clonedMap.privValues.push(this.privValues[n]);\n        }\n        return clonedMap;\n    }\n    /**\n     * Merges this set of properties into another, no overwrites.\n     * @member PropertyCollection.prototype.mergeTo\n     * @function\n     * @public\n     * @param {PropertyCollection}  destinationCollection - The collection to merge into.\n     */\n    mergeTo(destinationCollection) {\n        this.privKeys.forEach((key) => {\n            if (destinationCollection.getProperty(key, undefined) === undefined) {\n                const value = this.getProperty(key);\n                destinationCollection.setProperty(key, value);\n            }\n        });\n    }\n    /**\n     * Get the keys in Property Collection.\n     * @member PropertyCollection.prototype.keys\n     * @function\n     * @public\n     * @returns {string []} Keys in the collection.\n     */\n    get keys() {\n        return this.privKeys;\n    }\n}\nexports.PropertyCollection = PropertyCollection;\n\n//# sourceMappingURL=PropertyCollection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Qcm9wZXJ0eUNvbGxlY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQixxQkFBcUIsbUJBQU8sQ0FBQyxnSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLDJCQUEyQjtBQUMxQztBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwQkFBMEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDBCQUEwQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvQkFBb0I7QUFDckM7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDBCQUEwQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUscUJBQXFCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixXQUFXO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7O0FBRTFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Qcm9wZXJ0eUNvbGxlY3Rpb24uanM/MWVlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qcm9wZXJ0eUNvbGxlY3Rpb24gPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuLyoqXG4gKiBSZXByZXNlbnRzIGNvbGxlY3Rpb24gb2YgcHJvcGVydGllcyBhbmQgdGhlaXIgdmFsdWVzLlxuICogQGNsYXNzIFByb3BlcnR5Q29sbGVjdGlvblxuICovXG5jbGFzcyBQcm9wZXJ0eUNvbGxlY3Rpb24ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnByaXZLZXlzID0gW107XG4gICAgICAgIHRoaXMucHJpdlZhbHVlcyA9IFtdO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBwcm9wZXJ0eSB2YWx1ZSBpbiB0eXBlIFN0cmluZy5cbiAgICAgKiBDdXJyZW50bHkgb25seSBTdHJpbmcsIGludCBhbmQgYm9vbCBhcmUgYWxsb3dlZC5cbiAgICAgKiBJZiB0aGUgbmFtZSBpcyBub3QgYXZhaWxhYmxlLCB0aGUgc3BlY2lmaWVkIGRlZmF1bHRWYWx1ZSBpcyByZXR1cm5lZC5cbiAgICAgKiBAbWVtYmVyIFByb3BlcnR5Q29sbGVjdGlvbi5wcm90b3R5cGUuZ2V0UHJvcGVydHlcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleSAtIFRoZSBwYXJhbWV0ZXIgbmFtZS5cbiAgICAgKiBAcGFyYW0ge3N0cmluZyB8IG51bWJlciB8IGJvb2xlYW59IGRlZiAtIFRoZSBkZWZhdWx0IHZhbHVlIHdoaWNoIGlzIHJldHVybmVkIGlmIHRoZSBwYXJhbWV0ZXJcbiAgICAgKiBpcyBub3QgYXZhaWxhYmxlIGluIHRoZSBjb2xsZWN0aW9uLlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IHZhbHVlIG9mIHRoZSBwYXJhbWV0ZXIuXG4gICAgICovXG4gICAgZ2V0UHJvcGVydHkoa2V5LCBkZWYpIHtcbiAgICAgICAgbGV0IGtleVRvVXNlO1xuICAgICAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAga2V5VG9Vc2UgPSBrZXk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBrZXlUb1VzZSA9IEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgbiA9IDA7IG4gPCB0aGlzLnByaXZLZXlzLmxlbmd0aDsgbisrKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcml2S2V5c1tuXSA9PT0ga2V5VG9Vc2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5wcml2VmFsdWVzW25dO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChkZWYgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gU3RyaW5nKGRlZik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIFN0cmluZyB2YWx1ZSBvZiB0aGUgcGFyYW1ldGVyIHNwZWNpZmllZCBieSBuYW1lLlxuICAgICAqIEBtZW1iZXIgUHJvcGVydHlDb2xsZWN0aW9uLnByb3RvdHlwZS5zZXRQcm9wZXJ0eVxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IC0gVGhlIHBhcmFtZXRlciBuYW1lLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSAtIFRoZSB2YWx1ZSBvZiB0aGUgcGFyYW1ldGVyLlxuICAgICAqL1xuICAgIHNldFByb3BlcnR5KGtleSwgdmFsdWUpIHtcbiAgICAgICAgbGV0IGtleVRvVXNlO1xuICAgICAgICBpZiAodHlwZW9mIGtleSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAga2V5VG9Vc2UgPSBrZXk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBrZXlUb1VzZSA9IEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUlkW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgbiA9IDA7IG4gPCB0aGlzLnByaXZLZXlzLmxlbmd0aDsgbisrKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcml2S2V5c1tuXSA9PT0ga2V5VG9Vc2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByaXZWYWx1ZXNbbl0gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcml2S2V5cy5wdXNoKGtleVRvVXNlKTtcbiAgICAgICAgdGhpcy5wcml2VmFsdWVzLnB1c2godmFsdWUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDbG9uZXMgdGhlIGNvbGxlY3Rpb24uXG4gICAgICogQG1lbWJlciBQcm9wZXJ0eUNvbGxlY3Rpb24ucHJvdG90eXBlLmNsb25lXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtQcm9wZXJ0eUNvbGxlY3Rpb259IEEgY29weSBvZiB0aGUgY29sbGVjdGlvbi5cbiAgICAgKi9cbiAgICBjbG9uZSgpIHtcbiAgICAgICAgY29uc3QgY2xvbmVkTWFwID0gbmV3IFByb3BlcnR5Q29sbGVjdGlvbigpO1xuICAgICAgICBmb3IgKGxldCBuID0gMDsgbiA8IHRoaXMucHJpdktleXMubGVuZ3RoOyBuKyspIHtcbiAgICAgICAgICAgIGNsb25lZE1hcC5wcml2S2V5cy5wdXNoKHRoaXMucHJpdktleXNbbl0pO1xuICAgICAgICAgICAgY2xvbmVkTWFwLnByaXZWYWx1ZXMucHVzaCh0aGlzLnByaXZWYWx1ZXNbbl0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjbG9uZWRNYXA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1lcmdlcyB0aGlzIHNldCBvZiBwcm9wZXJ0aWVzIGludG8gYW5vdGhlciwgbm8gb3ZlcndyaXRlcy5cbiAgICAgKiBAbWVtYmVyIFByb3BlcnR5Q29sbGVjdGlvbi5wcm90b3R5cGUubWVyZ2VUb1xuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge1Byb3BlcnR5Q29sbGVjdGlvbn0gIGRlc3RpbmF0aW9uQ29sbGVjdGlvbiAtIFRoZSBjb2xsZWN0aW9uIHRvIG1lcmdlIGludG8uXG4gICAgICovXG4gICAgbWVyZ2VUbyhkZXN0aW5hdGlvbkNvbGxlY3Rpb24pIHtcbiAgICAgICAgdGhpcy5wcml2S2V5cy5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgICAgIGlmIChkZXN0aW5hdGlvbkNvbGxlY3Rpb24uZ2V0UHJvcGVydHkoa2V5LCB1bmRlZmluZWQpID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZ2V0UHJvcGVydHkoa2V5KTtcbiAgICAgICAgICAgICAgICBkZXN0aW5hdGlvbkNvbGxlY3Rpb24uc2V0UHJvcGVydHkoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGtleXMgaW4gUHJvcGVydHkgQ29sbGVjdGlvbi5cbiAgICAgKiBAbWVtYmVyIFByb3BlcnR5Q29sbGVjdGlvbi5wcm90b3R5cGUua2V5c1xuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nIFtdfSBLZXlzIGluIHRoZSBjb2xsZWN0aW9uLlxuICAgICAqL1xuICAgIGdldCBrZXlzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2S2V5cztcbiAgICB9XG59XG5leHBvcnRzLlByb3BlcnR5Q29sbGVjdGlvbiA9IFByb3BlcnR5Q29sbGVjdGlvbjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UHJvcGVydHlDb2xsZWN0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyCollection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyId.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyId.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PropertyId = void 0;\n/**\n * Defines speech property ids.\n * @class PropertyId\n */\nvar PropertyId;\n(function (PropertyId) {\n    /**\n     * The Cognitive Services Speech Service subscription Key. If you are using an intent recognizer, you need to\n     * specify the LUIS endpoint key for your particular LUIS app. Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use [[SpeechConfig.fromSubscription]].\n     * @member PropertyId.SpeechServiceConnection_Key\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Key\"] = 0] = \"SpeechServiceConnection_Key\";\n    /**\n     * The Cognitive Services Speech Service endpoint (url). Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use [[SpeechConfig.fromEndpoint]].\n     * NOTE: This endpoint is not the same as the endpoint used to obtain an access token.\n     * @member PropertyId.SpeechServiceConnection_Endpoint\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Endpoint\"] = 1] = \"SpeechServiceConnection_Endpoint\";\n    /**\n     * The Cognitive Services Speech Service region. Under normal circumstances, you shouldn't have to\n     * use this property directly.\n     * Instead, use [[SpeechConfig.fromSubscription]], [[SpeechConfig.fromEndpoint]], [[SpeechConfig.fromAuthorizationToken]].\n     * @member PropertyId.SpeechServiceConnection_Region\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Region\"] = 2] = \"SpeechServiceConnection_Region\";\n    /**\n     * The Cognitive Services Speech Service authorization token (aka access token). Under normal circumstances,\n     * you shouldn't have to use this property directly.\n     * Instead, use [[SpeechConfig.fromAuthorizationToken]], [[SpeechRecognizer.authorizationToken]],\n     * [[IntentRecognizer.authorizationToken]], [[TranslationRecognizer.authorizationToken]], [[SpeakerRecognizer.authorizationToken]].\n     * @member PropertyId.SpeechServiceAuthorization_Token\n     */\n    PropertyId[PropertyId[\"SpeechServiceAuthorization_Token\"] = 3] = \"SpeechServiceAuthorization_Token\";\n    /**\n     * The Cognitive Services Speech Service authorization type. Currently unused.\n     * @member PropertyId.SpeechServiceAuthorization_Type\n     */\n    PropertyId[PropertyId[\"SpeechServiceAuthorization_Type\"] = 4] = \"SpeechServiceAuthorization_Type\";\n    /**\n     * The Cognitive Services Speech Service endpoint id. Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use [[SpeechConfig.endpointId]].\n     * NOTE: The endpoint id is available in the Speech Portal, listed under Endpoint Details.\n     * @member PropertyId.SpeechServiceConnection_EndpointId\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EndpointId\"] = 5] = \"SpeechServiceConnection_EndpointId\";\n    /**\n     * The list of comma separated languages (BCP-47 format) used as target translation languages. Under normal circumstances,\n     * you shouldn't have to use this property directly.\n     * Instead use [[SpeechTranslationConfig.addTargetLanguage]],\n     * [[SpeechTranslationConfig.targetLanguages]], [[TranslationRecognizer.targetLanguages]].\n     * @member PropertyId.SpeechServiceConnection_TranslationToLanguages\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationToLanguages\"] = 6] = \"SpeechServiceConnection_TranslationToLanguages\";\n    /**\n     * The name of the Cognitive Service Text to Speech Service Voice. Under normal circumstances, you shouldn't have to use this\n     * property directly.\n     * Instead, use [[SpeechTranslationConfig.voiceName]].\n     * NOTE: Valid voice names can be found <a href=\"https://aka.ms/csspeech/voicenames\">here</a>.\n     * @member PropertyId.SpeechServiceConnection_TranslationVoice\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationVoice\"] = 7] = \"SpeechServiceConnection_TranslationVoice\";\n    /**\n     * Translation features.\n     * @member PropertyId.SpeechServiceConnection_TranslationFeatures\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationFeatures\"] = 8] = \"SpeechServiceConnection_TranslationFeatures\";\n    /**\n     * The Language Understanding Service Region. Under normal circumstances, you shouldn't have to use this property directly.\n     * Instead, use [[LanguageUnderstandingModel]].\n     * @member PropertyId.SpeechServiceConnection_IntentRegion\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_IntentRegion\"] = 9] = \"SpeechServiceConnection_IntentRegion\";\n    /**\n     * The host name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyHostName\"] = 10] = \"SpeechServiceConnection_ProxyHostName\";\n    /**\n     * The port of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyPort\"] = 11] = \"SpeechServiceConnection_ProxyPort\";\n    /**\n     * The user name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyUserName\"] = 12] = \"SpeechServiceConnection_ProxyUserName\";\n    /**\n     * The password of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyPassword\"] = 13] = \"SpeechServiceConnection_ProxyPassword\";\n    /**\n     * The Cognitive Services Speech Service recognition Mode. Can be \"INTERACTIVE\", \"CONVERSATION\", \"DICTATION\".\n     * This property is intended to be read-only. The SDK is using it internally.\n     * @member PropertyId.SpeechServiceConnection_RecoMode\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecoMode\"] = 14] = \"SpeechServiceConnection_RecoMode\";\n    /**\n     * The spoken language to be recognized (in BCP-47 format). Under normal circumstances, you shouldn't have to use this property\n     * directly.\n     * Instead, use [[SpeechConfig.speechRecognitionLanguage]].\n     * @member PropertyId.SpeechServiceConnection_RecoLanguage\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecoLanguage\"] = 15] = \"SpeechServiceConnection_RecoLanguage\";\n    /**\n     * The session id. This id is a universally unique identifier (aka UUID) representing a specific binding of an audio input stream\n     * and the underlying speech recognition instance to which it is bound. Under normal circumstances, you shouldn't have to use this\n     * property directly.\n     * Instead use [[SessionEventArgs.sessionId]].\n     * @member PropertyId.Speech_SessionId\n     */\n    PropertyId[PropertyId[\"Speech_SessionId\"] = 16] = \"Speech_SessionId\";\n    /**\n     * The spoken language to be synthesized (e.g. en-US)\n     * @member PropertyId.SpeechServiceConnection_SynthLanguage\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SynthLanguage\"] = 17] = \"SpeechServiceConnection_SynthLanguage\";\n    /**\n     * The name of the TTS voice to be used for speech synthesis\n     * @member PropertyId.SpeechServiceConnection_SynthVoice\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SynthVoice\"] = 18] = \"SpeechServiceConnection_SynthVoice\";\n    /**\n     * The string to specify TTS output audio format\n     * @member PropertyId.SpeechServiceConnection_SynthOutputFormat\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SynthOutputFormat\"] = 19] = \"SpeechServiceConnection_SynthOutputFormat\";\n    /**\n     * The list of comma separated languages used as possible source languages\n     * Added in version 1.13.0\n     * @member PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_AutoDetectSourceLanguages\"] = 20] = \"SpeechServiceConnection_AutoDetectSourceLanguages\";\n    /**\n     * The requested Cognitive Services Speech Service response output format (simple or detailed). Under normal circumstances, you shouldn't have\n     * to use this property directly.\n     * Instead use [[SpeechConfig.outputFormat]].\n     * @member PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestDetailedResultTrueFalse\"] = 21] = \"SpeechServiceResponse_RequestDetailedResultTrueFalse\";\n    /**\n     * The requested Cognitive Services Speech Service response output profanity level. Currently unused.\n     * @member PropertyId.SpeechServiceResponse_RequestProfanityFilterTrueFalse\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestProfanityFilterTrueFalse\"] = 22] = \"SpeechServiceResponse_RequestProfanityFilterTrueFalse\";\n    /**\n     * The Cognitive Services Speech Service response output (in JSON format). This property is available on recognition result objects only.\n     * @member PropertyId.SpeechServiceResponse_JsonResult\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_JsonResult\"] = 23] = \"SpeechServiceResponse_JsonResult\";\n    /**\n     * The Cognitive Services Speech Service error details (in JSON format). Under normal circumstances, you shouldn't have to\n     * use this property directly. Instead use [[CancellationDetails.errorDetails]].\n     * @member PropertyId.SpeechServiceResponse_JsonErrorDetails\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_JsonErrorDetails\"] = 24] = \"SpeechServiceResponse_JsonErrorDetails\";\n    /**\n     * The cancellation reason. Currently unused.\n     * @member PropertyId.CancellationDetails_Reason\n     */\n    PropertyId[PropertyId[\"CancellationDetails_Reason\"] = 25] = \"CancellationDetails_Reason\";\n    /**\n     * The cancellation text. Currently unused.\n     * @member PropertyId.CancellationDetails_ReasonText\n     */\n    PropertyId[PropertyId[\"CancellationDetails_ReasonText\"] = 26] = \"CancellationDetails_ReasonText\";\n    /**\n     * The Cancellation detailed text. Currently unused.\n     * @member PropertyId.CancellationDetails_ReasonDetailedText\n     */\n    PropertyId[PropertyId[\"CancellationDetails_ReasonDetailedText\"] = 27] = \"CancellationDetails_ReasonDetailedText\";\n    /**\n     * The Language Understanding Service response output (in JSON format). Available via [[IntentRecognitionResult]]\n     * @member PropertyId.LanguageUnderstandingServiceResponse_JsonResult\n     */\n    PropertyId[PropertyId[\"LanguageUnderstandingServiceResponse_JsonResult\"] = 28] = \"LanguageUnderstandingServiceResponse_JsonResult\";\n    /**\n     * The URL string built from speech configuration.\n     * This property is intended to be read-only. The SDK is using it internally.\n     * NOTE: Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Url\"] = 29] = \"SpeechServiceConnection_Url\";\n    /**\n     * The initial silence timeout value (in milliseconds) used by the service.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_InitialSilenceTimeoutMs\"] = 30] = \"SpeechServiceConnection_InitialSilenceTimeoutMs\";\n    /**\n     * The end silence timeout value (in milliseconds) used by the service.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EndSilenceTimeoutMs\"] = 31] = \"SpeechServiceConnection_EndSilenceTimeoutMs\";\n    /**\n     * A duration of detected silence, measured in milliseconds, after which speech-to-text will determine a spoken\n     * phrase has ended and generate a final Recognized result. Configuring this timeout may be helpful in situations\n     * where spoken input is significantly faster or slower than usual and default segmentation behavior consistently\n     * yields results that are too long or too short. Segmentation timeout values that are inappropriately high or low\n     * can negatively affect speech-to-text accuracy; this property should be carefully configured and the resulting\n     * behavior should be thoroughly validated as intended.\n     *\n     * For more information about timeout configuration that includes discussion of default behaviors, please visit\n     * https://aka.ms/csspeech/timeouts.\n     *\n     * Added in version 1.21.0.\n     */\n    PropertyId[PropertyId[\"Speech_SegmentationSilenceTimeoutMs\"] = 32] = \"Speech_SegmentationSilenceTimeoutMs\";\n    /**\n     * SegmentationMaximumTimeMs represents the maximum length of a spoken phrase when using the Time segmentation strategy.\n     * As the length of a spoken phrase approaches this value, the @member Speech_SegmentationSilenceTimeoutMs will be reduced until either\n     * the phrase silence timeout is reached or the phrase reaches the maximum length.\n     *\n     * Added in version 1.42.0.\n     */\n    PropertyId[PropertyId[\"Speech_SegmentationMaximumTimeMs\"] = 33] = \"Speech_SegmentationMaximumTimeMs\";\n    /**\n     * SegmentationStrategy defines the strategy used to determine when a spoken phrase has ended and a final Recognized result should be generated.\n     * Allowed values are \"Default\", \"Time\", and \"Semantic\".\n     *\n     * Valid values:\n     * - \"Default\": Uses the default strategy and settings as determined by the Speech Service. Suitable for most situations.\n     * - \"Time\": Uses a time-based strategy where the amount of silence between speech determines when to generate a final result.\n     * - \"Semantic\": Uses an AI model to determine the end of a spoken phrase based on the phrase's content.\n     *\n     * Additional Notes:\n     * - When using the Time strategy, @member Speech_SegmentationSilenceTimeoutMs can be adjusted to modify the required silence duration for ending a phrase,\n     * and @member Speech_SegmentationMaximumTimeMs can be adjusted to set the maximum length of a spoken phrase.\n     * - The Semantic strategy does not have any adjustable properties.\n     *\n     * Added in version 1.42.0.\n     */\n    PropertyId[PropertyId[\"Speech_SegmentationStrategy\"] = 34] = \"Speech_SegmentationStrategy\";\n    /**\n     * A boolean value specifying whether audio logging is enabled in the service or not.\n     * Audio and content logs are stored either in Microsoft-owned storage, or in your own storage account linked\n     * to your Cognitive Services subscription (Bring Your Own Storage (BYOS) enabled Speech resource).\n     * The logs will be removed after 30 days.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EnableAudioLogging\"] = 35] = \"SpeechServiceConnection_EnableAudioLogging\";\n    /**\n     * The speech service connection language identifier mode.\n     * Can be \"AtStart\" (the default), or \"Continuous\". See Language\n     * Identification document https://aka.ms/speech/lid?pivots=programming-language-javascript\n     * for more details.\n     * Added in 1.25.0\n     **/\n    PropertyId[PropertyId[\"SpeechServiceConnection_LanguageIdMode\"] = 36] = \"SpeechServiceConnection_LanguageIdMode\";\n    /**\n     * A string value representing the desired endpoint version to target for Speech Recognition.\n     * Added in version 1.21.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecognitionEndpointVersion\"] = 37] = \"SpeechServiceConnection_RecognitionEndpointVersion\";\n    /**\n    /**\n     * A string value the current speaker recognition scenario/mode (TextIndependentIdentification, etc.).\n     * Added in version 1.23.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SpeakerIdMode\"] = 38] = \"SpeechServiceConnection_SpeakerIdMode\";\n    /**\n     * The requested Cognitive Services Speech Service response output profanity setting.\n     * Allowed values are \"masked\", \"removed\", and \"raw\".\n     * Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_ProfanityOption\"] = 39] = \"SpeechServiceResponse_ProfanityOption\";\n    /**\n     * A string value specifying which post processing option should be used by service.\n     * Allowed values are \"TrueText\".\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_PostProcessingOption\"] = 40] = \"SpeechServiceResponse_PostProcessingOption\";\n    /**\n     * A boolean value specifying whether to include word-level timestamps in the response result.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestWordLevelTimestamps\"] = 41] = \"SpeechServiceResponse_RequestWordLevelTimestamps\";\n    /**\n     * The number of times a word has to be in partial results to be returned.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_StablePartialResultThreshold\"] = 42] = \"SpeechServiceResponse_StablePartialResultThreshold\";\n    /**\n     * A string value specifying the output format option in the response result. Internal use only.\n     * Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_OutputFormatOption\"] = 43] = \"SpeechServiceResponse_OutputFormatOption\";\n    /**\n     * A boolean value to request for stabilizing translation partial results by omitting words in the end.\n     * Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_TranslationRequestStablePartialResult\"] = 44] = \"SpeechServiceResponse_TranslationRequestStablePartialResult\";\n    /**\n     * A boolean value specifying whether to request WordBoundary events.\n     * @member PropertyId.SpeechServiceResponse_RequestWordBoundary\n     * Added in version 1.21.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestWordBoundary\"] = 45] = \"SpeechServiceResponse_RequestWordBoundary\";\n    /**\n     * A boolean value specifying whether to request punctuation boundary in WordBoundary Events. Default is true.\n     * @member PropertyId.SpeechServiceResponse_RequestPunctuationBoundary\n     * Added in version 1.21.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestPunctuationBoundary\"] = 46] = \"SpeechServiceResponse_RequestPunctuationBoundary\";\n    /**\n     * A boolean value specifying whether to request sentence boundary in WordBoundary Events. Default is false.\n     * @member PropertyId.SpeechServiceResponse_RequestSentenceBoundary\n     * Added in version 1.21.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestSentenceBoundary\"] = 47] = \"SpeechServiceResponse_RequestSentenceBoundary\";\n    /**\n     * Determines if intermediate results contain speaker identification.\n     * Allowed values are \"true\" or \"false\". If set to \"true\", the intermediate results will contain speaker identification.\n     * The default value if unset or set to an invalid value is \"false\".\n     * This is currently only supported for scenarios using the ConversationTranscriber\".\n     * @member PropertyId.SpeechServiceResponse_DiarizeIntermediateResults\n     * Adding in version 1.41.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_DiarizeIntermediateResults\"] = 48] = \"SpeechServiceResponse_DiarizeIntermediateResults\";\n    /**\n     * Identifier used to connect to the backend service.\n     * @member PropertyId.Conversation_ApplicationId\n     */\n    PropertyId[PropertyId[\"Conversation_ApplicationId\"] = 49] = \"Conversation_ApplicationId\";\n    /**\n     * Type of dialog backend to connect to.\n     * @member PropertyId.Conversation_DialogType\n     */\n    PropertyId[PropertyId[\"Conversation_DialogType\"] = 50] = \"Conversation_DialogType\";\n    /**\n     * Silence timeout for listening\n     * @member PropertyId.Conversation_Initial_Silence_Timeout\n     */\n    PropertyId[PropertyId[\"Conversation_Initial_Silence_Timeout\"] = 51] = \"Conversation_Initial_Silence_Timeout\";\n    /**\n     * From Id to add to speech recognition activities.\n     * @member PropertyId.Conversation_From_Id\n     */\n    PropertyId[PropertyId[\"Conversation_From_Id\"] = 52] = \"Conversation_From_Id\";\n    /**\n     * ConversationId for the session.\n     * @member PropertyId.Conversation_Conversation_Id\n     */\n    PropertyId[PropertyId[\"Conversation_Conversation_Id\"] = 53] = \"Conversation_Conversation_Id\";\n    /**\n     * Comma separated list of custom voice deployment ids.\n     * @member PropertyId.Conversation_Custom_Voice_Deployment_Ids\n     */\n    PropertyId[PropertyId[\"Conversation_Custom_Voice_Deployment_Ids\"] = 54] = \"Conversation_Custom_Voice_Deployment_Ids\";\n    /**\n     * Speech activity template, stamp properties from the template on the activity generated by the service for speech.\n     * @member PropertyId.Conversation_Speech_Activity_Template\n     * Added in version 1.10.0.\n     */\n    PropertyId[PropertyId[\"Conversation_Speech_Activity_Template\"] = 55] = \"Conversation_Speech_Activity_Template\";\n    /**\n     * Enables or disables the receipt of turn status messages as obtained on the turnStatusReceived event.\n     * @member PropertyId.Conversation_Request_Bot_Status_Messages\n     * Added in version 1.15.0.\n     */\n    PropertyId[PropertyId[\"Conversation_Request_Bot_Status_Messages\"] = 56] = \"Conversation_Request_Bot_Status_Messages\";\n    /**\n     * Specifies the connection ID to be provided in the Agent configuration message, e.g. a Direct Line token for\n     * channel authentication.\n     * Added in version 1.15.1.\n     */\n    PropertyId[PropertyId[\"Conversation_Agent_Connection_Id\"] = 57] = \"Conversation_Agent_Connection_Id\";\n    /**\n     * The Cognitive Services Speech Service host (url). Under normal circumstances, you shouldn't have to use this property directly.\n     * Instead, use [[SpeechConfig.fromHost]].\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Host\"] = 58] = \"SpeechServiceConnection_Host\";\n    /**\n     * Set the host for service calls to the Conversation Translator REST management and websocket calls.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_Host\"] = 59] = \"ConversationTranslator_Host\";\n    /**\n     * Optionally set the the host's display name.\n     * Used when joining a conversation.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_Name\"] = 60] = \"ConversationTranslator_Name\";\n    /**\n     * Optionally set a value for the X-CorrelationId request header.\n     * Used for troubleshooting errors in the server logs. It should be a valid guid.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_CorrelationId\"] = 61] = \"ConversationTranslator_CorrelationId\";\n    /**\n     * Set the conversation token to be sent to the speech service. This enables the\n     * service to service call from the speech service to the Conversation Translator service for relaying\n     * recognitions. For internal use.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_Token\"] = 62] = \"ConversationTranslator_Token\";\n    /**\n     * The reference text of the audio for pronunciation evaluation.\n     * For this and the following pronunciation assessment parameters, see\n     * https://docs.microsoft.com/azure/cognitive-services/speech-service/rest-speech-to-text#pronunciation-assessment-parameters for details.\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_ReferenceText\"] = 63] = \"PronunciationAssessment_ReferenceText\";\n    /**\n     * The point system for pronunciation score calibration (FivePoint or HundredMark).\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_GradingSystem\"] = 64] = \"PronunciationAssessment_GradingSystem\";\n    /**\n     * The pronunciation evaluation granularity (Phoneme, Word, or FullText).\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_Granularity\"] = 65] = \"PronunciationAssessment_Granularity\";\n    /**\n     * Defines if enable miscue calculation.\n     * With this enabled, the pronounced words will be compared to the reference text,\n     * and will be marked with omission/insertion based on the comparison. The default setting is False.\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_EnableMiscue\"] = 66] = \"PronunciationAssessment_EnableMiscue\";\n    /**\n     * The json string of pronunciation assessment parameters\n     * Under normal circumstances, you shouldn't have to use this property directly.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_Json\"] = 67] = \"PronunciationAssessment_Json\";\n    /**\n     * Pronunciation assessment parameters.\n     * This property is intended to be read-only. The SDK is using it internally.\n     * Added in version 1.15.0\n     */\n    PropertyId[PropertyId[\"PronunciationAssessment_Params\"] = 68] = \"PronunciationAssessment_Params\";\n    /**\n     * Version of Speaker Recognition API to use.\n     * Added in version 1.18.0\n     */\n    PropertyId[PropertyId[\"SpeakerRecognition_Api_Version\"] = 69] = \"SpeakerRecognition_Api_Version\";\n    /**\n     * Specifies whether to allow load of data URL for web worker\n     * Allowed values are \"off\" and \"on\". Default is \"on\".\n     * Added in version 1.32.0\n     */\n    PropertyId[PropertyId[\"WebWorkerLoadType\"] = 70] = \"WebWorkerLoadType\";\n    /**\n     * Talking avatar service WebRTC session description protocol.\n     * This property is intended to be read-only. The SDK is using it internally.\n     * Added in version 1.33.0\n     */\n    PropertyId[PropertyId[\"TalkingAvatarService_WebRTC_SDP\"] = 71] = \"TalkingAvatarService_WebRTC_SDP\";\n})(PropertyId = exports.PropertyId || (exports.PropertyId = {}));\n\n//# sourceMappingURL=PropertyId.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/PropertyId.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionEventArgs.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionEventArgs.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RecognitionEventArgs = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines payload for session events like Speech Start/End Detected\n * @class\n */\nclass RecognitionEventArgs extends Exports_js_1.SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(offset, sessionId) {\n        super(sessionId);\n        this.privOffset = offset;\n    }\n    /**\n     * Represents the message offset\n     * @member RecognitionEventArgs.prototype.offset\n     * @function\n     * @public\n     */\n    get offset() {\n        return this.privOffset;\n    }\n}\nexports.RecognitionEventArgs = RecognitionEventArgs;\n\n//# sourceMappingURL=RecognitionEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9SZWNvZ25pdGlvbkV2ZW50QXJncy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCLHFCQUFxQixtQkFBTyxDQUFDLGdIQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qjs7QUFFNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1JlY29nbml0aW9uRXZlbnRBcmdzLmpzP2I2MjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVjb2duaXRpb25FdmVudEFyZ3MgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuLyoqXG4gKiBEZWZpbmVzIHBheWxvYWQgZm9yIHNlc3Npb24gZXZlbnRzIGxpa2UgU3BlZWNoIFN0YXJ0L0VuZCBEZXRlY3RlZFxuICogQGNsYXNzXG4gKi9cbmNsYXNzIFJlY29nbml0aW9uRXZlbnRBcmdzIGV4dGVuZHMgRXhwb3J0c19qc18xLlNlc3Npb25FdmVudEFyZ3Mge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldCAtIFRoZSBvZmZzZXQuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHNlc3Npb25JZCAtIFRoZSBzZXNzaW9uIGlkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG9mZnNldCwgc2Vzc2lvbklkKSB7XG4gICAgICAgIHN1cGVyKHNlc3Npb25JZCk7XG4gICAgICAgIHRoaXMucHJpdk9mZnNldCA9IG9mZnNldDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50cyB0aGUgbWVzc2FnZSBvZmZzZXRcbiAgICAgKiBAbWVtYmVyIFJlY29nbml0aW9uRXZlbnRBcmdzLnByb3RvdHlwZS5vZmZzZXRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICovXG4gICAgZ2V0IG9mZnNldCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdk9mZnNldDtcbiAgICB9XG59XG5leHBvcnRzLlJlY29nbml0aW9uRXZlbnRBcmdzID0gUmVjb2duaXRpb25FdmVudEFyZ3M7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlY29nbml0aW9uRXZlbnRBcmdzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionResult.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionResult.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RecognitionResult = void 0;\n/**\n * Defines result of speech recognition.\n * @class RecognitionResult\n */\nclass RecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n        this.privResultId = resultId;\n        this.privReason = reason;\n        this.privText = text;\n        this.privDuration = duration;\n        this.privOffset = offset;\n        this.privLanguage = language;\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\n        this.privErrorDetails = errorDetails;\n        this.privJson = json;\n        this.privProperties = properties;\n    }\n    /**\n     * Specifies the result identifier.\n     * @member RecognitionResult.prototype.resultId\n     * @function\n     * @public\n     * @returns {string} Specifies the result identifier.\n     */\n    get resultId() {\n        return this.privResultId;\n    }\n    /**\n     * Specifies status of the result.\n     * @member RecognitionResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} Specifies status of the result.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * Presents the recognized text in the result.\n     * @member RecognitionResult.prototype.text\n     * @function\n     * @public\n     * @returns {string} Presents the recognized text in the result.\n     */\n    get text() {\n        return this.privText;\n    }\n    /**\n     * Duration of recognized speech in 100 nano second increments.\n     * @member RecognitionResult.prototype.duration\n     * @function\n     * @public\n     * @returns {number} Duration of recognized speech in 100 nano second increments.\n     */\n    get duration() {\n        return this.privDuration;\n    }\n    /**\n     * Offset of recognized speech in 100 nano second increments.\n     * @member RecognitionResult.prototype.offset\n     * @function\n     * @public\n     * @returns {number} Offset of recognized speech in 100 nano second increments.\n     */\n    get offset() {\n        return this.privOffset;\n    }\n    /**\n     * Primary Language detected.\n     * @member RecognitionResult.prototype.language\n     * @function\n     * @public\n     * @returns {string} language detected.\n     */\n    get language() {\n        return this.privLanguage;\n    }\n    /**\n     * Primary Language detection confidence (Unknown, Low, Medium, High).\n     * @member RecognitionResult.prototype.languageDetectionConfidence\n     * @function\n     * @public\n     * @returns {string} detection confidence strength.\n     */\n    get languageDetectionConfidence() {\n        return this.privLanguageDetectionConfidence;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member RecognitionResult.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} a brief description of an error.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    /**\n     * A string containing Json serialized recognition result as it was received from the service.\n     * @member RecognitionResult.prototype.json\n     * @function\n     * @private\n     * @returns {string} Json serialized representation of the result.\n     */\n    get json() {\n        return this.privJson;\n    }\n    /**\n     * The set of properties exposed in the result.\n     * @member RecognitionResult.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The set of properties exposed in the result.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n}\nexports.RecognitionResult = RecognitionResult;\n\n//# sourceMappingURL=RecognitionResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/RecognitionResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Recognizer.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Recognizer.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Recognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines the base class Recognizer which mainly contains common event handlers.\n * @class Recognizer\n */\nclass Recognizer {\n    /**\n     * Creates and initializes an instance of a Recognizer\n     * @constructor\n     * @param {AudioConfig} audioInput - An optional audio input stream associated with the recognizer\n     * @param {PropertyCollection} properties - A set of properties to set on the recognizer\n     * @param {IConnectionFactory} connectionFactory - The factory class used to create a custom IConnection for the recognizer\n     */\n    constructor(audioConfig, properties, connectionFactory) {\n        this.audioConfig = (audioConfig !== undefined) ? audioConfig : Exports_js_3.AudioConfig.fromDefaultMicrophoneInput();\n        this.privDisposed = false;\n        this.privProperties = properties.clone();\n        this.privConnectionFactory = connectionFactory;\n        this.implCommonRecognizerSetup();\n    }\n    /**\n     * Dispose of associated resources.\n     * @member Recognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        Exports_js_2.marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * @Internal\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    get internalData() {\n        return this.privReco;\n    }\n    /**\n     * This method performs cleanup of resources.\n     * The Boolean parameter disposing indicates whether the method is called\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\n     * Derived classes should override this method to dispose resource if needed.\n     * @member Recognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - Flag to request disposal.\n     */\n    async dispose(disposing) {\n        if (this.privDisposed) {\n            return;\n        }\n        this.privDisposed = true;\n        if (disposing) {\n            if (this.privReco) {\n                await this.privReco.audioSource.turnOff();\n                await this.privReco.dispose();\n            }\n        }\n    }\n    /**\n     * This method returns the current state of the telemetry setting.\n     * @member Recognizer.prototype.telemetryEnabled\n     * @function\n     * @public\n     * @returns true if the telemetry is enabled, false otherwise.\n     */\n    static get telemetryEnabled() {\n        return Exports_js_1.ServiceRecognizerBase.telemetryDataEnabled;\n    }\n    /**\n     * This method globally enables or disables telemetry.\n     * @member Recognizer.prototype.enableTelemetry\n     * @function\n     * @public\n     * @param enabled - Global setting for telemetry collection.\n     * If set to true, telemetry information like microphone errors,\n     * recognition errors are collected and sent to Microsoft.\n     * If set to false, no telemetry is sent to Microsoft.\n     */\n    static enableTelemetry(enabled) {\n        Exports_js_1.ServiceRecognizerBase.telemetryDataEnabled = enabled;\n    }\n    // Does the generic recognizer setup that is common across all recognizer types.\n    implCommonRecognizerSetup() {\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\n        let osName = \"unknown\";\n        let osVersion = \"unknown\";\n        if (typeof navigator !== \"undefined\") {\n            osPlatform = osPlatform + \"/\" + navigator.platform;\n            osName = navigator.userAgent;\n            osVersion = navigator.appVersion;\n        }\n        const recognizerConfig = this.createRecognizerConfig(new Exports_js_1.SpeechServiceConfig(new Exports_js_1.Context(new Exports_js_1.OS(osPlatform, osName, osVersion))));\n        this.privReco = this.createServiceRecognizer(Recognizer.getAuthFromProperties(this.privProperties), this.privConnectionFactory, this.audioConfig, recognizerConfig);\n    }\n    async recognizeOnceAsyncImpl(recognitionMode) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        const ret = new Exports_js_2.Deferred();\n        await this.implRecognizerStop();\n        await this.privReco.recognize(recognitionMode, ret.resolve, ret.reject);\n        const result = await ret.promise;\n        await this.implRecognizerStop();\n        return result;\n    }\n    async startContinuousRecognitionAsyncImpl(recognitionMode) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        await this.implRecognizerStop();\n        await this.privReco.recognize(recognitionMode, undefined, undefined);\n    }\n    async stopContinuousRecognitionAsyncImpl() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        await this.implRecognizerStop();\n    }\n    async implRecognizerStop() {\n        if (this.privReco) {\n            await this.privReco.stopRecognizing();\n        }\n        return;\n    }\n    static getAuthFromProperties(properties) {\n        const subscriptionKey = properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Key, undefined);\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\n            new Exports_js_1.CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\n            new Exports_js_1.CognitiveTokenAuthentication(() => {\n                const authorizationToken = properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n                return Promise.resolve(authorizationToken);\n            }, () => {\n                const authorizationToken = properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n                return Promise.resolve(authorizationToken);\n            });\n        return authentication;\n    }\n}\nexports.Recognizer = Recognizer;\n\n//# sourceMappingURL=Recognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9SZWNvZ25pemVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIscUJBQXFCLG1CQUFPLENBQUMseUlBQTZCO0FBQzFELHFCQUFxQixtQkFBTyxDQUFDLDJIQUFzQjtBQUNuRCx1QkFBdUIsbUJBQU8sQ0FBQyxvSEFBZ0I7QUFDL0MscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsYUFBYTtBQUM1QixlQUFlLG9CQUFvQjtBQUNuQyxlQUFlLG9CQUFvQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCOztBQUVsQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvUmVjb2duaXplci5qcz9kYjcwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlY29nbml6ZXIgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uLnNwZWVjaC9FeHBvcnRzLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18yID0gcmVxdWlyZShcIi4uL2NvbW1vbi9FeHBvcnRzLmpzXCIpO1xuY29uc3QgQ29udHJhY3RzX2pzXzEgPSByZXF1aXJlKFwiLi9Db250cmFjdHMuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzMgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuLyoqXG4gKiBEZWZpbmVzIHRoZSBiYXNlIGNsYXNzIFJlY29nbml6ZXIgd2hpY2ggbWFpbmx5IGNvbnRhaW5zIGNvbW1vbiBldmVudCBoYW5kbGVycy5cbiAqIEBjbGFzcyBSZWNvZ25pemVyXG4gKi9cbmNsYXNzIFJlY29nbml6ZXIge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIGEgUmVjb2duaXplclxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7QXVkaW9Db25maWd9IGF1ZGlvSW5wdXQgLSBBbiBvcHRpb25hbCBhdWRpbyBpbnB1dCBzdHJlYW0gYXNzb2NpYXRlZCB3aXRoIHRoZSByZWNvZ25pemVyXG4gICAgICogQHBhcmFtIHtQcm9wZXJ0eUNvbGxlY3Rpb259IHByb3BlcnRpZXMgLSBBIHNldCBvZiBwcm9wZXJ0aWVzIHRvIHNldCBvbiB0aGUgcmVjb2duaXplclxuICAgICAqIEBwYXJhbSB7SUNvbm5lY3Rpb25GYWN0b3J5fSBjb25uZWN0aW9uRmFjdG9yeSAtIFRoZSBmYWN0b3J5IGNsYXNzIHVzZWQgdG8gY3JlYXRlIGEgY3VzdG9tIElDb25uZWN0aW9uIGZvciB0aGUgcmVjb2duaXplclxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGF1ZGlvQ29uZmlnLCBwcm9wZXJ0aWVzLCBjb25uZWN0aW9uRmFjdG9yeSkge1xuICAgICAgICB0aGlzLmF1ZGlvQ29uZmlnID0gKGF1ZGlvQ29uZmlnICE9PSB1bmRlZmluZWQpID8gYXVkaW9Db25maWcgOiBFeHBvcnRzX2pzXzMuQXVkaW9Db25maWcuZnJvbURlZmF1bHRNaWNyb3Bob25lSW5wdXQoKTtcbiAgICAgICAgdGhpcy5wcml2RGlzcG9zZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5wcml2UHJvcGVydGllcyA9IHByb3BlcnRpZXMuY2xvbmUoKTtcbiAgICAgICAgdGhpcy5wcml2Q29ubmVjdGlvbkZhY3RvcnkgPSBjb25uZWN0aW9uRmFjdG9yeTtcbiAgICAgICAgdGhpcy5pbXBsQ29tbW9uUmVjb2duaXplclNldHVwKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERpc3Bvc2Ugb2YgYXNzb2NpYXRlZCByZXNvdXJjZXMuXG4gICAgICogQG1lbWJlciBSZWNvZ25pemVyLnByb3RvdHlwZS5jbG9zZVxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKi9cbiAgICBjbG9zZShjYiwgZXJyb3JDYikge1xuICAgICAgICBDb250cmFjdHNfanNfMS5Db250cmFjdHMudGhyb3dJZkRpc3Bvc2VkKHRoaXMucHJpdkRpc3Bvc2VkKTtcbiAgICAgICAgRXhwb3J0c19qc18yLm1hcnNoYWxQcm9taXNlVG9DYWxsYmFja3ModGhpcy5kaXNwb3NlKHRydWUpLCBjYiwgZXJyb3JDYik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBJbnRlcm5hbFxuICAgICAqIEludGVybmFsIGRhdGEgbWVtYmVyIHRvIHN1cHBvcnQgZnJvbVJlY29nbml6ZXIqIHBhdHRlcm4gbWV0aG9kcyBvbiBvdGhlciBjbGFzc2VzLlxuICAgICAqIERvIG5vdCB1c2UgZXh0ZXJuYWxseSwgb2JqZWN0IHJldHVybmVkIHdpbGwgY2hhbmdlIHdpdGhvdXQgd2FybmluZyBvciBub3RpY2UuXG4gICAgICovXG4gICAgZ2V0IGludGVybmFsRGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlJlY287XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIHBlcmZvcm1zIGNsZWFudXAgb2YgcmVzb3VyY2VzLlxuICAgICAqIFRoZSBCb29sZWFuIHBhcmFtZXRlciBkaXNwb3NpbmcgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIG1ldGhvZCBpcyBjYWxsZWRcbiAgICAgKiBmcm9tIERpc3Bvc2UgKGlmIGRpc3Bvc2luZyBpcyB0cnVlKSBvciBmcm9tIHRoZSBmaW5hbGl6ZXIgKGlmIGRpc3Bvc2luZyBpcyBmYWxzZSkuXG4gICAgICogRGVyaXZlZCBjbGFzc2VzIHNob3VsZCBvdmVycmlkZSB0aGlzIG1ldGhvZCB0byBkaXNwb3NlIHJlc291cmNlIGlmIG5lZWRlZC5cbiAgICAgKiBAbWVtYmVyIFJlY29nbml6ZXIucHJvdG90eXBlLmRpc3Bvc2VcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtib29sZWFufSBkaXNwb3NpbmcgLSBGbGFnIHRvIHJlcXVlc3QgZGlzcG9zYWwuXG4gICAgICovXG4gICAgYXN5bmMgZGlzcG9zZShkaXNwb3NpbmcpIHtcbiAgICAgICAgaWYgKHRoaXMucHJpdkRpc3Bvc2VkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcml2RGlzcG9zZWQgPSB0cnVlO1xuICAgICAgICBpZiAoZGlzcG9zaW5nKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcml2UmVjbykge1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMucHJpdlJlY28uYXVkaW9Tb3VyY2UudHVybk9mZigpO1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMucHJpdlJlY28uZGlzcG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIHJldHVybnMgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIHRlbGVtZXRyeSBzZXR0aW5nLlxuICAgICAqIEBtZW1iZXIgUmVjb2duaXplci5wcm90b3R5cGUudGVsZW1ldHJ5RW5hYmxlZFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB0cnVlIGlmIHRoZSB0ZWxlbWV0cnkgaXMgZW5hYmxlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICAgICAqL1xuICAgIHN0YXRpYyBnZXQgdGVsZW1ldHJ5RW5hYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuIEV4cG9ydHNfanNfMS5TZXJ2aWNlUmVjb2duaXplckJhc2UudGVsZW1ldHJ5RGF0YUVuYWJsZWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIGdsb2JhbGx5IGVuYWJsZXMgb3IgZGlzYWJsZXMgdGVsZW1ldHJ5LlxuICAgICAqIEBtZW1iZXIgUmVjb2duaXplci5wcm90b3R5cGUuZW5hYmxlVGVsZW1ldHJ5XG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSBlbmFibGVkIC0gR2xvYmFsIHNldHRpbmcgZm9yIHRlbGVtZXRyeSBjb2xsZWN0aW9uLlxuICAgICAqIElmIHNldCB0byB0cnVlLCB0ZWxlbWV0cnkgaW5mb3JtYXRpb24gbGlrZSBtaWNyb3Bob25lIGVycm9ycyxcbiAgICAgKiByZWNvZ25pdGlvbiBlcnJvcnMgYXJlIGNvbGxlY3RlZCBhbmQgc2VudCB0byBNaWNyb3NvZnQuXG4gICAgICogSWYgc2V0IHRvIGZhbHNlLCBubyB0ZWxlbWV0cnkgaXMgc2VudCB0byBNaWNyb3NvZnQuXG4gICAgICovXG4gICAgc3RhdGljIGVuYWJsZVRlbGVtZXRyeShlbmFibGVkKSB7XG4gICAgICAgIEV4cG9ydHNfanNfMS5TZXJ2aWNlUmVjb2duaXplckJhc2UudGVsZW1ldHJ5RGF0YUVuYWJsZWQgPSBlbmFibGVkO1xuICAgIH1cbiAgICAvLyBEb2VzIHRoZSBnZW5lcmljIHJlY29nbml6ZXIgc2V0dXAgdGhhdCBpcyBjb21tb24gYWNyb3NzIGFsbCByZWNvZ25pemVyIHR5cGVzLlxuICAgIGltcGxDb21tb25SZWNvZ25pemVyU2V0dXAoKSB7XG4gICAgICAgIGxldCBvc1BsYXRmb3JtID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpID8gXCJCcm93c2VyXCIgOiBcIk5vZGVcIjtcbiAgICAgICAgbGV0IG9zTmFtZSA9IFwidW5rbm93blwiO1xuICAgICAgICBsZXQgb3NWZXJzaW9uID0gXCJ1bmtub3duXCI7XG4gICAgICAgIGlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICBvc1BsYXRmb3JtID0gb3NQbGF0Zm9ybSArIFwiL1wiICsgbmF2aWdhdG9yLnBsYXRmb3JtO1xuICAgICAgICAgICAgb3NOYW1lID0gbmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgICAgICAgICAgIG9zVmVyc2lvbiA9IG5hdmlnYXRvci5hcHBWZXJzaW9uO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlY29nbml6ZXJDb25maWcgPSB0aGlzLmNyZWF0ZVJlY29nbml6ZXJDb25maWcobmV3IEV4cG9ydHNfanNfMS5TcGVlY2hTZXJ2aWNlQ29uZmlnKG5ldyBFeHBvcnRzX2pzXzEuQ29udGV4dChuZXcgRXhwb3J0c19qc18xLk9TKG9zUGxhdGZvcm0sIG9zTmFtZSwgb3NWZXJzaW9uKSkpKTtcbiAgICAgICAgdGhpcy5wcml2UmVjbyA9IHRoaXMuY3JlYXRlU2VydmljZVJlY29nbml6ZXIoUmVjb2duaXplci5nZXRBdXRoRnJvbVByb3BlcnRpZXModGhpcy5wcml2UHJvcGVydGllcyksIHRoaXMucHJpdkNvbm5lY3Rpb25GYWN0b3J5LCB0aGlzLmF1ZGlvQ29uZmlnLCByZWNvZ25pemVyQ29uZmlnKTtcbiAgICB9XG4gICAgYXN5bmMgcmVjb2duaXplT25jZUFzeW5jSW1wbChyZWNvZ25pdGlvbk1vZGUpIHtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZEaXNwb3NlZCh0aGlzLnByaXZEaXNwb3NlZCk7XG4gICAgICAgIGNvbnN0IHJldCA9IG5ldyBFeHBvcnRzX2pzXzIuRGVmZXJyZWQoKTtcbiAgICAgICAgYXdhaXQgdGhpcy5pbXBsUmVjb2duaXplclN0b3AoKTtcbiAgICAgICAgYXdhaXQgdGhpcy5wcml2UmVjby5yZWNvZ25pemUocmVjb2duaXRpb25Nb2RlLCByZXQucmVzb2x2ZSwgcmV0LnJlamVjdCk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJldC5wcm9taXNlO1xuICAgICAgICBhd2FpdCB0aGlzLmltcGxSZWNvZ25pemVyU3RvcCgpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBhc3luYyBzdGFydENvbnRpbnVvdXNSZWNvZ25pdGlvbkFzeW5jSW1wbChyZWNvZ25pdGlvbk1vZGUpIHtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZEaXNwb3NlZCh0aGlzLnByaXZEaXNwb3NlZCk7XG4gICAgICAgIGF3YWl0IHRoaXMuaW1wbFJlY29nbml6ZXJTdG9wKCk7XG4gICAgICAgIGF3YWl0IHRoaXMucHJpdlJlY28ucmVjb2duaXplKHJlY29nbml0aW9uTW9kZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQpO1xuICAgIH1cbiAgICBhc3luYyBzdG9wQ29udGludW91c1JlY29nbml0aW9uQXN5bmNJbXBsKCkge1xuICAgICAgICBDb250cmFjdHNfanNfMS5Db250cmFjdHMudGhyb3dJZkRpc3Bvc2VkKHRoaXMucHJpdkRpc3Bvc2VkKTtcbiAgICAgICAgYXdhaXQgdGhpcy5pbXBsUmVjb2duaXplclN0b3AoKTtcbiAgICB9XG4gICAgYXN5bmMgaW1wbFJlY29nbml6ZXJTdG9wKCkge1xuICAgICAgICBpZiAodGhpcy5wcml2UmVjbykge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5wcml2UmVjby5zdG9wUmVjb2duaXppbmcoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHN0YXRpYyBnZXRBdXRoRnJvbVByb3BlcnRpZXMocHJvcGVydGllcykge1xuICAgICAgICBjb25zdCBzdWJzY3JpcHRpb25LZXkgPSBwcm9wZXJ0aWVzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMy5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX0tleSwgdW5kZWZpbmVkKTtcbiAgICAgICAgY29uc3QgYXV0aGVudGljYXRpb24gPSAoc3Vic2NyaXB0aW9uS2V5ICYmIHN1YnNjcmlwdGlvbktleSAhPT0gXCJcIikgP1xuICAgICAgICAgICAgbmV3IEV4cG9ydHNfanNfMS5Db2duaXRpdmVTdWJzY3JpcHRpb25LZXlBdXRoZW50aWNhdGlvbihzdWJzY3JpcHRpb25LZXkpIDpcbiAgICAgICAgICAgIG5ldyBFeHBvcnRzX2pzXzEuQ29nbml0aXZlVG9rZW5BdXRoZW50aWNhdGlvbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgYXV0aG9yaXphdGlvblRva2VuID0gcHJvcGVydGllcy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzMuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQXV0aG9yaXphdGlvbl9Ub2tlbiwgdW5kZWZpbmVkKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGF1dGhvcml6YXRpb25Ub2tlbik7XG4gICAgICAgICAgICB9LCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgYXV0aG9yaXphdGlvblRva2VuID0gcHJvcGVydGllcy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzMuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQXV0aG9yaXphdGlvbl9Ub2tlbiwgdW5kZWZpbmVkKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGF1dGhvcml6YXRpb25Ub2tlbik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGF1dGhlbnRpY2F0aW9uO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVjb2duaXplciA9IFJlY29nbml6ZXI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlY29nbml6ZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Recognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ResultReason.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ResultReason.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ResultReason = void 0;\n/**\n * Defines the possible reasons a recognition result might be generated.\n * @class ResultReason\n */\nvar ResultReason;\n(function (ResultReason) {\n    /**\n     * Indicates speech could not be recognized. More details\n     * can be found in the NoMatchDetails object.\n     * @member ResultReason.NoMatch\n     */\n    ResultReason[ResultReason[\"NoMatch\"] = 0] = \"NoMatch\";\n    /**\n     * Indicates that the recognition was canceled. More details\n     * can be found using the CancellationDetails object.\n     * @member ResultReason.Canceled\n     */\n    ResultReason[ResultReason[\"Canceled\"] = 1] = \"Canceled\";\n    /**\n     * Indicates the speech result contains hypothesis text.\n     * @member ResultReason.RecognizedSpeech\n     */\n    ResultReason[ResultReason[\"RecognizingSpeech\"] = 2] = \"RecognizingSpeech\";\n    /**\n     * Indicates the speech result contains final text that has been recognized.\n     * Speech Recognition is now complete for this phrase.\n     * @member ResultReason.RecognizedSpeech\n     */\n    ResultReason[ResultReason[\"RecognizedSpeech\"] = 3] = \"RecognizedSpeech\";\n    /**\n     * Indicates the speech result contains a finalized acceptance of a provided keyword.\n     * Speech recognition will continue unless otherwise configured.\n     * @member ResultReason.RecognizedKeyword\n     */\n    ResultReason[ResultReason[\"RecognizedKeyword\"] = 4] = \"RecognizedKeyword\";\n    /**\n     * Indicates the intent result contains hypothesis text and intent.\n     * @member ResultReason.RecognizingIntent\n     */\n    ResultReason[ResultReason[\"RecognizingIntent\"] = 5] = \"RecognizingIntent\";\n    /**\n     * Indicates the intent result contains final text and intent.\n     * Speech Recognition and Intent determination are now complete for this phrase.\n     * @member ResultReason.RecognizedIntent\n     */\n    ResultReason[ResultReason[\"RecognizedIntent\"] = 6] = \"RecognizedIntent\";\n    /**\n     * Indicates the translation result contains hypothesis text and its translation(s).\n     * @member ResultReason.TranslatingSpeech\n     */\n    ResultReason[ResultReason[\"TranslatingSpeech\"] = 7] = \"TranslatingSpeech\";\n    /**\n     * Indicates the translation result contains final text and corresponding translation(s).\n     * Speech Recognition and Translation are now complete for this phrase.\n     * @member ResultReason.TranslatedSpeech\n     */\n    ResultReason[ResultReason[\"TranslatedSpeech\"] = 8] = \"TranslatedSpeech\";\n    /**\n     * Indicates the synthesized audio result contains a non-zero amount of audio data\n     * @member ResultReason.SynthesizingAudio\n     */\n    ResultReason[ResultReason[\"SynthesizingAudio\"] = 9] = \"SynthesizingAudio\";\n    /**\n     * Indicates the synthesized audio is now complete for this phrase.\n     * @member ResultReason.SynthesizingAudioCompleted\n     */\n    ResultReason[ResultReason[\"SynthesizingAudioCompleted\"] = 10] = \"SynthesizingAudioCompleted\";\n    /**\n     * Indicates the speech synthesis is now started\n     * @member ResultReason.SynthesizingAudioStarted\n     */\n    ResultReason[ResultReason[\"SynthesizingAudioStarted\"] = 11] = \"SynthesizingAudioStarted\";\n    /**\n     * Indicates the voice profile is being enrolled and customers need to send more audio to create a voice profile.\n     * @member ResultReason.EnrollingVoiceProfile\n     */\n    ResultReason[ResultReason[\"EnrollingVoiceProfile\"] = 12] = \"EnrollingVoiceProfile\";\n    /**\n     * Indicates the voice profile has been enrolled.\n     * @member ResultReason.EnrolledVoiceProfile\n     */\n    ResultReason[ResultReason[\"EnrolledVoiceProfile\"] = 13] = \"EnrolledVoiceProfile\";\n    /**\n     * Indicates successful identification of some speakers.\n     * @member ResultReason.RecognizedSpeakers\n     */\n    ResultReason[ResultReason[\"RecognizedSpeakers\"] = 14] = \"RecognizedSpeakers\";\n    /**\n     * Indicates successfully verified one speaker.\n     * @member ResultReason.RecognizedSpeaker\n     */\n    ResultReason[ResultReason[\"RecognizedSpeaker\"] = 15] = \"RecognizedSpeaker\";\n    /**\n     * Indicates a voice profile has been reset successfully.\n     * @member ResultReason.ResetVoiceProfile\n     */\n    ResultReason[ResultReason[\"ResetVoiceProfile\"] = 16] = \"ResetVoiceProfile\";\n    /**\n     * Indicates a voice profile has been deleted successfully.\n     * @member ResultReason.DeletedVoiceProfile\n     */\n    ResultReason[ResultReason[\"DeletedVoiceProfile\"] = 17] = \"DeletedVoiceProfile\";\n    /**\n     * Indicates synthesis voices list has been successfully retrieved.\n     * @member ResultReason.VoicesListRetrieved\n     */\n    ResultReason[ResultReason[\"VoicesListRetrieved\"] = 18] = \"VoicesListRetrieved\";\n    /**\n     * Indicates the transcription result contains hypothesis text and its translation(s) for\n     * other participants in the conversation.\n     * @member ResultReason.TranslatingParticipantSpeech\n     */\n    ResultReason[ResultReason[\"TranslatingParticipantSpeech\"] = 19] = \"TranslatingParticipantSpeech\";\n    /**\n     * Indicates the transcription result contains final text and corresponding translation(s)\n     * for other participants in the conversation. Speech Recognition and Translation are now\n     * complete for this phrase.\n     * @member ResultReason.TranslatedParticipantSpeech\n     */\n    ResultReason[ResultReason[\"TranslatedParticipantSpeech\"] = 20] = \"TranslatedParticipantSpeech\";\n    /**\n     * <summary>\n     * Indicates the transcription result contains the instant message and corresponding\n     * translation(s).\n     * @member ResultReason.TranslatedInstantMessage\n     */\n    ResultReason[ResultReason[\"TranslatedInstantMessage\"] = 21] = \"TranslatedInstantMessage\";\n    /**\n     * Indicates the transcription result contains the instant message for other participants\n     * in the conversation and corresponding translation(s).\n     * @member ResultReason.TranslatedParticipantInstantMessage\n     */\n    ResultReason[ResultReason[\"TranslatedParticipantInstantMessage\"] = 22] = \"TranslatedParticipantInstantMessage\";\n})(ResultReason = exports.ResultReason || (exports.ResultReason = {}));\n\n//# sourceMappingURL=ResultReason.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ResultReason.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ServiceEventArgs.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ServiceEventArgs.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ServiceEventArgs = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines payload for any Service message event\n * Added in version 1.9.0\n */\nclass ServiceEventArgs extends Exports_js_1.SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} json - json payload of the USP message.\n     */\n    constructor(json, name, sessionId) {\n        super(sessionId);\n        this.privJsonResult = json;\n        this.privEventName = name;\n    }\n    get jsonString() {\n        return this.privJsonResult;\n    }\n    get eventName() {\n        return this.privEventName;\n    }\n}\nexports.ServiceEventArgs = ServiceEventArgs;\n\n//# sourceMappingURL=ServiceEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TZXJ2aWNlRXZlbnRBcmdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLHFCQUFxQixtQkFBTyxDQUFDLGdIQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7O0FBRXhCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TZXJ2aWNlRXZlbnRBcmdzLmpzP2Y1N2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vL1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGZpbGUgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uLlxuLy9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2VydmljZUV2ZW50QXJncyA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG4vKipcbiAqIERlZmluZXMgcGF5bG9hZCBmb3IgYW55IFNlcnZpY2UgbWVzc2FnZSBldmVudFxuICogQWRkZWQgaW4gdmVyc2lvbiAxLjkuMFxuICovXG5jbGFzcyBTZXJ2aWNlRXZlbnRBcmdzIGV4dGVuZHMgRXhwb3J0c19qc18xLlNlc3Npb25FdmVudEFyZ3Mge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGpzb24gLSBqc29uIHBheWxvYWQgb2YgdGhlIFVTUCBtZXNzYWdlLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGpzb24sIG5hbWUsIHNlc3Npb25JZCkge1xuICAgICAgICBzdXBlcihzZXNzaW9uSWQpO1xuICAgICAgICB0aGlzLnByaXZKc29uUmVzdWx0ID0ganNvbjtcbiAgICAgICAgdGhpcy5wcml2RXZlbnROYW1lID0gbmFtZTtcbiAgICB9XG4gICAgZ2V0IGpzb25TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZKc29uUmVzdWx0O1xuICAgIH1cbiAgICBnZXQgZXZlbnROYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RXZlbnROYW1lO1xuICAgIH1cbn1cbmV4cG9ydHMuU2VydmljZUV2ZW50QXJncyA9IFNlcnZpY2VFdmVudEFyZ3M7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNlcnZpY2VFdmVudEFyZ3MuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ServiceEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ServicePropertyChannel.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ServicePropertyChannel.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ServicePropertyChannel = void 0;\n/**\n * Defines channels used to pass property settings to service.\n * Added in version 1.7.0.\n */\nvar ServicePropertyChannel;\n(function (ServicePropertyChannel) {\n    /**\n     * Uses URI query parameter to pass property settings to service.\n     */\n    ServicePropertyChannel[ServicePropertyChannel[\"UriQueryParameter\"] = 0] = \"UriQueryParameter\";\n})(ServicePropertyChannel = exports.ServicePropertyChannel || (exports.ServicePropertyChannel = {}));\n\n//# sourceMappingURL=ServicePropertyChannel.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TZXJ2aWNlUHJvcGVydHlDaGFubmVsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhEQUE4RCw4QkFBOEIsS0FBSzs7QUFFbEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1NlcnZpY2VQcm9wZXJ0eUNoYW5uZWwuanM/YzE2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TZXJ2aWNlUHJvcGVydHlDaGFubmVsID0gdm9pZCAwO1xuLyoqXG4gKiBEZWZpbmVzIGNoYW5uZWxzIHVzZWQgdG8gcGFzcyBwcm9wZXJ0eSBzZXR0aW5ncyB0byBzZXJ2aWNlLlxuICogQWRkZWQgaW4gdmVyc2lvbiAxLjcuMC5cbiAqL1xudmFyIFNlcnZpY2VQcm9wZXJ0eUNoYW5uZWw7XG4oZnVuY3Rpb24gKFNlcnZpY2VQcm9wZXJ0eUNoYW5uZWwpIHtcbiAgICAvKipcbiAgICAgKiBVc2VzIFVSSSBxdWVyeSBwYXJhbWV0ZXIgdG8gcGFzcyBwcm9wZXJ0eSBzZXR0aW5ncyB0byBzZXJ2aWNlLlxuICAgICAqL1xuICAgIFNlcnZpY2VQcm9wZXJ0eUNoYW5uZWxbU2VydmljZVByb3BlcnR5Q2hhbm5lbFtcIlVyaVF1ZXJ5UGFyYW1ldGVyXCJdID0gMF0gPSBcIlVyaVF1ZXJ5UGFyYW1ldGVyXCI7XG59KShTZXJ2aWNlUHJvcGVydHlDaGFubmVsID0gZXhwb3J0cy5TZXJ2aWNlUHJvcGVydHlDaGFubmVsIHx8IChleHBvcnRzLlNlcnZpY2VQcm9wZXJ0eUNoYW5uZWwgPSB7fSkpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXJ2aWNlUHJvcGVydHlDaGFubmVsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/ServicePropertyChannel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SessionEventArgs.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SessionEventArgs.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SessionEventArgs = void 0;\n/**\n * Defines content for session events like SessionStarted/Stopped, SoundStarted/Stopped.\n * @class SessionEventArgs\n */\nclass SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} sessionId - The session id.\n     */\n    constructor(sessionId) {\n        this.privSessionId = sessionId;\n    }\n    /**\n     * Represents the session identifier.\n     * @member SessionEventArgs.prototype.sessionId\n     * @function\n     * @public\n     * @returns {string} Represents the session identifier.\n     */\n    get sessionId() {\n        return this.privSessionId;\n    }\n}\nexports.SessionEventArgs = SessionEventArgs;\n\n//# sourceMappingURL=SessionEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TZXNzaW9uRXZlbnRBcmdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCOztBQUV4QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvU2Vzc2lvbkV2ZW50QXJncy5qcz8yZDM1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNlc3Npb25FdmVudEFyZ3MgPSB2b2lkIDA7XG4vKipcbiAqIERlZmluZXMgY29udGVudCBmb3Igc2Vzc2lvbiBldmVudHMgbGlrZSBTZXNzaW9uU3RhcnRlZC9TdG9wcGVkLCBTb3VuZFN0YXJ0ZWQvU3RvcHBlZC5cbiAqIEBjbGFzcyBTZXNzaW9uRXZlbnRBcmdzXG4gKi9cbmNsYXNzIFNlc3Npb25FdmVudEFyZ3Mge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHNlc3Npb25JZCAtIFRoZSBzZXNzaW9uIGlkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHNlc3Npb25JZCkge1xuICAgICAgICB0aGlzLnByaXZTZXNzaW9uSWQgPSBzZXNzaW9uSWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlcHJlc2VudHMgdGhlIHNlc3Npb24gaWRlbnRpZmllci5cbiAgICAgKiBAbWVtYmVyIFNlc3Npb25FdmVudEFyZ3MucHJvdG90eXBlLnNlc3Npb25JZFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBSZXByZXNlbnRzIHRoZSBzZXNzaW9uIGlkZW50aWZpZXIuXG4gICAgICovXG4gICAgZ2V0IHNlc3Npb25JZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNlc3Npb25JZDtcbiAgICB9XG59XG5leHBvcnRzLlNlc3Npb25FdmVudEFyZ3MgPSBTZXNzaW9uRXZlbnRBcmdzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXNzaW9uRXZlbnRBcmdzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SessionEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SourceLanguageConfig.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SourceLanguageConfig.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SourceLanguageConfig = void 0;\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\n/**\n * Source Language configuration.\n * @class SourceLanguageConfig\n */\nclass SourceLanguageConfig {\n    constructor(language, endpointId) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(language, \"language\");\n        this.privLanguage = language;\n        this.privEndpointId = endpointId;\n    }\n    /**\n     * @member SourceLanguageConfig.fromLanguage\n     * @function\n     * @public\n     * @param {string} language language (eg. \"en-US\") value of config.\n     * @param {string?} endpointId endpointId of model bound to given language of config.\n     * @return {SourceLanguageConfig} Instance of SourceLanguageConfig\n     * @summary Creates an instance of the SourceLanguageConfig with the given language and optional endpointId.\n     * Added in version 1.13.0.\n     */\n    static fromLanguage(language, endpointId) {\n        return new SourceLanguageConfig(language, endpointId);\n    }\n    get language() {\n        return this.privLanguage;\n    }\n    get endpointId() {\n        return this.privEndpointId;\n    }\n}\nexports.SourceLanguageConfig = SourceLanguageConfig;\n\n//# sourceMappingURL=SourceLanguageConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Tb3VyY2VMYW5ndWFnZUNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCLHVCQUF1QixtQkFBTyxDQUFDLG9IQUFnQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsU0FBUztBQUN4QixnQkFBZ0Isc0JBQXNCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCOztBQUU1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvU291cmNlTGFuZ3VhZ2VDb25maWcuanM/ZjZiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Tb3VyY2VMYW5ndWFnZUNvbmZpZyA9IHZvaWQgMDtcbmNvbnN0IENvbnRyYWN0c19qc18xID0gcmVxdWlyZShcIi4vQ29udHJhY3RzLmpzXCIpO1xuLyoqXG4gKiBTb3VyY2UgTGFuZ3VhZ2UgY29uZmlndXJhdGlvbi5cbiAqIEBjbGFzcyBTb3VyY2VMYW5ndWFnZUNvbmZpZ1xuICovXG5jbGFzcyBTb3VyY2VMYW5ndWFnZUNvbmZpZyB7XG4gICAgY29uc3RydWN0b3IobGFuZ3VhZ2UsIGVuZHBvaW50SWQpIHtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZOdWxsT3JVbmRlZmluZWQobGFuZ3VhZ2UsIFwibGFuZ3VhZ2VcIik7XG4gICAgICAgIHRoaXMucHJpdkxhbmd1YWdlID0gbGFuZ3VhZ2U7XG4gICAgICAgIHRoaXMucHJpdkVuZHBvaW50SWQgPSBlbmRwb2ludElkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWVtYmVyIFNvdXJjZUxhbmd1YWdlQ29uZmlnLmZyb21MYW5ndWFnZVxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGFuZ3VhZ2UgbGFuZ3VhZ2UgKGVnLiBcImVuLVVTXCIpIHZhbHVlIG9mIGNvbmZpZy5cbiAgICAgKiBAcGFyYW0ge3N0cmluZz99IGVuZHBvaW50SWQgZW5kcG9pbnRJZCBvZiBtb2RlbCBib3VuZCB0byBnaXZlbiBsYW5ndWFnZSBvZiBjb25maWcuXG4gICAgICogQHJldHVybiB7U291cmNlTGFuZ3VhZ2VDb25maWd9IEluc3RhbmNlIG9mIFNvdXJjZUxhbmd1YWdlQ29uZmlnXG4gICAgICogQHN1bW1hcnkgQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiB0aGUgU291cmNlTGFuZ3VhZ2VDb25maWcgd2l0aCB0aGUgZ2l2ZW4gbGFuZ3VhZ2UgYW5kIG9wdGlvbmFsIGVuZHBvaW50SWQuXG4gICAgICogQWRkZWQgaW4gdmVyc2lvbiAxLjEzLjAuXG4gICAgICovXG4gICAgc3RhdGljIGZyb21MYW5ndWFnZShsYW5ndWFnZSwgZW5kcG9pbnRJZCkge1xuICAgICAgICByZXR1cm4gbmV3IFNvdXJjZUxhbmd1YWdlQ29uZmlnKGxhbmd1YWdlLCBlbmRwb2ludElkKTtcbiAgICB9XG4gICAgZ2V0IGxhbmd1YWdlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2TGFuZ3VhZ2U7XG4gICAgfVxuICAgIGdldCBlbmRwb2ludElkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RW5kcG9pbnRJZDtcbiAgICB9XG59XG5leHBvcnRzLlNvdXJjZUxhbmd1YWdlQ29uZmlnID0gU291cmNlTGFuZ3VhZ2VDb25maWc7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNvdXJjZUxhbmd1YWdlQ29uZmlnLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SourceLanguageConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerIdentificationModel.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerIdentificationModel.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeakerIdentificationModel = void 0;\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines SpeakerIdentificationModel class for Speaker Recognition\n * Model contains a set of profiles against which to identify speaker(s)\n * @class SpeakerIdentificationModel\n */\nclass SpeakerIdentificationModel {\n    constructor(profiles) {\n        this.privVoiceProfiles = [];\n        this.privProfileIds = [];\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\n        if (profiles.length === 0) {\n            throw new Error(\"Empty Voice Profiles array\");\n        }\n        for (const profile of profiles) {\n            if (profile.profileType !== Exports_js_1.VoiceProfileType.TextIndependentIdentification) {\n                throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\n            }\n            this.privVoiceProfiles.push(profile);\n            this.privProfileIds.push(profile.profileId);\n        }\n    }\n    static fromProfiles(profiles) {\n        return new SpeakerIdentificationModel(profiles);\n    }\n    get voiceProfileIds() {\n        return this.privProfileIds.join(\",\");\n    }\n    get profileIds() {\n        return this.privProfileIds;\n    }\n    get scenario() {\n        return \"TextIndependentIdentification\";\n    }\n}\nexports.SpeakerIdentificationModel = SpeakerIdentificationModel;\n\n//# sourceMappingURL=SpeakerIdentificationModel.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVha2VySWRlbnRpZmljYXRpb25Nb2RlbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDLHVCQUF1QixtQkFBTyxDQUFDLG9IQUFnQjtBQUMvQyxxQkFBcUIsbUJBQU8sQ0FBQyxnSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQzs7QUFFbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1NwZWFrZXJJZGVudGlmaWNhdGlvbk1vZGVsLmpzPzRmMGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3BlYWtlcklkZW50aWZpY2F0aW9uTW9kZWwgPSB2b2lkIDA7XG5jb25zdCBDb250cmFjdHNfanNfMSA9IHJlcXVpcmUoXCIuL0NvbnRyYWN0cy5qc1wiKTtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG4vKipcbiAqIERlZmluZXMgU3BlYWtlcklkZW50aWZpY2F0aW9uTW9kZWwgY2xhc3MgZm9yIFNwZWFrZXIgUmVjb2duaXRpb25cbiAqIE1vZGVsIGNvbnRhaW5zIGEgc2V0IG9mIHByb2ZpbGVzIGFnYWluc3Qgd2hpY2ggdG8gaWRlbnRpZnkgc3BlYWtlcihzKVxuICogQGNsYXNzIFNwZWFrZXJJZGVudGlmaWNhdGlvbk1vZGVsXG4gKi9cbmNsYXNzIFNwZWFrZXJJZGVudGlmaWNhdGlvbk1vZGVsIHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9maWxlcykge1xuICAgICAgICB0aGlzLnByaXZWb2ljZVByb2ZpbGVzID0gW107XG4gICAgICAgIHRoaXMucHJpdlByb2ZpbGVJZHMgPSBbXTtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZOdWxsT3JVbmRlZmluZWQocHJvZmlsZXMsIFwiVm9pY2VQcm9maWxlc1wiKTtcbiAgICAgICAgaWYgKHByb2ZpbGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRW1wdHkgVm9pY2UgUHJvZmlsZXMgYXJyYXlcIik7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBwcm9maWxlIG9mIHByb2ZpbGVzKSB7XG4gICAgICAgICAgICBpZiAocHJvZmlsZS5wcm9maWxlVHlwZSAhPT0gRXhwb3J0c19qc18xLlZvaWNlUHJvZmlsZVR5cGUuVGV4dEluZGVwZW5kZW50SWRlbnRpZmljYXRpb24pIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJZGVudGlmaWNhdGlvbiBtb2RlbCBjYW4gb25seSBiZSBjcmVhdGVkIGZyb20gSWRlbnRpZmljYXRpb24gcHJvZmlsZTogXCIgKyBwcm9maWxlLnByb2ZpbGVJZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnByaXZWb2ljZVByb2ZpbGVzLnB1c2gocHJvZmlsZSk7XG4gICAgICAgICAgICB0aGlzLnByaXZQcm9maWxlSWRzLnB1c2gocHJvZmlsZS5wcm9maWxlSWQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tUHJvZmlsZXMocHJvZmlsZXMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTcGVha2VySWRlbnRpZmljYXRpb25Nb2RlbChwcm9maWxlcyk7XG4gICAgfVxuICAgIGdldCB2b2ljZVByb2ZpbGVJZHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQcm9maWxlSWRzLmpvaW4oXCIsXCIpO1xuICAgIH1cbiAgICBnZXQgcHJvZmlsZUlkcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlByb2ZpbGVJZHM7XG4gICAgfVxuICAgIGdldCBzY2VuYXJpbygpIHtcbiAgICAgICAgcmV0dXJuIFwiVGV4dEluZGVwZW5kZW50SWRlbnRpZmljYXRpb25cIjtcbiAgICB9XG59XG5leHBvcnRzLlNwZWFrZXJJZGVudGlmaWNhdGlvbk1vZGVsID0gU3BlYWtlcklkZW50aWZpY2F0aW9uTW9kZWw7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwZWFrZXJJZGVudGlmaWNhdGlvbk1vZGVsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerIdentificationModel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerRecognitionResult.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerRecognitionResult.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeakerRecognitionCancellationDetails = exports.SpeakerRecognitionResult = exports.SpeakerRecognitionResultType = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nvar SpeakerRecognitionResultType;\n(function (SpeakerRecognitionResultType) {\n    SpeakerRecognitionResultType[SpeakerRecognitionResultType[\"Verify\"] = 0] = \"Verify\";\n    SpeakerRecognitionResultType[SpeakerRecognitionResultType[\"Identify\"] = 1] = \"Identify\";\n})(SpeakerRecognitionResultType = exports.SpeakerRecognitionResultType || (exports.SpeakerRecognitionResultType = {}));\n/**\n * Output format\n * @class SpeakerRecognitionResult\n */\nclass SpeakerRecognitionResult {\n    constructor(response, resultReason = Exports_js_2.ResultReason.RecognizedSpeaker, cancellationErrorCode = Exports_js_2.CancellationErrorCode.NoError, errorDetails = \"\") {\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        const resultType = response.scenario === \"TextIndependentIdentification\" ? SpeakerRecognitionResultType.Identify : SpeakerRecognitionResultType.Verify;\n        this.privReason = resultReason;\n        if (this.privReason !== Exports_js_2.ResultReason.Canceled) {\n            if (resultType === SpeakerRecognitionResultType.Identify) {\n                this.privProfileId = response.identificationResult.identifiedProfile.profileId;\n                this.privScore = response.identificationResult.identifiedProfile.score;\n                this.privReason = Exports_js_2.ResultReason.RecognizedSpeakers;\n            }\n            else {\n                this.privScore = response.verificationResult.score;\n                if (response.verificationResult.recognitionResult.toLowerCase() !== \"accept\") {\n                    this.privReason = Exports_js_2.ResultReason.NoMatch;\n                }\n                if (response.verificationResult.profileId !== undefined && response.verificationResult.profileId !== \"\") {\n                    this.privProfileId = response.verificationResult.profileId;\n                }\n            }\n        }\n        else {\n            this.privErrorDetails = errorDetails;\n            this.privProperties.setProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[cancellationErrorCode]);\n        }\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_JsonResult, JSON.stringify(response));\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get profileId() {\n        return this.privProfileId;\n    }\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    get score() {\n        return this.privScore;\n    }\n}\nexports.SpeakerRecognitionResult = SpeakerRecognitionResult;\n/**\n * @class SpeakerRecognitionCancellationDetails\n */\nclass SpeakerRecognitionCancellationDetails extends Exports_js_2.CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of SpeakerRecognitionCancellationDetails object for the canceled SpeakerRecognitionResult\n     * @member SpeakerRecognitionCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {SpeakerRecognitionResult} result - The result that was canceled.\n     * @returns {SpeakerRecognitionCancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        const reason = Exports_js_2.CancellationReason.Error;\n        let errorCode = Exports_js_2.CancellationErrorCode.NoError;\n        if (!!result.properties) {\n            errorCode = Exports_js_2.CancellationErrorCode[result.properties.getProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.NoError])];\n        }\n        return new SpeakerRecognitionCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\nexports.SpeakerRecognitionCancellationDetails = SpeakerRecognitionCancellationDetails;\n\n//# sourceMappingURL=SpeakerRecognitionResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVha2VyUmVjb2duaXRpb25SZXN1bHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZDQUE2QyxHQUFHLGdDQUFnQyxHQUFHLG9DQUFvQztBQUN2SDtBQUNBLHFCQUFxQixtQkFBTyxDQUFDLHlJQUE2QjtBQUMxRCxxQkFBcUIsbUJBQU8sQ0FBQyxnSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEVBQTBFLG9DQUFvQyxLQUFLO0FBQ3BIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwwQkFBMEI7QUFDekMsaUJBQWlCLHVDQUF1QztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qzs7QUFFN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1NwZWFrZXJSZWNvZ25pdGlvblJlc3VsdC5qcz84MmUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNwZWFrZXJSZWNvZ25pdGlvbkNhbmNlbGxhdGlvbkRldGFpbHMgPSBleHBvcnRzLlNwZWFrZXJSZWNvZ25pdGlvblJlc3VsdCA9IGV4cG9ydHMuU3BlYWtlclJlY29nbml0aW9uUmVzdWx0VHlwZSA9IHZvaWQgMDtcbi8qIGVzbGludC1kaXNhYmxlIG1heC1jbGFzc2VzLXBlci1maWxlICovXG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uLnNwZWVjaC9FeHBvcnRzLmpzXCIpO1xuY29uc3QgRXhwb3J0c19qc18yID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbnZhciBTcGVha2VyUmVjb2duaXRpb25SZXN1bHRUeXBlO1xuKGZ1bmN0aW9uIChTcGVha2VyUmVjb2duaXRpb25SZXN1bHRUeXBlKSB7XG4gICAgU3BlYWtlclJlY29nbml0aW9uUmVzdWx0VHlwZVtTcGVha2VyUmVjb2duaXRpb25SZXN1bHRUeXBlW1wiVmVyaWZ5XCJdID0gMF0gPSBcIlZlcmlmeVwiO1xuICAgIFNwZWFrZXJSZWNvZ25pdGlvblJlc3VsdFR5cGVbU3BlYWtlclJlY29nbml0aW9uUmVzdWx0VHlwZVtcIklkZW50aWZ5XCJdID0gMV0gPSBcIklkZW50aWZ5XCI7XG59KShTcGVha2VyUmVjb2duaXRpb25SZXN1bHRUeXBlID0gZXhwb3J0cy5TcGVha2VyUmVjb2duaXRpb25SZXN1bHRUeXBlIHx8IChleHBvcnRzLlNwZWFrZXJSZWNvZ25pdGlvblJlc3VsdFR5cGUgPSB7fSkpO1xuLyoqXG4gKiBPdXRwdXQgZm9ybWF0XG4gKiBAY2xhc3MgU3BlYWtlclJlY29nbml0aW9uUmVzdWx0XG4gKi9cbmNsYXNzIFNwZWFrZXJSZWNvZ25pdGlvblJlc3VsdCB7XG4gICAgY29uc3RydWN0b3IocmVzcG9uc2UsIHJlc3VsdFJlYXNvbiA9IEV4cG9ydHNfanNfMi5SZXN1bHRSZWFzb24uUmVjb2duaXplZFNwZWFrZXIsIGNhbmNlbGxhdGlvbkVycm9yQ29kZSA9IEV4cG9ydHNfanNfMi5DYW5jZWxsYXRpb25FcnJvckNvZGUuTm9FcnJvciwgZXJyb3JEZXRhaWxzID0gXCJcIikge1xuICAgICAgICB0aGlzLnByaXZQcm9wZXJ0aWVzID0gbmV3IEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUNvbGxlY3Rpb24oKTtcbiAgICAgICAgY29uc3QgcmVzdWx0VHlwZSA9IHJlc3BvbnNlLnNjZW5hcmlvID09PSBcIlRleHRJbmRlcGVuZGVudElkZW50aWZpY2F0aW9uXCIgPyBTcGVha2VyUmVjb2duaXRpb25SZXN1bHRUeXBlLklkZW50aWZ5IDogU3BlYWtlclJlY29nbml0aW9uUmVzdWx0VHlwZS5WZXJpZnk7XG4gICAgICAgIHRoaXMucHJpdlJlYXNvbiA9IHJlc3VsdFJlYXNvbjtcbiAgICAgICAgaWYgKHRoaXMucHJpdlJlYXNvbiAhPT0gRXhwb3J0c19qc18yLlJlc3VsdFJlYXNvbi5DYW5jZWxlZCkge1xuICAgICAgICAgICAgaWYgKHJlc3VsdFR5cGUgPT09IFNwZWFrZXJSZWNvZ25pdGlvblJlc3VsdFR5cGUuSWRlbnRpZnkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByaXZQcm9maWxlSWQgPSByZXNwb25zZS5pZGVudGlmaWNhdGlvblJlc3VsdC5pZGVudGlmaWVkUHJvZmlsZS5wcm9maWxlSWQ7XG4gICAgICAgICAgICAgICAgdGhpcy5wcml2U2NvcmUgPSByZXNwb25zZS5pZGVudGlmaWNhdGlvblJlc3VsdC5pZGVudGlmaWVkUHJvZmlsZS5zY29yZTtcbiAgICAgICAgICAgICAgICB0aGlzLnByaXZSZWFzb24gPSBFeHBvcnRzX2pzXzIuUmVzdWx0UmVhc29uLlJlY29nbml6ZWRTcGVha2VycztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMucHJpdlNjb3JlID0gcmVzcG9uc2UudmVyaWZpY2F0aW9uUmVzdWx0LnNjb3JlO1xuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS52ZXJpZmljYXRpb25SZXN1bHQucmVjb2duaXRpb25SZXN1bHQudG9Mb3dlckNhc2UoKSAhPT0gXCJhY2NlcHRcIikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnByaXZSZWFzb24gPSBFeHBvcnRzX2pzXzIuUmVzdWx0UmVhc29uLk5vTWF0Y2g7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS52ZXJpZmljYXRpb25SZXN1bHQucHJvZmlsZUlkICE9PSB1bmRlZmluZWQgJiYgcmVzcG9uc2UudmVyaWZpY2F0aW9uUmVzdWx0LnByb2ZpbGVJZCAhPT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnByaXZQcm9maWxlSWQgPSByZXNwb25zZS52ZXJpZmljYXRpb25SZXN1bHQucHJvZmlsZUlkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkVycm9yRGV0YWlscyA9IGVycm9yRGV0YWlscztcbiAgICAgICAgICAgIHRoaXMucHJpdlByb3BlcnRpZXMuc2V0UHJvcGVydHkoRXhwb3J0c19qc18xLkNhbmNlbGxhdGlvbkVycm9yQ29kZVByb3BlcnR5TmFtZSwgRXhwb3J0c19qc18yLkNhbmNlbGxhdGlvbkVycm9yQ29kZVtjYW5jZWxsYXRpb25FcnJvckNvZGVdKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnByaXZQcm9wZXJ0aWVzLnNldFByb3BlcnR5KEV4cG9ydHNfanNfMi5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VSZXNwb25zZV9Kc29uUmVzdWx0LCBKU09OLnN0cmluZ2lmeShyZXNwb25zZSkpO1xuICAgIH1cbiAgICBnZXQgcHJvcGVydGllcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlByb3BlcnRpZXM7XG4gICAgfVxuICAgIGdldCByZWFzb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZSZWFzb247XG4gICAgfVxuICAgIGdldCBwcm9maWxlSWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQcm9maWxlSWQ7XG4gICAgfVxuICAgIGdldCBlcnJvckRldGFpbHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZFcnJvckRldGFpbHM7XG4gICAgfVxuICAgIGdldCBzY29yZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNjb3JlO1xuICAgIH1cbn1cbmV4cG9ydHMuU3BlYWtlclJlY29nbml0aW9uUmVzdWx0ID0gU3BlYWtlclJlY29nbml0aW9uUmVzdWx0O1xuLyoqXG4gKiBAY2xhc3MgU3BlYWtlclJlY29nbml0aW9uQ2FuY2VsbGF0aW9uRGV0YWlsc1xuICovXG5jbGFzcyBTcGVha2VyUmVjb2duaXRpb25DYW5jZWxsYXRpb25EZXRhaWxzIGV4dGVuZHMgRXhwb3J0c19qc18yLkNhbmNlbGxhdGlvbkRldGFpbHNCYXNlIHtcbiAgICBjb25zdHJ1Y3RvcihyZWFzb24sIGVycm9yRGV0YWlscywgZXJyb3JDb2RlKSB7XG4gICAgICAgIHN1cGVyKHJlYXNvbiwgZXJyb3JEZXRhaWxzLCBlcnJvckNvZGUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIFNwZWFrZXJSZWNvZ25pdGlvbkNhbmNlbGxhdGlvbkRldGFpbHMgb2JqZWN0IGZvciB0aGUgY2FuY2VsZWQgU3BlYWtlclJlY29nbml0aW9uUmVzdWx0XG4gICAgICogQG1lbWJlciBTcGVha2VyUmVjb2duaXRpb25DYW5jZWxsYXRpb25EZXRhaWxzLmZyb21SZXN1bHRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtTcGVha2VyUmVjb2duaXRpb25SZXN1bHR9IHJlc3VsdCAtIFRoZSByZXN1bHQgdGhhdCB3YXMgY2FuY2VsZWQuXG4gICAgICogQHJldHVybnMge1NwZWFrZXJSZWNvZ25pdGlvbkNhbmNlbGxhdGlvbkRldGFpbHN9IFRoZSBjYW5jZWxsYXRpb24gZGV0YWlscyBvYmplY3QgYmVpbmcgY3JlYXRlZC5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVJlc3VsdChyZXN1bHQpIHtcbiAgICAgICAgY29uc3QgcmVhc29uID0gRXhwb3J0c19qc18yLkNhbmNlbGxhdGlvblJlYXNvbi5FcnJvcjtcbiAgICAgICAgbGV0IGVycm9yQ29kZSA9IEV4cG9ydHNfanNfMi5DYW5jZWxsYXRpb25FcnJvckNvZGUuTm9FcnJvcjtcbiAgICAgICAgaWYgKCEhcmVzdWx0LnByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgIGVycm9yQ29kZSA9IEV4cG9ydHNfanNfMi5DYW5jZWxsYXRpb25FcnJvckNvZGVbcmVzdWx0LnByb3BlcnRpZXMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18xLkNhbmNlbGxhdGlvbkVycm9yQ29kZVByb3BlcnR5TmFtZSwgRXhwb3J0c19qc18yLkNhbmNlbGxhdGlvbkVycm9yQ29kZVtFeHBvcnRzX2pzXzIuQ2FuY2VsbGF0aW9uRXJyb3JDb2RlLk5vRXJyb3JdKV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBTcGVha2VyUmVjb2duaXRpb25DYW5jZWxsYXRpb25EZXRhaWxzKHJlYXNvbiwgcmVzdWx0LmVycm9yRGV0YWlscywgZXJyb3JDb2RlKTtcbiAgICB9XG59XG5leHBvcnRzLlNwZWFrZXJSZWNvZ25pdGlvbkNhbmNlbGxhdGlvbkRldGFpbHMgPSBTcGVha2VyUmVjb2duaXRpb25DYW5jZWxsYXRpb25EZXRhaWxzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TcGVha2VyUmVjb2duaXRpb25SZXN1bHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerRecognitionResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerRecognizer.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerRecognizer.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeakerRecognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines SpeakerRecognizer class for Speaker Recognition\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\n * @class SpeakerRecognizer\n */\nclass SpeakerRecognizer extends Exports_js_2.Recognizer {\n    /**\n     * Initializes an instance of the SpeakerRecognizer.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\n        super(audioConfig, configImpl.properties, new Exports_js_1.SpeakerRecognitionConnectionFactory());\n        this.privAudioConfigImpl = audioConfig;\n        Contracts_js_1.Contracts.throwIfNull(this.privAudioConfigImpl, \"audioConfig\");\n        this.privDisposedSpeakerRecognizer = false;\n        this.privProperties = configImpl.properties;\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member SpeakerRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member SpeakerRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this SpeakerRecognizer.\n     * @member SpeakerRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeakerRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Get recognition result for model using given audio\n     * @member SpeakerRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @async\n     * @param {SpeakerIdentificationModel | SpeakerVerificationModel} model Model containing Voice Profiles to be identified\n     * @param cb - Callback invoked once result is returned.\n     * @param err - Callback invoked in case of an error.\n     */\n    async recognizeOnceAsync(model) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\n        return this.recognizeSpeakerOnceAsyncImpl(model);\n    }\n    /**\n     * Included for compatibility\n     * @member SpeakerRecognizer.prototype.close\n     * @function\n     * @public\n     * @async\n     */\n    async close() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\n        await this.dispose(true);\n    }\n    async recognizeSpeakerOnceAsyncImpl(model) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\n        await this.implRecognizerStop();\n        const result = await this.privReco.recognizeSpeaker(model);\n        await this.implRecognizerStop();\n        return result;\n    }\n    async implRecognizerStop() {\n        if (this.privReco) {\n            await this.privReco.stopRecognizing();\n        }\n        return;\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioImpl = audioConfig;\n        return new Exports_js_1.SpeakerServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\n    }\n    async dispose(disposing) {\n        if (this.privDisposedSpeakerRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedSpeakerRecognizer = true;\n            await super.dispose(disposing);\n        }\n    }\n}\nexports.SpeakerRecognizer = SpeakerRecognizer;\n\n//# sourceMappingURL=SpeakerRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerVerificationModel.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerVerificationModel.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeakerVerificationModel = void 0;\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines SpeakerVerificationModel class for Speaker Recognition\n * Model contains a profile against which to verify a speaker\n * @class SpeakerVerificationModel\n */\nclass SpeakerVerificationModel {\n    constructor(profile) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(profile, \"VoiceProfile\");\n        if (profile.profileType === Exports_js_1.VoiceProfileType.TextIndependentIdentification) {\n            throw new Error(\"Verification model cannot be created from Identification profile\");\n        }\n        this.privVoiceProfile = profile;\n    }\n    static fromProfile(profile) {\n        return new SpeakerVerificationModel(profile);\n    }\n    get voiceProfile() {\n        return this.privVoiceProfile;\n    }\n    get profileIds() {\n        return [this.voiceProfile.profileId];\n    }\n    get scenario() {\n        if (this.voiceProfile.profileType === Exports_js_1.VoiceProfileType.TextDependentVerification) {\n            return \"TextDependentVerification\";\n        }\n        else {\n            return \"TextIndependentVerification\";\n        }\n    }\n}\nexports.SpeakerVerificationModel = SpeakerVerificationModel;\n\n//# sourceMappingURL=SpeakerVerificationModel.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVha2VyVmVyaWZpY2F0aW9uTW9kZWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdDQUFnQztBQUNoQyx1QkFBdUIsbUJBQU8sQ0FBQyxvSEFBZ0I7QUFDL0MscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7O0FBRWhDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVha2VyVmVyaWZpY2F0aW9uTW9kZWwuanM/MThjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TcGVha2VyVmVyaWZpY2F0aW9uTW9kZWwgPSB2b2lkIDA7XG5jb25zdCBDb250cmFjdHNfanNfMSA9IHJlcXVpcmUoXCIuL0NvbnRyYWN0cy5qc1wiKTtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG4vKipcbiAqIERlZmluZXMgU3BlYWtlclZlcmlmaWNhdGlvbk1vZGVsIGNsYXNzIGZvciBTcGVha2VyIFJlY29nbml0aW9uXG4gKiBNb2RlbCBjb250YWlucyBhIHByb2ZpbGUgYWdhaW5zdCB3aGljaCB0byB2ZXJpZnkgYSBzcGVha2VyXG4gKiBAY2xhc3MgU3BlYWtlclZlcmlmaWNhdGlvbk1vZGVsXG4gKi9cbmNsYXNzIFNwZWFrZXJWZXJpZmljYXRpb25Nb2RlbCB7XG4gICAgY29uc3RydWN0b3IocHJvZmlsZSkge1xuICAgICAgICBDb250cmFjdHNfanNfMS5Db250cmFjdHMudGhyb3dJZk51bGxPclVuZGVmaW5lZChwcm9maWxlLCBcIlZvaWNlUHJvZmlsZVwiKTtcbiAgICAgICAgaWYgKHByb2ZpbGUucHJvZmlsZVR5cGUgPT09IEV4cG9ydHNfanNfMS5Wb2ljZVByb2ZpbGVUeXBlLlRleHRJbmRlcGVuZGVudElkZW50aWZpY2F0aW9uKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJWZXJpZmljYXRpb24gbW9kZWwgY2Fubm90IGJlIGNyZWF0ZWQgZnJvbSBJZGVudGlmaWNhdGlvbiBwcm9maWxlXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJpdlZvaWNlUHJvZmlsZSA9IHByb2ZpbGU7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tUHJvZmlsZShwcm9maWxlKSB7XG4gICAgICAgIHJldHVybiBuZXcgU3BlYWtlclZlcmlmaWNhdGlvbk1vZGVsKHByb2ZpbGUpO1xuICAgIH1cbiAgICBnZXQgdm9pY2VQcm9maWxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2Vm9pY2VQcm9maWxlO1xuICAgIH1cbiAgICBnZXQgcHJvZmlsZUlkcygpIHtcbiAgICAgICAgcmV0dXJuIFt0aGlzLnZvaWNlUHJvZmlsZS5wcm9maWxlSWRdO1xuICAgIH1cbiAgICBnZXQgc2NlbmFyaW8oKSB7XG4gICAgICAgIGlmICh0aGlzLnZvaWNlUHJvZmlsZS5wcm9maWxlVHlwZSA9PT0gRXhwb3J0c19qc18xLlZvaWNlUHJvZmlsZVR5cGUuVGV4dERlcGVuZGVudFZlcmlmaWNhdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIFwiVGV4dERlcGVuZGVudFZlcmlmaWNhdGlvblwiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFwiVGV4dEluZGVwZW5kZW50VmVyaWZpY2F0aW9uXCI7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlNwZWFrZXJWZXJpZmljYXRpb25Nb2RlbCA9IFNwZWFrZXJWZXJpZmljYXRpb25Nb2RlbDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BlYWtlclZlcmlmaWNhdGlvbk1vZGVsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeakerVerificationModel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechConfig.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechConfig.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechConfigImpl = exports.SpeechConfig = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Speech configuration.\n * @class SpeechConfig\n */\nclass SpeechConfig {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    constructor() {\n        return;\n    }\n    /**\n     * Static instance of SpeechConfig returned by passing subscriptionKey and service region.\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\n     * @member SpeechConfig.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - The subscription key.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechConfig} The speech factory\n     */\n    static fromSubscription(subscriptionKey, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, region);\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_IntentRegion, region);\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        return speechImpl;\n    }\n    /**\n     * Creates an instance of the speech config with specified endpoint and subscription key.\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\n     * For example, if language is defined in the uri as query parameter \"language=de-DE\", and also set by\n     * SpeechConfig.speechRecognitionLanguage = \"en-US\", the language setting in uri takes precedence,\n     * and the effective language is \"de-DE\". Only the parameters that are not specified in the\n     * endpoint URL can be set by other APIs.\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\n     * fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\n     * use the authorization token.\n     * @member SpeechConfig.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} endpoint - The service endpoint to connect to.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromEndpoint(endpoint, subscriptionKey) {\n        Contracts_js_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\n        if (undefined !== subscriptionKey) {\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return speechImpl;\n    }\n    /**\n     * Creates an instance of the speech config with specified host and subscription key.\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\n     * Note: Added in version 1.9.0.\n     * @member SpeechConfig.fromHost\n     * @function\n     * @public\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromHost(hostName, subscriptionKey) {\n        Contracts_js_1.Contracts.throwIfNull(hostName, \"hostName\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\n        if (undefined !== subscriptionKey) {\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return speechImpl;\n    }\n    /**\n     * Creates an instance of the speech factory with specified initial authorization token and region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key in case you want\n     * to use the Intent recognizer. As configuration values are copied when creating a new recognizer,\n     * the new token value will not apply to recognizers that have already been created. For recognizers\n     * that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member SpeechConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param {string} authorizationToken - The initial authorization token.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromAuthorizationToken(authorizationToken, region) {\n        Contracts_js_1.Contracts.throwIfNull(authorizationToken, \"authorizationToken\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, region);\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_IntentRegion, region);\n        speechImpl.authorizationToken = authorizationToken;\n        return speechImpl;\n    }\n    /**\n     * Closes the configuration.\n     * @member SpeechConfig.prototype.close\n     * @function\n     * @public\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    close() { }\n}\nexports.SpeechConfig = SpeechConfig;\n/**\n * @public\n * @class SpeechConfigImpl\n */\nclass SpeechConfigImpl extends SpeechConfig {\n    constructor() {\n        super();\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        this.speechRecognitionLanguage = \"en-US\"; // Should we have a default?\n        this.outputFormat = Exports_js_2.OutputFormat.Simple;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get endPoint() {\n        return new URL(this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint));\n    }\n    get subscriptionKey() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key);\n    }\n    get region() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n    }\n    get authorizationToken() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    set authorizationToken(value) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    get speechRecognitionLanguage() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    set speechRecognitionLanguage(value) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, value);\n    }\n    get autoDetectSourceLanguages() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages);\n    }\n    set autoDetectSourceLanguages(value) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, value);\n    }\n    get outputFormat() {\n        return Exports_js_2.OutputFormat[this.privProperties.getProperty(Exports_js_1.OutputFormatPropertyName, undefined)];\n    }\n    set outputFormat(value) {\n        this.privProperties.setProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_2.OutputFormat[value]);\n    }\n    get endpointId() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId);\n    }\n    set endpointId(value) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, value);\n    }\n    setProperty(name, value) {\n        Contracts_js_1.Contracts.throwIfNull(value, \"value\");\n        this.privProperties.setProperty(name, value);\n    }\n    getProperty(name, def) {\n        return this.privProperties.getProperty(name, def);\n    }\n    setProxy(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\n    }\n    setServiceProperty(name, value) {\n        const currentProperties = JSON.parse(this.privProperties.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n        currentProperties[name] = value;\n        this.privProperties.setProperty(Exports_js_1.ServicePropertiesPropertyName, JSON.stringify(currentProperties));\n    }\n    setProfanity(profanity) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_ProfanityOption, Exports_js_2.ProfanityOption[profanity]);\n    }\n    enableAudioLogging() {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\n    }\n    requestWordLevelTimestamps() {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\n        this.privProperties.setProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_2.OutputFormat[Exports_js_2.OutputFormat.Detailed]);\n    }\n    enableDictation() {\n        this.privProperties.setProperty(Exports_js_1.ForceDictationPropertyName, \"true\");\n    }\n    clone() {\n        const ret = new SpeechConfigImpl();\n        ret.privProperties = this.privProperties.clone();\n        return ret;\n    }\n    get speechSynthesisLanguage() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthLanguage);\n    }\n    set speechSynthesisLanguage(language) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthLanguage, language);\n    }\n    get speechSynthesisVoiceName() {\n        return this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthVoice);\n    }\n    set speechSynthesisVoiceName(voice) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthVoice, voice);\n    }\n    get speechSynthesisOutputFormat() {\n        return Exports_js_2.SpeechSynthesisOutputFormat[this.privProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\n    }\n    set speechSynthesisOutputFormat(format) {\n        this.privProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthOutputFormat, Exports_js_2.SpeechSynthesisOutputFormat[format]);\n    }\n}\nexports.SpeechConfigImpl = SpeechConfigImpl;\n\n//# sourceMappingURL=SpeechConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionCanceledEventArgs.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionCanceledEventArgs.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechRecognitionCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = __webpack_require__(/*! ./CancellationEventArgsBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationEventArgsBase.js\");\nclass SpeechRecognitionCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.SpeechRecognitionCanceledEventArgs = SpeechRecognitionCanceledEventArgs;\n\n//# sourceMappingURL=SpeechRecognitionCanceledEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hSZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQ0FBMEM7QUFDMUMsdUNBQXVDLG1CQUFPLENBQUMsb0pBQWdDO0FBQy9FO0FBQ0E7QUFDQSwwQ0FBMEM7O0FBRTFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hSZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzLmpzP2I4NGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3BlZWNoUmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJncyA9IHZvaWQgMDtcbmNvbnN0IENhbmNlbGxhdGlvbkV2ZW50QXJnc0Jhc2VfanNfMSA9IHJlcXVpcmUoXCIuL0NhbmNlbGxhdGlvbkV2ZW50QXJnc0Jhc2UuanNcIik7XG5jbGFzcyBTcGVlY2hSZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzIGV4dGVuZHMgQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZV9qc18xLkNhbmNlbGxhdGlvbkV2ZW50QXJnc0Jhc2Uge1xufVxuZXhwb3J0cy5TcGVlY2hSZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzID0gU3BlZWNoUmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJncztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BlZWNoUmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJncy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionCanceledEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionEventArgs.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionEventArgs.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MeetingTranscriptionEventArgs = exports.ConversationTranscriptionEventArgs = exports.SpeechRecognitionEventArgs = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines contents of speech recognizing/recognized event.\n * @class SpeechRecognitionEventArgs\n */\nclass SpeechRecognitionEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the recognition result.\n     * @member SpeechRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {SpeechRecognitionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.SpeechRecognitionEventArgs = SpeechRecognitionEventArgs;\n/**\n * Defines contents of conversation transcribed/transcribing event.\n * @class ConversationTranscriptionEventArgs\n */\nclass ConversationTranscriptionEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ConversationTranscriptionResult} result - The conversation transcription result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the transcription result.\n     * @member ConversationTranscription1EventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {ConversationTranscriptionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.ConversationTranscriptionEventArgs = ConversationTranscriptionEventArgs;\n/**\n * Defines contents of meeting transcribed/transcribing event.\n * @class MeetingTranscriptionEventArgs\n */\nclass MeetingTranscriptionEventArgs extends SpeechRecognitionEventArgs {\n}\nexports.MeetingTranscriptionEventArgs = MeetingTranscriptionEventArgs;\n\n//# sourceMappingURL=SpeechRecognitionEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hSZWNvZ25pdGlvbkV2ZW50QXJncy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUNBQXFDLEdBQUcsMENBQTBDLEdBQUcsa0NBQWtDO0FBQ3ZIO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUseUJBQXlCO0FBQ3hDLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIseUJBQXlCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUNBQWlDO0FBQ2hELGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsaUNBQWlDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDOztBQUVyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvU3BlZWNoUmVjb2duaXRpb25FdmVudEFyZ3MuanM/YTBlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NZWV0aW5nVHJhbnNjcmlwdGlvbkV2ZW50QXJncyA9IGV4cG9ydHMuQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvbkV2ZW50QXJncyA9IGV4cG9ydHMuU3BlZWNoUmVjb2duaXRpb25FdmVudEFyZ3MgPSB2b2lkIDA7XG4vKiBlc2xpbnQtZGlzYWJsZSBtYXgtY2xhc3Nlcy1wZXItZmlsZSAqL1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbi8qKlxuICogRGVmaW5lcyBjb250ZW50cyBvZiBzcGVlY2ggcmVjb2duaXppbmcvcmVjb2duaXplZCBldmVudC5cbiAqIEBjbGFzcyBTcGVlY2hSZWNvZ25pdGlvbkV2ZW50QXJnc1xuICovXG5jbGFzcyBTcGVlY2hSZWNvZ25pdGlvbkV2ZW50QXJncyBleHRlbmRzIEV4cG9ydHNfanNfMS5SZWNvZ25pdGlvbkV2ZW50QXJncyB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYW4gaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcy5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge1NwZWVjaFJlY29nbml0aW9uUmVzdWx0fSByZXN1bHQgLSBUaGUgc3BlZWNoIHJlY29nbml0aW9uIHJlc3VsdC5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0IC0gVGhlIG9mZnNldC5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2Vzc2lvbklkIC0gVGhlIHNlc3Npb24gaWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocmVzdWx0LCBvZmZzZXQsIHNlc3Npb25JZCkge1xuICAgICAgICBzdXBlcihvZmZzZXQsIHNlc3Npb25JZCk7XG4gICAgICAgIHRoaXMucHJpdlJlc3VsdCA9IHJlc3VsdDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSByZWNvZ25pdGlvbiByZXN1bHQuXG4gICAgICogQG1lbWJlciBTcGVlY2hSZWNvZ25pdGlvbkV2ZW50QXJncy5wcm90b3R5cGUucmVzdWx0XG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtTcGVlY2hSZWNvZ25pdGlvblJlc3VsdH0gdGhlIHJlY29nbml0aW9uIHJlc3VsdC5cbiAgICAgKi9cbiAgICBnZXQgcmVzdWx0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVzdWx0O1xuICAgIH1cbn1cbmV4cG9ydHMuU3BlZWNoUmVjb2duaXRpb25FdmVudEFyZ3MgPSBTcGVlY2hSZWNvZ25pdGlvbkV2ZW50QXJncztcbi8qKlxuICogRGVmaW5lcyBjb250ZW50cyBvZiBjb252ZXJzYXRpb24gdHJhbnNjcmliZWQvdHJhbnNjcmliaW5nIGV2ZW50LlxuICogQGNsYXNzIENvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25FdmVudEFyZ3NcbiAqL1xuY2xhc3MgQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvbkV2ZW50QXJncyBleHRlbmRzIEV4cG9ydHNfanNfMS5SZWNvZ25pdGlvbkV2ZW50QXJncyB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYW4gaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcy5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge0NvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25SZXN1bHR9IHJlc3VsdCAtIFRoZSBjb252ZXJzYXRpb24gdHJhbnNjcmlwdGlvbiByZXN1bHQuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldCAtIFRoZSBvZmZzZXQuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHNlc3Npb25JZCAtIFRoZSBzZXNzaW9uIGlkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHJlc3VsdCwgb2Zmc2V0LCBzZXNzaW9uSWQpIHtcbiAgICAgICAgc3VwZXIob2Zmc2V0LCBzZXNzaW9uSWQpO1xuICAgICAgICB0aGlzLnByaXZSZXN1bHQgPSByZXN1bHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyB0aGUgdHJhbnNjcmlwdGlvbiByZXN1bHQuXG4gICAgICogQG1lbWJlciBDb252ZXJzYXRpb25UcmFuc2NyaXB0aW9uMUV2ZW50QXJncy5wcm90b3R5cGUucmVzdWx0XG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtDb252ZXJzYXRpb25UcmFuc2NyaXB0aW9uUmVzdWx0fSB0aGUgcmVjb2duaXRpb24gcmVzdWx0LlxuICAgICAqL1xuICAgIGdldCByZXN1bHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZSZXN1bHQ7XG4gICAgfVxufVxuZXhwb3J0cy5Db252ZXJzYXRpb25UcmFuc2NyaXB0aW9uRXZlbnRBcmdzID0gQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvbkV2ZW50QXJncztcbi8qKlxuICogRGVmaW5lcyBjb250ZW50cyBvZiBtZWV0aW5nIHRyYW5zY3JpYmVkL3RyYW5zY3JpYmluZyBldmVudC5cbiAqIEBjbGFzcyBNZWV0aW5nVHJhbnNjcmlwdGlvbkV2ZW50QXJnc1xuICovXG5jbGFzcyBNZWV0aW5nVHJhbnNjcmlwdGlvbkV2ZW50QXJncyBleHRlbmRzIFNwZWVjaFJlY29nbml0aW9uRXZlbnRBcmdzIHtcbn1cbmV4cG9ydHMuTWVldGluZ1RyYW5zY3JpcHRpb25FdmVudEFyZ3MgPSBNZWV0aW5nVHJhbnNjcmlwdGlvbkV2ZW50QXJncztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BlZWNoUmVjb2duaXRpb25FdmVudEFyZ3MuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionResult.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionResult.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechRecognitionResult = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines result of speech recognition.\n * @class SpeechRecognitionResult\n */\nclass SpeechRecognitionResult extends Exports_js_1.RecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @public\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} speakerId - speaker id for conversation transcription, if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, text, duration, offset, language, languageDetectionConfidence, speakerId, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\n        this.privSpeakerId = speakerId;\n    }\n    /**\n     * speaker id from conversation transcription/id scenarios\n     * @member SpeechRecognitionResult.prototype.speakerId\n     * @function\n     * @public\n     * @returns {string} id of speaker in given result\n     */\n    get speakerId() {\n        return this.privSpeakerId;\n    }\n}\nexports.SpeechRecognitionResult = SpeechRecognitionResult;\n\n//# sourceMappingURL=SpeechRecognitionResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hSZWNvZ25pdGlvblJlc3VsdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CLHFCQUFxQixtQkFBTyxDQUFDLGdIQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLGNBQWM7QUFDN0IsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLG9CQUFvQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7O0FBRS9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hSZWNvZ25pdGlvblJlc3VsdC5qcz82M2I3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNwZWVjaFJlY29nbml0aW9uUmVzdWx0ID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbi8qKlxuICogRGVmaW5lcyByZXN1bHQgb2Ygc3BlZWNoIHJlY29nbml0aW9uLlxuICogQGNsYXNzIFNwZWVjaFJlY29nbml0aW9uUmVzdWx0XG4gKi9cbmNsYXNzIFNwZWVjaFJlY29nbml0aW9uUmVzdWx0IGV4dGVuZHMgRXhwb3J0c19qc18xLlJlY29nbml0aW9uUmVzdWx0IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCBpbml0aWFsaXplcyBhbiBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzLlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcmVzdWx0SWQgLSBUaGUgcmVzdWx0IGlkLlxuICAgICAqIEBwYXJhbSB7UmVzdWx0UmVhc29ufSByZWFzb24gLSBUaGUgcmVhc29uLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IC0gVGhlIHJlY29nbml6ZWQgdGV4dC5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZHVyYXRpb24gLSBUaGUgZHVyYXRpb24uXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldCAtIFRoZSBvZmZzZXQgaW50byB0aGUgc3RyZWFtLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsYW5ndWFnZSAtIFByaW1hcnkgTGFuZ3VhZ2UgZGV0ZWN0ZWQsIGlmIHByb3ZpZGVkLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsYW5ndWFnZURldGVjdGlvbkNvbmZpZGVuY2UgLSBQcmltYXJ5IExhbmd1YWdlIGNvbmZpZGVuY2UgKFwiVW5rbm93bixcIiBcIkxvdyxcIiBcIk1lZGl1bSxcIiBcIkhpZ2hcIi4uLiksIGlmIHByb3ZpZGVkLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzcGVha2VySWQgLSBzcGVha2VyIGlkIGZvciBjb252ZXJzYXRpb24gdHJhbnNjcmlwdGlvbiwgaWYgcHJvdmlkZWQuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGVycm9yRGV0YWlscyAtIEVycm9yIGRldGFpbHMsIGlmIHByb3ZpZGVkLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBqc29uIC0gQWRkaXRpb25hbCBKc29uLCBpZiBwcm92aWRlZC5cbiAgICAgKiBAcGFyYW0ge1Byb3BlcnR5Q29sbGVjdGlvbn0gcHJvcGVydGllcyAtIEFkZGl0aW9uYWwgcHJvcGVydGllcywgaWYgcHJvdmlkZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocmVzdWx0SWQsIHJlYXNvbiwgdGV4dCwgZHVyYXRpb24sIG9mZnNldCwgbGFuZ3VhZ2UsIGxhbmd1YWdlRGV0ZWN0aW9uQ29uZmlkZW5jZSwgc3BlYWtlcklkLCBlcnJvckRldGFpbHMsIGpzb24sIHByb3BlcnRpZXMpIHtcbiAgICAgICAgc3VwZXIocmVzdWx0SWQsIHJlYXNvbiwgdGV4dCwgZHVyYXRpb24sIG9mZnNldCwgbGFuZ3VhZ2UsIGxhbmd1YWdlRGV0ZWN0aW9uQ29uZmlkZW5jZSwgZXJyb3JEZXRhaWxzLCBqc29uLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgdGhpcy5wcml2U3BlYWtlcklkID0gc3BlYWtlcklkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBzcGVha2VyIGlkIGZyb20gY29udmVyc2F0aW9uIHRyYW5zY3JpcHRpb24vaWQgc2NlbmFyaW9zXG4gICAgICogQG1lbWJlciBTcGVlY2hSZWNvZ25pdGlvblJlc3VsdC5wcm90b3R5cGUuc3BlYWtlcklkXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IGlkIG9mIHNwZWFrZXIgaW4gZ2l2ZW4gcmVzdWx0XG4gICAgICovXG4gICAgZ2V0IHNwZWFrZXJJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNwZWFrZXJJZDtcbiAgICB9XG59XG5leHBvcnRzLlNwZWVjaFJlY29nbml0aW9uUmVzdWx0ID0gU3BlZWNoUmVjb2duaXRpb25SZXN1bHQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwZWVjaFJlY29nbml0aW9uUmVzdWx0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognitionResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognizer.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognizer.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechRecognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Performs speech recognition from microphone, file, or other audio input streams, and gets transcribed text as result.\n * @class SpeechRecognizer\n */\nclass SpeechRecognizer extends Exports_js_3.Recognizer {\n    /**\n     * SpeechRecognizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(speechConfigImpl.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        super(audioConfig, speechConfigImpl.properties, new Exports_js_1.SpeechConnectionFactory());\n        this.privDisposedRecognizer = false;\n    }\n    /**\n     * SpeechRecognizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    static FromConfig(speechConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\n        const recognizer = new SpeechRecognizer(speechConfig, audioConfig);\n        return recognizer;\n    }\n    /**\n     * Gets the endpoint id of a customized speech model that is used for speech recognition.\n     * @member SpeechRecognizer.prototype.endpointId\n     * @function\n     * @public\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\n     */\n    get endpointId() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member SpeechRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member SpeechRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * Gets the spoken language of recognition.\n     * @member SpeechRecognizer.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} The spoken language of recognition.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets the output format of recognition.\n     * @member SpeechRecognizer.prototype.outputFormat\n     * @function\n     * @public\n     * @returns {OutputFormat} The output format of recognition.\n     */\n    get outputFormat() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        if (this.properties.getProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]) === Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]) {\n            return Exports_js_3.OutputFormat.Simple;\n        }\n        else {\n            return Exports_js_3.OutputFormat.Detailed;\n        }\n    }\n    /**\n     * The collection of properties and their values defined for this SpeechRecognizer.\n     * @member SpeechRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts speech recognition, and stops after the first utterance is recognized.\n     * The task returns the recognition text as result.\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\n     * so it is suitable only for single shot recognition\n     * like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.\n     * @member SpeechRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the SpeechRecognitionResult.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(Exports_js_1.RecognitionMode.Interactive), cb, err);\n    }\n    /**\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * @member SpeechRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startContinuousRecognitionAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(Exports_js_1.RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops continuous speech recognition.\n     * @member SpeechRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopContinuousRecognitionAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * Starts speech recognition with keyword spotting, until\n     * stopKeywordRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * Note: Key word spotting functionality is only available on the\n     * Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member SpeechRecognizer.prototype.startKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param {KeywordRecognitionModel} model The keyword recognition model that\n     * specifies the keyword to be recognized.\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startKeywordRecognitionAsync(model, cb, err) {\n        Contracts_js_1.Contracts.throwIfNull(model, \"model\");\n        if (!!err) {\n            err(\"Not yet implemented.\");\n        }\n    }\n    /**\n     * Stops continuous speech recognition.\n     * Note: Key word spotting functionality is only available on the\n     * Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member SpeechRecognizer.prototype.stopKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopKeywordRecognitionAsync(cb) {\n        if (!!cb) {\n            cb();\n        }\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member SpeechRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        Exports_js_2.marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member SpeechRecognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    async dispose(disposing) {\n        if (this.privDisposedRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedRecognizer = true;\n            await this.implRecognizerStop();\n        }\n        await super.dispose(disposing);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        return new Exports_js_1.SpeechServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n}\nexports.SpeechRecognizer = SpeechRecognizer;\n\n//# sourceMappingURL=SpeechRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisBookmarkEventArgs.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisBookmarkEventArgs.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechSynthesisBookmarkEventArgs = void 0;\n/**\n * Defines contents of speech synthesis bookmark event.\n * @class SpeechSynthesisBookmarkEventArgs\n * Added in version 1.16.0\n */\nclass SpeechSynthesisBookmarkEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {string} text - The bookmark text.\n     */\n    constructor(audioOffset, text) {\n        this.privAudioOffset = audioOffset;\n        this.privText = text;\n    }\n    /**\n     * Specifies the audio offset.\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.audioOffset\n     * @function\n     * @public\n     * @returns {number} the audio offset.\n     */\n    get audioOffset() {\n        return this.privAudioOffset;\n    }\n    /**\n     * Specifies the bookmark.\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.text\n     * @function\n     * @public\n     * @returns {string} the bookmark text.\n     */\n    get text() {\n        return this.privText;\n    }\n}\nexports.SpeechSynthesisBookmarkEventArgs = SpeechSynthesisBookmarkEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisBookmarkEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hTeW50aGVzaXNCb29rbWFya0V2ZW50QXJncy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDOztBQUV4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvU3BlZWNoU3ludGhlc2lzQm9va21hcmtFdmVudEFyZ3MuanM/YTk5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TcGVlY2hTeW50aGVzaXNCb29rbWFya0V2ZW50QXJncyA9IHZvaWQgMDtcbi8qKlxuICogRGVmaW5lcyBjb250ZW50cyBvZiBzcGVlY2ggc3ludGhlc2lzIGJvb2ttYXJrIGV2ZW50LlxuICogQGNsYXNzIFNwZWVjaFN5bnRoZXNpc0Jvb2ttYXJrRXZlbnRBcmdzXG4gKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMTYuMFxuICovXG5jbGFzcyBTcGVlY2hTeW50aGVzaXNCb29rbWFya0V2ZW50QXJncyB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYW4gaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcy5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gYXVkaW9PZmZzZXQgLSBUaGUgYXVkaW8gb2Zmc2V0LlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IC0gVGhlIGJvb2ttYXJrIHRleHQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoYXVkaW9PZmZzZXQsIHRleHQpIHtcbiAgICAgICAgdGhpcy5wcml2QXVkaW9PZmZzZXQgPSBhdWRpb09mZnNldDtcbiAgICAgICAgdGhpcy5wcml2VGV4dCA9IHRleHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyB0aGUgYXVkaW8gb2Zmc2V0LlxuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzQm9va21hcmtFdmVudEFyZ3MucHJvdG90eXBlLmF1ZGlvT2Zmc2V0XG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IHRoZSBhdWRpbyBvZmZzZXQuXG4gICAgICovXG4gICAgZ2V0IGF1ZGlvT2Zmc2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2QXVkaW9PZmZzZXQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyB0aGUgYm9va21hcmsuXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNCb29rbWFya0V2ZW50QXJncy5wcm90b3R5cGUudGV4dFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSB0aGUgYm9va21hcmsgdGV4dC5cbiAgICAgKi9cbiAgICBnZXQgdGV4dCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlRleHQ7XG4gICAgfVxufVxuZXhwb3J0cy5TcGVlY2hTeW50aGVzaXNCb29rbWFya0V2ZW50QXJncyA9IFNwZWVjaFN5bnRoZXNpc0Jvb2ttYXJrRXZlbnRBcmdzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TcGVlY2hTeW50aGVzaXNCb29rbWFya0V2ZW50QXJncy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisBookmarkEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisBoundaryType.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisBoundaryType.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechSynthesisBoundaryType = void 0;\n/**\n * Defines the boundary type of speech synthesis boundary event.\n * @class SpeechSynthesisBoundaryType\n * Added in version 1.21.0\n */\nvar SpeechSynthesisBoundaryType;\n(function (SpeechSynthesisBoundaryType) {\n    /**\n     * Indicates the boundary text is a word.\n     * @member SpeechSynthesisBoundaryType.Word\n     */\n    SpeechSynthesisBoundaryType[\"Word\"] = \"WordBoundary\";\n    /**\n     * Indicates the boundary text is a punctuation.\n     * @member SpeechSynthesisBoundaryType.Punctuation\n     */\n    SpeechSynthesisBoundaryType[\"Punctuation\"] = \"PunctuationBoundary\";\n    /**\n     * Indicates the boundary text is a sentence.\n     * @member SpeechSynthesisBoundaryType.Sentence\n     */\n    SpeechSynthesisBoundaryType[\"Sentence\"] = \"SentenceBoundary\";\n})(SpeechSynthesisBoundaryType = exports.SpeechSynthesisBoundaryType || (exports.SpeechSynthesisBoundaryType = {}));\n\n//# sourceMappingURL=SpeechSynthesisBoundaryType.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hTeW50aGVzaXNCb3VuZGFyeVR5cGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0VBQXdFLG1DQUFtQyxLQUFLOztBQUVqSCIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvU3BlZWNoU3ludGhlc2lzQm91bmRhcnlUeXBlLmpzP2M2NjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3BlZWNoU3ludGhlc2lzQm91bmRhcnlUeXBlID0gdm9pZCAwO1xuLyoqXG4gKiBEZWZpbmVzIHRoZSBib3VuZGFyeSB0eXBlIG9mIHNwZWVjaCBzeW50aGVzaXMgYm91bmRhcnkgZXZlbnQuXG4gKiBAY2xhc3MgU3BlZWNoU3ludGhlc2lzQm91bmRhcnlUeXBlXG4gKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMjEuMFxuICovXG52YXIgU3BlZWNoU3ludGhlc2lzQm91bmRhcnlUeXBlO1xuKGZ1bmN0aW9uIChTcGVlY2hTeW50aGVzaXNCb3VuZGFyeVR5cGUpIHtcbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgdGhlIGJvdW5kYXJ5IHRleHQgaXMgYSB3b3JkLlxuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzQm91bmRhcnlUeXBlLldvcmRcbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNCb3VuZGFyeVR5cGVbXCJXb3JkXCJdID0gXCJXb3JkQm91bmRhcnlcIjtcbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgdGhlIGJvdW5kYXJ5IHRleHQgaXMgYSBwdW5jdHVhdGlvbi5cbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc0JvdW5kYXJ5VHlwZS5QdW5jdHVhdGlvblxuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc0JvdW5kYXJ5VHlwZVtcIlB1bmN0dWF0aW9uXCJdID0gXCJQdW5jdHVhdGlvbkJvdW5kYXJ5XCI7XG4gICAgLyoqXG4gICAgICogSW5kaWNhdGVzIHRoZSBib3VuZGFyeSB0ZXh0IGlzIGEgc2VudGVuY2UuXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNCb3VuZGFyeVR5cGUuU2VudGVuY2VcbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNCb3VuZGFyeVR5cGVbXCJTZW50ZW5jZVwiXSA9IFwiU2VudGVuY2VCb3VuZGFyeVwiO1xufSkoU3BlZWNoU3ludGhlc2lzQm91bmRhcnlUeXBlID0gZXhwb3J0cy5TcGVlY2hTeW50aGVzaXNCb3VuZGFyeVR5cGUgfHwgKGV4cG9ydHMuU3BlZWNoU3ludGhlc2lzQm91bmRhcnlUeXBlID0ge30pKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BlZWNoU3ludGhlc2lzQm91bmRhcnlUeXBlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisBoundaryType.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisEventArgs.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisEventArgs.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechSynthesisEventArgs = void 0;\n/**\n * Defines contents of speech synthesis events.\n * @class SpeechSynthesisEventArgs\n * Added in version 1.11.0\n */\nclass SpeechSynthesisEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechSynthesisResult} result - The speech synthesis result.\n     */\n    constructor(result) {\n        this.privResult = result;\n    }\n    /**\n     * Specifies the synthesis result.\n     * @member SpeechSynthesisEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {SpeechSynthesisResult} the synthesis result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.SpeechSynthesisEventArgs = SpeechSynthesisEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hTeW50aGVzaXNFdmVudEFyZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVCQUF1QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsdUJBQXVCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7O0FBRWhDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hTeW50aGVzaXNFdmVudEFyZ3MuanM/MWNhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TcGVlY2hTeW50aGVzaXNFdmVudEFyZ3MgPSB2b2lkIDA7XG4vKipcbiAqIERlZmluZXMgY29udGVudHMgb2Ygc3BlZWNoIHN5bnRoZXNpcyBldmVudHMuXG4gKiBAY2xhc3MgU3BlZWNoU3ludGhlc2lzRXZlbnRBcmdzXG4gKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMTEuMFxuICovXG5jbGFzcyBTcGVlY2hTeW50aGVzaXNFdmVudEFyZ3Mge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtTcGVlY2hTeW50aGVzaXNSZXN1bHR9IHJlc3VsdCAtIFRoZSBzcGVlY2ggc3ludGhlc2lzIHJlc3VsdC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyZXN1bHQpIHtcbiAgICAgICAgdGhpcy5wcml2UmVzdWx0ID0gcmVzdWx0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIHN5bnRoZXNpcyByZXN1bHQuXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNFdmVudEFyZ3MucHJvdG90eXBlLnJlc3VsdFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7U3BlZWNoU3ludGhlc2lzUmVzdWx0fSB0aGUgc3ludGhlc2lzIHJlc3VsdC5cbiAgICAgKi9cbiAgICBnZXQgcmVzdWx0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVzdWx0O1xuICAgIH1cbn1cbmV4cG9ydHMuU3BlZWNoU3ludGhlc2lzRXZlbnRBcmdzID0gU3BlZWNoU3ludGhlc2lzRXZlbnRBcmdzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TcGVlY2hTeW50aGVzaXNFdmVudEFyZ3MuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisOutputFormat.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisOutputFormat.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechSynthesisOutputFormat = void 0;\n/**\n * Define speech synthesis audio output formats.\n * @enum SpeechSynthesisOutputFormat\n * Updated in version 1.17.0\n */\nvar SpeechSynthesisOutputFormat;\n(function (SpeechSynthesisOutputFormat) {\n    /**\n     * raw-8khz-8bit-mono-mulaw\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw,\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw8Khz8BitMonoMULaw\"] = 0] = \"Raw8Khz8BitMonoMULaw\";\n    /**\n     * riff-16khz-16kbps-mono-siren\n     * @note Unsupported by the service. Do not use this value.\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff16Khz16KbpsMonoSiren\"] = 1] = \"Riff16Khz16KbpsMonoSiren\";\n    /**\n     * audio-16khz-16kbps-mono-siren\n     * @note Unsupported by the service. Do not use this value.\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz16KbpsMonoSiren\"] = 2] = \"Audio16Khz16KbpsMonoSiren\";\n    /**\n     * audio-16khz-32kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz32KBitRateMonoMp3\"] = 3] = \"Audio16Khz32KBitRateMonoMp3\";\n    /**\n     * audio-16khz-128kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz128KBitRateMonoMp3\"] = 4] = \"Audio16Khz128KBitRateMonoMp3\";\n    /**\n     * audio-16khz-64kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz64KBitRateMonoMp3\"] = 5] = \"Audio16Khz64KBitRateMonoMp3\";\n    /**\n     * audio-24khz-48kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz48KBitRateMonoMp3\"] = 6] = \"Audio24Khz48KBitRateMonoMp3\";\n    /**\n     * audio-24khz-96kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz96KBitRateMonoMp3\"] = 7] = \"Audio24Khz96KBitRateMonoMp3\";\n    /**\n     * audio-24khz-160kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz160KBitRateMonoMp3\"] = 8] = \"Audio24Khz160KBitRateMonoMp3\";\n    /**\n     * raw-16khz-16bit-mono-truesilk\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw16Khz16BitMonoTrueSilk\"] = 9] = \"Raw16Khz16BitMonoTrueSilk\";\n    /**\n     * riff-16khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff16Khz16BitMonoPcm\"] = 10] = \"Riff16Khz16BitMonoPcm\";\n    /**\n     * riff-8khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff8Khz16BitMonoPcm\"] = 11] = \"Riff8Khz16BitMonoPcm\";\n    /**\n     * riff-24khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff24Khz16BitMonoPcm\"] = 12] = \"Riff24Khz16BitMonoPcm\";\n    /**\n     * riff-8khz-8bit-mono-mulaw\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff8Khz8BitMonoMULaw\"] = 13] = \"Riff8Khz8BitMonoMULaw\";\n    /**\n     * raw-16khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw16Khz16BitMonoPcm\"] = 14] = \"Raw16Khz16BitMonoPcm\";\n    /**\n     * raw-24khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw24Khz16BitMonoPcm\"] = 15] = \"Raw24Khz16BitMonoPcm\";\n    /**\n     * raw-8khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw8Khz16BitMonoPcm\"] = 16] = \"Raw8Khz16BitMonoPcm\";\n    /**\n     * ogg-16khz-16bit-mono-opus\n     * @member SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Ogg16Khz16BitMonoOpus\"] = 17] = \"Ogg16Khz16BitMonoOpus\";\n    /**\n     * ogg-24khz-16bit-mono-opus\n     * @member SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Ogg24Khz16BitMonoOpus\"] = 18] = \"Ogg24Khz16BitMonoOpus\";\n    /**\n     * raw-48khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw48Khz16BitMonoPcm\"] = 19] = \"Raw48Khz16BitMonoPcm\";\n    /**\n     * riff-48khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff48Khz16BitMonoPcm\"] = 20] = \"Riff48Khz16BitMonoPcm\";\n    /**\n     * audio-48khz-96kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio48Khz96KBitRateMonoMp3\"] = 21] = \"Audio48Khz96KBitRateMonoMp3\";\n    /**\n     * audio-48khz-192kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio48Khz192KBitRateMonoMp3\"] = 22] = \"Audio48Khz192KBitRateMonoMp3\";\n    /**\n     * ogg-48khz-16bit-mono-opus\n     * Added in version 1.16.0\n     * @member SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Ogg48Khz16BitMonoOpus\"] = 23] = \"Ogg48Khz16BitMonoOpus\";\n    /**\n     * webm-16khz-16bit-mono-opus\n     * Added in version 1.16.0\n     * @member SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Webm16Khz16BitMonoOpus\"] = 24] = \"Webm16Khz16BitMonoOpus\";\n    /**\n     * webm-24khz-16bit-mono-opus\n     * Added in version 1.16.0\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Webm24Khz16BitMonoOpus\"] = 25] = \"Webm24Khz16BitMonoOpus\";\n    /**\n     * raw-24khz-16bit-mono-truesilk\n     * Added in version 1.17.0\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw24Khz16BitMonoTrueSilk\"] = 26] = \"Raw24Khz16BitMonoTrueSilk\";\n    /**\n     * raw-8khz-8bit-mono-alaw\n     * Added in version 1.17.0\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw8Khz8BitMonoALaw\"] = 27] = \"Raw8Khz8BitMonoALaw\";\n    /**\n     * riff-8khz-8bit-mono-alaw\n     * Added in version 1.17.0\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff8Khz8BitMonoALaw\"] = 28] = \"Riff8Khz8BitMonoALaw\";\n    /**\n     * webm-24khz-16bit-24kbps-mono-opus\n     * Audio compressed by OPUS codec in a webm container, with bitrate of 24kbps, optimized for IoT scenario.\n     * Added in version 1.19.0\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Webm24Khz16Bit24KbpsMonoOpus\"] = 29] = \"Webm24Khz16Bit24KbpsMonoOpus\";\n    /**\n     * audio-16khz-16bit-32kbps-mono-opus\n     * Audio compressed by OPUS codec without container, with bitrate of 32kbps.\n     * Added in version 1.20.0\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16Bit32KbpsMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz16Bit32KbpsMonoOpus\"] = 30] = \"Audio16Khz16Bit32KbpsMonoOpus\";\n    /**\n     * audio-24khz-16bit-48kbps-mono-opus\n     * Audio compressed by OPUS codec without container, with bitrate of 48kbps.\n     * Added in version 1.20.0\n     * @member SpeechSynthesisOutputFormat.Audio24Khz16Bit48KbpsMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz16Bit48KbpsMonoOpus\"] = 31] = \"Audio24Khz16Bit48KbpsMonoOpus\";\n    /**\n     * audio-24khz-16bit-24kbps-mono-opus\n     * Audio compressed by OPUS codec without container, with bitrate of 24kbps.\n     * Added in version 1.20.0\n     * @member SpeechSynthesisOutputFormat.Audio24Khz16Bit24KbpsMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz16Bit24KbpsMonoOpus\"] = 32] = \"Audio24Khz16Bit24KbpsMonoOpus\";\n    /**\n     * raw-22050hz-16bit-mono-pcm\n     * Raw PCM audio at 22050Hz sampling rate and 16-bit depth.\n     * Added in version 1.22.0\n     * @member SpeechSynthesisOutputFormat.Raw22050Hz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw22050Hz16BitMonoPcm\"] = 33] = \"Raw22050Hz16BitMonoPcm\";\n    /**\n     * riff-22050hz-16bit-mono-pcm\n     * PCM audio at 22050Hz sampling rate and 16-bit depth, with RIFF header.\n     * Added in version 1.22.0\n     * @member SpeechSynthesisOutputFormat.Riff22050Hz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff22050Hz16BitMonoPcm\"] = 34] = \"Riff22050Hz16BitMonoPcm\";\n    /**\n     * raw-44100hz-16bit-mono-pcm\n     * Raw PCM audio at 44100Hz sampling rate and 16-bit depth.\n     * Added in version 1.22.0\n     * @member SpeechSynthesisOutputFormat.Raw44100Hz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw44100Hz16BitMonoPcm\"] = 35] = \"Raw44100Hz16BitMonoPcm\";\n    /**\n     * riff-44100hz-16bit-mono-pcm\n     * PCM audio at 44100Hz sampling rate and 16-bit depth, with RIFF header.\n     * Added in version 1.22.0\n     * @member SpeechSynthesisOutputFormat.Riff44100Hz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff44100Hz16BitMonoPcm\"] = 36] = \"Riff44100Hz16BitMonoPcm\";\n    /**\n     * amr-wb-16000hz\n     * AMR-WB audio at 16kHz sampling rate.\n     * Added in version 1.38.0\n     * @member SpeechSynthesisOutputFormat.AmrWb16000Hz\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"AmrWb16000Hz\"] = 37] = \"AmrWb16000Hz\";\n    /**\n     * g722-16khz-64kbps\n     * G.722 audio at 16kHz sampling rate and 64kbps bitrate.\n     * Added in version 1.38.0\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"G72216Khz64Kbps\"] = 38] = \"G72216Khz64Kbps\";\n})(SpeechSynthesisOutputFormat = exports.SpeechSynthesisOutputFormat || (exports.SpeechSynthesisOutputFormat = {}));\n\n//# sourceMappingURL=SpeechSynthesisOutputFormat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0VBQXdFLG1DQUFtQyxLQUFLOztBQUVqSCIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LmpzPzI1MzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0ID0gdm9pZCAwO1xuLyoqXG4gKiBEZWZpbmUgc3BlZWNoIHN5bnRoZXNpcyBhdWRpbyBvdXRwdXQgZm9ybWF0cy5cbiAqIEBlbnVtIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFxuICogVXBkYXRlZCBpbiB2ZXJzaW9uIDEuMTcuMFxuICovXG52YXIgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0O1xuKGZ1bmN0aW9uIChTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQpIHtcbiAgICAvKipcbiAgICAgKiByYXctOGtoei04Yml0LW1vbm8tbXVsYXdcbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5SYXc4S2h6OEJpdE1vbm9NVUxhdyxcbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiUmF3OEtoejhCaXRNb25vTVVMYXdcIl0gPSAwXSA9IFwiUmF3OEtoejhCaXRNb25vTVVMYXdcIjtcbiAgICAvKipcbiAgICAgKiByaWZmLTE2a2h6LTE2a2Jwcy1tb25vLXNpcmVuXG4gICAgICogQG5vdGUgVW5zdXBwb3J0ZWQgYnkgdGhlIHNlcnZpY2UuIERvIG5vdCB1c2UgdGhpcyB2YWx1ZS5cbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5SaWZmMTZLaHoxNkticHNNb25vU2lyZW5cbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiUmlmZjE2S2h6MTZLYnBzTW9ub1NpcmVuXCJdID0gMV0gPSBcIlJpZmYxNktoejE2S2Jwc01vbm9TaXJlblwiO1xuICAgIC8qKlxuICAgICAqIGF1ZGlvLTE2a2h6LTE2a2Jwcy1tb25vLXNpcmVuXG4gICAgICogQG5vdGUgVW5zdXBwb3J0ZWQgYnkgdGhlIHNlcnZpY2UuIERvIG5vdCB1c2UgdGhpcyB2YWx1ZS5cbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5BdWRpbzE2S2h6MTZLYnBzTW9ub1NpcmVuXG4gICAgICovXG4gICAgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtcIkF1ZGlvMTZLaHoxNkticHNNb25vU2lyZW5cIl0gPSAyXSA9IFwiQXVkaW8xNktoejE2S2Jwc01vbm9TaXJlblwiO1xuICAgIC8qKlxuICAgICAqIGF1ZGlvLTE2a2h6LTMya2JpdHJhdGUtbW9uby1tcDNcbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5BdWRpbzE2S2h6MzJLQml0UmF0ZU1vbm9NcDNcbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiQXVkaW8xNktoejMyS0JpdFJhdGVNb25vTXAzXCJdID0gM10gPSBcIkF1ZGlvMTZLaHozMktCaXRSYXRlTW9ub01wM1wiO1xuICAgIC8qKlxuICAgICAqIGF1ZGlvLTE2a2h6LTEyOGtiaXRyYXRlLW1vbm8tbXAzXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuQXVkaW8xNktoejEyOEtCaXRSYXRlTW9ub01wM1xuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJBdWRpbzE2S2h6MTI4S0JpdFJhdGVNb25vTXAzXCJdID0gNF0gPSBcIkF1ZGlvMTZLaHoxMjhLQml0UmF0ZU1vbm9NcDNcIjtcbiAgICAvKipcbiAgICAgKiBhdWRpby0xNmtoei02NGtiaXRyYXRlLW1vbm8tbXAzXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuQXVkaW8xNktoejY0S0JpdFJhdGVNb25vTXAzXG4gICAgICovXG4gICAgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtcIkF1ZGlvMTZLaHo2NEtCaXRSYXRlTW9ub01wM1wiXSA9IDVdID0gXCJBdWRpbzE2S2h6NjRLQml0UmF0ZU1vbm9NcDNcIjtcbiAgICAvKipcbiAgICAgKiBhdWRpby0yNGtoei00OGtiaXRyYXRlLW1vbm8tbXAzXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuQXVkaW8yNEtoejQ4S0JpdFJhdGVNb25vTXAzXG4gICAgICovXG4gICAgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtcIkF1ZGlvMjRLaHo0OEtCaXRSYXRlTW9ub01wM1wiXSA9IDZdID0gXCJBdWRpbzI0S2h6NDhLQml0UmF0ZU1vbm9NcDNcIjtcbiAgICAvKipcbiAgICAgKiBhdWRpby0yNGtoei05NmtiaXRyYXRlLW1vbm8tbXAzXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuQXVkaW8yNEtoejk2S0JpdFJhdGVNb25vTXAzXG4gICAgICovXG4gICAgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtcIkF1ZGlvMjRLaHo5NktCaXRSYXRlTW9ub01wM1wiXSA9IDddID0gXCJBdWRpbzI0S2h6OTZLQml0UmF0ZU1vbm9NcDNcIjtcbiAgICAvKipcbiAgICAgKiBhdWRpby0yNGtoei0xNjBrYml0cmF0ZS1tb25vLW1wM1xuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LkF1ZGlvMjRLaHoxNjBLQml0UmF0ZU1vbm9NcDNcbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiQXVkaW8yNEtoejE2MEtCaXRSYXRlTW9ub01wM1wiXSA9IDhdID0gXCJBdWRpbzI0S2h6MTYwS0JpdFJhdGVNb25vTXAzXCI7XG4gICAgLyoqXG4gICAgICogcmF3LTE2a2h6LTE2Yml0LW1vbm8tdHJ1ZXNpbGtcbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5SYXcxNktoejE2Qml0TW9ub1RydWVTaWxrXG4gICAgICovXG4gICAgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtcIlJhdzE2S2h6MTZCaXRNb25vVHJ1ZVNpbGtcIl0gPSA5XSA9IFwiUmF3MTZLaHoxNkJpdE1vbm9UcnVlU2lsa1wiO1xuICAgIC8qKlxuICAgICAqIHJpZmYtMTZraHotMTZiaXQtbW9uby1wY21cbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5SaWZmMTZLaHoxNkJpdE1vbm9QY21cbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiUmlmZjE2S2h6MTZCaXRNb25vUGNtXCJdID0gMTBdID0gXCJSaWZmMTZLaHoxNkJpdE1vbm9QY21cIjtcbiAgICAvKipcbiAgICAgKiByaWZmLThraHotMTZiaXQtbW9uby1wY21cbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5SaWZmOEtoejE2Qml0TW9ub1BjbVxuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJSaWZmOEtoejE2Qml0TW9ub1BjbVwiXSA9IDExXSA9IFwiUmlmZjhLaHoxNkJpdE1vbm9QY21cIjtcbiAgICAvKipcbiAgICAgKiByaWZmLTI0a2h6LTE2Yml0LW1vbm8tcGNtXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuUmlmZjI0S2h6MTZCaXRNb25vUGNtXG4gICAgICovXG4gICAgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtcIlJpZmYyNEtoejE2Qml0TW9ub1BjbVwiXSA9IDEyXSA9IFwiUmlmZjI0S2h6MTZCaXRNb25vUGNtXCI7XG4gICAgLyoqXG4gICAgICogcmlmZi04a2h6LThiaXQtbW9uby1tdWxhd1xuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LlJpZmY4S2h6OEJpdE1vbm9NVUxhd1xuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJSaWZmOEtoejhCaXRNb25vTVVMYXdcIl0gPSAxM10gPSBcIlJpZmY4S2h6OEJpdE1vbm9NVUxhd1wiO1xuICAgIC8qKlxuICAgICAqIHJhdy0xNmtoei0xNmJpdC1tb25vLXBjbVxuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LlJhdzE2S2h6MTZCaXRNb25vUGNtXG4gICAgICovXG4gICAgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtcIlJhdzE2S2h6MTZCaXRNb25vUGNtXCJdID0gMTRdID0gXCJSYXcxNktoejE2Qml0TW9ub1BjbVwiO1xuICAgIC8qKlxuICAgICAqIHJhdy0yNGtoei0xNmJpdC1tb25vLXBjbVxuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LlJhdzI0S2h6MTZCaXRNb25vUGNtXG4gICAgICovXG4gICAgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtcIlJhdzI0S2h6MTZCaXRNb25vUGNtXCJdID0gMTVdID0gXCJSYXcyNEtoejE2Qml0TW9ub1BjbVwiO1xuICAgIC8qKlxuICAgICAqIHJhdy04a2h6LTE2Yml0LW1vbm8tcGNtXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuUmF3OEtoejE2Qml0TW9ub1BjbVxuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJSYXc4S2h6MTZCaXRNb25vUGNtXCJdID0gMTZdID0gXCJSYXc4S2h6MTZCaXRNb25vUGNtXCI7XG4gICAgLyoqXG4gICAgICogb2dnLTE2a2h6LTE2Yml0LW1vbm8tb3B1c1xuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0Lk9nZzE2S2h6MTZCaXRNb25vT3B1c1xuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJPZ2cxNktoejE2Qml0TW9ub09wdXNcIl0gPSAxN10gPSBcIk9nZzE2S2h6MTZCaXRNb25vT3B1c1wiO1xuICAgIC8qKlxuICAgICAqIG9nZy0yNGtoei0xNmJpdC1tb25vLW9wdXNcbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5PZ2cyNEtoejE2Qml0TW9ub09wdXNcbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiT2dnMjRLaHoxNkJpdE1vbm9PcHVzXCJdID0gMThdID0gXCJPZ2cyNEtoejE2Qml0TW9ub09wdXNcIjtcbiAgICAvKipcbiAgICAgKiByYXctNDhraHotMTZiaXQtbW9uby1wY21cbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5SYXc0OEtoejE2Qml0TW9ub1BjbVxuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJSYXc0OEtoejE2Qml0TW9ub1BjbVwiXSA9IDE5XSA9IFwiUmF3NDhLaHoxNkJpdE1vbm9QY21cIjtcbiAgICAvKipcbiAgICAgKiByaWZmLTQ4a2h6LTE2Yml0LW1vbm8tcGNtXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuUmlmZjQ4S2h6MTZCaXRNb25vUGNtXG4gICAgICovXG4gICAgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtcIlJpZmY0OEtoejE2Qml0TW9ub1BjbVwiXSA9IDIwXSA9IFwiUmlmZjQ4S2h6MTZCaXRNb25vUGNtXCI7XG4gICAgLyoqXG4gICAgICogYXVkaW8tNDhraHotOTZrYml0cmF0ZS1tb25vLW1wM1xuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LkF1ZGlvNDhLaHo5NktCaXRSYXRlTW9ub01wM1xuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJBdWRpbzQ4S2h6OTZLQml0UmF0ZU1vbm9NcDNcIl0gPSAyMV0gPSBcIkF1ZGlvNDhLaHo5NktCaXRSYXRlTW9ub01wM1wiO1xuICAgIC8qKlxuICAgICAqIGF1ZGlvLTQ4a2h6LTE5MmtiaXRyYXRlLW1vbm8tbXAzXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuQXVkaW80OEtoejE5MktCaXRSYXRlTW9ub01wM1xuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJBdWRpbzQ4S2h6MTkyS0JpdFJhdGVNb25vTXAzXCJdID0gMjJdID0gXCJBdWRpbzQ4S2h6MTkyS0JpdFJhdGVNb25vTXAzXCI7XG4gICAgLyoqXG4gICAgICogb2dnLTQ4a2h6LTE2Yml0LW1vbm8tb3B1c1xuICAgICAqIEFkZGVkIGluIHZlcnNpb24gMS4xNi4wXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuT2dnNDhLaHoxNkJpdE1vbm9PcHVzXG4gICAgICovXG4gICAgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtcIk9nZzQ4S2h6MTZCaXRNb25vT3B1c1wiXSA9IDIzXSA9IFwiT2dnNDhLaHoxNkJpdE1vbm9PcHVzXCI7XG4gICAgLyoqXG4gICAgICogd2VibS0xNmtoei0xNmJpdC1tb25vLW9wdXNcbiAgICAgKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMTYuMFxuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LldlYm0xNktoejE2Qml0TW9ub09wdXNcbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiV2VibTE2S2h6MTZCaXRNb25vT3B1c1wiXSA9IDI0XSA9IFwiV2VibTE2S2h6MTZCaXRNb25vT3B1c1wiO1xuICAgIC8qKlxuICAgICAqIHdlYm0tMjRraHotMTZiaXQtbW9uby1vcHVzXG4gICAgICogQWRkZWQgaW4gdmVyc2lvbiAxLjE2LjBcbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5XZWJtMjRLaHoxNkJpdE1vbm9PcHVzXG4gICAgICovXG4gICAgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtcIldlYm0yNEtoejE2Qml0TW9ub09wdXNcIl0gPSAyNV0gPSBcIldlYm0yNEtoejE2Qml0TW9ub09wdXNcIjtcbiAgICAvKipcbiAgICAgKiByYXctMjRraHotMTZiaXQtbW9uby10cnVlc2lsa1xuICAgICAqIEFkZGVkIGluIHZlcnNpb24gMS4xNy4wXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuUmF3MjRLaHoxNkJpdE1vbm9UcnVlU2lsa1xuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJSYXcyNEtoejE2Qml0TW9ub1RydWVTaWxrXCJdID0gMjZdID0gXCJSYXcyNEtoejE2Qml0TW9ub1RydWVTaWxrXCI7XG4gICAgLyoqXG4gICAgICogcmF3LThraHotOGJpdC1tb25vLWFsYXdcbiAgICAgKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMTcuMFxuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LlJhdzhLaHo4Qml0TW9ub0FMYXdcbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiUmF3OEtoejhCaXRNb25vQUxhd1wiXSA9IDI3XSA9IFwiUmF3OEtoejhCaXRNb25vQUxhd1wiO1xuICAgIC8qKlxuICAgICAqIHJpZmYtOGtoei04Yml0LW1vbm8tYWxhd1xuICAgICAqIEFkZGVkIGluIHZlcnNpb24gMS4xNy4wXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuUmlmZjhLaHo4Qml0TW9ub0FMYXdcbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiUmlmZjhLaHo4Qml0TW9ub0FMYXdcIl0gPSAyOF0gPSBcIlJpZmY4S2h6OEJpdE1vbm9BTGF3XCI7XG4gICAgLyoqXG4gICAgICogd2VibS0yNGtoei0xNmJpdC0yNGticHMtbW9uby1vcHVzXG4gICAgICogQXVkaW8gY29tcHJlc3NlZCBieSBPUFVTIGNvZGVjIGluIGEgd2VibSBjb250YWluZXIsIHdpdGggYml0cmF0ZSBvZiAyNGticHMsIG9wdGltaXplZCBmb3IgSW9UIHNjZW5hcmlvLlxuICAgICAqIEFkZGVkIGluIHZlcnNpb24gMS4xOS4wXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuV2VibTI0S2h6MTZCaXQyNEticHNNb25vT3B1c1xuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJXZWJtMjRLaHoxNkJpdDI0S2Jwc01vbm9PcHVzXCJdID0gMjldID0gXCJXZWJtMjRLaHoxNkJpdDI0S2Jwc01vbm9PcHVzXCI7XG4gICAgLyoqXG4gICAgICogYXVkaW8tMTZraHotMTZiaXQtMzJrYnBzLW1vbm8tb3B1c1xuICAgICAqIEF1ZGlvIGNvbXByZXNzZWQgYnkgT1BVUyBjb2RlYyB3aXRob3V0IGNvbnRhaW5lciwgd2l0aCBiaXRyYXRlIG9mIDMya2Jwcy5cbiAgICAgKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMjAuMFxuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LkF1ZGlvMTZLaHoxNkJpdDMyS2Jwc01vbm9PcHVzXG4gICAgICovXG4gICAgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1NwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtcIkF1ZGlvMTZLaHoxNkJpdDMyS2Jwc01vbm9PcHVzXCJdID0gMzBdID0gXCJBdWRpbzE2S2h6MTZCaXQzMkticHNNb25vT3B1c1wiO1xuICAgIC8qKlxuICAgICAqIGF1ZGlvLTI0a2h6LTE2Yml0LTQ4a2Jwcy1tb25vLW9wdXNcbiAgICAgKiBBdWRpbyBjb21wcmVzc2VkIGJ5IE9QVVMgY29kZWMgd2l0aG91dCBjb250YWluZXIsIHdpdGggYml0cmF0ZSBvZiA0OGticHMuXG4gICAgICogQWRkZWQgaW4gdmVyc2lvbiAxLjIwLjBcbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5BdWRpbzI0S2h6MTZCaXQ0OEticHNNb25vT3B1c1xuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJBdWRpbzI0S2h6MTZCaXQ0OEticHNNb25vT3B1c1wiXSA9IDMxXSA9IFwiQXVkaW8yNEtoejE2Qml0NDhLYnBzTW9ub09wdXNcIjtcbiAgICAvKipcbiAgICAgKiBhdWRpby0yNGtoei0xNmJpdC0yNGticHMtbW9uby1vcHVzXG4gICAgICogQXVkaW8gY29tcHJlc3NlZCBieSBPUFVTIGNvZGVjIHdpdGhvdXQgY29udGFpbmVyLCB3aXRoIGJpdHJhdGUgb2YgMjRrYnBzLlxuICAgICAqIEFkZGVkIGluIHZlcnNpb24gMS4yMC4wXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuQXVkaW8yNEtoejE2Qml0MjRLYnBzTW9ub09wdXNcbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiQXVkaW8yNEtoejE2Qml0MjRLYnBzTW9ub09wdXNcIl0gPSAzMl0gPSBcIkF1ZGlvMjRLaHoxNkJpdDI0S2Jwc01vbm9PcHVzXCI7XG4gICAgLyoqXG4gICAgICogcmF3LTIyMDUwaHotMTZiaXQtbW9uby1wY21cbiAgICAgKiBSYXcgUENNIGF1ZGlvIGF0IDIyMDUwSHogc2FtcGxpbmcgcmF0ZSBhbmQgMTYtYml0IGRlcHRoLlxuICAgICAqIEFkZGVkIGluIHZlcnNpb24gMS4yMi4wXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuUmF3MjIwNTBIejE2Qml0TW9ub1BjbVxuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJSYXcyMjA1MEh6MTZCaXRNb25vUGNtXCJdID0gMzNdID0gXCJSYXcyMjA1MEh6MTZCaXRNb25vUGNtXCI7XG4gICAgLyoqXG4gICAgICogcmlmZi0yMjA1MGh6LTE2Yml0LW1vbm8tcGNtXG4gICAgICogUENNIGF1ZGlvIGF0IDIyMDUwSHogc2FtcGxpbmcgcmF0ZSBhbmQgMTYtYml0IGRlcHRoLCB3aXRoIFJJRkYgaGVhZGVyLlxuICAgICAqIEFkZGVkIGluIHZlcnNpb24gMS4yMi4wXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuUmlmZjIyMDUwSHoxNkJpdE1vbm9QY21cbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiUmlmZjIyMDUwSHoxNkJpdE1vbm9QY21cIl0gPSAzNF0gPSBcIlJpZmYyMjA1MEh6MTZCaXRNb25vUGNtXCI7XG4gICAgLyoqXG4gICAgICogcmF3LTQ0MTAwaHotMTZiaXQtbW9uby1wY21cbiAgICAgKiBSYXcgUENNIGF1ZGlvIGF0IDQ0MTAwSHogc2FtcGxpbmcgcmF0ZSBhbmQgMTYtYml0IGRlcHRoLlxuICAgICAqIEFkZGVkIGluIHZlcnNpb24gMS4yMi4wXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuUmF3NDQxMDBIejE2Qml0TW9ub1BjbVxuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJSYXc0NDEwMEh6MTZCaXRNb25vUGNtXCJdID0gMzVdID0gXCJSYXc0NDEwMEh6MTZCaXRNb25vUGNtXCI7XG4gICAgLyoqXG4gICAgICogcmlmZi00NDEwMGh6LTE2Yml0LW1vbm8tcGNtXG4gICAgICogUENNIGF1ZGlvIGF0IDQ0MTAwSHogc2FtcGxpbmcgcmF0ZSBhbmQgMTYtYml0IGRlcHRoLCB3aXRoIFJJRkYgaGVhZGVyLlxuICAgICAqIEFkZGVkIGluIHZlcnNpb24gMS4yMi4wXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXQuUmlmZjQ0MTAwSHoxNkJpdE1vbm9QY21cbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiUmlmZjQ0MTAwSHoxNkJpdE1vbm9QY21cIl0gPSAzNl0gPSBcIlJpZmY0NDEwMEh6MTZCaXRNb25vUGNtXCI7XG4gICAgLyoqXG4gICAgICogYW1yLXdiLTE2MDAwaHpcbiAgICAgKiBBTVItV0IgYXVkaW8gYXQgMTZrSHogc2FtcGxpbmcgcmF0ZS5cbiAgICAgKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMzguMFxuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0LkFtcldiMTYwMDBIelxuICAgICAqL1xuICAgIFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdFtTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbXCJBbXJXYjE2MDAwSHpcIl0gPSAzN10gPSBcIkFtcldiMTYwMDBIelwiO1xuICAgIC8qKlxuICAgICAqIGc3MjItMTZraHotNjRrYnBzXG4gICAgICogRy43MjIgYXVkaW8gYXQgMTZrSHogc2FtcGxpbmcgcmF0ZSBhbmQgNjRrYnBzIGJpdHJhdGUuXG4gICAgICogQWRkZWQgaW4gdmVyc2lvbiAxLjM4LjBcbiAgICAgKi9cbiAgICBTcGVlY2hTeW50aGVzaXNPdXRwdXRGb3JtYXRbU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0W1wiRzcyMjE2S2h6NjRLYnBzXCJdID0gMzhdID0gXCJHNzIyMTZLaHo2NEticHNcIjtcbn0pKFNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdCA9IGV4cG9ydHMuU3BlZWNoU3ludGhlc2lzT3V0cHV0Rm9ybWF0IHx8IChleHBvcnRzLlNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdCA9IHt9KSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwZWVjaFN5bnRoZXNpc091dHB1dEZvcm1hdC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisOutputFormat.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisResult.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisResult.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechSynthesisResult = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines result of speech synthesis.\n * @class SpeechSynthesisResult\n * Added in version 1.11.0\n */\nclass SpeechSynthesisResult extends Exports_js_1.SynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {ArrayBuffer} audioData - The synthesized audio binary.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     * @param {number} audioDuration - The audio duration.\n     */\n    constructor(resultId, reason, audioData, errorDetails, properties, audioDuration) {\n        super(resultId, reason, errorDetails, properties);\n        this.privAudioData = audioData;\n        this.privAudioDuration = audioDuration;\n    }\n    /**\n     * The synthesized audio data\n     * @member SpeechSynthesisResult.prototype.audioData\n     * @function\n     * @public\n     * @returns {ArrayBuffer} The synthesized audio data.\n     */\n    get audioData() {\n        return this.privAudioData;\n    }\n    /**\n     * The time duration of synthesized audio, in ticks (100 nanoseconds).\n     * @member SpeechSynthesisResult.prototype.audioDuration\n     * @function\n     * @public\n     * @returns {number} The time duration of synthesized audio.\n     */\n    get audioDuration() {\n        return this.privAudioDuration;\n    }\n}\nexports.SpeechSynthesisResult = SpeechSynthesisResult;\n\n//# sourceMappingURL=SpeechSynthesisResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hTeW50aGVzaXNSZXN1bHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QjtBQUM3QixxQkFBcUIsbUJBQU8sQ0FBQyxnSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxjQUFjO0FBQzdCLGVBQWUsYUFBYTtBQUM1QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxvQkFBb0I7QUFDbkMsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsYUFBYTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCOztBQUU3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvU3BlZWNoU3ludGhlc2lzUmVzdWx0LmpzPzY5N2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3BlZWNoU3ludGhlc2lzUmVzdWx0ID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbi8qKlxuICogRGVmaW5lcyByZXN1bHQgb2Ygc3BlZWNoIHN5bnRoZXNpcy5cbiAqIEBjbGFzcyBTcGVlY2hTeW50aGVzaXNSZXN1bHRcbiAqIEFkZGVkIGluIHZlcnNpb24gMS4xMS4wXG4gKi9cbmNsYXNzIFNwZWVjaFN5bnRoZXNpc1Jlc3VsdCBleHRlbmRzIEV4cG9ydHNfanNfMS5TeW50aGVzaXNSZXN1bHQge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHJlc3VsdElkIC0gVGhlIHJlc3VsdCBpZC5cbiAgICAgKiBAcGFyYW0ge1Jlc3VsdFJlYXNvbn0gcmVhc29uIC0gVGhlIHJlYXNvbi5cbiAgICAgKiBAcGFyYW0ge0FycmF5QnVmZmVyfSBhdWRpb0RhdGEgLSBUaGUgc3ludGhlc2l6ZWQgYXVkaW8gYmluYXJ5LlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBlcnJvckRldGFpbHMgLSBFcnJvciBkZXRhaWxzLCBpZiBwcm92aWRlZC5cbiAgICAgKiBAcGFyYW0ge1Byb3BlcnR5Q29sbGVjdGlvbn0gcHJvcGVydGllcyAtIEFkZGl0aW9uYWwgcHJvcGVydGllcywgaWYgcHJvdmlkZWQuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGF1ZGlvRHVyYXRpb24gLSBUaGUgYXVkaW8gZHVyYXRpb24uXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocmVzdWx0SWQsIHJlYXNvbiwgYXVkaW9EYXRhLCBlcnJvckRldGFpbHMsIHByb3BlcnRpZXMsIGF1ZGlvRHVyYXRpb24pIHtcbiAgICAgICAgc3VwZXIocmVzdWx0SWQsIHJlYXNvbiwgZXJyb3JEZXRhaWxzLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgdGhpcy5wcml2QXVkaW9EYXRhID0gYXVkaW9EYXRhO1xuICAgICAgICB0aGlzLnByaXZBdWRpb0R1cmF0aW9uID0gYXVkaW9EdXJhdGlvbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIHN5bnRoZXNpemVkIGF1ZGlvIGRhdGFcbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc1Jlc3VsdC5wcm90b3R5cGUuYXVkaW9EYXRhXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtBcnJheUJ1ZmZlcn0gVGhlIHN5bnRoZXNpemVkIGF1ZGlvIGRhdGEuXG4gICAgICovXG4gICAgZ2V0IGF1ZGlvRGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkF1ZGlvRGF0YTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIHRpbWUgZHVyYXRpb24gb2Ygc3ludGhlc2l6ZWQgYXVkaW8sIGluIHRpY2tzICgxMDAgbmFub3NlY29uZHMpLlxuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzUmVzdWx0LnByb3RvdHlwZS5hdWRpb0R1cmF0aW9uXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IFRoZSB0aW1lIGR1cmF0aW9uIG9mIHN5bnRoZXNpemVkIGF1ZGlvLlxuICAgICAqL1xuICAgIGdldCBhdWRpb0R1cmF0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2QXVkaW9EdXJhdGlvbjtcbiAgICB9XG59XG5leHBvcnRzLlNwZWVjaFN5bnRoZXNpc1Jlc3VsdCA9IFNwZWVjaFN5bnRoZXNpc1Jlc3VsdDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BlZWNoU3ludGhlc2lzUmVzdWx0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisVisemeEventArgs.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisVisemeEventArgs.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechSynthesisVisemeEventArgs = void 0;\n/**\n * Defines contents of speech synthesis viseme event.\n * @class SpeechSynthesisVisemeEventArgs\n * Added in version 1.16.0\n */\nclass SpeechSynthesisVisemeEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {number} visemeId - The viseme ID.\n     * @param {string} animation - The animation, could be in svg or other format.\n     */\n    constructor(audioOffset, visemeId, animation) {\n        this.privAudioOffset = audioOffset;\n        this.privVisemeId = visemeId;\n        this.privAnimation = animation;\n    }\n    /**\n     * Specifies the audio offset.\n     * @member SpeechSynthesisVisemeEventArgs.prototype.audioOffset\n     * @function\n     * @public\n     * @returns {number} the audio offset.\n     */\n    get audioOffset() {\n        return this.privAudioOffset;\n    }\n    /**\n     * Specifies the viseme ID.\n     * @member SpeechSynthesisVisemeEventArgs.prototype.visemeId\n     * @function\n     * @public\n     * @returns {number} the viseme ID.\n     */\n    get visemeId() {\n        return this.privVisemeId;\n    }\n    /**\n     * Specifies the animation.\n     * @member SpeechSynthesisVisemeEventArgs.prototype.animation\n     * @function\n     * @public\n     * @returns {string} the animation, could be in svg or other format.\n     */\n    get animation() {\n        return this.privAnimation;\n    }\n}\nexports.SpeechSynthesisVisemeEventArgs = SpeechSynthesisVisemeEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisVisemeEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hTeW50aGVzaXNWaXNlbWVFdmVudEFyZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQzs7QUFFdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1NwZWVjaFN5bnRoZXNpc1Zpc2VtZUV2ZW50QXJncy5qcz9mZTlmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNwZWVjaFN5bnRoZXNpc1Zpc2VtZUV2ZW50QXJncyA9IHZvaWQgMDtcbi8qKlxuICogRGVmaW5lcyBjb250ZW50cyBvZiBzcGVlY2ggc3ludGhlc2lzIHZpc2VtZSBldmVudC5cbiAqIEBjbGFzcyBTcGVlY2hTeW50aGVzaXNWaXNlbWVFdmVudEFyZ3NcbiAqIEFkZGVkIGluIHZlcnNpb24gMS4xNi4wXG4gKi9cbmNsYXNzIFNwZWVjaFN5bnRoZXNpc1Zpc2VtZUV2ZW50QXJncyB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYW4gaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcy5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gYXVkaW9PZmZzZXQgLSBUaGUgYXVkaW8gb2Zmc2V0LlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB2aXNlbWVJZCAtIFRoZSB2aXNlbWUgSUQuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGFuaW1hdGlvbiAtIFRoZSBhbmltYXRpb24sIGNvdWxkIGJlIGluIHN2ZyBvciBvdGhlciBmb3JtYXQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoYXVkaW9PZmZzZXQsIHZpc2VtZUlkLCBhbmltYXRpb24pIHtcbiAgICAgICAgdGhpcy5wcml2QXVkaW9PZmZzZXQgPSBhdWRpb09mZnNldDtcbiAgICAgICAgdGhpcy5wcml2VmlzZW1lSWQgPSB2aXNlbWVJZDtcbiAgICAgICAgdGhpcy5wcml2QW5pbWF0aW9uID0gYW5pbWF0aW9uO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIGF1ZGlvIG9mZnNldC5cbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc1Zpc2VtZUV2ZW50QXJncy5wcm90b3R5cGUuYXVkaW9PZmZzZXRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge251bWJlcn0gdGhlIGF1ZGlvIG9mZnNldC5cbiAgICAgKi9cbiAgICBnZXQgYXVkaW9PZmZzZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZBdWRpb09mZnNldDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSB2aXNlbWUgSUQuXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNWaXNlbWVFdmVudEFyZ3MucHJvdG90eXBlLnZpc2VtZUlkXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IHRoZSB2aXNlbWUgSUQuXG4gICAgICovXG4gICAgZ2V0IHZpc2VtZUlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VmlzZW1lSWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyB0aGUgYW5pbWF0aW9uLlxuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzVmlzZW1lRXZlbnRBcmdzLnByb3RvdHlwZS5hbmltYXRpb25cbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge3N0cmluZ30gdGhlIGFuaW1hdGlvbiwgY291bGQgYmUgaW4gc3ZnIG9yIG90aGVyIGZvcm1hdC5cbiAgICAgKi9cbiAgICBnZXQgYW5pbWF0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2QW5pbWF0aW9uO1xuICAgIH1cbn1cbmV4cG9ydHMuU3BlZWNoU3ludGhlc2lzVmlzZW1lRXZlbnRBcmdzID0gU3BlZWNoU3ludGhlc2lzVmlzZW1lRXZlbnRBcmdzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TcGVlY2hTeW50aGVzaXNWaXNlbWVFdmVudEFyZ3MuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisVisemeEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisWordBoundaryEventArgs.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisWordBoundaryEventArgs.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechSynthesisWordBoundaryEventArgs = void 0;\n/**\n * Defines contents of speech synthesis word boundary event.\n * @class SpeechSynthesisWordBoundaryEventArgs\n * Added in version 1.11.0\n */\nclass SpeechSynthesisWordBoundaryEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {number} duration - The audio duration.\n     * @param {string} text - The text.\n     * @param {number} wordLength - The length of the word.\n     * @param {number} textOffset - The text offset.\n     * @param {SpeechSynthesisBoundaryType} boundaryType - The boundary type\n     */\n    constructor(audioOffset, duration, text, wordLength, textOffset, boundaryType) {\n        this.privAudioOffset = audioOffset;\n        this.privDuration = duration;\n        this.privText = text;\n        this.privWordLength = wordLength;\n        this.privTextOffset = textOffset;\n        this.privBoundaryType = boundaryType;\n    }\n    /**\n     * Specifies the audio offset.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.audioOffset\n     * @function\n     * @public\n     * @returns {number} the audio offset.\n     */\n    get audioOffset() {\n        return this.privAudioOffset;\n    }\n    /**\n     * Specifies the duration, in ticks (100 nanoseconds).\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.duration\n     * @function\n     * @public\n     * @returns {number} Duration in 100 nanosecond increments.\n     */\n    get duration() {\n        return this.privDuration;\n    }\n    /**\n     * Specifies the text of the word boundary event.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.text\n     * @function\n     * @public\n     * @returns {string} the text.\n     */\n    get text() {\n        return this.privText;\n    }\n    /**\n     * Specifies the word length\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.wordLength\n     * @function\n     * @public\n     * @returns {number} the word length\n     */\n    get wordLength() {\n        return this.privWordLength;\n    }\n    /**\n     * Specifies the text offset.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.textOffset\n     * @function\n     * @public\n     * @returns {number} the text offset.\n     */\n    get textOffset() {\n        return this.privTextOffset;\n    }\n    /**\n     * Specifies the boundary type.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.boundaryType\n     * @function\n     * @public\n     * @returns {SpeechSynthesisBoundaryType} the boundary type.\n     */\n    get boundaryType() {\n        return this.privBoundaryType;\n    }\n}\nexports.SpeechSynthesisWordBoundaryEventArgs = SpeechSynthesisWordBoundaryEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisWordBoundaryEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hTeW50aGVzaXNXb3JkQm91bmRhcnlFdmVudEFyZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsNkJBQTZCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNkJBQTZCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TcGVlY2hTeW50aGVzaXNXb3JkQm91bmRhcnlFdmVudEFyZ3MuanM/OTE0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TcGVlY2hTeW50aGVzaXNXb3JkQm91bmRhcnlFdmVudEFyZ3MgPSB2b2lkIDA7XG4vKipcbiAqIERlZmluZXMgY29udGVudHMgb2Ygc3BlZWNoIHN5bnRoZXNpcyB3b3JkIGJvdW5kYXJ5IGV2ZW50LlxuICogQGNsYXNzIFNwZWVjaFN5bnRoZXNpc1dvcmRCb3VuZGFyeUV2ZW50QXJnc1xuICogQWRkZWQgaW4gdmVyc2lvbiAxLjExLjBcbiAqL1xuY2xhc3MgU3BlZWNoU3ludGhlc2lzV29yZEJvdW5kYXJ5RXZlbnRBcmdzIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCBpbml0aWFsaXplcyBhbiBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzLlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBhdWRpb09mZnNldCAtIFRoZSBhdWRpbyBvZmZzZXQuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGR1cmF0aW9uIC0gVGhlIGF1ZGlvIGR1cmF0aW9uLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IC0gVGhlIHRleHQuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHdvcmRMZW5ndGggLSBUaGUgbGVuZ3RoIG9mIHRoZSB3b3JkLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB0ZXh0T2Zmc2V0IC0gVGhlIHRleHQgb2Zmc2V0LlxuICAgICAqIEBwYXJhbSB7U3BlZWNoU3ludGhlc2lzQm91bmRhcnlUeXBlfSBib3VuZGFyeVR5cGUgLSBUaGUgYm91bmRhcnkgdHlwZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGF1ZGlvT2Zmc2V0LCBkdXJhdGlvbiwgdGV4dCwgd29yZExlbmd0aCwgdGV4dE9mZnNldCwgYm91bmRhcnlUeXBlKSB7XG4gICAgICAgIHRoaXMucHJpdkF1ZGlvT2Zmc2V0ID0gYXVkaW9PZmZzZXQ7XG4gICAgICAgIHRoaXMucHJpdkR1cmF0aW9uID0gZHVyYXRpb247XG4gICAgICAgIHRoaXMucHJpdlRleHQgPSB0ZXh0O1xuICAgICAgICB0aGlzLnByaXZXb3JkTGVuZ3RoID0gd29yZExlbmd0aDtcbiAgICAgICAgdGhpcy5wcml2VGV4dE9mZnNldCA9IHRleHRPZmZzZXQ7XG4gICAgICAgIHRoaXMucHJpdkJvdW5kYXJ5VHlwZSA9IGJvdW5kYXJ5VHlwZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSBhdWRpbyBvZmZzZXQuXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNXb3JkQm91bmRhcnlFdmVudEFyZ3MucHJvdG90eXBlLmF1ZGlvT2Zmc2V0XG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IHRoZSBhdWRpbyBvZmZzZXQuXG4gICAgICovXG4gICAgZ2V0IGF1ZGlvT2Zmc2V0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2QXVkaW9PZmZzZXQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyB0aGUgZHVyYXRpb24sIGluIHRpY2tzICgxMDAgbmFub3NlY29uZHMpLlxuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzV29yZEJvdW5kYXJ5RXZlbnRBcmdzLnByb3RvdHlwZS5kdXJhdGlvblxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBEdXJhdGlvbiBpbiAxMDAgbmFub3NlY29uZCBpbmNyZW1lbnRzLlxuICAgICAqL1xuICAgIGdldCBkdXJhdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkR1cmF0aW9uO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIHRleHQgb2YgdGhlIHdvcmQgYm91bmRhcnkgZXZlbnQuXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNXb3JkQm91bmRhcnlFdmVudEFyZ3MucHJvdG90eXBlLnRleHRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge3N0cmluZ30gdGhlIHRleHQuXG4gICAgICovXG4gICAgZ2V0IHRleHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZUZXh0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIHdvcmQgbGVuZ3RoXG4gICAgICogQG1lbWJlciBTcGVlY2hTeW50aGVzaXNXb3JkQm91bmRhcnlFdmVudEFyZ3MucHJvdG90eXBlLndvcmRMZW5ndGhcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge251bWJlcn0gdGhlIHdvcmQgbGVuZ3RoXG4gICAgICovXG4gICAgZ2V0IHdvcmRMZW5ndGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZXb3JkTGVuZ3RoO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIHRleHQgb2Zmc2V0LlxuICAgICAqIEBtZW1iZXIgU3BlZWNoU3ludGhlc2lzV29yZEJvdW5kYXJ5RXZlbnRBcmdzLnByb3RvdHlwZS50ZXh0T2Zmc2V0XG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IHRoZSB0ZXh0IG9mZnNldC5cbiAgICAgKi9cbiAgICBnZXQgdGV4dE9mZnNldCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlRleHRPZmZzZXQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyB0aGUgYm91bmRhcnkgdHlwZS5cbiAgICAgKiBAbWVtYmVyIFNwZWVjaFN5bnRoZXNpc1dvcmRCb3VuZGFyeUV2ZW50QXJncy5wcm90b3R5cGUuYm91bmRhcnlUeXBlXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtTcGVlY2hTeW50aGVzaXNCb3VuZGFyeVR5cGV9IHRoZSBib3VuZGFyeSB0eXBlLlxuICAgICAqL1xuICAgIGdldCBib3VuZGFyeVR5cGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZCb3VuZGFyeVR5cGU7XG4gICAgfVxufVxuZXhwb3J0cy5TcGVlY2hTeW50aGVzaXNXb3JkQm91bmRhcnlFdmVudEFyZ3MgPSBTcGVlY2hTeW50aGVzaXNXb3JkQm91bmRhcnlFdmVudEFyZ3M7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwZWVjaFN5bnRoZXNpc1dvcmRCb3VuZGFyeUV2ZW50QXJncy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesisWordBoundaryEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesizer.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesizer.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechSynthesizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst AudioFileWriter_js_1 = __webpack_require__(/*! ./Audio/AudioFileWriter.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioFileWriter.js\");\nconst AudioOutputFormat_js_1 = __webpack_require__(/*! ./Audio/AudioOutputFormat.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputFormat.js\");\nconst AudioOutputStream_js_1 = __webpack_require__(/*! ./Audio/AudioOutputStream.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioOutputStream.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Synthesizer_js_1 = __webpack_require__(/*! ./Synthesizer.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Synthesizer.js\");\n/**\n * Defines the class SpeechSynthesizer for text to speech.\n * Updated in version 1.16.0\n * @class SpeechSynthesizer\n */\nclass SpeechSynthesizer extends Exports_js_3.Synthesizer {\n    /**\n     * SpeechSynthesizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer.\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer.\n     */\n    constructor(speechConfig, audioConfig) {\n        super(speechConfig);\n        if (audioConfig !== null) {\n            if (audioConfig === undefined) {\n                this.audioConfig = (typeof window === \"undefined\") ? undefined : Exports_js_3.AudioConfig.fromDefaultSpeakerOutput();\n            }\n            else {\n                this.audioConfig = audioConfig;\n            }\n        }\n        this.privConnectionFactory = new Exports_js_1.SpeechSynthesisConnectionFactory();\n        this.implCommonSynthesizeSetup();\n    }\n    /**\n     * SpeechSynthesizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this synthesizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the synthesizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer\n     */\n    static FromConfig(speechConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\n        return new SpeechSynthesizer(speechConfig, audioConfig);\n    }\n    /**\n     * Executes speech synthesis on plain text.\n     * The task returns the synthesis result.\n     * @member SpeechSynthesizer.prototype.speakTextAsync\n     * @function\n     * @public\n     * @param text - Text to be synthesized.\n     * @param cb - Callback that received the SpeechSynthesisResult.\n     * @param err - Callback invoked in case of an error.\n     * @param stream - AudioOutputStream to receive the synthesized audio.\n     */\n    speakTextAsync(text, cb, err, stream) {\n        this.speakImpl(text, false, cb, err, stream);\n    }\n    /**\n     * Executes speech synthesis on SSML.\n     * The task returns the synthesis result.\n     * @member SpeechSynthesizer.prototype.speakSsmlAsync\n     * @function\n     * @public\n     * @param ssml - SSML to be synthesized.\n     * @param cb - Callback that received the SpeechSynthesisResult.\n     * @param err - Callback invoked in case of an error.\n     * @param stream - AudioOutputStream to receive the synthesized audio.\n     */\n    speakSsmlAsync(ssml, cb, err, stream) {\n        this.speakImpl(ssml, true, cb, err, stream);\n    }\n    /**\n     * Get list of synthesis voices available.\n     * The task returns the synthesis voice result.\n     * @member SpeechSynthesizer.prototype.getVoicesAsync\n     * @function\n     * @async\n     * @public\n     * @param locale - Locale of voices in BCP-47 format; if left empty, get all available voices.\n     * @return {Promise<SynthesisVoicesResult>} - Promise of a SynthesisVoicesResult.\n     */\n    async getVoicesAsync(locale = \"\") {\n        return this.getVoices(locale);\n    }\n    /**\n     * Dispose of associated resources.\n     * @member SpeechSynthesizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, err) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n        Exports_js_2.marshalPromiseToCallbacks(this.dispose(true), cb, err);\n    }\n    /**\n     * @Internal\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    get internalData() {\n        return this.privAdapter;\n    }\n    //\n    // ################################################################################################################\n    // IMPLEMENTATION.\n    // ################################################################################################################\n    //\n    // Creates the synthesis adapter\n    createSynthesisAdapter(authentication, connectionFactory, synthesizerConfig) {\n        return new Exports_js_1.SpeechSynthesisAdapter(authentication, connectionFactory, synthesizerConfig, this, this.audioConfig);\n    }\n    createRestSynthesisAdapter(authentication, synthesizerConfig) {\n        return new Exports_js_1.SynthesisRestAdapter(synthesizerConfig, authentication);\n    }\n    implCommonSynthesizeSetup() {\n        super.implCommonSynthesizeSetup();\n        this.privAdapter.audioOutputFormat = AudioOutputFormat_js_1.AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(Exports_js_3.SpeechSynthesisOutputFormat[this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)]);\n    }\n    speakImpl(text, IsSsml, cb, err, dataStream) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privDisposed);\n            const requestId = Exports_js_2.createNoDashGuid();\n            let audioDestination;\n            if (dataStream instanceof Exports_js_3.PushAudioOutputStreamCallback) {\n                audioDestination = new AudioOutputStream_js_1.PushAudioOutputStreamImpl(dataStream);\n            }\n            else if (dataStream instanceof Exports_js_3.PullAudioOutputStream) {\n                audioDestination = dataStream;\n            }\n            else if (dataStream !== undefined) {\n                audioDestination = new AudioFileWriter_js_1.AudioFileWriter(dataStream);\n            }\n            else {\n                audioDestination = undefined;\n            }\n            this.synthesisRequestQueue.enqueue(new Synthesizer_js_1.SynthesisRequest(requestId, text, IsSsml, (e) => {\n                this.privSynthesizing = false;\n                if (!!cb) {\n                    try {\n                        cb(e);\n                    }\n                    catch (e) {\n                        if (!!err) {\n                            err(e);\n                        }\n                    }\n                }\n                cb = undefined;\n                /* eslint-disable no-empty */\n                this.adapterSpeak().catch(() => { });\n            }, (e) => {\n                if (!!err) {\n                    err(e);\n                }\n            }, audioDestination));\n            /* eslint-disable no-empty-function */\n            this.adapterSpeak().catch(() => { });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n            // Destroy the synthesizer.\n            /* eslint-disable no-empty */\n            this.dispose(true).catch(() => { });\n        }\n    }\n    async getVoices(locale) {\n        const requestId = Exports_js_2.createNoDashGuid();\n        const response = await this.privRestAdapter.getVoicesList(requestId);\n        if (response.ok && Array.isArray(response.json)) {\n            let json = response.json;\n            if (!!locale && locale.length > 0) {\n                json = json.filter((item) => !!item.Locale && item.Locale.toLowerCase() === locale.toLowerCase());\n            }\n            return new Exports_js_3.SynthesisVoicesResult(requestId, json, undefined);\n        }\n        else {\n            return new Exports_js_3.SynthesisVoicesResult(requestId, undefined, `Error: ${response.status}: ${response.statusText}`);\n        }\n    }\n}\nexports.SpeechSynthesizer = SpeechSynthesizer;\n\n//# sourceMappingURL=SpeechSynthesizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechSynthesizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechTranslationConfig.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechTranslationConfig.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpeechTranslationConfigImpl = exports.SpeechTranslationConfig = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Speech translation configuration.\n * @class SpeechTranslationConfig\n */\nclass SpeechTranslationConfig extends Exports_js_2.SpeechConfig {\n    /**\n     * Creates an instance of recognizer config.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Static instance of SpeechTranslationConfig returned by passing a subscription key and service region.\n     * @member SpeechTranslationConfig.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - The subscription key.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechTranslationConfig} The speech translation config.\n     */\n    static fromSubscription(subscriptionKey, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, region);\n        return ret;\n    }\n    /**\n     * Static instance of SpeechTranslationConfig returned by passing authorization token and service region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     * expires, the caller needs to refresh it by setting the property authorizationToken with a new\n     * valid token. Otherwise, all the recognizers created by this SpeechTranslationConfig instance\n     * will encounter errors during recognition.\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply\n     * to recognizers that have already been created.\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member SpeechTranslationConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param {string} authorizationToken - The authorization token.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechTranslationConfig} The speech translation config.\n     */\n    static fromAuthorizationToken(authorizationToken, region) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region, region);\n        return ret;\n    }\n    /**\n     * Creates an instance of the speech config with specified host and subscription key.\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\n     * Note: Added in version 1.9.0.\n     * @member SpeechConfig.fromHost\n     * @function\n     * @public\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromHost(hostName, subscriptionKey) {\n        Contracts_js_1.Contracts.throwIfNull(hostName, \"hostName\");\n        const speechImpl = new SpeechTranslationConfigImpl();\n        speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\n        if (undefined !== subscriptionKey) {\n            speechImpl.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return speechImpl;\n    }\n    /**\n     * Creates an instance of the speech translation config with specified endpoint and subscription key.\n     * This method is intended only for users who use a non-standard service endpoint or paramters.\n     * Note: The query properties specified in the endpoint URL are not changed, even if they are\n     * set by any other APIs. For example, if language is defined in the uri as query parameter\n     * \"language=de-DE\", and also set by the speechRecognitionLanguage property, the language\n     * setting in uri takes precedence, and the effective language is \"de-DE\".\n     * Only the properties that are not specified in the endpoint URL can be set by other APIs.\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\n     * fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\n     * use the authorization token.\n     * @member SpeechTranslationConfig.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} endpoint - The service endpoint to connect to.\n     * @param {string} subscriptionKey - The subscription key.\n     * @returns {SpeechTranslationConfig} A speech config instance.\n     */\n    static fromEndpoint(endpoint, subscriptionKey) {\n        Contracts_js_1.Contracts.throwIfNull(endpoint, \"endpoint\");\n        Contracts_js_1.Contracts.throwIfNull(subscriptionKey, \"subscriptionKey\");\n        const ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\n        ret.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        return ret;\n    }\n}\nexports.SpeechTranslationConfig = SpeechTranslationConfig;\n/**\n * @private\n * @class SpeechTranslationConfigImpl\n */\nclass SpeechTranslationConfigImpl extends SpeechTranslationConfig {\n    constructor() {\n        super();\n        this.privSpeechProperties = new Exports_js_2.PropertyCollection();\n        this.outputFormat = Exports_js_2.OutputFormat.Simple;\n    }\n    /**\n     * Gets/Sets the authorization token.\n     * If this is set, subscription key is ignored.\n     * User needs to make sure the provided authorization token is valid and not expired.\n     * @member SpeechTranslationConfigImpl.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} value - The authorization token.\n     */\n    set authorizationToken(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    /**\n     * Sets the speech recognition language.\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @param {string} value - The authorization token.\n     */\n    set speechRecognitionLanguage(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage, value);\n    }\n    /**\n     * Gets the speech recognition language.\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @return {string} The speechRecognitionLanguage.\n     */\n    get speechRecognitionLanguage() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_RecoLanguage]);\n    }\n    /**\n     * @member SpeechTranslationConfigImpl.prototype.subscriptionKey\n     * @function\n     * @public\n     */\n    get subscriptionKey() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_Key]);\n    }\n    /**\n     * Gets the output format\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\n     * @function\n     * @public\n     */\n    get outputFormat() {\n        // eslint-disable-next-line\n        return Exports_js_2.OutputFormat[this.privSpeechProperties.getProperty(Exports_js_1.OutputFormatPropertyName, undefined)];\n    }\n    /**\n     * Gets/Sets the output format\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\n     * @function\n     * @public\n     */\n    set outputFormat(value) {\n        this.privSpeechProperties.setProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_2.OutputFormat[value]);\n    }\n    /**\n     * Gets the endpoint id.\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\n     * @function\n     * @public\n     */\n    get endpointId() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId);\n    }\n    /**\n     * Gets/Sets the endpoint id.\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\n     * @function\n     * @public\n     */\n    set endpointId(value) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EndpointId, value);\n    }\n    /**\n     * Add a (text) target language to translate into.\n     * @member SpeechTranslationConfigImpl.prototype.addTargetLanguage\n     * @function\n     * @public\n     * @param {string} value - The language such as de-DE\n     */\n    addTargetLanguage(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        const languages = this.targetLanguages;\n        if (!languages.includes(value)) {\n            languages.push(value);\n            this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\n        }\n    }\n    /**\n     * Gets the (text) target language to translate into.\n     * @member SpeechTranslationConfigImpl.prototype.targetLanguages\n     * @function\n     * @public\n     * @param {string} value - The language such as de-DE\n     */\n    get targetLanguages() {\n        if (this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n            return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n        }\n        else {\n            return [];\n        }\n    }\n    /**\n     * Gets the voice name.\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\n     * @function\n     * @public\n     */\n    get voiceName() {\n        return this.getProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_TranslationVoice]);\n    }\n    /**\n     * Gets/Sets the voice of the translated language, enable voice synthesis output.\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\n     * @function\n     * @public\n     * @param {string} value - The name of the voice.\n     */\n    set voiceName(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_TranslationVoice, value);\n    }\n    /**\n     * Provides the region.\n     * @member SpeechTranslationConfigImpl.prototype.region\n     * @function\n     * @public\n     * @returns {string} The region.\n     */\n    get region() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_Region);\n    }\n    setProxy(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\n        this.setProperty(Exports_js_2.PropertyId[Exports_js_2.PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\n    }\n    /**\n     * Gets an arbitrary property value.\n     * @member SpeechTranslationConfigImpl.prototype.getProperty\n     * @function\n     * @public\n     * @param {string} name - The name of the property.\n     * @param {string} def - The default value of the property in case it is not set.\n     * @returns {string} The value of the property.\n     */\n    getProperty(name, def) {\n        return this.privSpeechProperties.getProperty(name, def);\n    }\n    /**\n     * Gets/Sets an arbitrary property value.\n     * @member SpeechTranslationConfigImpl.prototype.setProperty\n     * @function\n     * @public\n     * @param {string | PropertyId} name - The name of the property to set.\n     * @param {string} value - The value of the property.\n     */\n    setProperty(name, value) {\n        this.privSpeechProperties.setProperty(name, value);\n    }\n    /**\n     * Provides access to custom properties.\n     * @member SpeechTranslationConfigImpl.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The properties.\n     */\n    get properties() {\n        return this.privSpeechProperties;\n    }\n    /**\n     * Dispose of associated resources.\n     * @member SpeechTranslationConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n    setServiceProperty(name, value) {\n        const currentProperties = JSON.parse(this.privSpeechProperties.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n        currentProperties[name] = value;\n        this.privSpeechProperties.setProperty(Exports_js_1.ServicePropertiesPropertyName, JSON.stringify(currentProperties));\n    }\n    setProfanity(profanity) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_ProfanityOption, Exports_js_2.ProfanityOption[profanity]);\n    }\n    enableAudioLogging() {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\n    }\n    requestWordLevelTimestamps() {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\n    }\n    enableDictation() {\n        this.privSpeechProperties.setProperty(Exports_js_1.ForceDictationPropertyName, \"true\");\n    }\n    get speechSynthesisLanguage() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthLanguage);\n    }\n    set speechSynthesisLanguage(language) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthLanguage, language);\n    }\n    get speechSynthesisVoiceName() {\n        return this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthVoice);\n    }\n    set speechSynthesisVoiceName(voice) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthVoice, voice);\n    }\n    get speechSynthesisOutputFormat() {\n        // eslint-disable-next-line\n        return Exports_js_2.SpeechSynthesisOutputFormat[this.privSpeechProperties.getProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\n    }\n    set speechSynthesisOutputFormat(format) {\n        this.privSpeechProperties.setProperty(Exports_js_2.PropertyId.SpeechServiceConnection_SynthOutputFormat, Exports_js_2.SpeechSynthesisOutputFormat[format]);\n    }\n}\nexports.SpeechTranslationConfigImpl = SpeechTranslationConfigImpl;\n\n//# sourceMappingURL=SpeechTranslationConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SpeechTranslationConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SynthesisResult.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SynthesisResult.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SynthesisResult = void 0;\n/**\n * Base class for synthesis results\n * @class SynthesisResult\n * Added in version 1.20.0\n */\nclass SynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, errorDetails, properties) {\n        this.privResultId = resultId;\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privProperties = properties;\n    }\n    /**\n     * Specifies the result identifier.\n     * @member SynthesisResult.prototype.resultId\n     * @function\n     * @public\n     * @returns {string} Specifies the result identifier.\n     */\n    get resultId() {\n        return this.privResultId;\n    }\n    /**\n     * Specifies status of the result.\n     * @member SynthesisResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} Specifies status of the result.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * In case of an unsuccessful synthesis, provides details of the occurred error.\n     * @member SynthesisResult.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} a brief description of an error.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    /**\n     * The set of properties exposed in the result.\n     * @member SynthesisResult.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The set of properties exposed in the result.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n}\nexports.SynthesisResult = SynthesisResult;\n\n//# sourceMappingURL=SynthesisResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TeW50aGVzaXNSZXN1bHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxjQUFjO0FBQzdCLGVBQWUsUUFBUTtBQUN2QixlQUFlLG9CQUFvQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsY0FBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsb0JBQW9CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7O0FBRXZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TeW50aGVzaXNSZXN1bHQuanM/M2ViOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TeW50aGVzaXNSZXN1bHQgPSB2b2lkIDA7XG4vKipcbiAqIEJhc2UgY2xhc3MgZm9yIHN5bnRoZXNpcyByZXN1bHRzXG4gKiBAY2xhc3MgU3ludGhlc2lzUmVzdWx0XG4gKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMjAuMFxuICovXG5jbGFzcyBTeW50aGVzaXNSZXN1bHQge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHJlc3VsdElkIC0gVGhlIHJlc3VsdCBpZC5cbiAgICAgKiBAcGFyYW0ge1Jlc3VsdFJlYXNvbn0gcmVhc29uIC0gVGhlIHJlYXNvbi5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZXJyb3JEZXRhaWxzIC0gRXJyb3IgZGV0YWlscywgaWYgcHJvdmlkZWQuXG4gICAgICogQHBhcmFtIHtQcm9wZXJ0eUNvbGxlY3Rpb259IHByb3BlcnRpZXMgLSBBZGRpdGlvbmFsIHByb3BlcnRpZXMsIGlmIHByb3ZpZGVkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHJlc3VsdElkLCByZWFzb24sIGVycm9yRGV0YWlscywgcHJvcGVydGllcykge1xuICAgICAgICB0aGlzLnByaXZSZXN1bHRJZCA9IHJlc3VsdElkO1xuICAgICAgICB0aGlzLnByaXZSZWFzb24gPSByZWFzb247XG4gICAgICAgIHRoaXMucHJpdkVycm9yRGV0YWlscyA9IGVycm9yRGV0YWlscztcbiAgICAgICAgdGhpcy5wcml2UHJvcGVydGllcyA9IHByb3BlcnRpZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyB0aGUgcmVzdWx0IGlkZW50aWZpZXIuXG4gICAgICogQG1lbWJlciBTeW50aGVzaXNSZXN1bHQucHJvdG90eXBlLnJlc3VsdElkXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFNwZWNpZmllcyB0aGUgcmVzdWx0IGlkZW50aWZpZXIuXG4gICAgICovXG4gICAgZ2V0IHJlc3VsdElkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVzdWx0SWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyBzdGF0dXMgb2YgdGhlIHJlc3VsdC5cbiAgICAgKiBAbWVtYmVyIFN5bnRoZXNpc1Jlc3VsdC5wcm90b3R5cGUucmVhc29uXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtSZXN1bHRSZWFzb259IFNwZWNpZmllcyBzdGF0dXMgb2YgdGhlIHJlc3VsdC5cbiAgICAgKi9cbiAgICBnZXQgcmVhc29uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVhc29uO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbiBjYXNlIG9mIGFuIHVuc3VjY2Vzc2Z1bCBzeW50aGVzaXMsIHByb3ZpZGVzIGRldGFpbHMgb2YgdGhlIG9jY3VycmVkIGVycm9yLlxuICAgICAqIEBtZW1iZXIgU3ludGhlc2lzUmVzdWx0LnByb3RvdHlwZS5lcnJvckRldGFpbHNcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge3N0cmluZ30gYSBicmllZiBkZXNjcmlwdGlvbiBvZiBhbiBlcnJvci5cbiAgICAgKi9cbiAgICBnZXQgZXJyb3JEZXRhaWxzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RXJyb3JEZXRhaWxzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgc2V0IG9mIHByb3BlcnRpZXMgZXhwb3NlZCBpbiB0aGUgcmVzdWx0LlxuICAgICAqIEBtZW1iZXIgU3ludGhlc2lzUmVzdWx0LnByb3RvdHlwZS5wcm9wZXJ0aWVzXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtQcm9wZXJ0eUNvbGxlY3Rpb259IFRoZSBzZXQgb2YgcHJvcGVydGllcyBleHBvc2VkIGluIHRoZSByZXN1bHQuXG4gICAgICovXG4gICAgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQcm9wZXJ0aWVzO1xuICAgIH1cbn1cbmV4cG9ydHMuU3ludGhlc2lzUmVzdWx0ID0gU3ludGhlc2lzUmVzdWx0O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TeW50aGVzaXNSZXN1bHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SynthesisResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SynthesisVoicesResult.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SynthesisVoicesResult.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SynthesisVoicesResult = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines result of speech synthesis.\n * @class SynthesisVoicesResult\n * Added in version 1.20.0\n */\nclass SynthesisVoicesResult extends Exports_js_1.SynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param requestId - result id for request.\n     * @param json - json payload from endpoint.\n     */\n    constructor(requestId, json, errorDetails) {\n        if (Array.isArray(json)) {\n            super(requestId, Exports_js_1.ResultReason.VoicesListRetrieved, undefined, new Exports_js_1.PropertyCollection());\n            this.privVoices = [];\n            for (const item of json) {\n                this.privVoices.push(new Exports_js_1.VoiceInfo(item));\n            }\n        }\n        else {\n            super(requestId, Exports_js_1.ResultReason.Canceled, errorDetails ? errorDetails : \"Error information unavailable\", new Exports_js_1.PropertyCollection());\n        }\n    }\n    /**\n     * The list of voices\n     * @member SynthesisVoicesResult.prototype.voices\n     * @function\n     * @public\n     * @returns {VoiceInfo[]} List of synthesized voices.\n     */\n    get voices() {\n        return this.privVoices;\n    }\n}\nexports.SynthesisVoicesResult = SynthesisVoicesResult;\n\n//# sourceMappingURL=SynthesisVoicesResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9TeW50aGVzaXNWb2ljZXNSZXN1bHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QjtBQUM3QixxQkFBcUIsbUJBQU8sQ0FBQyxnSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGFBQWE7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qjs7QUFFN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1N5bnRoZXNpc1ZvaWNlc1Jlc3VsdC5qcz81MDJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN5bnRoZXNpc1ZvaWNlc1Jlc3VsdCA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG4vKipcbiAqIERlZmluZXMgcmVzdWx0IG9mIHNwZWVjaCBzeW50aGVzaXMuXG4gKiBAY2xhc3MgU3ludGhlc2lzVm9pY2VzUmVzdWx0XG4gKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMjAuMFxuICovXG5jbGFzcyBTeW50aGVzaXNWb2ljZXNSZXN1bHQgZXh0ZW5kcyBFeHBvcnRzX2pzXzEuU3ludGhlc2lzUmVzdWx0IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCBpbml0aWFsaXplcyBhbiBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzLlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSByZXF1ZXN0SWQgLSByZXN1bHQgaWQgZm9yIHJlcXVlc3QuXG4gICAgICogQHBhcmFtIGpzb24gLSBqc29uIHBheWxvYWQgZnJvbSBlbmRwb2ludC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyZXF1ZXN0SWQsIGpzb24sIGVycm9yRGV0YWlscykge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShqc29uKSkge1xuICAgICAgICAgICAgc3VwZXIocmVxdWVzdElkLCBFeHBvcnRzX2pzXzEuUmVzdWx0UmVhc29uLlZvaWNlc0xpc3RSZXRyaWV2ZWQsIHVuZGVmaW5lZCwgbmV3IEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUNvbGxlY3Rpb24oKSk7XG4gICAgICAgICAgICB0aGlzLnByaXZWb2ljZXMgPSBbXTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBqc29uKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wcml2Vm9pY2VzLnB1c2gobmV3IEV4cG9ydHNfanNfMS5Wb2ljZUluZm8oaXRlbSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc3VwZXIocmVxdWVzdElkLCBFeHBvcnRzX2pzXzEuUmVzdWx0UmVhc29uLkNhbmNlbGVkLCBlcnJvckRldGFpbHMgPyBlcnJvckRldGFpbHMgOiBcIkVycm9yIGluZm9ybWF0aW9uIHVuYXZhaWxhYmxlXCIsIG5ldyBFeHBvcnRzX2pzXzEuUHJvcGVydHlDb2xsZWN0aW9uKCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBsaXN0IG9mIHZvaWNlc1xuICAgICAqIEBtZW1iZXIgU3ludGhlc2lzVm9pY2VzUmVzdWx0LnByb3RvdHlwZS52b2ljZXNcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge1ZvaWNlSW5mb1tdfSBMaXN0IG9mIHN5bnRoZXNpemVkIHZvaWNlcy5cbiAgICAgKi9cbiAgICBnZXQgdm9pY2VzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2Vm9pY2VzO1xuICAgIH1cbn1cbmV4cG9ydHMuU3ludGhlc2lzVm9pY2VzUmVzdWx0ID0gU3ludGhlc2lzVm9pY2VzUmVzdWx0O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TeW50aGVzaXNWb2ljZXNSZXN1bHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/SynthesisVoicesResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Synthesizer.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Synthesizer.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SynthesisRequest = exports.Synthesizer = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nclass Synthesizer {\n    /**\n     * Creates and initializes an instance of a Recognizer\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The speech config to initialize the synthesizer.\n     */\n    constructor(speechConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        this.privProperties = speechConfigImpl.properties.clone();\n        this.privDisposed = false;\n        this.privSynthesizing = false;\n        this.synthesisRequestQueue = new Exports_js_2.Queue();\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member Synthesizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member Synthesizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this Synthesizer.\n     * @member Synthesizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechSynthesizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Indicates if auto detect source language is enabled\n     * @member Synthesizer.prototype.autoDetectSourceLanguage\n     * @function\n     * @public\n     * @returns {boolean} if auto detect source language is enabled\n     */\n    get autoDetectSourceLanguage() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages) === Exports_js_1.AutoDetectSourceLanguagesOpenRangeOptionName;\n    }\n    buildSsml(text) {\n        const languageToDefaultVoice = {\n            [\"af-ZA\"]: \"af-ZA-AdriNeural\",\n            [\"am-ET\"]: \"am-ET-AmehaNeural\",\n            [\"ar-AE\"]: \"ar-AE-FatimaNeural\",\n            [\"ar-BH\"]: \"ar-BH-AliNeural\",\n            [\"ar-DZ\"]: \"ar-DZ-AminaNeural\",\n            [\"ar-EG\"]: \"ar-EG-SalmaNeural\",\n            [\"ar-IQ\"]: \"ar-IQ-BasselNeural\",\n            [\"ar-JO\"]: \"ar-JO-SanaNeural\",\n            [\"ar-KW\"]: \"ar-KW-FahedNeural\",\n            [\"ar-LY\"]: \"ar-LY-ImanNeural\",\n            [\"ar-MA\"]: \"ar-MA-JamalNeural\",\n            [\"ar-QA\"]: \"ar-QA-AmalNeural\",\n            [\"ar-SA\"]: \"ar-SA-HamedNeural\",\n            [\"ar-SY\"]: \"ar-SY-AmanyNeural\",\n            [\"ar-TN\"]: \"ar-TN-HediNeural\",\n            [\"ar-YE\"]: \"ar-YE-MaryamNeural\",\n            [\"bg-BG\"]: \"bg-BG-BorislavNeural\",\n            [\"bn-BD\"]: \"bn-BD-NabanitaNeural\",\n            [\"bn-IN\"]: \"bn-IN-BashkarNeural\",\n            [\"ca-ES\"]: \"ca-ES-JoanaNeural\",\n            [\"cs-CZ\"]: \"cs-CZ-AntoninNeural\",\n            [\"cy-GB\"]: \"cy-GB-AledNeural\",\n            [\"da-DK\"]: \"da-DK-ChristelNeural\",\n            [\"de-AT\"]: \"de-AT-IngridNeural\",\n            [\"de-CH\"]: \"de-CH-JanNeural\",\n            [\"de-DE\"]: \"de-DE-KatjaNeural\",\n            [\"el-GR\"]: \"el-GR-AthinaNeural\",\n            [\"en-AU\"]: \"en-AU-NatashaNeural\",\n            [\"en-CA\"]: \"en-CA-ClaraNeural\",\n            [\"en-GB\"]: \"en-GB-LibbyNeural\",\n            [\"en-HK\"]: \"en-HK-SamNeural\",\n            [\"en-IE\"]: \"en-IE-ConnorNeural\",\n            [\"en-IN\"]: \"en-IN-NeerjaNeural\",\n            [\"en-KE\"]: \"en-KE-AsiliaNeural\",\n            [\"en-NG\"]: \"en-NG-AbeoNeural\",\n            [\"en-NZ\"]: \"en-NZ-MitchellNeural\",\n            [\"en-PH\"]: \"en-PH-JamesNeural\",\n            [\"en-SG\"]: \"en-SG-LunaNeural\",\n            [\"en-TZ\"]: \"en-TZ-ElimuNeural\",\n            [\"en-US\"]: \"en-US-AvaMultilingualNeural\",\n            [\"en-ZA\"]: \"en-ZA-LeahNeural\",\n            [\"es-AR\"]: \"es-AR-ElenaNeural\",\n            [\"es-BO\"]: \"es-BO-MarceloNeural\",\n            [\"es-CL\"]: \"es-CL-CatalinaNeural\",\n            [\"es-CO\"]: \"es-CO-GonzaloNeural\",\n            [\"es-CR\"]: \"es-CR-JuanNeural\",\n            [\"es-CU\"]: \"es-CU-BelkysNeural\",\n            [\"es-DO\"]: \"es-DO-EmilioNeural\",\n            [\"es-EC\"]: \"es-EC-AndreaNeural\",\n            [\"es-ES\"]: \"es-ES-AlvaroNeural\",\n            [\"es-GQ\"]: \"es-GQ-JavierNeural\",\n            [\"es-GT\"]: \"es-GT-AndresNeural\",\n            [\"es-HN\"]: \"es-HN-CarlosNeural\",\n            [\"es-MX\"]: \"es-MX-DaliaNeural\",\n            [\"es-NI\"]: \"es-NI-FedericoNeural\",\n            [\"es-PA\"]: \"es-PA-MargaritaNeural\",\n            [\"es-PE\"]: \"es-PE-AlexNeural\",\n            [\"es-PR\"]: \"es-PR-KarinaNeural\",\n            [\"es-PY\"]: \"es-PY-MarioNeural\",\n            [\"es-SV\"]: \"es-SV-LorenaNeural\",\n            [\"es-US\"]: \"es-US-AlonsoNeural\",\n            [\"es-UY\"]: \"es-UY-MateoNeural\",\n            [\"es-VE\"]: \"es-VE-PaolaNeural\",\n            [\"et-EE\"]: \"et-EE-AnuNeural\",\n            [\"fa-IR\"]: \"fa-IR-DilaraNeural\",\n            [\"fi-FI\"]: \"fi-FI-SelmaNeural\",\n            [\"fil-PH\"]: \"fil-PH-AngeloNeural\",\n            [\"fr-BE\"]: \"fr-BE-CharlineNeural\",\n            [\"fr-CA\"]: \"fr-CA-SylvieNeural\",\n            [\"fr-CH\"]: \"fr-CH-ArianeNeural\",\n            [\"fr-FR\"]: \"fr-FR-DeniseNeural\",\n            [\"ga-IE\"]: \"ga-IE-ColmNeural\",\n            [\"gl-ES\"]: \"gl-ES-RoiNeural\",\n            [\"gu-IN\"]: \"gu-IN-DhwaniNeural\",\n            [\"he-IL\"]: \"he-IL-AvriNeural\",\n            [\"hi-IN\"]: \"hi-IN-MadhurNeural\",\n            [\"hr-HR\"]: \"hr-HR-GabrijelaNeural\",\n            [\"hu-HU\"]: \"hu-HU-NoemiNeural\",\n            [\"id-ID\"]: \"id-ID-ArdiNeural\",\n            [\"is-IS\"]: \"is-IS-GudrunNeural\",\n            [\"it-IT\"]: \"it-IT-IsabellaNeural\",\n            [\"ja-JP\"]: \"ja-JP-NanamiNeural\",\n            [\"jv-ID\"]: \"jv-ID-DimasNeural\",\n            [\"kk-KZ\"]: \"kk-KZ-AigulNeural\",\n            [\"km-KH\"]: \"km-KH-PisethNeural\",\n            [\"kn-IN\"]: \"kn-IN-GaganNeural\",\n            [\"ko-KR\"]: \"ko-KR-SunHiNeural\",\n            [\"lo-LA\"]: \"lo-LA-ChanthavongNeural\",\n            [\"lt-LT\"]: \"lt-LT-LeonasNeural\",\n            [\"lv-LV\"]: \"lv-LV-EveritaNeural\",\n            [\"mk-MK\"]: \"mk-MK-AleksandarNeural\",\n            [\"ml-IN\"]: \"ml-IN-MidhunNeural\",\n            [\"mr-IN\"]: \"mr-IN-AarohiNeural\",\n            [\"ms-MY\"]: \"ms-MY-OsmanNeural\",\n            [\"mt-MT\"]: \"mt-MT-GraceNeural\",\n            [\"my-MM\"]: \"my-MM-NilarNeural\",\n            [\"nb-NO\"]: \"nb-NO-PernilleNeural\",\n            [\"nl-BE\"]: \"nl-BE-ArnaudNeural\",\n            [\"nl-NL\"]: \"nl-NL-ColetteNeural\",\n            [\"pl-PL\"]: \"pl-PL-AgnieszkaNeural\",\n            [\"ps-AF\"]: \"ps-AF-GulNawazNeural\",\n            [\"pt-BR\"]: \"pt-BR-FranciscaNeural\",\n            [\"pt-PT\"]: \"pt-PT-DuarteNeural\",\n            [\"ro-RO\"]: \"ro-RO-AlinaNeural\",\n            [\"ru-RU\"]: \"ru-RU-SvetlanaNeural\",\n            [\"si-LK\"]: \"si-LK-SameeraNeural\",\n            [\"sk-SK\"]: \"sk-SK-LukasNeural\",\n            [\"sl-SI\"]: \"sl-SI-PetraNeural\",\n            [\"so-SO\"]: \"so-SO-MuuseNeural\",\n            [\"sr-RS\"]: \"sr-RS-NicholasNeural\",\n            [\"su-ID\"]: \"su-ID-JajangNeural\",\n            [\"sv-SE\"]: \"sv-SE-SofieNeural\",\n            [\"sw-KE\"]: \"sw-KE-RafikiNeural\",\n            [\"sw-TZ\"]: \"sw-TZ-DaudiNeural\",\n            [\"ta-IN\"]: \"ta-IN-PallaviNeural\",\n            [\"ta-LK\"]: \"ta-LK-KumarNeural\",\n            [\"ta-SG\"]: \"ta-SG-AnbuNeural\",\n            [\"te-IN\"]: \"te-IN-MohanNeural\",\n            [\"th-TH\"]: \"th-TH-PremwadeeNeural\",\n            [\"tr-TR\"]: \"tr-TR-AhmetNeural\",\n            [\"uk-UA\"]: \"uk-UA-OstapNeural\",\n            [\"ur-IN\"]: \"ur-IN-GulNeural\",\n            [\"ur-PK\"]: \"ur-PK-AsadNeural\",\n            [\"uz-UZ\"]: \"uz-UZ-MadinaNeural\",\n            [\"vi-VN\"]: \"vi-VN-HoaiMyNeural\",\n            [\"zh-CN\"]: \"zh-CN-XiaoxiaoNeural\",\n            [\"zh-HK\"]: \"zh-HK-HiuMaanNeural\",\n            [\"zh-TW\"]: \"zh-TW-HsiaoChenNeural\",\n            [\"zu-ZA\"]: \"zu-ZA-ThandoNeural\",\n        };\n        let language = this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SynthLanguage, \"en-US\");\n        let voice = this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_SynthVoice, \"\");\n        let ssml = Synthesizer.XMLEncode(text);\n        if (this.autoDetectSourceLanguage) {\n            language = \"en-US\";\n        }\n        else {\n            voice = voice || languageToDefaultVoice[language];\n        }\n        if (voice) {\n            ssml = `<voice name='${voice}'>${ssml}</voice>`;\n        }\n        ssml = `<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xmlns:mstts='http://www.w3.org/2001/mstts' xmlns:emo='http://www.w3.org/2009/10/emotionml' xml:lang='${language}'>${ssml}</speak>`;\n        return ssml;\n    }\n    /**\n     * This method performs cleanup of resources.\n     * The Boolean parameter disposing indicates whether the method is called\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\n     * Derived classes should override this method to dispose resource if needed.\n     * @member Synthesizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - Flag to request disposal.\n     */\n    async dispose(disposing) {\n        if (this.privDisposed) {\n            return;\n        }\n        if (disposing) {\n            if (this.privAdapter) {\n                await this.privAdapter.dispose();\n            }\n        }\n        this.privDisposed = true;\n    }\n    async adapterSpeak() {\n        if (!this.privDisposed && !this.privSynthesizing) {\n            this.privSynthesizing = true;\n            const request = await this.synthesisRequestQueue.dequeue();\n            return this.privAdapter.Speak(request.text, request.isSSML, request.requestId, request.cb, request.err, request.dataStream);\n        }\n    }\n    createSynthesizerConfig(speechConfig) {\n        return new Exports_js_1.SynthesizerConfig(speechConfig, this.privProperties);\n    }\n    // Does the generic synthesizer setup that is common across all synthesizer types.\n    implCommonSynthesizeSetup() {\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\n        let osName = \"unknown\";\n        let osVersion = \"unknown\";\n        if (typeof navigator !== \"undefined\") {\n            osPlatform = osPlatform + \"/\" + navigator.platform;\n            osName = navigator.userAgent;\n            osVersion = navigator.appVersion;\n        }\n        const synthesizerConfig = this.createSynthesizerConfig(new Exports_js_1.SpeechServiceConfig(new Exports_js_1.Context(new Exports_js_1.OS(osPlatform, osName, osVersion))));\n        const subscriptionKey = this.privProperties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_Key, undefined);\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\n            new Exports_js_1.CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\n            new Exports_js_1.CognitiveTokenAuthentication(() => {\n                const authorizationToken = this.privProperties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n                return Promise.resolve(authorizationToken);\n            }, () => {\n                const authorizationToken = this.privProperties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, undefined);\n                return Promise.resolve(authorizationToken);\n            });\n        this.privAdapter = this.createSynthesisAdapter(authentication, this.privConnectionFactory, synthesizerConfig);\n        this.privRestAdapter = this.createRestSynthesisAdapter(authentication, synthesizerConfig);\n    }\n    static XMLEncode(text) {\n        return text.replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&apos;\");\n    }\n}\nexports.Synthesizer = Synthesizer;\nclass SynthesisRequest {\n    constructor(requestId, text, isSSML, cb, err, dataStream) {\n        this.requestId = requestId;\n        this.text = text;\n        this.isSSML = isSSML;\n        this.cb = cb;\n        this.err = err;\n        this.dataStream = dataStream;\n    }\n}\nexports.SynthesisRequest = SynthesisRequest;\n\n//# sourceMappingURL=Synthesizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Synthesizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Conversation.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Conversation.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationImpl = exports.Conversation = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nclass Conversation {\n    constructor() {\n        return;\n    }\n    /**\n     * Create a conversation\n     * @param speechConfig\n     * @param cb\n     * @param err\n     */\n    static createConversationAsync(speechConfig, arg2, arg3, arg4) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"config\"));\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig.region, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Region\"));\n        if (!speechConfig.subscriptionKey && !speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceAuthorization_Token])) {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig.subscriptionKey, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Key\"));\n        }\n        let conversationImpl;\n        let cb;\n        let err;\n        if (typeof arg2 === \"string\") {\n            conversationImpl = new ConversationImpl(speechConfig, arg2);\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            Exports_js_2.marshalPromiseToCallbacks((async () => { })(), arg3, arg4);\n        }\n        else {\n            conversationImpl = new ConversationImpl(speechConfig);\n            cb = arg2;\n            err = arg3;\n            conversationImpl.createConversationAsync((() => {\n                if (!!cb) {\n                    cb();\n                }\n            }), (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        return conversationImpl;\n    }\n}\nexports.Conversation = Conversation;\nclass ConversationImpl extends Conversation {\n    /**\n     * Create a conversation impl\n     * @param speechConfig\n     * @param {string} id - optional conversationId\n     */\n    constructor(speechConfig, id) {\n        super();\n        this.privErrors = Exports_js_1.ConversationConnectionConfig.restErrors;\n        /** websocket callbacks */\n        /* eslint-disable @typescript-eslint/typedef */\n        this.onConnected = (e) => {\n            this.privIsConnected = true;\n            try {\n                if (!!this.privConversationTranslator?.sessionStarted) {\n                    this.privConversationTranslator.sessionStarted(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onDisconnected = (e) => {\n            try {\n                if (!!this.privConversationTranslator?.sessionStopped) {\n                    this.privConversationTranslator.sessionStopped(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n            finally {\n                void this.close(false);\n            }\n        };\n        this.onCanceled = (r, e) => {\n            try {\n                if (!!this.privConversationTranslator?.canceled) {\n                    this.privConversationTranslator.canceled(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantUpdateCommandReceived = (r, e) => {\n            try {\n                const updatedParticipant = this.privParticipants.getParticipant(e.id);\n                if (updatedParticipant !== undefined) {\n                    switch (e.key) {\n                        case Exports_js_1.ConversationTranslatorCommandTypes.changeNickname:\n                            updatedParticipant.displayName = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setUseTTS:\n                            updatedParticipant.isUsingTts = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setProfanityFiltering:\n                            updatedParticipant.profanity = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setMute:\n                            updatedParticipant.isMuted = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages:\n                            updatedParticipant.translateToLanguages = e.value;\n                            break;\n                    }\n                    this.privParticipants.addOrUpdateParticipant(updatedParticipant);\n                    if (!!this.privConversationTranslator) {\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.Updated, [this.toParticipant(updatedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onLockRoomCommandReceived = () => {\n            // TODO\n        };\n        this.onMuteAllCommandReceived = (r, e) => {\n            try {\n                this.privParticipants.participants.forEach((p) => p.isMuted = (p.isHost ? false : e.isMuted));\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.Updated, this.toParticipants(false), e.sessionId));\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantJoinCommandReceived = (r, e) => {\n            try {\n                const newParticipant = this.privParticipants.addOrUpdateParticipant(e.participant);\n                if (newParticipant !== undefined) {\n                    if (!!this.privConversationTranslator) {\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.JoinedConversation, [this.toParticipant(newParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantLeaveCommandReceived = (r, e) => {\n            try {\n                const ejectedParticipant = this.privParticipants.getParticipant(e.participant.id);\n                if (ejectedParticipant !== undefined) {\n                    // remove the participant from the internal participants list\n                    this.privParticipants.deleteParticipant(e.participant.id);\n                    if (!!this.privConversationTranslator) {\n                        // notify subscribers that the participant has left the conversation\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.LeftConversation, [this.toParticipant(ejectedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onTranslationReceived = (r, e) => {\n            try {\n                switch (e.command) {\n                    case Exports_js_1.ConversationTranslatorMessageTypes.final:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.transcribed(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case Exports_js_1.ConversationTranslatorMessageTypes.partial:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.transcribing(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case Exports_js_1.ConversationTranslatorMessageTypes.instantMessage:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.textMessageReceived(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantsListReceived = (r, e) => {\n            try {\n                // check if the session token needs to be updated\n                if (e.sessionToken !== undefined && e.sessionToken !== null) {\n                    this.privRoom.token = e.sessionToken;\n                }\n                // save the participants\n                this.privParticipants.participants = [...e.participants];\n                // enable the conversation\n                if (this.privParticipants.me !== undefined) {\n                    this.privIsReady = true;\n                }\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.JoinedConversation, this.toParticipants(true), e.sessionId));\n                }\n                // if this is the host, update the nickname if needed\n                if (this.me.isHost) {\n                    const nickname = this.privConversationTranslator?.properties.getProperty(Exports_js_3.PropertyId.ConversationTranslator_Name);\n                    if (nickname !== undefined && nickname.length > 0 && nickname !== this.me.displayName) {\n                        // issue a change nickname request\n                        this.changeNicknameAsync(nickname);\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onConversationExpiration = (r, e) => {\n            try {\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.conversationExpiration(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.privIsConnected = false;\n        this.privIsDisposed = false;\n        this.privConversationId = \"\";\n        this.privProperties = new Exports_js_3.PropertyCollection();\n        this.privManager = new Exports_js_1.ConversationManager();\n        // check the speech language\n        const language = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        if (!language) {\n            speechConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage], Exports_js_1.ConversationConnectionConfig.defaultLanguageCode);\n        }\n        this.privLanguage = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        if (!id) {\n            // check the target language(s)\n            if (speechConfig.targetLanguages.length === 0) {\n                speechConfig.addTargetLanguage(this.privLanguage);\n            }\n            // check the profanity setting: speech and conversationTranslator should be in sync\n            const profanity = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceResponse_ProfanityOption]);\n            if (!profanity) {\n                speechConfig.setProfanity(Exports_js_3.ProfanityOption.Masked);\n            }\n            // check the nickname: it should pass this regex: ^\\w+([\\s-][\\w\\(\\)]+)*$\"\n            // TODO: specify the regex required. Nicknames must be unique or get the duplicate nickname error\n            // TODO: check what the max length is and if a truncation is required or if the service handles it without an error\n            let hostNickname = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.ConversationTranslator_Name]);\n            if (hostNickname === undefined || hostNickname === null) {\n                hostNickname = \"Host\";\n            }\n            Contracts_js_1.Contracts.throwIfNullOrTooLong(hostNickname, \"nickname\", 50);\n            Contracts_js_1.Contracts.throwIfNullOrTooShort(hostNickname, \"nickname\", 2);\n            speechConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.ConversationTranslator_Name], hostNickname);\n        }\n        else {\n            this.privConversationId = id;\n        }\n        // save the speech config for future usage\n        this.privConfig = speechConfig;\n        // save the config properties\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(configImpl, \"speechConfig\");\n        this.privProperties = configImpl.properties.clone();\n        this.privIsConnected = false;\n        this.privParticipants = new Exports_js_1.InternalParticipants();\n        this.privIsReady = false;\n        this.privTextMessageMaxLength = 1000;\n    }\n    // get the internal data about a conversation\n    get room() {\n        return this.privRoom;\n    }\n    // get the wrapper for connecting to the websockets\n    get connection() {\n        return this.privConversationRecognizer; // this.privConnection;\n    }\n    // get the config\n    get config() {\n        return this.privConfig;\n    }\n    // get the conversation Id\n    get conversationId() {\n        return this.privRoom ? this.privRoom.roomId : this.privConversationId;\n    }\n    // get the properties\n    get properties() {\n        return this.privProperties;\n    }\n    // get the speech language\n    get speechRecognitionLanguage() {\n        return this.privLanguage;\n    }\n    get isMutedByHost() {\n        return this.privParticipants.me?.isHost ? false : this.privParticipants.me?.isMuted;\n    }\n    get isConnected() {\n        return this.privIsConnected && this.privIsReady;\n    }\n    get participants() {\n        return this.toParticipants(true);\n    }\n    get me() {\n        return this.toParticipant(this.privParticipants.me);\n    }\n    get host() {\n        return this.toParticipant(this.privParticipants.host);\n    }\n    get transcriberRecognizer() {\n        return this.privTranscriberRecognizer;\n    }\n    get conversationInfo() {\n        const convId = this.conversationId;\n        const p = this.participants.map((part) => ({\n            id: part.id,\n            preferredLanguage: part.preferredLanguage,\n            voice: part.voice\n        }));\n        const props = {};\n        for (const key of Exports_js_1.ConversationConnectionConfig.transcriptionEventKeys) {\n            const val = this.properties.getProperty(key, \"\");\n            if (val !== \"\") {\n                props[key] = val;\n            }\n        }\n        const info = { id: convId, participants: p, conversationProperties: props };\n        return info;\n    }\n    get canSend() {\n        return this.privIsConnected && !this.privParticipants.me?.isMuted;\n    }\n    get canSendAsHost() {\n        return this.privIsConnected && this.privParticipants.me?.isHost;\n    }\n    // get / set the speech auth token\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    get authorizationToken() {\n        return this.privToken;\n    }\n    set authorizationToken(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"authorizationToken\");\n        this.privToken = value;\n    }\n    set conversationTranslator(conversationTranslator) {\n        this.privConversationTranslator = conversationTranslator;\n    }\n    onToken(token) {\n        this.privConversationTranslator.onToken(token);\n    }\n    /**\n     * Create a new conversation as Host\n     * @param cb\n     * @param err\n     */\n    createConversationAsync(cb, err) {\n        try {\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            this.privManager.createOrJoin(this.privProperties, undefined, ((room) => {\n                if (!room) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedConnect), err);\n                }\n                this.privRoom = room;\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Starts a new conversation as host.\n     * @param cb\n     * @param err\n     */\n    startConversationAsync(cb, err) {\n        try {\n            // check if there is already a recognizer\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            // check if there is conversation data available\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedConnect);\n            // connect to the conversation websocket\n            this.privParticipants.meId = this.privRoom.participantId;\n            this.privConversationRecognizer = Exports_js_1.ConversationRecognizerFactory.fromConfig(this, this.privConfig);\n            // Because ConversationTranslator manually sets up and manages the connection, Conversation\n            // has to forward serviceRecognizer connection events that usually get passed automatically\n            this.privConversationRecognizer.connected = this.onConnected;\n            this.privConversationRecognizer.disconnected = this.onDisconnected;\n            this.privConversationRecognizer.canceled = this.onCanceled;\n            this.privConversationRecognizer.participantUpdateCommandReceived = this.onParticipantUpdateCommandReceived;\n            this.privConversationRecognizer.lockRoomCommandReceived = this.onLockRoomCommandReceived;\n            this.privConversationRecognizer.muteAllCommandReceived = this.onMuteAllCommandReceived;\n            this.privConversationRecognizer.participantJoinCommandReceived = this.onParticipantJoinCommandReceived;\n            this.privConversationRecognizer.participantLeaveCommandReceived = this.onParticipantLeaveCommandReceived;\n            this.privConversationRecognizer.translationReceived = this.onTranslationReceived;\n            this.privConversationRecognizer.participantsListReceived = this.onParticipantsListReceived;\n            this.privConversationRecognizer.conversationExpiration = this.onConversationExpiration;\n            this.privConversationRecognizer.connect(this.privRoom.token, (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Join a conversation as a participant.\n     * @param { IParticipant } participant - participant to add\n     * @param cb\n     * @param err\n     */\n    addParticipantAsync(participant, cb, err) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(participant, \"Participant\");\n        Exports_js_2.marshalPromiseToCallbacks(this.addParticipantImplAsync(participant), cb, err);\n    }\n    /**\n     * Join a conversation as a participant.\n     * @param conversation\n     * @param nickname\n     * @param lang\n     * @param cb\n     * @param err\n     */\n    joinConversationAsync(conversationId, nickname, lang, cb, err) {\n        try {\n            // TODO\n            // if (!!this.privConversationRecognizer) {\n            //     throw new Error(this.privErrors.permissionDeniedStart);\n            // }\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(conversationId, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversationId\"));\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(lang, this.privErrors.invalidArgs.replace(\"{arg}\", \"language\"));\n            // join the conversation\n            this.privManager.createOrJoin(this.privProperties, conversationId, ((room) => {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(room, this.privErrors.permissionDeniedConnect);\n                this.privRoom = room;\n                this.privConfig.authorizationToken = room.cognitiveSpeechAuthToken;\n                // join callback\n                if (!!cb) {\n                    cb(room.cognitiveSpeechAuthToken);\n                }\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Deletes a conversation\n     * @param cb\n     * @param err\n     */\n    deleteConversationAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.deleteConversationImplAsync(), cb, err);\n    }\n    async deleteConversationImplAsync() {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privProperties, this.privErrors.permissionDeniedConnect);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.token, this.privErrors.permissionDeniedConnect);\n        await this.privManager.leave(this.privProperties, this.privRoom.token);\n        this.dispose();\n    }\n    /**\n     * Issues a request to close the client websockets\n     * @param cb\n     * @param err\n     */\n    endConversationAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.endConversationImplAsync(), cb, err);\n    }\n    endConversationImplAsync() {\n        return this.close(true);\n    }\n    /**\n     * Issues a request to lock the conversation\n     * @param cb\n     * @param err\n     */\n    lockConversationAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"lock\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute the conversation\n     * @param cb\n     * @param err\n     */\n    muteAllParticipantsAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversationRecognizer, this.privErrors.permissionDeniedSend);\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the user's permissions\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"mute\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute a participant in the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    muteParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to remove a participant from the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    removeParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            if (!!this.privTranscriberRecognizer && userId.hasOwnProperty(\"id\")) {\n                // Assume this is a transcription participant\n                Exports_js_2.marshalPromiseToCallbacks(this.removeParticipantImplAsync(userId), cb, err);\n            }\n            else {\n                Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n                if (!this.canSendAsHost) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"remove\")), err);\n                }\n                let participantId = \"\";\n                if (typeof userId === \"string\") {\n                    participantId = userId;\n                }\n                else if (userId.hasOwnProperty(\"id\")) {\n                    const participant = userId;\n                    participantId = participant.id;\n                }\n                else if (userId.hasOwnProperty(\"userId\")) {\n                    const user = userId;\n                    participantId = user.userId;\n                }\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n                // check the participant exists\n                const index = this.participants.findIndex((p) => p.id === participantId);\n                if (index === -1) {\n                    this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n                }\n                if (!!this.privConversationRecognizer) {\n                    this.privConversationRecognizer.sendRequest(this.getEjectCommand(participantId), (() => {\n                        this.handleCallback(cb, err);\n                    }), ((error) => {\n                        this.handleError(error, err);\n                    }));\n                }\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unlock the conversation\n     * @param cb\n     * @param err\n     */\n    unlockConversationAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unlock\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute all participants in the conversation\n     * @param cb\n     * @param err\n     */\n    unmuteAllParticipantsAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unmute all\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute a participant in the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    unmuteParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Send a text message\n     * @param message\n     * @param cb\n     * @param err\n     */\n    sendTextMessageAsync(message, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", \"message\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // TODO: is a max length check required?\n            if (message.length > this.privTextMessageMaxLength) {\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"message length\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMessageCommand(message), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Set translated to languages\n     * @param {string[]} languages - languages to translate to\n     * @param cb\n     * @param err\n     */\n    setTranslatedLanguagesAsync(languages, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfArrayEmptyOrWhitespace(languages, this.privErrors.invalidArgs.replace(\"{arg}\", \"languages\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getSetTranslateToLanguagesCommand(languages), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Change nickname\n     * @param {string} nickname - new nickname for the room\n     * @param cb\n     * @param err\n     */\n    changeNicknameAsync(nickname, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getChangeNicknameCommand(nickname), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.privIsDisposed = true;\n        if (!!this.config) {\n            this.config.close();\n        }\n        this.privConfig = undefined;\n        this.privLanguage = undefined;\n        this.privProperties = undefined;\n        this.privRoom = undefined;\n        this.privToken = undefined;\n        this.privManager = undefined;\n        this.privIsConnected = false;\n        this.privIsReady = false;\n        this.privParticipants = undefined;\n    }\n    async connectTranscriberRecognizer(recognizer) {\n        if (!!this.privTranscriberRecognizer) {\n            await this.privTranscriberRecognizer.close();\n        }\n        await recognizer.enforceAudioGating();\n        this.privTranscriberRecognizer = recognizer;\n        this.privTranscriberRecognizer.conversation = this;\n    }\n    getKeepAlive() {\n        const nickname = (!!this.me) ? this.me.displayName : \"default_nickname\";\n        return JSON.stringify({\n            id: \"0\",\n            nickname,\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.keepAlive\n        });\n    }\n    /* eslint-enable @typescript-eslint/typedef */\n    addParticipantImplAsync(participant) {\n        const newParticipant = this.privParticipants.addOrUpdateParticipant(participant);\n        if (newParticipant !== undefined) {\n            if (!!this.privTranscriberRecognizer) {\n                const conversationInfo = this.conversationInfo;\n                conversationInfo.participants = [participant];\n                return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"join\");\n            }\n        }\n    }\n    removeParticipantImplAsync(participant) {\n        this.privParticipants.deleteParticipant(participant.id);\n        const conversationInfo = this.conversationInfo;\n        conversationInfo.participants = [participant];\n        return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"leave\");\n    }\n    async close(dispose) {\n        try {\n            this.privIsConnected = false;\n            await this.privConversationRecognizer?.close();\n            this.privConversationRecognizer = undefined;\n            if (!!this.privConversationTranslator) {\n                this.privConversationTranslator.dispose();\n            }\n        }\n        catch (e) {\n            // ignore error\n            throw e;\n        }\n        if (dispose) {\n            this.dispose();\n        }\n    }\n    /** Helpers */\n    handleCallback(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n            cb = undefined;\n        }\n    }\n    handleError(error, err) {\n        if (!!err) {\n            if (error instanceof Error) {\n                const typedError = error;\n                err(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                err(error);\n            }\n        }\n    }\n    /** Participant Helpers */\n    toParticipants(includeHost) {\n        const participants = this.privParticipants.participants.map((p) => (this.toParticipant(p)));\n        if (!includeHost) {\n            return participants.filter((p) => p.isHost === false);\n        }\n        else {\n            return participants;\n        }\n    }\n    toParticipant(p) {\n        return new Exports_js_3.Participant(p.id, p.avatar, p.displayName, p.isHost, p.isMuted, p.isUsingTts, p.preferredLanguage, p.voice);\n    }\n    getMuteAllCommand(isMuted) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setMuteAll,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getMuteCommand(participantId, isMuted) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setMute,\n            // eslint-disable-next-line object-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getLockCommand(isLocked) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setLockState,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isLocked\n        });\n    }\n    getEjectCommand(participantId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.ejectParticipant,\n            // eslint-disable-next-line object-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n        });\n    }\n    getSetTranslateToLanguagesCommand(languages) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: languages\n        });\n    }\n    getChangeNicknameCommand(nickname) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.changeNickname,\n            nickname,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: nickname\n        });\n    }\n    getMessageCommand(message) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, \"message\");\n        return JSON.stringify({\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            text: message,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.instantMessage\n        });\n    }\n}\nexports.ConversationImpl = ConversationImpl;\n\n//# sourceMappingURL=Conversation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Conversation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationCommon.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationCommon.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationCommon = void 0;\nclass ConversationCommon {\n    constructor(audioConfig) {\n        this.privAudioConfig = audioConfig;\n    }\n    handleCallback(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n            cb = undefined;\n        }\n    }\n    handleError(error, err) {\n        if (!!err) {\n            if (error instanceof Error) {\n                const typedError = error;\n                err(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                err(error);\n            }\n        }\n    }\n}\nexports.ConversationCommon = ConversationCommon;\n\n//# sourceMappingURL=ConversationCommon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvbkNvbW1vbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7O0FBRTFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvbkNvbW1vbi5qcz85Y2UyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnZlcnNhdGlvbkNvbW1vbiA9IHZvaWQgMDtcbmNsYXNzIENvbnZlcnNhdGlvbkNvbW1vbiB7XG4gICAgY29uc3RydWN0b3IoYXVkaW9Db25maWcpIHtcbiAgICAgICAgdGhpcy5wcml2QXVkaW9Db25maWcgPSBhdWRpb0NvbmZpZztcbiAgICB9XG4gICAgaGFuZGxlQ2FsbGJhY2soY2IsIGVycikge1xuICAgICAgICBpZiAoISFjYikge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjYigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoISFlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgZXJyKGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNiID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxuICAgIGhhbmRsZUVycm9yKGVycm9yLCBlcnIpIHtcbiAgICAgICAgaWYgKCEhZXJyKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHR5cGVkRXJyb3IgPSBlcnJvcjtcbiAgICAgICAgICAgICAgICBlcnIodHlwZWRFcnJvci5uYW1lICsgXCI6IFwiICsgdHlwZWRFcnJvci5tZXNzYWdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGVycihlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkNvbnZlcnNhdGlvbkNvbW1vbiA9IENvbnZlcnNhdGlvbkNvbW1vbjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29udmVyc2F0aW9uQ29tbW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationCommon.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationExpirationEventArgs.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationExpirationEventArgs.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationExpirationEventArgs = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nclass ConversationExpirationEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(expirationTime, sessionId) {\n        super(sessionId);\n        this.privExpirationTime = expirationTime;\n    }\n    /** How much longer until the conversation expires (in minutes). */\n    get expirationTime() {\n        return this.privExpirationTime;\n    }\n}\nexports.ConversationExpirationEventArgs = ConversationExpirationEventArgs;\n\n//# sourceMappingURL=ConversationExpirationEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvbkV4cGlyYXRpb25FdmVudEFyZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUNBQXVDO0FBQ3ZDLHFCQUFxQixtQkFBTyxDQUFDLGlIQUFlO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDOztBQUV2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25FeHBpcmF0aW9uRXZlbnRBcmdzLmpzP2Q2ZDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8vIE11bHRpLWRldmljZSBDb252ZXJzYXRpb24gaXMgYSBQcmV2aWV3IGZlYXR1cmUuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnZlcnNhdGlvbkV4cGlyYXRpb25FdmVudEFyZ3MgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vRXhwb3J0cy5qc1wiKTtcbmNsYXNzIENvbnZlcnNhdGlvbkV4cGlyYXRpb25FdmVudEFyZ3MgZXh0ZW5kcyBFeHBvcnRzX2pzXzEuU2Vzc2lvbkV2ZW50QXJncyB7XG4gICAgY29uc3RydWN0b3IoZXhwaXJhdGlvblRpbWUsIHNlc3Npb25JZCkge1xuICAgICAgICBzdXBlcihzZXNzaW9uSWQpO1xuICAgICAgICB0aGlzLnByaXZFeHBpcmF0aW9uVGltZSA9IGV4cGlyYXRpb25UaW1lO1xuICAgIH1cbiAgICAvKiogSG93IG11Y2ggbG9uZ2VyIHVudGlsIHRoZSBjb252ZXJzYXRpb24gZXhwaXJlcyAoaW4gbWludXRlcykuICovXG4gICAgZ2V0IGV4cGlyYXRpb25UaW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RXhwaXJhdGlvblRpbWU7XG4gICAgfVxufVxuZXhwb3J0cy5Db252ZXJzYXRpb25FeHBpcmF0aW9uRXZlbnRBcmdzID0gQ29udmVyc2F0aW9uRXhwaXJhdGlvbkV2ZW50QXJncztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29udmVyc2F0aW9uRXhwaXJhdGlvbkV2ZW50QXJncy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationExpirationEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationParticipantsChangedEventArgs.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationParticipantsChangedEventArgs.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationParticipantsChangedEventArgs = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nclass ConversationParticipantsChangedEventArgs extends Exports_js_1.SessionEventArgs {\n    constructor(reason, participants, sessionId) {\n        super(sessionId);\n        this.privReason = reason;\n        this.privParticipant = participants;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get participants() {\n        return this.privParticipant;\n    }\n}\nexports.ConversationParticipantsChangedEventArgs = ConversationParticipantsChangedEventArgs;\n\n//# sourceMappingURL=ConversationParticipantsChangedEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvblBhcnRpY2lwYW50c0NoYW5nZWRFdmVudEFyZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0RBQWdEO0FBQ2hELHFCQUFxQixtQkFBTyxDQUFDLGlIQUFlO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEOztBQUVoRCIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25QYXJ0aWNpcGFudHNDaGFuZ2VkRXZlbnRBcmdzLmpzPzRlMWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8vIE11bHRpLWRldmljZSBDb252ZXJzYXRpb24gaXMgYSBQcmV2aWV3IGZlYXR1cmUuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnZlcnNhdGlvblBhcnRpY2lwYW50c0NoYW5nZWRFdmVudEFyZ3MgPSB2b2lkIDA7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vRXhwb3J0cy5qc1wiKTtcbmNsYXNzIENvbnZlcnNhdGlvblBhcnRpY2lwYW50c0NoYW5nZWRFdmVudEFyZ3MgZXh0ZW5kcyBFeHBvcnRzX2pzXzEuU2Vzc2lvbkV2ZW50QXJncyB7XG4gICAgY29uc3RydWN0b3IocmVhc29uLCBwYXJ0aWNpcGFudHMsIHNlc3Npb25JZCkge1xuICAgICAgICBzdXBlcihzZXNzaW9uSWQpO1xuICAgICAgICB0aGlzLnByaXZSZWFzb24gPSByZWFzb247XG4gICAgICAgIHRoaXMucHJpdlBhcnRpY2lwYW50ID0gcGFydGljaXBhbnRzO1xuICAgIH1cbiAgICBnZXQgcmVhc29uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVhc29uO1xuICAgIH1cbiAgICBnZXQgcGFydGljaXBhbnRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UGFydGljaXBhbnQ7XG4gICAgfVxufVxuZXhwb3J0cy5Db252ZXJzYXRpb25QYXJ0aWNpcGFudHNDaGFuZ2VkRXZlbnRBcmdzID0gQ29udmVyc2F0aW9uUGFydGljaXBhbnRzQ2hhbmdlZEV2ZW50QXJncztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29udmVyc2F0aW9uUGFydGljaXBhbnRzQ2hhbmdlZEV2ZW50QXJncy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationParticipantsChangedEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranscriber.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranscriber.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationTranscriber = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Performs speech recognition with speaker separation from microphone, file, or other audio input streams, and gets transcribed text as result.\n * @class ConversationTranscriber\n */\nclass ConversationTranscriber extends Exports_js_3.Recognizer {\n    /**\n     * ConversationTranscriber constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(speechConfigImpl.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        super(audioConfig, speechConfigImpl.properties, new Exports_js_1.ConversationTranscriberConnectionFactory());\n        this.privProperties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"2\");\n        this.privDisposedRecognizer = false;\n    }\n    /**\n     * ConversationTranscriber constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    static FromConfig(speechConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\n        const recognizer = new ConversationTranscriber(speechConfig, audioConfig);\n        return recognizer;\n    }\n    /**\n     * Gets the endpoint id of a customized speech model that is used for transcription.\n     * @member ConversationTranscriber.prototype.endpointId\n     * @function\n     * @public\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\n     */\n    get endpointId() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member ConversationTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member ConversationTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * Gets the spoken language of transcription.\n     * @member ConversationTranscriber.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} The spoken language of transcription.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets the output format of transcription.\n     * @member ConversationTranscriber.prototype.outputFormat\n     * @function\n     * @public\n     * @returns {OutputFormat} The output format of transcription.\n     */\n    get outputFormat() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        if (this.properties.getProperty(Exports_js_1.OutputFormatPropertyName, Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]) === Exports_js_3.OutputFormat[Exports_js_3.OutputFormat.Simple]) {\n            return Exports_js_3.OutputFormat.Simple;\n        }\n        else {\n            return Exports_js_3.OutputFormat.Detailed;\n        }\n    }\n    /**\n     * The collection of properties and their values defined for this conversation transcriber.\n     * @member ConversationTranscriber.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts conversation transcription, until stopTranscribingAsync() is called.\n     * User must subscribe to events to receive transcription results.\n     * @member ConversationTranscriber.prototype.startTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startTranscribingAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(Exports_js_1.RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops conversation transcription.\n     * @member ConversationTranscriber.prototype.stopTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopTranscribingAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member ConversationTranscriber.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        Exports_js_2.marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member SpeechRecognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    async dispose(disposing) {\n        if (this.privDisposedRecognizer) {\n            return;\n        }\n        if (disposing) {\n            this.privDisposedRecognizer = true;\n            await this.implRecognizerStop();\n        }\n        await super.dispose(disposing);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        recognizerConfig.isSpeakerDiarizationEnabled = true;\n        return new Exports_js_1.ConversationTranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n}\nexports.ConversationTranscriber = ConversationTranscriber;\n\n//# sourceMappingURL=ConversationTranscriber.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranscriber.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranscriptionResult.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranscriptionResult.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationTranscriptionResult = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines result of conversation transcription.\n * @class ConversationTranscriptionResult\n */\nclass ConversationTranscriptionResult extends Exports_js_1.RecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @public\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} speakerId - speaker id for conversation transcription.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, text, duration, offset, language, languageDetectionConfidence, speakerId, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\n        this.privSpeakerId = speakerId;\n    }\n    /**\n     * speaker id\n     * @member ConversationTranscriptionResult.prototype.speakerId\n     * @function\n     * @public\n     * @returns {string} id of speaker in given result\n     */\n    get speakerId() {\n        return this.privSpeakerId;\n    }\n}\nexports.ConversationTranscriptionResult = ConversationTranscriptionResult;\n\n//# sourceMappingURL=ConversationTranscriptionResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25SZXN1bHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVDQUF1QztBQUN2QyxxQkFBcUIsbUJBQU8sQ0FBQyxpSEFBZTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxjQUFjO0FBQzdCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxvQkFBb0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDOztBQUV2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25UcmFuc2NyaXB0aW9uUmVzdWx0LmpzPzAzYzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvblJlc3VsdCA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi9FeHBvcnRzLmpzXCIpO1xuLyoqXG4gKiBEZWZpbmVzIHJlc3VsdCBvZiBjb252ZXJzYXRpb24gdHJhbnNjcmlwdGlvbi5cbiAqIEBjbGFzcyBDb252ZXJzYXRpb25UcmFuc2NyaXB0aW9uUmVzdWx0XG4gKi9cbmNsYXNzIENvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25SZXN1bHQgZXh0ZW5kcyBFeHBvcnRzX2pzXzEuUmVjb2duaXRpb25SZXN1bHQge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSByZXN1bHRJZCAtIFRoZSByZXN1bHQgaWQuXG4gICAgICogQHBhcmFtIHtSZXN1bHRSZWFzb259IHJlYXNvbiAtIFRoZSByZWFzb24uXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQgLSBUaGUgcmVjb2duaXplZCB0ZXh0LlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBkdXJhdGlvbiAtIFRoZSBkdXJhdGlvbi5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gb2Zmc2V0IC0gVGhlIG9mZnNldCBpbnRvIHRoZSBzdHJlYW0uXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGxhbmd1YWdlIC0gUHJpbWFyeSBMYW5ndWFnZSBkZXRlY3RlZCwgaWYgcHJvdmlkZWQuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGxhbmd1YWdlRGV0ZWN0aW9uQ29uZmlkZW5jZSAtIFByaW1hcnkgTGFuZ3VhZ2UgY29uZmlkZW5jZSAoXCJVbmtub3duLFwiIFwiTG93LFwiIFwiTWVkaXVtLFwiIFwiSGlnaFwiLi4uKSwgaWYgcHJvdmlkZWQuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHNwZWFrZXJJZCAtIHNwZWFrZXIgaWQgZm9yIGNvbnZlcnNhdGlvbiB0cmFuc2NyaXB0aW9uLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBlcnJvckRldGFpbHMgLSBFcnJvciBkZXRhaWxzLCBpZiBwcm92aWRlZC5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ganNvbiAtIEFkZGl0aW9uYWwgSnNvbiwgaWYgcHJvdmlkZWQuXG4gICAgICogQHBhcmFtIHtQcm9wZXJ0eUNvbGxlY3Rpb259IHByb3BlcnRpZXMgLSBBZGRpdGlvbmFsIHByb3BlcnRpZXMsIGlmIHByb3ZpZGVkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHJlc3VsdElkLCByZWFzb24sIHRleHQsIGR1cmF0aW9uLCBvZmZzZXQsIGxhbmd1YWdlLCBsYW5ndWFnZURldGVjdGlvbkNvbmZpZGVuY2UsIHNwZWFrZXJJZCwgZXJyb3JEZXRhaWxzLCBqc29uLCBwcm9wZXJ0aWVzKSB7XG4gICAgICAgIHN1cGVyKHJlc3VsdElkLCByZWFzb24sIHRleHQsIGR1cmF0aW9uLCBvZmZzZXQsIGxhbmd1YWdlLCBsYW5ndWFnZURldGVjdGlvbkNvbmZpZGVuY2UsIGVycm9yRGV0YWlscywganNvbiwgcHJvcGVydGllcyk7XG4gICAgICAgIHRoaXMucHJpdlNwZWFrZXJJZCA9IHNwZWFrZXJJZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogc3BlYWtlciBpZFxuICAgICAqIEBtZW1iZXIgQ29udmVyc2F0aW9uVHJhbnNjcmlwdGlvblJlc3VsdC5wcm90b3R5cGUuc3BlYWtlcklkXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IGlkIG9mIHNwZWFrZXIgaW4gZ2l2ZW4gcmVzdWx0XG4gICAgICovXG4gICAgZ2V0IHNwZWFrZXJJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlNwZWFrZXJJZDtcbiAgICB9XG59XG5leHBvcnRzLkNvbnZlcnNhdGlvblRyYW5zY3JpcHRpb25SZXN1bHQgPSBDb252ZXJzYXRpb25UcmFuc2NyaXB0aW9uUmVzdWx0O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db252ZXJzYXRpb25UcmFuc2NyaXB0aW9uUmVzdWx0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranscriptionResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationCanceledEventArgs.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationCanceledEventArgs.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationTranslationCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = __webpack_require__(/*! ../CancellationEventArgsBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationEventArgsBase.js\");\nclass ConversationTranslationCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.ConversationTranslationCanceledEventArgs = ConversationTranslationCanceledEventArgs;\n\n//# sourceMappingURL=ConversationTranslationCanceledEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvblRyYW5zbGF0aW9uQ2FuY2VsZWRFdmVudEFyZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0RBQWdEO0FBQ2hELHVDQUF1QyxtQkFBTyxDQUFDLHFKQUFpQztBQUNoRjtBQUNBO0FBQ0EsZ0RBQWdEOztBQUVoRCIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvVHJhbnNjcmlwdGlvbi9Db252ZXJzYXRpb25UcmFuc2xhdGlvbkNhbmNlbGVkRXZlbnRBcmdzLmpzP2E0YzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8vIE11bHRpLWRldmljZSBDb252ZXJzYXRpb24gaXMgYSBQcmV2aWV3IGZlYXR1cmUuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnZlcnNhdGlvblRyYW5zbGF0aW9uQ2FuY2VsZWRFdmVudEFyZ3MgPSB2b2lkIDA7XG5jb25zdCBDYW5jZWxsYXRpb25FdmVudEFyZ3NCYXNlX2pzXzEgPSByZXF1aXJlKFwiLi4vQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZS5qc1wiKTtcbmNsYXNzIENvbnZlcnNhdGlvblRyYW5zbGF0aW9uQ2FuY2VsZWRFdmVudEFyZ3MgZXh0ZW5kcyBDYW5jZWxsYXRpb25FdmVudEFyZ3NCYXNlX2pzXzEuQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZSB7XG59XG5leHBvcnRzLkNvbnZlcnNhdGlvblRyYW5zbGF0aW9uQ2FuY2VsZWRFdmVudEFyZ3MgPSBDb252ZXJzYXRpb25UcmFuc2xhdGlvbkNhbmNlbGVkRXZlbnRBcmdzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db252ZXJzYXRpb25UcmFuc2xhdGlvbkNhbmNlbGVkRXZlbnRBcmdzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationCanceledEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationEventArgs.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationEventArgs.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationTranslationEventArgs = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nclass ConversationTranslationEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ConversationTranslationResult} result - The translation recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the recognition result.\n     * @returns {ConversationTranslationResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.ConversationTranslationEventArgs = ConversationTranslationEventArgs;\n\n//# sourceMappingURL=ConversationTranslationEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvblRyYW5zbGF0aW9uRXZlbnRBcmdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdDQUF3QztBQUN4QyxxQkFBcUIsbUJBQU8sQ0FBQyxpSEFBZTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0JBQStCO0FBQzlDLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0JBQStCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7O0FBRXhDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvblRyYW5zbGF0aW9uRXZlbnRBcmdzLmpzPzE0NjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8vIE11bHRpLWRldmljZSBDb252ZXJzYXRpb24gaXMgYSBQcmV2aWV3IGZlYXR1cmUuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnZlcnNhdGlvblRyYW5zbGF0aW9uRXZlbnRBcmdzID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uL0V4cG9ydHMuanNcIik7XG5jbGFzcyBDb252ZXJzYXRpb25UcmFuc2xhdGlvbkV2ZW50QXJncyBleHRlbmRzIEV4cG9ydHNfanNfMS5SZWNvZ25pdGlvbkV2ZW50QXJncyB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYW4gaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcy5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge0NvbnZlcnNhdGlvblRyYW5zbGF0aW9uUmVzdWx0fSByZXN1bHQgLSBUaGUgdHJhbnNsYXRpb24gcmVjb2duaXRpb24gcmVzdWx0LlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXQgLSBUaGUgb2Zmc2V0LlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZXNzaW9uSWQgLSBUaGUgc2Vzc2lvbiBpZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyZXN1bHQsIG9mZnNldCwgc2Vzc2lvbklkKSB7XG4gICAgICAgIHN1cGVyKG9mZnNldCwgc2Vzc2lvbklkKTtcbiAgICAgICAgdGhpcy5wcml2UmVzdWx0ID0gcmVzdWx0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIHJlY29nbml0aW9uIHJlc3VsdC5cbiAgICAgKiBAcmV0dXJucyB7Q29udmVyc2F0aW9uVHJhbnNsYXRpb25SZXN1bHR9IHRoZSByZWNvZ25pdGlvbiByZXN1bHQuXG4gICAgICovXG4gICAgZ2V0IHJlc3VsdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlJlc3VsdDtcbiAgICB9XG59XG5leHBvcnRzLkNvbnZlcnNhdGlvblRyYW5zbGF0aW9uRXZlbnRBcmdzID0gQ29udmVyc2F0aW9uVHJhbnNsYXRpb25FdmVudEFyZ3M7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnZlcnNhdGlvblRyYW5zbGF0aW9uRXZlbnRBcmdzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationResult.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationResult.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationTranslationResult = void 0;\nconst TranslationRecognitionResult_js_1 = __webpack_require__(/*! ../TranslationRecognitionResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionResult.js\");\nclass ConversationTranslationResult extends TranslationRecognitionResult_js_1.TranslationRecognitionResult {\n    constructor(participantId, translations, originalLanguage, resultId, reason, text, duration, offset, errorDetails, json, properties) {\n        super(translations, resultId, reason, text, duration, offset, undefined, undefined, errorDetails, json, properties);\n        this.privId = participantId;\n        this.privOrigLang = originalLanguage;\n    }\n    /**\n     * The unique identifier for the participant this result is for.\n     */\n    get participantId() {\n        return this.privId;\n    }\n    /**\n     * The original language this result was in.\n     */\n    get originalLang() {\n        return this.privOrigLang;\n    }\n}\nexports.ConversationTranslationResult = ConversationTranslationResult;\n\n//# sourceMappingURL=ConversationTranslationResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvblRyYW5zbGF0aW9uUmVzdWx0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFDQUFxQztBQUNyQywwQ0FBMEMsbUJBQU8sQ0FBQywySkFBb0M7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7O0FBRXJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL0NvbnZlcnNhdGlvblRyYW5zbGF0aW9uUmVzdWx0LmpzP2QxYTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8vIE11bHRpLWRldmljZSBDb252ZXJzYXRpb24gaXMgYSBQcmV2aWV3IGZlYXR1cmUuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnZlcnNhdGlvblRyYW5zbGF0aW9uUmVzdWx0ID0gdm9pZCAwO1xuY29uc3QgVHJhbnNsYXRpb25SZWNvZ25pdGlvblJlc3VsdF9qc18xID0gcmVxdWlyZShcIi4uL1RyYW5zbGF0aW9uUmVjb2duaXRpb25SZXN1bHQuanNcIik7XG5jbGFzcyBDb252ZXJzYXRpb25UcmFuc2xhdGlvblJlc3VsdCBleHRlbmRzIFRyYW5zbGF0aW9uUmVjb2duaXRpb25SZXN1bHRfanNfMS5UcmFuc2xhdGlvblJlY29nbml0aW9uUmVzdWx0IHtcbiAgICBjb25zdHJ1Y3RvcihwYXJ0aWNpcGFudElkLCB0cmFuc2xhdGlvbnMsIG9yaWdpbmFsTGFuZ3VhZ2UsIHJlc3VsdElkLCByZWFzb24sIHRleHQsIGR1cmF0aW9uLCBvZmZzZXQsIGVycm9yRGV0YWlscywganNvbiwgcHJvcGVydGllcykge1xuICAgICAgICBzdXBlcih0cmFuc2xhdGlvbnMsIHJlc3VsdElkLCByZWFzb24sIHRleHQsIGR1cmF0aW9uLCBvZmZzZXQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBlcnJvckRldGFpbHMsIGpzb24sIHByb3BlcnRpZXMpO1xuICAgICAgICB0aGlzLnByaXZJZCA9IHBhcnRpY2lwYW50SWQ7XG4gICAgICAgIHRoaXMucHJpdk9yaWdMYW5nID0gb3JpZ2luYWxMYW5ndWFnZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGUgcGFydGljaXBhbnQgdGhpcyByZXN1bHQgaXMgZm9yLlxuICAgICAqL1xuICAgIGdldCBwYXJ0aWNpcGFudElkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2SWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBvcmlnaW5hbCBsYW5ndWFnZSB0aGlzIHJlc3VsdCB3YXMgaW4uXG4gICAgICovXG4gICAgZ2V0IG9yaWdpbmFsTGFuZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdk9yaWdMYW5nO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29udmVyc2F0aW9uVHJhbnNsYXRpb25SZXN1bHQgPSBDb252ZXJzYXRpb25UcmFuc2xhdGlvblJlc3VsdDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29udmVyc2F0aW9uVHJhbnNsYXRpb25SZXN1bHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslator.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslator.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConversationTranslator = exports.SpeechState = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst ConversationTranslatorConnectionFactory_js_1 = __webpack_require__(/*! ../../common.speech/Transcription/ConversationTranslatorConnectionFactory.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ConversationTranslatorConnectionFactory.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Conversation_js_1 = __webpack_require__(/*! ./Conversation.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Conversation.js\");\nconst Exports_js_4 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Exports.js\");\nvar SpeechState;\n(function (SpeechState) {\n    SpeechState[SpeechState[\"Inactive\"] = 0] = \"Inactive\";\n    SpeechState[SpeechState[\"Connecting\"] = 1] = \"Connecting\";\n    SpeechState[SpeechState[\"Connected\"] = 2] = \"Connected\";\n})(SpeechState = exports.SpeechState || (exports.SpeechState = {}));\n// child class of TranslationRecognizer meant only for use with ConversationTranslator\nclass ConversationTranslationRecognizer extends Exports_js_3.TranslationRecognizer {\n    constructor(speechConfig, audioConfig, translator, convGetter) {\n        super(speechConfig, audioConfig, new ConversationTranslatorConnectionFactory_js_1.ConversationTranslatorConnectionFactory(convGetter));\n        this.privSpeechState = SpeechState.Inactive;\n        if (!!translator) {\n            this.privTranslator = translator;\n            this.sessionStarted = () => {\n                this.privSpeechState = SpeechState.Connected;\n            };\n            this.sessionStopped = () => {\n                this.privSpeechState = SpeechState.Inactive;\n            };\n            this.recognizing = (tr, e) => {\n                if (!!this.privTranslator.recognizing) {\n                    this.privTranslator.recognizing(this.privTranslator, e);\n                }\n            };\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            this.recognized = async (tr, e) => {\n                // if there is an error connecting to the conversation service from the speech service the error will be returned in the ErrorDetails field.\n                if (e.result?.errorDetails) {\n                    await this.cancelSpeech();\n                    // TODO: format the error message contained in 'errorDetails'\n                    this.fireCancelEvent(e.result.errorDetails);\n                }\n                else {\n                    if (!!this.privTranslator.recognized) {\n                        this.privTranslator.recognized(this.privTranslator, e);\n                    }\n                }\n                return;\n            };\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            this.canceled = async () => {\n                if (this.privSpeechState !== SpeechState.Inactive) {\n                    try {\n                        await this.cancelSpeech();\n                    }\n                    catch (error) {\n                        this.privSpeechState = SpeechState.Inactive;\n                    }\n                }\n            };\n        }\n    }\n    get state() {\n        return this.privSpeechState;\n    }\n    set state(newState) {\n        this.privSpeechState = newState;\n    }\n    set authentication(token) {\n        this.privReco.authentication = token;\n    }\n    onConnection() {\n        this.privSpeechState = SpeechState.Connected;\n    }\n    async onCancelSpeech() {\n        this.privSpeechState = SpeechState.Inactive;\n        await this.cancelSpeech();\n    }\n    /**\n     * Fire a cancel event\n     * @param error\n     */\n    fireCancelEvent(error) {\n        try {\n            if (!!this.privTranslator.canceled) {\n                const cancelEvent = new Exports_js_4.ConversationTranslationCanceledEventArgs(Exports_js_3.CancellationReason.Error, error, Exports_js_3.CancellationErrorCode.RuntimeError);\n                this.privTranslator.canceled(this.privTranslator, cancelEvent);\n            }\n        }\n        catch (e) {\n            //\n        }\n    }\n    async cancelSpeech() {\n        try {\n            this.stopContinuousRecognitionAsync();\n            await this.privReco?.disconnect();\n            this.privSpeechState = SpeechState.Inactive;\n        }\n        catch (e) {\n            // ignore the error\n        }\n    }\n}\n/**\n * Join, leave or connect to a conversation.\n */\nclass ConversationTranslator extends Exports_js_4.ConversationCommon {\n    constructor(audioConfig) {\n        super(audioConfig);\n        this.privErrors = Exports_js_1.ConversationConnectionConfig.restErrors;\n        this.privIsDisposed = false;\n        this.privIsSpeaking = false;\n        this.privPlaceholderKey = \"abcdefghijklmnopqrstuvwxyz012345\";\n        this.privPlaceholderRegion = \"westus\";\n        this.privProperties = new Exports_js_3.PropertyCollection();\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get speechRecognitionLanguage() {\n        return this.privSpeechRecognitionLanguage;\n    }\n    get participants() {\n        return this.privConversation?.participants;\n    }\n    get canSpeak() {\n        // is there a Conversation websocket available and has the Recognizer been set up\n        if (!this.privConversation.isConnected || !this.privCTRecognizer) {\n            return false;\n        }\n        // is the user already speaking\n        if (this.privIsSpeaking || this.privCTRecognizer.state === SpeechState.Connected || this.privCTRecognizer.state === SpeechState.Connecting) {\n            return false;\n        }\n        // is the user muted\n        if (this.privConversation.isMutedByHost) {\n            return false;\n        }\n        return true;\n    }\n    onToken(token) {\n        this.privCTRecognizer.authentication = token;\n    }\n    setServiceProperty(name, value) {\n        const currentProperties = JSON.parse(this.privProperties.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n        currentProperties[name] = value;\n        this.privProperties.setProperty(Exports_js_1.ServicePropertiesPropertyName, JSON.stringify(currentProperties));\n    }\n    joinConversationAsync(conversation, nickname, param1, param2, param3) {\n        try {\n            if (typeof conversation === \"string\") {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n                if (!!this.privConversation) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedStart), param3);\n                }\n                let lang = param1;\n                if (lang === undefined || lang === null || lang === \"\") {\n                    lang = Exports_js_1.ConversationConnectionConfig.defaultLanguageCode;\n                }\n                // create a placeholder config\n                this.privSpeechTranslationConfig = Exports_js_3.SpeechTranslationConfig.fromSubscription(this.privPlaceholderKey, this.privPlaceholderRegion);\n                this.privSpeechTranslationConfig.setProfanity(Exports_js_3.ProfanityOption.Masked);\n                this.privSpeechTranslationConfig.addTargetLanguage(lang);\n                this.privSpeechTranslationConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage], lang);\n                this.privSpeechTranslationConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.ConversationTranslator_Name], nickname);\n                const propertyIdsToCopy = [\n                    Exports_js_3.PropertyId.SpeechServiceConnection_Host,\n                    Exports_js_3.PropertyId.ConversationTranslator_Host,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_Endpoint,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_ProxyHostName,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_ProxyPassword,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_ProxyPort,\n                    Exports_js_3.PropertyId.SpeechServiceConnection_ProxyUserName,\n                    \"ConversationTranslator_MultiChannelAudio\",\n                    \"ConversationTranslator_Region\"\n                ];\n                for (const prop of propertyIdsToCopy) {\n                    const value = this.privProperties.getProperty(prop);\n                    if (value) {\n                        const key = typeof prop === \"string\" ? prop : Exports_js_3.PropertyId[prop];\n                        this.privSpeechTranslationConfig.setProperty(key, value);\n                    }\n                }\n                const currentProperties = JSON.parse(this.privProperties.getProperty(Exports_js_1.ServicePropertiesPropertyName, \"{}\"));\n                for (const prop of Object.keys(currentProperties)) {\n                    this.privSpeechTranslationConfig.setServiceProperty(prop, currentProperties[prop], Exports_js_3.ServicePropertyChannel.UriQueryParameter);\n                }\n                // join the conversation\n                this.privConversation = new Conversation_js_1.ConversationImpl(this.privSpeechTranslationConfig);\n                this.privConversation.conversationTranslator = this;\n                this.privConversation.joinConversationAsync(conversation, nickname, lang, ((result) => {\n                    if (!result) {\n                        this.handleError(new Error(this.privErrors.permissionDeniedConnect), param3);\n                    }\n                    this.privSpeechTranslationConfig.authorizationToken = result;\n                    this.privConversation.room.isHost = false;\n                    // connect to the ws\n                    this.privConversation.startConversationAsync((() => {\n                        this.handleCallback(param2, param3);\n                    }), ((error) => {\n                        this.handleError(error, param3);\n                    }));\n                }), ((error) => {\n                    this.handleError(error, param3);\n                }));\n            }\n            else if (typeof conversation === \"object\") {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n                // save the nickname\n                this.privProperties.setProperty(Exports_js_3.PropertyId.ConversationTranslator_Name, nickname);\n                // ref the conversation object\n                this.privConversation = conversation;\n                // ref the conversation translator object\n                this.privConversation.conversationTranslator = this;\n                this.privConversation.room.isHost = true;\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedConnect);\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\n                this.privSpeechTranslationConfig = conversation.config;\n                this.handleCallback(param1, param2);\n            }\n            else {\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"invalid conversation type\")), param2);\n            }\n        }\n        catch (error) {\n            this.handleError(error, typeof param1 === \"string\" ? param3 : param2);\n        }\n    }\n    /**\n     * Leave the conversation\n     * @param cb\n     * @param err\n     */\n    leaveConversationAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks((async () => {\n            // stop the speech websocket\n            await this.cancelSpeech();\n            // stop the websocket\n            await this.privConversation.endConversationImplAsync();\n            // https delete request\n            await this.privConversation.deleteConversationImplAsync();\n            this.dispose();\n        })(), cb, err);\n    }\n    /**\n     * Send a text message\n     * @param message\n     * @param cb\n     * @param err\n     */\n    sendTextMessageAsync(message, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", message));\n            this.privConversation.sendTextMessageAsync(message, cb, err);\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Start speaking\n     * @param cb\n     * @param err\n     */\n    startTranscribingAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks((async () => {\n            try {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\n                if (this.privCTRecognizer === undefined) {\n                    await this.connectTranslatorRecognizer();\n                }\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privCTRecognizer, this.privErrors.permissionDeniedSend);\n                if (!this.canSpeak) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n                }\n                await this.startContinuousRecognition();\n                this.privIsSpeaking = true;\n            }\n            catch (error) {\n                this.privIsSpeaking = false;\n                await this.cancelSpeech();\n                throw error;\n            }\n        })(), cb, err);\n    }\n    /**\n     * Stop speaking\n     * @param cb\n     * @param err\n     */\n    stopTranscribingAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks((async () => {\n            try {\n                if (!this.privIsSpeaking) {\n                    // stop speech\n                    await this.cancelSpeech();\n                    return;\n                }\n                // stop the recognition but leave the websocket open\n                this.privIsSpeaking = false;\n                await new Promise((resolve, reject) => {\n                    this.privCTRecognizer.stopContinuousRecognitionAsync(resolve, reject);\n                });\n            }\n            catch (error) {\n                await this.cancelSpeech();\n            }\n        })(), cb, err);\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose(reason, success, err) {\n        Exports_js_2.marshalPromiseToCallbacks((async () => {\n            if (this.isDisposed && !this.privIsSpeaking) {\n                return;\n            }\n            await this.cancelSpeech();\n            this.privIsDisposed = true;\n            this.privSpeechTranslationConfig.close();\n            this.privSpeechRecognitionLanguage = undefined;\n            this.privProperties = undefined;\n            this.privAudioConfig = undefined;\n            this.privSpeechTranslationConfig = undefined;\n            this.privConversation.dispose();\n            this.privConversation = undefined;\n        })(), success, err);\n    }\n    /**\n     * Cancel the speech websocket\n     */\n    async cancelSpeech() {\n        try {\n            this.privIsSpeaking = false;\n            await this.privCTRecognizer?.onCancelSpeech();\n            this.privCTRecognizer = undefined;\n        }\n        catch (e) {\n            // ignore the error\n        }\n    }\n    /**\n     * Connect to the speech translation recognizer.\n     * Currently there is no language validation performed before sending the SpeechLanguage code to the service.\n     * If it's an invalid language the raw error will be: 'Error during WebSocket handshake: Unexpected response code: 400'\n     * e.g. pass in 'fr' instead of 'fr-FR', or a text-only language 'cy'\n     */\n    async connectTranslatorRecognizer() {\n        try {\n            if (this.privAudioConfig === undefined) {\n                this.privAudioConfig = Exports_js_3.AudioConfig.fromDefaultMicrophoneInput();\n            }\n            // clear the temp subscription key if it's a participant joining\n            if (this.privSpeechTranslationConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_Key])\n                === this.privPlaceholderKey) {\n                this.privSpeechTranslationConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_Key], \"\");\n            }\n            const convGetter = () => this.privConversation;\n            this.privCTRecognizer = new ConversationTranslationRecognizer(this.privSpeechTranslationConfig, this.privAudioConfig, this, convGetter);\n        }\n        catch (error) {\n            await this.cancelSpeech();\n            throw error;\n        }\n    }\n    /**\n     * Handle the start speaking request\n     */\n    startContinuousRecognition() {\n        return new Promise((resolve, reject) => {\n            this.privCTRecognizer.startContinuousRecognitionAsync(resolve, reject);\n        });\n    }\n}\nexports.ConversationTranslator = ConversationTranslator;\n\n//# sourceMappingURL=ConversationTranslator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Exports.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Exports.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Conversation_js_1 = __webpack_require__(/*! ./Conversation.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Conversation.js\");\nObject.defineProperty(exports, \"Conversation\", ({ enumerable: true, get: function () { return Conversation_js_1.Conversation; } }));\nObject.defineProperty(exports, \"ConversationImpl\", ({ enumerable: true, get: function () { return Conversation_js_1.ConversationImpl; } }));\nvar ConversationCommon_js_1 = __webpack_require__(/*! ./ConversationCommon.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationCommon.js\");\nObject.defineProperty(exports, \"ConversationCommon\", ({ enumerable: true, get: function () { return ConversationCommon_js_1.ConversationCommon; } }));\nvar ConversationExpirationEventArgs_js_1 = __webpack_require__(/*! ./ConversationExpirationEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationExpirationEventArgs.js\");\nObject.defineProperty(exports, \"ConversationExpirationEventArgs\", ({ enumerable: true, get: function () { return ConversationExpirationEventArgs_js_1.ConversationExpirationEventArgs; } }));\nvar ConversationParticipantsChangedEventArgs_js_1 = __webpack_require__(/*! ./ConversationParticipantsChangedEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationParticipantsChangedEventArgs.js\");\nObject.defineProperty(exports, \"ConversationParticipantsChangedEventArgs\", ({ enumerable: true, get: function () { return ConversationParticipantsChangedEventArgs_js_1.ConversationParticipantsChangedEventArgs; } }));\nvar ConversationTranslationCanceledEventArgs_js_1 = __webpack_require__(/*! ./ConversationTranslationCanceledEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationCanceledEventArgs.js\");\nObject.defineProperty(exports, \"ConversationTranslationCanceledEventArgs\", ({ enumerable: true, get: function () { return ConversationTranslationCanceledEventArgs_js_1.ConversationTranslationCanceledEventArgs; } }));\nvar ConversationTranslationEventArgs_js_1 = __webpack_require__(/*! ./ConversationTranslationEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationEventArgs.js\");\nObject.defineProperty(exports, \"ConversationTranslationEventArgs\", ({ enumerable: true, get: function () { return ConversationTranslationEventArgs_js_1.ConversationTranslationEventArgs; } }));\nvar ConversationTranslationResult_js_1 = __webpack_require__(/*! ./ConversationTranslationResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslationResult.js\");\nObject.defineProperty(exports, \"ConversationTranslationResult\", ({ enumerable: true, get: function () { return ConversationTranslationResult_js_1.ConversationTranslationResult; } }));\nvar ConversationTranslator_js_1 = __webpack_require__(/*! ./ConversationTranslator.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranslator.js\");\nObject.defineProperty(exports, \"ConversationTranslator\", ({ enumerable: true, get: function () { return ConversationTranslator_js_1.ConversationTranslator; } }));\nvar ConversationTranscriber_js_1 = __webpack_require__(/*! ./ConversationTranscriber.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranscriber.js\");\nObject.defineProperty(exports, \"ConversationTranscriber\", ({ enumerable: true, get: function () { return ConversationTranscriber_js_1.ConversationTranscriber; } }));\nvar IParticipant_js_1 = __webpack_require__(/*! ./IParticipant.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/IParticipant.js\");\nObject.defineProperty(exports, \"Participant\", ({ enumerable: true, get: function () { return IParticipant_js_1.Participant; } }));\nObject.defineProperty(exports, \"User\", ({ enumerable: true, get: function () { return IParticipant_js_1.User; } }));\nvar ParticipantChangedReason_js_1 = __webpack_require__(/*! ./ParticipantChangedReason.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ParticipantChangedReason.js\");\nObject.defineProperty(exports, \"ParticipantChangedReason\", ({ enumerable: true, get: function () { return ParticipantChangedReason_js_1.ParticipantChangedReason; } }));\nvar Meeting_js_1 = __webpack_require__(/*! ./Meeting.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Meeting.js\");\nObject.defineProperty(exports, \"Meeting\", ({ enumerable: true, get: function () { return Meeting_js_1.Meeting; } }));\nObject.defineProperty(exports, \"MeetingImpl\", ({ enumerable: true, get: function () { return Meeting_js_1.MeetingImpl; } }));\nvar MeetingTranscriptionCanceledEventArgs_js_1 = __webpack_require__(/*! ./MeetingTranscriptionCanceledEventArgs.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/MeetingTranscriptionCanceledEventArgs.js\");\nObject.defineProperty(exports, \"MeetingTranscriptionCanceledEventArgs\", ({ enumerable: true, get: function () { return MeetingTranscriptionCanceledEventArgs_js_1.MeetingTranscriptionCanceledEventArgs; } }));\nvar MeetingTranscriber_js_1 = __webpack_require__(/*! ./MeetingTranscriber.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/MeetingTranscriber.js\");\nObject.defineProperty(exports, \"MeetingTranscriber\", ({ enumerable: true, get: function () { return MeetingTranscriber_js_1.MeetingTranscriber; } }));\nvar ConversationTranscriptionResult_js_1 = __webpack_require__(/*! ./ConversationTranscriptionResult.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ConversationTranscriptionResult.js\");\nObject.defineProperty(exports, \"ConversationTranscriptionResult\", ({ enumerable: true, get: function () { return ConversationTranscriptionResult_js_1.ConversationTranscriptionResult; } }));\n\n//# sourceMappingURL=Exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Exports.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/IParticipant.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/IParticipant.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Participant = exports.User = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nclass User {\n    constructor(userId) {\n        this.privUserId = userId;\n    }\n    get userId() {\n        return this.privUserId;\n    }\n}\nexports.User = User;\nclass Participant {\n    constructor(id, avatar, displayName, isHost, isMuted, isUsingTts, preferredLanguage, voice) {\n        this.privId = id;\n        this.privAvatar = avatar;\n        this.privDisplayName = displayName;\n        this.privIsHost = isHost;\n        this.privIsMuted = isMuted;\n        this.privIsUsingTts = isUsingTts;\n        this.privPreferredLanguage = preferredLanguage;\n        this.privVoice = voice;\n        this.privProperties = new Exports_js_1.PropertyCollection();\n    }\n    get avatar() {\n        return this.privAvatar;\n    }\n    get displayName() {\n        return this.privDisplayName;\n    }\n    get id() {\n        return this.privId;\n    }\n    get preferredLanguage() {\n        return this.privPreferredLanguage;\n    }\n    get isHost() {\n        return this.privIsHost;\n    }\n    get isMuted() {\n        return this.privIsMuted;\n    }\n    get isUsingTts() {\n        return this.privIsUsingTts;\n    }\n    get voice() {\n        return this.privVoice;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    static From(id, language, voice) {\n        return new Participant(id, \"\", id, false, false, false, language, voice);\n    }\n}\nexports.Participant = Participant;\n\n//# sourceMappingURL=IParticipant.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL0lQYXJ0aWNpcGFudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyxZQUFZO0FBQ2xDO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMsaUhBQWU7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjs7QUFFbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1RyYW5zY3JpcHRpb24vSVBhcnRpY2lwYW50LmpzP2MzNWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8vIE11bHRpLWRldmljZSBDb252ZXJzYXRpb24gaXMgYSBQcmV2aWV3IGZlYXR1cmUuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBhcnRpY2lwYW50ID0gZXhwb3J0cy5Vc2VyID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgbWF4LWNsYXNzZXMtcGVyLWZpbGUgKi9cbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi9FeHBvcnRzLmpzXCIpO1xuY2xhc3MgVXNlciB7XG4gICAgY29uc3RydWN0b3IodXNlcklkKSB7XG4gICAgICAgIHRoaXMucHJpdlVzZXJJZCA9IHVzZXJJZDtcbiAgICB9XG4gICAgZ2V0IHVzZXJJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlVzZXJJZDtcbiAgICB9XG59XG5leHBvcnRzLlVzZXIgPSBVc2VyO1xuY2xhc3MgUGFydGljaXBhbnQge1xuICAgIGNvbnN0cnVjdG9yKGlkLCBhdmF0YXIsIGRpc3BsYXlOYW1lLCBpc0hvc3QsIGlzTXV0ZWQsIGlzVXNpbmdUdHMsIHByZWZlcnJlZExhbmd1YWdlLCB2b2ljZSkge1xuICAgICAgICB0aGlzLnByaXZJZCA9IGlkO1xuICAgICAgICB0aGlzLnByaXZBdmF0YXIgPSBhdmF0YXI7XG4gICAgICAgIHRoaXMucHJpdkRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gICAgICAgIHRoaXMucHJpdklzSG9zdCA9IGlzSG9zdDtcbiAgICAgICAgdGhpcy5wcml2SXNNdXRlZCA9IGlzTXV0ZWQ7XG4gICAgICAgIHRoaXMucHJpdklzVXNpbmdUdHMgPSBpc1VzaW5nVHRzO1xuICAgICAgICB0aGlzLnByaXZQcmVmZXJyZWRMYW5ndWFnZSA9IHByZWZlcnJlZExhbmd1YWdlO1xuICAgICAgICB0aGlzLnByaXZWb2ljZSA9IHZvaWNlO1xuICAgICAgICB0aGlzLnByaXZQcm9wZXJ0aWVzID0gbmV3IEV4cG9ydHNfanNfMS5Qcm9wZXJ0eUNvbGxlY3Rpb24oKTtcbiAgICB9XG4gICAgZ2V0IGF2YXRhcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkF2YXRhcjtcbiAgICB9XG4gICAgZ2V0IGRpc3BsYXlOYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RGlzcGxheU5hbWU7XG4gICAgfVxuICAgIGdldCBpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdklkO1xuICAgIH1cbiAgICBnZXQgcHJlZmVycmVkTGFuZ3VhZ2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQcmVmZXJyZWRMYW5ndWFnZTtcbiAgICB9XG4gICAgZ2V0IGlzSG9zdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdklzSG9zdDtcbiAgICB9XG4gICAgZ2V0IGlzTXV0ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZJc011dGVkO1xuICAgIH1cbiAgICBnZXQgaXNVc2luZ1R0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdklzVXNpbmdUdHM7XG4gICAgfVxuICAgIGdldCB2b2ljZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlZvaWNlO1xuICAgIH1cbiAgICBnZXQgcHJvcGVydGllcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlByb3BlcnRpZXM7XG4gICAgfVxuICAgIHN0YXRpYyBGcm9tKGlkLCBsYW5ndWFnZSwgdm9pY2UpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQYXJ0aWNpcGFudChpZCwgXCJcIiwgaWQsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGxhbmd1YWdlLCB2b2ljZSk7XG4gICAgfVxufVxuZXhwb3J0cy5QYXJ0aWNpcGFudCA9IFBhcnRpY2lwYW50O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1JUGFydGljaXBhbnQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/IParticipant.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Meeting.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Meeting.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MeetingImpl = exports.Meeting = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nclass Meeting {\n    constructor() {\n        return;\n    }\n    /**\n     * Create a meeting\n     * @param speechConfig\n     * @param meetingId\n     * @param cb\n     * @param err\n     */\n    static createMeetingAsync(speechConfig, meetingId, arg3, arg4) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"config\"));\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig.region, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Region\"));\n        Contracts_js_1.Contracts.throwIfNull(meetingId, \"meetingId\");\n        if (meetingId.length === 0) {\n            throw new Error(\"meetingId cannot be empty\");\n        }\n        if (!speechConfig.subscriptionKey && !speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceAuthorization_Token])) {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig.subscriptionKey, Exports_js_1.ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Key\"));\n        }\n        const meetingImpl = new MeetingImpl(speechConfig, meetingId);\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        Exports_js_2.marshalPromiseToCallbacks((async () => { })(), arg3, arg4);\n        return meetingImpl;\n    }\n}\nexports.Meeting = Meeting;\nclass MeetingImpl extends Meeting {\n    /**\n     * Create a Meeting impl\n     * @param speechConfig\n     * @param {string} id - optional conversationId\n     */\n    constructor(speechConfig, id) {\n        super();\n        this.privErrors = Exports_js_1.ConversationConnectionConfig.restErrors;\n        /** websocket callbacks */\n        /* eslint-disable @typescript-eslint/typedef */\n        this.onConnected = (e) => {\n            this.privIsConnected = true;\n            try {\n                if (!!this.privConversationTranslator?.sessionStarted) {\n                    this.privConversationTranslator.sessionStarted(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onDisconnected = (e) => {\n            try {\n                if (!!this.privConversationTranslator?.sessionStopped) {\n                    this.privConversationTranslator.sessionStopped(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n            finally {\n                void this.close(false);\n            }\n        };\n        this.onCanceled = (r, e) => {\n            try {\n                if (!!this.privConversationTranslator?.canceled) {\n                    this.privConversationTranslator.canceled(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantUpdateCommandReceived = (r, e) => {\n            try {\n                const updatedParticipant = this.privParticipants.getParticipant(e.id);\n                if (updatedParticipant !== undefined) {\n                    switch (e.key) {\n                        case Exports_js_1.ConversationTranslatorCommandTypes.changeNickname:\n                            updatedParticipant.displayName = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setUseTTS:\n                            updatedParticipant.isUsingTts = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setProfanityFiltering:\n                            updatedParticipant.profanity = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setMute:\n                            updatedParticipant.isMuted = e.value;\n                            break;\n                        case Exports_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages:\n                            updatedParticipant.translateToLanguages = e.value;\n                            break;\n                    }\n                    this.privParticipants.addOrUpdateParticipant(updatedParticipant);\n                    if (!!this.privConversationTranslator) {\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.Updated, [this.toParticipant(updatedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onLockRoomCommandReceived = () => {\n            // TODO\n        };\n        this.onMuteAllCommandReceived = (r, e) => {\n            try {\n                this.privParticipants.participants.forEach((p) => p.isMuted = (p.isHost ? false : e.isMuted));\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.Updated, this.toParticipants(false), e.sessionId));\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantJoinCommandReceived = (r, e) => {\n            try {\n                const newParticipant = this.privParticipants.addOrUpdateParticipant(e.participant);\n                if (newParticipant !== undefined) {\n                    if (!!this.privConversationTranslator) {\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.JoinedConversation, [this.toParticipant(newParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantLeaveCommandReceived = (r, e) => {\n            try {\n                const ejectedParticipant = this.privParticipants.getParticipant(e.participant.id);\n                if (ejectedParticipant !== undefined) {\n                    // remove the participant from the internal participants list\n                    this.privParticipants.deleteParticipant(e.participant.id);\n                    if (!!this.privConversationTranslator) {\n                        // notify subscribers that the participant has left the conversation\n                        this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.LeftConversation, [this.toParticipant(ejectedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onTranslationReceived = (r, e) => {\n            try {\n                switch (e.command) {\n                    case Exports_js_1.ConversationTranslatorMessageTypes.final:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.transcribed(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case Exports_js_1.ConversationTranslatorMessageTypes.partial:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.transcribing(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case Exports_js_1.ConversationTranslatorMessageTypes.instantMessage:\n                        if (!!this.privConversationTranslator) {\n                            this.privConversationTranslator.textMessageReceived(this.privConversationTranslator, new Exports_js_3.ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantsListReceived = (r, e) => {\n            try {\n                // check if the session token needs to be updated\n                if (e.sessionToken !== undefined && e.sessionToken !== null) {\n                    this.privRoom.token = e.sessionToken;\n                }\n                // save the participants\n                this.privParticipants.participants = [...e.participants];\n                // enable the conversation\n                if (this.privParticipants.me !== undefined) {\n                    this.privIsReady = true;\n                }\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.participantsChanged(this.privConversationTranslator, new Exports_js_3.ConversationParticipantsChangedEventArgs(Exports_js_3.ParticipantChangedReason.JoinedConversation, this.toParticipants(true), e.sessionId));\n                }\n                // if this is the host, update the nickname if needed\n                if (this.me.isHost) {\n                    const nickname = this.privConversationTranslator?.properties.getProperty(Exports_js_3.PropertyId.ConversationTranslator_Name);\n                    if (nickname !== undefined && nickname.length > 0 && nickname !== this.me.displayName) {\n                        // issue a change nickname request\n                        this.changeNicknameAsync(nickname);\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onConversationExpiration = (r, e) => {\n            try {\n                if (!!this.privConversationTranslator) {\n                    this.privConversationTranslator.conversationExpiration(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.privIsConnected = false;\n        this.privIsDisposed = false;\n        this.privConversationId = \"\";\n        this.privProperties = new Exports_js_3.PropertyCollection();\n        this.privManager = new Exports_js_1.ConversationManager();\n        // check the speech language\n        const language = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        if (!language) {\n            speechConfig.setProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage], Exports_js_1.ConversationConnectionConfig.defaultLanguageCode);\n        }\n        this.privLanguage = speechConfig.getProperty(Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n        this.privConversationId = id;\n        // save the speech config for future usage\n        this.privConfig = speechConfig;\n        // save the config properties\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(configImpl, \"speechConfig\");\n        this.privProperties = configImpl.properties.clone();\n        this.privIsConnected = false;\n        this.privParticipants = new Exports_js_1.InternalParticipants();\n        this.privIsReady = false;\n        this.privTextMessageMaxLength = 1000;\n    }\n    // get the internal data about a conversation\n    get room() {\n        return this.privRoom;\n    }\n    // get the wrapper for connecting to the websockets\n    get connection() {\n        return this.privConversationRecognizer; // this.privConnection;\n    }\n    // get the config\n    get config() {\n        return this.privConfig;\n    }\n    // get the meeting Id\n    get meetingId() {\n        return this.privRoom ? this.privRoom.roomId : this.privConversationId;\n    }\n    // get the properties\n    get properties() {\n        return this.privProperties;\n    }\n    // get the speech language\n    get speechRecognitionLanguage() {\n        return this.privLanguage;\n    }\n    get isMutedByHost() {\n        return this.privParticipants.me?.isHost ? false : this.privParticipants.me?.isMuted;\n    }\n    get isConnected() {\n        return this.privIsConnected && this.privIsReady;\n    }\n    get participants() {\n        return this.toParticipants(true);\n    }\n    get me() {\n        return this.toParticipant(this.privParticipants.me);\n    }\n    get host() {\n        return this.toParticipant(this.privParticipants.host);\n    }\n    get transcriberRecognizer() {\n        return this.privTranscriberRecognizer;\n    }\n    get meetingInfo() {\n        const convId = this.meetingId;\n        const p = this.participants.map((part) => ({\n            id: part.id,\n            preferredLanguage: part.preferredLanguage,\n            voice: part.voice\n        }));\n        const props = {};\n        for (const key of Exports_js_1.ConversationConnectionConfig.transcriptionEventKeys) {\n            const val = this.properties.getProperty(key, \"\");\n            if (val !== \"\") {\n                props[key] = val;\n            }\n        }\n        const info = { id: convId, participants: p, meetingProperties: props };\n        return info;\n    }\n    get canSend() {\n        return this.privIsConnected && !this.privParticipants.me?.isMuted;\n    }\n    get canSendAsHost() {\n        return this.privIsConnected && this.privParticipants.me?.isHost;\n    }\n    // get / set the speech auth token\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    get authorizationToken() {\n        return this.privToken;\n    }\n    set authorizationToken(value) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(value, \"authorizationToken\");\n        this.privToken = value;\n    }\n    /**\n     * Create a new meeting as Host\n     * @param cb\n     * @param err\n     */\n    createMeetingAsync(cb, err) {\n        try {\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            this.privManager.createOrJoin(this.privProperties, undefined, ((room) => {\n                if (!room) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedConnect), err);\n                }\n                this.privRoom = room;\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Starts a new meeting as host.\n     * @param cb\n     * @param err\n     */\n    startMeetingAsync(cb, err) {\n        try {\n            // check if there is already a recognizer\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            // check if there is conversation data available\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedConnect);\n            // connect to the conversation websocket\n            this.privParticipants.meId = this.privRoom.participantId;\n            // Because ConversationTranslator manually sets up and manages the connection, Conversation\n            // has to forward serviceRecognizer connection events that usually get passed automatically\n            this.privConversationRecognizer.connected = this.onConnected;\n            this.privConversationRecognizer.disconnected = this.onDisconnected;\n            this.privConversationRecognizer.canceled = this.onCanceled;\n            this.privConversationRecognizer.participantUpdateCommandReceived = this.onParticipantUpdateCommandReceived;\n            this.privConversationRecognizer.lockRoomCommandReceived = this.onLockRoomCommandReceived;\n            this.privConversationRecognizer.muteAllCommandReceived = this.onMuteAllCommandReceived;\n            this.privConversationRecognizer.participantJoinCommandReceived = this.onParticipantJoinCommandReceived;\n            this.privConversationRecognizer.participantLeaveCommandReceived = this.onParticipantLeaveCommandReceived;\n            this.privConversationRecognizer.translationReceived = this.onTranslationReceived;\n            this.privConversationRecognizer.participantsListReceived = this.onParticipantsListReceived;\n            this.privConversationRecognizer.conversationExpiration = this.onConversationExpiration;\n            this.privConversationRecognizer.connect(this.privRoom.token, (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Join a meeting as a participant.\n     * @param { IParticipant } participant - participant to add\n     * @param cb\n     * @param err\n     */\n    addParticipantAsync(participant, cb, err) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(participant, \"Participant\");\n        Exports_js_2.marshalPromiseToCallbacks(this.addParticipantImplAsync(participant), cb, err);\n    }\n    /**\n     * Join a meeting as a participant.\n     * @param meeting\n     * @param nickname\n     * @param lang\n     * @param cb\n     * @param err\n     */\n    joinMeetingAsync(meetingId, nickname, lang, cb, err) {\n        try {\n            // TODO\n            // if (!!this.privConversationRecognizer) {\n            //     throw new Error(this.privErrors.permissionDeniedStart);\n            // }\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(meetingId, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversationId\"));\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(lang, this.privErrors.invalidArgs.replace(\"{arg}\", \"language\"));\n            // join the conversation\n            this.privManager.createOrJoin(this.privProperties, meetingId, ((room) => {\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(room, this.privErrors.permissionDeniedConnect);\n                this.privRoom = room;\n                this.privConfig.authorizationToken = room.cognitiveSpeechAuthToken;\n                // join callback\n                if (!!cb) {\n                    cb(room.cognitiveSpeechAuthToken);\n                }\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Deletes a meeting\n     * @param cb\n     * @param err\n     */\n    deleteMeetingAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.deleteMeetingImplAsync(), cb, err);\n    }\n    async deleteMeetingImplAsync() {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privProperties, this.privErrors.permissionDeniedConnect);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.token, this.privErrors.permissionDeniedConnect);\n        await this.privManager.leave(this.privProperties, this.privRoom.token);\n        this.dispose();\n    }\n    /**\n     * Issues a request to close the client websockets\n     * @param cb\n     * @param err\n     */\n    endMeetingAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.endMeetingImplAsync(), cb, err);\n    }\n    endMeetingImplAsync() {\n        return this.close(true);\n    }\n    /**\n     * Issues a request to lock the conversation\n     * @param cb\n     * @param err\n     */\n    lockMeetingAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"lock\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute the meeting\n     * @param cb\n     * @param err\n     */\n    muteAllParticipantsAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privConversationRecognizer, this.privErrors.permissionDeniedSend);\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the user's permissions\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"mute\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute a participant in the meeting\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    muteParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, true), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to remove a participant from the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    removeParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            if (!!this.privTranscriberRecognizer && userId.hasOwnProperty(\"id\")) {\n                // Assume this is a transcription participant\n                Exports_js_2.marshalPromiseToCallbacks(this.removeParticipantImplAsync(userId), cb, err);\n            }\n            else {\n                Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n                Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n                if (!this.canSendAsHost) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"remove\")), err);\n                }\n                let participantId = \"\";\n                if (typeof userId === \"string\") {\n                    participantId = userId;\n                }\n                else if (userId.hasOwnProperty(\"id\")) {\n                    const participant = userId;\n                    participantId = participant.id;\n                }\n                else if (userId.hasOwnProperty(\"userId\")) {\n                    const user = userId;\n                    participantId = user.userId;\n                }\n                Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n                // check the participant exists\n                const index = this.participants.findIndex((p) => p.id === participantId);\n                if (index === -1) {\n                    this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n                }\n                if (!!this.privConversationRecognizer) {\n                    this.privConversationRecognizer.sendRequest(this.getEjectCommand(participantId), (() => {\n                        this.handleCallback(cb, err);\n                    }), ((error) => {\n                        this.handleError(error, err);\n                    }));\n                }\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unlock the meeting\n     * @param cb\n     * @param err\n     */\n    unlockMeetingAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unlock\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute all participants in the meeting\n     * @param cb\n     * @param err\n     */\n    unmuteAllParticipantsAsync(cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unmute all\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute a participant in the meeting\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    unmuteParticipantAsync(userId, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, false), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Send a text message\n     * @param message\n     * @param cb\n     * @param err\n     */\n    sendTextMessageAsync(message, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", \"message\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // TODO: is a max length check required?\n            if (message.length > this.privTextMessageMaxLength) {\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"message length\")), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getMessageCommand(message), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Set translated to languages\n     * @param {string[]} languages - languages to translate to\n     * @param cb\n     * @param err\n     */\n    setTranslatedLanguagesAsync(languages, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfArrayEmptyOrWhitespace(languages, this.privErrors.invalidArgs.replace(\"{arg}\", \"languages\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getSetTranslateToLanguagesCommand(languages), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Change nickname\n     * @param {string} nickname - new nickname for the room\n     * @param cb\n     * @param err\n     */\n    changeNicknameAsync(nickname, cb, err) {\n        try {\n            Contracts_js_1.Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts_js_1.Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            if (!!this.privConversationRecognizer) {\n                this.privConversationRecognizer.sendRequest(this.getChangeNicknameCommand(nickname), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.privIsDisposed = true;\n        if (!!this.config) {\n            this.config.close();\n        }\n        this.privConfig = undefined;\n        this.privLanguage = undefined;\n        this.privProperties = undefined;\n        this.privRoom = undefined;\n        this.privToken = undefined;\n        this.privManager = undefined;\n        this.privIsConnected = false;\n        this.privIsReady = false;\n        this.privParticipants = undefined;\n    }\n    async connectTranscriberRecognizer(recognizer) {\n        if (!!this.privTranscriberRecognizer) {\n            await this.privTranscriberRecognizer.close();\n        }\n        await recognizer.enforceAudioGating();\n        this.privTranscriberRecognizer = recognizer;\n        this.privTranscriberRecognizer.meeting = this;\n    }\n    getKeepAlive() {\n        const nickname = (!!this.me) ? this.me.displayName : \"default_nickname\";\n        return JSON.stringify({\n            id: \"0\",\n            nickname,\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.keepAlive\n        });\n    }\n    /* eslint-enable @typescript-eslint/typedef */\n    addParticipantImplAsync(participant) {\n        const newParticipant = this.privParticipants.addOrUpdateParticipant(participant);\n        if (newParticipant !== undefined) {\n            if (!!this.privTranscriberRecognizer) {\n                const meetingInfo = this.meetingInfo;\n                meetingInfo.participants = [participant];\n                return this.privTranscriberRecognizer.pushMeetingEvent(meetingInfo, \"join\");\n            }\n        }\n    }\n    removeParticipantImplAsync(participant) {\n        this.privParticipants.deleteParticipant(participant.id);\n        const meetingInfo = this.meetingInfo;\n        meetingInfo.participants = [participant];\n        return this.privTranscriberRecognizer.pushMeetingEvent(meetingInfo, \"leave\");\n    }\n    async close(dispose) {\n        try {\n            this.privIsConnected = false;\n            await this.privConversationRecognizer?.close();\n            this.privConversationRecognizer = undefined;\n            if (!!this.privConversationTranslator) {\n                this.privConversationTranslator.dispose();\n            }\n        }\n        catch (e) {\n            // ignore error\n            throw e;\n        }\n        if (dispose) {\n            this.dispose();\n        }\n    }\n    /** Helpers */\n    handleCallback(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n            cb = undefined;\n        }\n    }\n    handleError(error, err) {\n        if (!!err) {\n            if (error instanceof Error) {\n                const typedError = error;\n                err(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                err(error);\n            }\n        }\n    }\n    /** Participant Helpers */\n    toParticipants(includeHost) {\n        const participants = this.privParticipants.participants.map((p) => (this.toParticipant(p)));\n        if (!includeHost) {\n            return participants.filter((p) => p.isHost === false);\n        }\n        else {\n            return participants;\n        }\n    }\n    toParticipant(p) {\n        return new Exports_js_3.Participant(p.id, p.avatar, p.displayName, p.isHost, p.isMuted, p.isUsingTts, p.preferredLanguage, p.voice);\n    }\n    getMuteAllCommand(isMuted) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingd\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setMuteAll,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getMuteCommand(participantId, isMuted) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setMute,\n            // eslint-disable-next-line object-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getLockCommand(isLocked) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setLockState,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: isLocked\n        });\n    }\n    getEjectCommand(participantId) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.ejectParticipant,\n            // eslint-disable-next-line object-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n        });\n    }\n    getSetTranslateToLanguagesCommand(languages) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.setTranslateToLanguages,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: languages\n        });\n    }\n    getChangeNicknameCommand(nickname) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: Exports_js_1.ConversationTranslatorCommandTypes.changeNickname,\n            nickname,\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.participantCommand,\n            value: nickname\n        });\n    }\n    getMessageCommand(message) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(message, \"message\");\n        return JSON.stringify({\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            text: message,\n            type: Exports_js_1.ConversationTranslatorMessageTypes.instantMessage\n        });\n    }\n}\nexports.MeetingImpl = MeetingImpl;\n\n//# sourceMappingURL=Meeting.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Meeting.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/MeetingTranscriber.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/MeetingTranscriber.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MeetingTranscriber = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ../Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ../Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\nconst Exports_js_4 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/Exports.js\");\nclass MeetingTranscriber {\n    /**\n     * MeetingTranscriber constructor.\n     * @constructor\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    constructor(audioConfig) {\n        this.privAudioConfig = audioConfig;\n        this.privProperties = new Exports_js_3.PropertyCollection();\n        this.privRecognizer = undefined;\n        this.privDisposedRecognizer = false;\n    }\n    /**\n     * Gets the spoken language of recognition.\n     * @member MeetingTranscriber.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} The spoken language of recognition.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * The collection of properties and their values defined for this MeetingTranscriber.\n     * @member MeetingTranscriber.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this MeetingTranscriber.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * @Internal\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    get internalData() {\n        return this.privRecognizer.internalData;\n    }\n    /**\n     * @Deprecated\n     * @Obsolete\n     * Please use the Connection.fromRecognizer pattern to obtain a connection object\n     */\n    get connection() {\n        return Exports_js_3.Connection.fromRecognizer(this.privRecognizer);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member MeetingTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member MeetingTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * @param {Meeting} meeting - meeting to be recognized\n     */\n    joinMeetingAsync(meeting, cb, err) {\n        /* eslint-disable no-console */\n        // console.log(\">> MeetingTranscriber::joinMeetingAsync\");\n        /* eslint-enable no-console */\n        const meetingImpl = meeting;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(Exports_js_4.MeetingImpl, \"Meeting\");\n        // ref the meeting object\n        // create recognizer and subscribe to recognizer events\n        this.privRecognizer = new Exports_js_1.TranscriberRecognizer(meeting.config, this.privAudioConfig);\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(this.privRecognizer, \"Recognizer\");\n        this.privRecognizer.connectMeetingCallbacks(this);\n        Exports_js_2.marshalPromiseToCallbacks(meetingImpl.connectTranscriberRecognizer(this.privRecognizer), cb, err);\n    }\n    /**\n     * Starts meeting transcription, until stopTranscribingAsync() is called.\n     * User must subscribe to events to receive transcription results.\n     * @member MeetingTranscriber.prototype.startTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startTranscribingAsync(cb, err) {\n        this.privRecognizer.startContinuousRecognitionAsync(cb, err);\n    }\n    /**\n     * Starts meeting transcription, until stopTranscribingAsync() is called.\n     * User must subscribe to events to receive transcription results.\n     * @member MeetingTranscriber.prototype.stopTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopTranscribingAsync(cb, err) {\n        this.privRecognizer.stopContinuousRecognitionAsync(cb, err);\n    }\n    /**\n     * Leave the current meeting. After this is called, you will no longer receive any events.\n     */\n    leaveMeetingAsync(cb, err) {\n        this.privRecognizer.disconnectCallbacks();\n        // eslint-disable-next-line\n        Exports_js_2.marshalPromiseToCallbacks((async () => { return; })(), cb, err);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member MeetingTranscriber.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        Exports_js_2.marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member MeetingTranscriber.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    async dispose(disposing) {\n        if (this.privDisposedRecognizer) {\n            return;\n        }\n        if (!!this.privRecognizer) {\n            await this.privRecognizer.close();\n            this.privRecognizer = undefined;\n        }\n        if (disposing) {\n            this.privDisposedRecognizer = true;\n        }\n    }\n}\nexports.MeetingTranscriber = MeetingTranscriber;\n\n//# sourceMappingURL=MeetingTranscriber.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL01lZXRpbmdUcmFuc2NyaWJlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLHFCQUFxQixtQkFBTyxDQUFDLDRJQUFnQztBQUM3RCxxQkFBcUIsbUJBQU8sQ0FBQyw4SEFBeUI7QUFDdEQsdUJBQXVCLG1CQUFPLENBQUMscUhBQWlCO0FBQ2hELHFCQUFxQixtQkFBTyxDQUFDLGlIQUFlO0FBQzVDLHFCQUFxQixtQkFBTyxDQUFDLDhIQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxhQUFhO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLG9CQUFvQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxTQUFTO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7O0FBRTFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL01lZXRpbmdUcmFuc2NyaWJlci5qcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1lZXRpbmdUcmFuc2NyaWJlciA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9jb21tb24uc3BlZWNoL0V4cG9ydHMuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzIgPSByZXF1aXJlKFwiLi4vLi4vY29tbW9uL0V4cG9ydHMuanNcIik7XG5jb25zdCBDb250cmFjdHNfanNfMSA9IHJlcXVpcmUoXCIuLi9Db250cmFjdHMuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzMgPSByZXF1aXJlKFwiLi4vRXhwb3J0cy5qc1wiKTtcbmNvbnN0IEV4cG9ydHNfanNfNCA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG5jbGFzcyBNZWV0aW5nVHJhbnNjcmliZXIge1xuICAgIC8qKlxuICAgICAqIE1lZXRpbmdUcmFuc2NyaWJlciBjb25zdHJ1Y3Rvci5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge0F1ZGlvQ29uZmlnfSBhdWRpb0NvbmZpZyAtIEFuIG9wdGlvbmFsIGF1ZGlvIGNvbmZpZ3VyYXRpb24gYXNzb2NpYXRlZCB3aXRoIHRoZSByZWNvZ25pemVyXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoYXVkaW9Db25maWcpIHtcbiAgICAgICAgdGhpcy5wcml2QXVkaW9Db25maWcgPSBhdWRpb0NvbmZpZztcbiAgICAgICAgdGhpcy5wcml2UHJvcGVydGllcyA9IG5ldyBFeHBvcnRzX2pzXzMuUHJvcGVydHlDb2xsZWN0aW9uKCk7XG4gICAgICAgIHRoaXMucHJpdlJlY29nbml6ZXIgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMucHJpdkRpc3Bvc2VkUmVjb2duaXplciA9IGZhbHNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBzcG9rZW4gbGFuZ3VhZ2Ugb2YgcmVjb2duaXRpb24uXG4gICAgICogQG1lbWJlciBNZWV0aW5nVHJhbnNjcmliZXIucHJvdG90eXBlLnNwZWVjaFJlY29nbml0aW9uTGFuZ3VhZ2VcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge3N0cmluZ30gVGhlIHNwb2tlbiBsYW5ndWFnZSBvZiByZWNvZ25pdGlvbi5cbiAgICAgKi9cbiAgICBnZXQgc3BlZWNoUmVjb2duaXRpb25MYW5ndWFnZSgpIHtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZEaXNwb3NlZCh0aGlzLnByaXZEaXNwb3NlZFJlY29nbml6ZXIpO1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9wZXJ0aWVzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMy5Qcm9wZXJ0eUlkLlNwZWVjaFNlcnZpY2VDb25uZWN0aW9uX1JlY29MYW5ndWFnZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBjb2xsZWN0aW9uIG9mIHByb3BlcnRpZXMgYW5kIHRoZWlyIHZhbHVlcyBkZWZpbmVkIGZvciB0aGlzIE1lZXRpbmdUcmFuc2NyaWJlci5cbiAgICAgKiBAbWVtYmVyIE1lZXRpbmdUcmFuc2NyaWJlci5wcm90b3R5cGUucHJvcGVydGllc1xuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7UHJvcGVydHlDb2xsZWN0aW9ufSBUaGUgY29sbGVjdGlvbiBvZiBwcm9wZXJ0aWVzIGFuZCB0aGVpciB2YWx1ZXMgZGVmaW5lZCBmb3IgdGhpcyBNZWV0aW5nVHJhbnNjcmliZXIuXG4gICAgICovXG4gICAgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQcm9wZXJ0aWVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBASW50ZXJuYWxcbiAgICAgKiBJbnRlcm5hbCBkYXRhIG1lbWJlciB0byBzdXBwb3J0IGZyb21SZWNvZ25pemVyKiBwYXR0ZXJuIG1ldGhvZHMgb24gb3RoZXIgY2xhc3Nlcy5cbiAgICAgKiBEbyBub3QgdXNlIGV4dGVybmFsbHksIG9iamVjdCByZXR1cm5lZCB3aWxsIGNoYW5nZSB3aXRob3V0IHdhcm5pbmcgb3Igbm90aWNlLlxuICAgICAqL1xuICAgIGdldCBpbnRlcm5hbERhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZSZWNvZ25pemVyLmludGVybmFsRGF0YTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQERlcHJlY2F0ZWRcbiAgICAgKiBAT2Jzb2xldGVcbiAgICAgKiBQbGVhc2UgdXNlIHRoZSBDb25uZWN0aW9uLmZyb21SZWNvZ25pemVyIHBhdHRlcm4gdG8gb2J0YWluIGEgY29ubmVjdGlvbiBvYmplY3RcbiAgICAgKi9cbiAgICBnZXQgY29ubmVjdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIEV4cG9ydHNfanNfMy5Db25uZWN0aW9uLmZyb21SZWNvZ25pemVyKHRoaXMucHJpdlJlY29nbml6ZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBhdXRob3JpemF0aW9uIHRva2VuIHVzZWQgdG8gY29tbXVuaWNhdGUgd2l0aCB0aGUgc2VydmljZS5cbiAgICAgKiBAbWVtYmVyIE1lZXRpbmdUcmFuc2NyaWJlci5wcm90b3R5cGUuYXV0aG9yaXphdGlvblRva2VuXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IEF1dGhvcml6YXRpb24gdG9rZW4uXG4gICAgICovXG4gICAgZ2V0IGF1dGhvcml6YXRpb25Ub2tlbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcGVydGllcy5nZXRQcm9wZXJ0eShFeHBvcnRzX2pzXzMuUHJvcGVydHlJZC5TcGVlY2hTZXJ2aWNlQXV0aG9yaXphdGlvbl9Ub2tlbik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMvU2V0cyB0aGUgYXV0aG9yaXphdGlvbiB0b2tlbiB1c2VkIHRvIGNvbW11bmljYXRlIHdpdGggdGhlIHNlcnZpY2UuXG4gICAgICogQG1lbWJlciBNZWV0aW5nVHJhbnNjcmliZXIucHJvdG90eXBlLmF1dGhvcml6YXRpb25Ub2tlblxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdG9rZW4gLSBBdXRob3JpemF0aW9uIHRva2VuLlxuICAgICAqL1xuICAgIHNldCBhdXRob3JpemF0aW9uVG9rZW4odG9rZW4pIHtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZOdWxsT3JXaGl0ZXNwYWNlKHRva2VuLCBcInRva2VuXCIpO1xuICAgICAgICB0aGlzLnByb3BlcnRpZXMuc2V0UHJvcGVydHkoRXhwb3J0c19qc18zLlByb3BlcnR5SWQuU3BlZWNoU2VydmljZUF1dGhvcml6YXRpb25fVG9rZW4sIHRva2VuKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtNZWV0aW5nfSBtZWV0aW5nIC0gbWVldGluZyB0byBiZSByZWNvZ25pemVkXG4gICAgICovXG4gICAgam9pbk1lZXRpbmdBc3luYyhtZWV0aW5nLCBjYiwgZXJyKSB7XG4gICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgICAgICAgLy8gY29uc29sZS5sb2coXCI+PiBNZWV0aW5nVHJhbnNjcmliZXI6OmpvaW5NZWV0aW5nQXN5bmNcIik7XG4gICAgICAgIC8qIGVzbGludC1lbmFibGUgbm8tY29uc29sZSAqL1xuICAgICAgICBjb25zdCBtZWV0aW5nSW1wbCA9IG1lZXRpbmc7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yVW5kZWZpbmVkKEV4cG9ydHNfanNfNC5NZWV0aW5nSW1wbCwgXCJNZWV0aW5nXCIpO1xuICAgICAgICAvLyByZWYgdGhlIG1lZXRpbmcgb2JqZWN0XG4gICAgICAgIC8vIGNyZWF0ZSByZWNvZ25pemVyIGFuZCBzdWJzY3JpYmUgdG8gcmVjb2duaXplciBldmVudHNcbiAgICAgICAgdGhpcy5wcml2UmVjb2duaXplciA9IG5ldyBFeHBvcnRzX2pzXzEuVHJhbnNjcmliZXJSZWNvZ25pemVyKG1lZXRpbmcuY29uZmlnLCB0aGlzLnByaXZBdWRpb0NvbmZpZyk7XG4gICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yVW5kZWZpbmVkKHRoaXMucHJpdlJlY29nbml6ZXIsIFwiUmVjb2duaXplclwiKTtcbiAgICAgICAgdGhpcy5wcml2UmVjb2duaXplci5jb25uZWN0TWVldGluZ0NhbGxiYWNrcyh0aGlzKTtcbiAgICAgICAgRXhwb3J0c19qc18yLm1hcnNoYWxQcm9taXNlVG9DYWxsYmFja3MobWVldGluZ0ltcGwuY29ubmVjdFRyYW5zY3JpYmVyUmVjb2duaXplcih0aGlzLnByaXZSZWNvZ25pemVyKSwgY2IsIGVycik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0YXJ0cyBtZWV0aW5nIHRyYW5zY3JpcHRpb24sIHVudGlsIHN0b3BUcmFuc2NyaWJpbmdBc3luYygpIGlzIGNhbGxlZC5cbiAgICAgKiBVc2VyIG11c3Qgc3Vic2NyaWJlIHRvIGV2ZW50cyB0byByZWNlaXZlIHRyYW5zY3JpcHRpb24gcmVzdWx0cy5cbiAgICAgKiBAbWVtYmVyIE1lZXRpbmdUcmFuc2NyaWJlci5wcm90b3R5cGUuc3RhcnRUcmFuc2NyaWJpbmdBc3luY1xuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0gY2IgLSBDYWxsYmFjayBpbnZva2VkIG9uY2UgdGhlIHRyYW5zY3JpcHRpb24gaGFzIHN0YXJ0ZWQuXG4gICAgICogQHBhcmFtIGVyciAtIENhbGxiYWNrIGludm9rZWQgaW4gY2FzZSBvZiBhbiBlcnJvci5cbiAgICAgKi9cbiAgICBzdGFydFRyYW5zY3JpYmluZ0FzeW5jKGNiLCBlcnIpIHtcbiAgICAgICAgdGhpcy5wcml2UmVjb2duaXplci5zdGFydENvbnRpbnVvdXNSZWNvZ25pdGlvbkFzeW5jKGNiLCBlcnIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTdGFydHMgbWVldGluZyB0cmFuc2NyaXB0aW9uLCB1bnRpbCBzdG9wVHJhbnNjcmliaW5nQXN5bmMoKSBpcyBjYWxsZWQuXG4gICAgICogVXNlciBtdXN0IHN1YnNjcmliZSB0byBldmVudHMgdG8gcmVjZWl2ZSB0cmFuc2NyaXB0aW9uIHJlc3VsdHMuXG4gICAgICogQG1lbWJlciBNZWV0aW5nVHJhbnNjcmliZXIucHJvdG90eXBlLnN0b3BUcmFuc2NyaWJpbmdBc3luY1xuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0gY2IgLSBDYWxsYmFjayBpbnZva2VkIG9uY2UgdGhlIHRyYW5zY3JpcHRpb24gaGFzIHN0YXJ0ZWQuXG4gICAgICogQHBhcmFtIGVyciAtIENhbGxiYWNrIGludm9rZWQgaW4gY2FzZSBvZiBhbiBlcnJvci5cbiAgICAgKi9cbiAgICBzdG9wVHJhbnNjcmliaW5nQXN5bmMoY2IsIGVycikge1xuICAgICAgICB0aGlzLnByaXZSZWNvZ25pemVyLnN0b3BDb250aW51b3VzUmVjb2duaXRpb25Bc3luYyhjYiwgZXJyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGVhdmUgdGhlIGN1cnJlbnQgbWVldGluZy4gQWZ0ZXIgdGhpcyBpcyBjYWxsZWQsIHlvdSB3aWxsIG5vIGxvbmdlciByZWNlaXZlIGFueSBldmVudHMuXG4gICAgICovXG4gICAgbGVhdmVNZWV0aW5nQXN5bmMoY2IsIGVycikge1xuICAgICAgICB0aGlzLnByaXZSZWNvZ25pemVyLmRpc2Nvbm5lY3RDYWxsYmFja3MoKTtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICAgIEV4cG9ydHNfanNfMi5tYXJzaGFsUHJvbWlzZVRvQ2FsbGJhY2tzKChhc3luYyAoKSA9PiB7IHJldHVybjsgfSkoKSwgY2IsIGVycik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGNsb3NlcyBhbGwgZXh0ZXJuYWwgcmVzb3VyY2VzIGhlbGQgYnkgYW4gaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcy5cbiAgICAgKiBAbWVtYmVyIE1lZXRpbmdUcmFuc2NyaWJlci5wcm90b3R5cGUuY2xvc2VcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICovXG4gICAgY2xvc2UoY2IsIGVycm9yQ2IpIHtcbiAgICAgICAgQ29udHJhY3RzX2pzXzEuQ29udHJhY3RzLnRocm93SWZEaXNwb3NlZCh0aGlzLnByaXZEaXNwb3NlZFJlY29nbml6ZXIpO1xuICAgICAgICBFeHBvcnRzX2pzXzIubWFyc2hhbFByb21pc2VUb0NhbGxiYWNrcyh0aGlzLmRpc3Bvc2UodHJ1ZSksIGNiLCBlcnJvckNiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGlzcG9zZXMgYW55IHJlc291cmNlcyBoZWxkIGJ5IHRoZSBvYmplY3QuXG4gICAgICogQG1lbWJlciBNZWV0aW5nVHJhbnNjcmliZXIucHJvdG90eXBlLmRpc3Bvc2VcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtib29sZWFufSBkaXNwb3NpbmcgLSB0cnVlIGlmIGRpc3Bvc2luZyB0aGUgb2JqZWN0LlxuICAgICAqL1xuICAgIGFzeW5jIGRpc3Bvc2UoZGlzcG9zaW5nKSB7XG4gICAgICAgIGlmICh0aGlzLnByaXZEaXNwb3NlZFJlY29nbml6ZXIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoISF0aGlzLnByaXZSZWNvZ25pemVyKSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLnByaXZSZWNvZ25pemVyLmNsb3NlKCk7XG4gICAgICAgICAgICB0aGlzLnByaXZSZWNvZ25pemVyID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkaXNwb3NpbmcpIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkRpc3Bvc2VkUmVjb2duaXplciA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLk1lZXRpbmdUcmFuc2NyaWJlciA9IE1lZXRpbmdUcmFuc2NyaWJlcjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWVldGluZ1RyYW5zY3JpYmVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/MeetingTranscriber.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/MeetingTranscriptionCanceledEventArgs.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/MeetingTranscriptionCanceledEventArgs.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MeetingTranscriptionCanceledEventArgs = void 0;\nconst CancellationEventArgsBase_js_1 = __webpack_require__(/*! ../CancellationEventArgsBase.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/CancellationEventArgsBase.js\");\nclass MeetingTranscriptionCanceledEventArgs extends CancellationEventArgsBase_js_1.CancellationEventArgsBase {\n}\nexports.MeetingTranscriptionCanceledEventArgs = MeetingTranscriptionCanceledEventArgs;\n\n//# sourceMappingURL=MeetingTranscriptionCanceledEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL01lZXRpbmdUcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkNBQTZDO0FBQzdDLHVDQUF1QyxtQkFBTyxDQUFDLHFKQUFpQztBQUNoRjtBQUNBO0FBQ0EsNkNBQTZDOztBQUU3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvVHJhbnNjcmlwdGlvbi9NZWV0aW5nVHJhbnNjcmlwdGlvbkNhbmNlbGVkRXZlbnRBcmdzLmpzPzgzMzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8vIE11bHRpLWRldmljZSBDb252ZXJzYXRpb24gaXMgYSBQcmV2aWV3IGZlYXR1cmUuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1lZXRpbmdUcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3MgPSB2b2lkIDA7XG5jb25zdCBDYW5jZWxsYXRpb25FdmVudEFyZ3NCYXNlX2pzXzEgPSByZXF1aXJlKFwiLi4vQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZS5qc1wiKTtcbmNsYXNzIE1lZXRpbmdUcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3MgZXh0ZW5kcyBDYW5jZWxsYXRpb25FdmVudEFyZ3NCYXNlX2pzXzEuQ2FuY2VsbGF0aW9uRXZlbnRBcmdzQmFzZSB7XG59XG5leHBvcnRzLk1lZXRpbmdUcmFuc2NyaXB0aW9uQ2FuY2VsZWRFdmVudEFyZ3MgPSBNZWV0aW5nVHJhbnNjcmlwdGlvbkNhbmNlbGVkRXZlbnRBcmdzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1NZWV0aW5nVHJhbnNjcmlwdGlvbkNhbmNlbGVkRXZlbnRBcmdzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/MeetingTranscriptionCanceledEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ParticipantChangedReason.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ParticipantChangedReason.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ParticipantChangedReason = void 0;\nvar ParticipantChangedReason;\n(function (ParticipantChangedReason) {\n    /** Participant has joined the conversation. */\n    ParticipantChangedReason[ParticipantChangedReason[\"JoinedConversation\"] = 0] = \"JoinedConversation\";\n    /** Participant has left the conversation. This could be voluntary, or involuntary\n     * (e.g. they are experiencing networking issues).\n     */\n    ParticipantChangedReason[ParticipantChangedReason[\"LeftConversation\"] = 1] = \"LeftConversation\";\n    /** The participants' state has changed (e.g. they became muted, changed their nickname). */\n    ParticipantChangedReason[ParticipantChangedReason[\"Updated\"] = 2] = \"Updated\";\n})(ParticipantChangedReason = exports.ParticipantChangedReason || (exports.ParticipantChangedReason = {}));\n\n//# sourceMappingURL=ParticipantChangedReason.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2NyaXB0aW9uL1BhcnRpY2lwYW50Q2hhbmdlZFJlYXNvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtFQUFrRSxnQ0FBZ0MsS0FBSzs7QUFFeEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1RyYW5zY3JpcHRpb24vUGFydGljaXBhbnRDaGFuZ2VkUmVhc29uLmpzPzUyZmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8vIE11bHRpLWRldmljZSBDb252ZXJzYXRpb24gaXMgYSBQcmV2aWV3IGZlYXR1cmUuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBhcnRpY2lwYW50Q2hhbmdlZFJlYXNvbiA9IHZvaWQgMDtcbnZhciBQYXJ0aWNpcGFudENoYW5nZWRSZWFzb247XG4oZnVuY3Rpb24gKFBhcnRpY2lwYW50Q2hhbmdlZFJlYXNvbikge1xuICAgIC8qKiBQYXJ0aWNpcGFudCBoYXMgam9pbmVkIHRoZSBjb252ZXJzYXRpb24uICovXG4gICAgUGFydGljaXBhbnRDaGFuZ2VkUmVhc29uW1BhcnRpY2lwYW50Q2hhbmdlZFJlYXNvbltcIkpvaW5lZENvbnZlcnNhdGlvblwiXSA9IDBdID0gXCJKb2luZWRDb252ZXJzYXRpb25cIjtcbiAgICAvKiogUGFydGljaXBhbnQgaGFzIGxlZnQgdGhlIGNvbnZlcnNhdGlvbi4gVGhpcyBjb3VsZCBiZSB2b2x1bnRhcnksIG9yIGludm9sdW50YXJ5XG4gICAgICogKGUuZy4gdGhleSBhcmUgZXhwZXJpZW5jaW5nIG5ldHdvcmtpbmcgaXNzdWVzKS5cbiAgICAgKi9cbiAgICBQYXJ0aWNpcGFudENoYW5nZWRSZWFzb25bUGFydGljaXBhbnRDaGFuZ2VkUmVhc29uW1wiTGVmdENvbnZlcnNhdGlvblwiXSA9IDFdID0gXCJMZWZ0Q29udmVyc2F0aW9uXCI7XG4gICAgLyoqIFRoZSBwYXJ0aWNpcGFudHMnIHN0YXRlIGhhcyBjaGFuZ2VkIChlLmcuIHRoZXkgYmVjYW1lIG11dGVkLCBjaGFuZ2VkIHRoZWlyIG5pY2tuYW1lKS4gKi9cbiAgICBQYXJ0aWNpcGFudENoYW5nZWRSZWFzb25bUGFydGljaXBhbnRDaGFuZ2VkUmVhc29uW1wiVXBkYXRlZFwiXSA9IDJdID0gXCJVcGRhdGVkXCI7XG59KShQYXJ0aWNpcGFudENoYW5nZWRSZWFzb24gPSBleHBvcnRzLlBhcnRpY2lwYW50Q2hhbmdlZFJlYXNvbiB8fCAoZXhwb3J0cy5QYXJ0aWNpcGFudENoYW5nZWRSZWFzb24gPSB7fSkpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJ0aWNpcGFudENoYW5nZWRSZWFzb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/ParticipantChangedReason.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionCanceledEventArgs.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionCanceledEventArgs.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranslationRecognitionCanceledEventArgs = void 0;\n/**\n * Define payload of speech recognition canceled result events.\n * @class TranslationRecognitionCanceledEventArgs\n */\nclass TranslationRecognitionCanceledEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} sessionid - The session id.\n     * @param {CancellationReason} cancellationReason - The cancellation reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {TranslationRecognitionResult} result - The result.\n     */\n    constructor(sessionid, cancellationReason, errorDetails, errorCode, result) {\n        this.privCancelReason = cancellationReason;\n        this.privErrorDetails = errorDetails;\n        this.privResult = result;\n        this.privSessionId = sessionid;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * Specifies the recognition result.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {TranslationRecognitionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n    /**\n     * Specifies the session identifier.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.sessionId\n     * @function\n     * @public\n     * @returns {string} the session identifier.\n     */\n    get sessionId() {\n        return this.privSessionId;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privCancelReason;\n    }\n    /**\n     * The error code in case of an unsuccessful recognition.\n     * Added in version 1.1.0.\n     * @return An error code that represents the error reason.\n     */\n    get errorCode() {\n        return this.privErrorCode;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\nexports.TranslationRecognitionCanceledEventArgs = TranslationRecognitionCanceledEventArgs;\n\n//# sourceMappingURL=TranslationRecognitionCanceledEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2xhdGlvblJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsb0JBQW9CO0FBQ25DLGVBQWUsUUFBUTtBQUN2QixlQUFlLDhCQUE4QjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiw4QkFBOEI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLG9CQUFvQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQzs7QUFFL0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1RyYW5zbGF0aW9uUmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJncy5qcz84MjFlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRyYW5zbGF0aW9uUmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJncyA9IHZvaWQgMDtcbi8qKlxuICogRGVmaW5lIHBheWxvYWQgb2Ygc3BlZWNoIHJlY29nbml0aW9uIGNhbmNlbGVkIHJlc3VsdCBldmVudHMuXG4gKiBAY2xhc3MgVHJhbnNsYXRpb25SZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzXG4gKi9cbmNsYXNzIFRyYW5zbGF0aW9uUmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJncyB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYW4gaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcy5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2Vzc2lvbmlkIC0gVGhlIHNlc3Npb24gaWQuXG4gICAgICogQHBhcmFtIHtDYW5jZWxsYXRpb25SZWFzb259IGNhbmNlbGxhdGlvblJlYXNvbiAtIFRoZSBjYW5jZWxsYXRpb24gcmVhc29uLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBlcnJvckRldGFpbHMgLSBFcnJvciBkZXRhaWxzLCBpZiBwcm92aWRlZC5cbiAgICAgKiBAcGFyYW0ge1RyYW5zbGF0aW9uUmVjb2duaXRpb25SZXN1bHR9IHJlc3VsdCAtIFRoZSByZXN1bHQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3Ioc2Vzc2lvbmlkLCBjYW5jZWxsYXRpb25SZWFzb24sIGVycm9yRGV0YWlscywgZXJyb3JDb2RlLCByZXN1bHQpIHtcbiAgICAgICAgdGhpcy5wcml2Q2FuY2VsUmVhc29uID0gY2FuY2VsbGF0aW9uUmVhc29uO1xuICAgICAgICB0aGlzLnByaXZFcnJvckRldGFpbHMgPSBlcnJvckRldGFpbHM7XG4gICAgICAgIHRoaXMucHJpdlJlc3VsdCA9IHJlc3VsdDtcbiAgICAgICAgdGhpcy5wcml2U2Vzc2lvbklkID0gc2Vzc2lvbmlkO1xuICAgICAgICB0aGlzLnByaXZFcnJvckNvZGUgPSBlcnJvckNvZGU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyB0aGUgcmVjb2duaXRpb24gcmVzdWx0LlxuICAgICAqIEBtZW1iZXIgVHJhbnNsYXRpb25SZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzLnByb3RvdHlwZS5yZXN1bHRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge1RyYW5zbGF0aW9uUmVjb2duaXRpb25SZXN1bHR9IHRoZSByZWNvZ25pdGlvbiByZXN1bHQuXG4gICAgICovXG4gICAgZ2V0IHJlc3VsdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlJlc3VsdDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSBzZXNzaW9uIGlkZW50aWZpZXIuXG4gICAgICogQG1lbWJlciBUcmFuc2xhdGlvblJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3MucHJvdG90eXBlLnNlc3Npb25JZFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSB0aGUgc2Vzc2lvbiBpZGVudGlmaWVyLlxuICAgICAqL1xuICAgIGdldCBzZXNzaW9uSWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTZXNzaW9uSWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSByZWFzb24gdGhlIHJlY29nbml0aW9uIHdhcyBjYW5jZWxlZC5cbiAgICAgKiBAbWVtYmVyIFRyYW5zbGF0aW9uUmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJncy5wcm90b3R5cGUucmVhc29uXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtDYW5jZWxsYXRpb25SZWFzb259IFNwZWNpZmllcyB0aGUgcmVhc29uIGNhbmNlbGVkLlxuICAgICAqL1xuICAgIGdldCByZWFzb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZDYW5jZWxSZWFzb247XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBlcnJvciBjb2RlIGluIGNhc2Ugb2YgYW4gdW5zdWNjZXNzZnVsIHJlY29nbml0aW9uLlxuICAgICAqIEFkZGVkIGluIHZlcnNpb24gMS4xLjAuXG4gICAgICogQHJldHVybiBBbiBlcnJvciBjb2RlIHRoYXQgcmVwcmVzZW50cyB0aGUgZXJyb3IgcmVhc29uLlxuICAgICAqL1xuICAgIGdldCBlcnJvckNvZGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZFcnJvckNvZGU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEluIGNhc2Ugb2YgYW4gdW5zdWNjZXNzZnVsIHJlY29nbml0aW9uLCBwcm92aWRlcyBkZXRhaWxzIG9mIHRoZSBvY2N1cnJlZCBlcnJvci5cbiAgICAgKiBAbWVtYmVyIFRyYW5zbGF0aW9uUmVjb2duaXRpb25DYW5jZWxlZEV2ZW50QXJncy5wcm90b3R5cGUuZXJyb3JEZXRhaWxzXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IEEgU3RyaW5nIHRoYXQgcmVwcmVzZW50cyB0aGUgZXJyb3IgZGV0YWlscy5cbiAgICAgKi9cbiAgICBnZXQgZXJyb3JEZXRhaWxzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RXJyb3JEZXRhaWxzO1xuICAgIH1cbn1cbmV4cG9ydHMuVHJhbnNsYXRpb25SZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzID0gVHJhbnNsYXRpb25SZWNvZ25pdGlvbkNhbmNlbGVkRXZlbnRBcmdzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1UcmFuc2xhdGlvblJlY29nbml0aW9uQ2FuY2VsZWRFdmVudEFyZ3MuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionCanceledEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionEventArgs.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionEventArgs.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranslationRecognitionEventArgs = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Translation text result event arguments.\n * @class TranslationRecognitionEventArgs\n */\nclass TranslationRecognitionEventArgs extends Exports_js_1.RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {TranslationRecognitionResult} result - The translation recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the recognition result.\n     * @member TranslationRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {TranslationRecognitionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.TranslationRecognitionEventArgs = TranslationRecognitionEventArgs;\n\n//# sourceMappingURL=TranslationRecognitionEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2xhdGlvblJlY29nbml0aW9uRXZlbnRBcmdzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1Q0FBdUM7QUFDdkMscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsOEJBQThCO0FBQzdDLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsOEJBQThCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7O0FBRXZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2xhdGlvblJlY29nbml0aW9uRXZlbnRBcmdzLmpzPzlmNTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVHJhbnNsYXRpb25SZWNvZ25pdGlvbkV2ZW50QXJncyA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG4vKipcbiAqIFRyYW5zbGF0aW9uIHRleHQgcmVzdWx0IGV2ZW50IGFyZ3VtZW50cy5cbiAqIEBjbGFzcyBUcmFuc2xhdGlvblJlY29nbml0aW9uRXZlbnRBcmdzXG4gKi9cbmNsYXNzIFRyYW5zbGF0aW9uUmVjb2duaXRpb25FdmVudEFyZ3MgZXh0ZW5kcyBFeHBvcnRzX2pzXzEuUmVjb2duaXRpb25FdmVudEFyZ3Mge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtUcmFuc2xhdGlvblJlY29nbml0aW9uUmVzdWx0fSByZXN1bHQgLSBUaGUgdHJhbnNsYXRpb24gcmVjb2duaXRpb24gcmVzdWx0LlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXQgLSBUaGUgb2Zmc2V0LlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZXNzaW9uSWQgLSBUaGUgc2Vzc2lvbiBpZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyZXN1bHQsIG9mZnNldCwgc2Vzc2lvbklkKSB7XG4gICAgICAgIHN1cGVyKG9mZnNldCwgc2Vzc2lvbklkKTtcbiAgICAgICAgdGhpcy5wcml2UmVzdWx0ID0gcmVzdWx0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIHJlY29nbml0aW9uIHJlc3VsdC5cbiAgICAgKiBAbWVtYmVyIFRyYW5zbGF0aW9uUmVjb2duaXRpb25FdmVudEFyZ3MucHJvdG90eXBlLnJlc3VsdFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7VHJhbnNsYXRpb25SZWNvZ25pdGlvblJlc3VsdH0gdGhlIHJlY29nbml0aW9uIHJlc3VsdC5cbiAgICAgKi9cbiAgICBnZXQgcmVzdWx0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVzdWx0O1xuICAgIH1cbn1cbmV4cG9ydHMuVHJhbnNsYXRpb25SZWNvZ25pdGlvbkV2ZW50QXJncyA9IFRyYW5zbGF0aW9uUmVjb2duaXRpb25FdmVudEFyZ3M7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyYW5zbGF0aW9uUmVjb2duaXRpb25FdmVudEFyZ3MuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionResult.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionResult.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranslationRecognitionResult = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Translation text result.\n * @class TranslationRecognitionResult\n */\nclass TranslationRecognitionResult extends Exports_js_1.SpeechRecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {Translations} translations - The translations.\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(translations, resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\n        this.privTranslations = translations;\n    }\n    static fromSpeechRecognitionResult(result) {\n        return new TranslationRecognitionResult(undefined, result.resultId, result.reason, result.text, result.duration, result.offset, result.language, result.languageDetectionConfidence, result.errorDetails, result.json, result.properties);\n    }\n    /**\n     * Presents the translation results. Each item in the dictionary represents\n     * a translation result in one of target languages, where the key is the name\n     * of the target language, in BCP-47 format, and the value is the translation\n     * text in the specified language.\n     * @member TranslationRecognitionResult.prototype.translations\n     * @function\n     * @public\n     * @returns {Translations} the current translation map that holds all translations requested.\n     */\n    get translations() {\n        return this.privTranslations;\n    }\n}\nexports.TranslationRecognitionResult = TranslationRecognitionResult;\n\n//# sourceMappingURL=TranslationRecognitionResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2xhdGlvblJlY29nbml0aW9uUmVzdWx0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQ0FBb0M7QUFDcEMscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsY0FBYztBQUM3QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxjQUFjO0FBQzdCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLG9CQUFvQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixjQUFjO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7O0FBRXBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2xhdGlvblJlY29nbml0aW9uUmVzdWx0LmpzP2RiNjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVHJhbnNsYXRpb25SZWNvZ25pdGlvblJlc3VsdCA9IHZvaWQgMDtcbmNvbnN0IEV4cG9ydHNfanNfMSA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG4vKipcbiAqIFRyYW5zbGF0aW9uIHRleHQgcmVzdWx0LlxuICogQGNsYXNzIFRyYW5zbGF0aW9uUmVjb2duaXRpb25SZXN1bHRcbiAqL1xuY2xhc3MgVHJhbnNsYXRpb25SZWNvZ25pdGlvblJlc3VsdCBleHRlbmRzIEV4cG9ydHNfanNfMS5TcGVlY2hSZWNvZ25pdGlvblJlc3VsdCB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYW4gaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcy5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge1RyYW5zbGF0aW9uc30gdHJhbnNsYXRpb25zIC0gVGhlIHRyYW5zbGF0aW9ucy5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcmVzdWx0SWQgLSBUaGUgcmVzdWx0IGlkLlxuICAgICAqIEBwYXJhbSB7UmVzdWx0UmVhc29ufSByZWFzb24gLSBUaGUgcmVhc29uLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IC0gVGhlIHJlY29nbml6ZWQgdGV4dC5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZHVyYXRpb24gLSBUaGUgZHVyYXRpb24uXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG9mZnNldCAtIFRoZSBvZmZzZXQgaW50byB0aGUgc3RyZWFtLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsYW5ndWFnZSAtIFByaW1hcnkgTGFuZ3VhZ2UgZGV0ZWN0ZWQsIGlmIHByb3ZpZGVkLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsYW5ndWFnZURldGVjdGlvbkNvbmZpZGVuY2UgLSBQcmltYXJ5IExhbmd1YWdlIGNvbmZpZGVuY2UgKFwiVW5rbm93bixcIiBcIkxvdyxcIiBcIk1lZGl1bSxcIiBcIkhpZ2hcIi4uLiksIGlmIHByb3ZpZGVkLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBlcnJvckRldGFpbHMgLSBFcnJvciBkZXRhaWxzLCBpZiBwcm92aWRlZC5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ganNvbiAtIEFkZGl0aW9uYWwgSnNvbiwgaWYgcHJvdmlkZWQuXG4gICAgICogQHBhcmFtIHtQcm9wZXJ0eUNvbGxlY3Rpb259IHByb3BlcnRpZXMgLSBBZGRpdGlvbmFsIHByb3BlcnRpZXMsIGlmIHByb3ZpZGVkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zbGF0aW9ucywgcmVzdWx0SWQsIHJlYXNvbiwgdGV4dCwgZHVyYXRpb24sIG9mZnNldCwgbGFuZ3VhZ2UsIGxhbmd1YWdlRGV0ZWN0aW9uQ29uZmlkZW5jZSwgZXJyb3JEZXRhaWxzLCBqc29uLCBwcm9wZXJ0aWVzKSB7XG4gICAgICAgIHN1cGVyKHJlc3VsdElkLCByZWFzb24sIHRleHQsIGR1cmF0aW9uLCBvZmZzZXQsIGxhbmd1YWdlLCBsYW5ndWFnZURldGVjdGlvbkNvbmZpZGVuY2UsIHVuZGVmaW5lZCwgZXJyb3JEZXRhaWxzLCBqc29uLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgdGhpcy5wcml2VHJhbnNsYXRpb25zID0gdHJhbnNsYXRpb25zO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbVNwZWVjaFJlY29nbml0aW9uUmVzdWx0KHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gbmV3IFRyYW5zbGF0aW9uUmVjb2duaXRpb25SZXN1bHQodW5kZWZpbmVkLCByZXN1bHQucmVzdWx0SWQsIHJlc3VsdC5yZWFzb24sIHJlc3VsdC50ZXh0LCByZXN1bHQuZHVyYXRpb24sIHJlc3VsdC5vZmZzZXQsIHJlc3VsdC5sYW5ndWFnZSwgcmVzdWx0Lmxhbmd1YWdlRGV0ZWN0aW9uQ29uZmlkZW5jZSwgcmVzdWx0LmVycm9yRGV0YWlscywgcmVzdWx0Lmpzb24sIHJlc3VsdC5wcm9wZXJ0aWVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUHJlc2VudHMgdGhlIHRyYW5zbGF0aW9uIHJlc3VsdHMuIEVhY2ggaXRlbSBpbiB0aGUgZGljdGlvbmFyeSByZXByZXNlbnRzXG4gICAgICogYSB0cmFuc2xhdGlvbiByZXN1bHQgaW4gb25lIG9mIHRhcmdldCBsYW5ndWFnZXMsIHdoZXJlIHRoZSBrZXkgaXMgdGhlIG5hbWVcbiAgICAgKiBvZiB0aGUgdGFyZ2V0IGxhbmd1YWdlLCBpbiBCQ1AtNDcgZm9ybWF0LCBhbmQgdGhlIHZhbHVlIGlzIHRoZSB0cmFuc2xhdGlvblxuICAgICAqIHRleHQgaW4gdGhlIHNwZWNpZmllZCBsYW5ndWFnZS5cbiAgICAgKiBAbWVtYmVyIFRyYW5zbGF0aW9uUmVjb2duaXRpb25SZXN1bHQucHJvdG90eXBlLnRyYW5zbGF0aW9uc1xuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7VHJhbnNsYXRpb25zfSB0aGUgY3VycmVudCB0cmFuc2xhdGlvbiBtYXAgdGhhdCBob2xkcyBhbGwgdHJhbnNsYXRpb25zIHJlcXVlc3RlZC5cbiAgICAgKi9cbiAgICBnZXQgdHJhbnNsYXRpb25zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VHJhbnNsYXRpb25zO1xuICAgIH1cbn1cbmV4cG9ydHMuVHJhbnNsYXRpb25SZWNvZ25pdGlvblJlc3VsdCA9IFRyYW5zbGF0aW9uUmVjb2duaXRpb25SZXN1bHQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyYW5zbGF0aW9uUmVjb2duaXRpb25SZXN1bHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognitionResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognizer.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognizer.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranslationRecognizer = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ../common/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/Exports.js\");\nconst Connection_js_1 = __webpack_require__(/*! ./Connection.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Connection.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_3 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Translation recognizer\n * @class TranslationRecognizer\n */\nclass TranslationRecognizer extends Exports_js_3.Recognizer {\n    /**\n     * Initializes an instance of the TranslationRecognizer.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechConfig - Set of properties to configure this recognizer.\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\n     * @param {IConnectionFactory} connectionFactory - An optional connection factory to use to generate the endpoint URIs, headers to set, etc...\n     */\n    constructor(speechConfig, audioConfig, connectionFactory) {\n        const configImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(configImpl, \"speechConfig\");\n        super(audioConfig, configImpl.properties, connectionFactory || new Exports_js_1.TranslationConnectionFactory());\n        this.privDisposedTranslationRecognizer = false;\n        if (this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\n            Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice]);\n        }\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages]);\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage), Exports_js_3.PropertyId[Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage]);\n    }\n    /**\n     * TranslationRecognizer constructor.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechTranslationConfig - an set of initial properties for this recognizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    static FromConfig(speechTranslationConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechTranslationConfigImpl = speechTranslationConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechTranslationConfigImpl.properties);\n        return new TranslationRecognizer(speechTranslationConfig, audioConfig);\n    }\n    /**\n     * Gets the language name that was set when the recognizer was created.\n     * @member TranslationRecognizer.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} Gets the language name that was set when the recognizer was created.\n     */\n    get speechRecognitionLanguage() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets target languages for translation that were set when the recognizer was created.\n     * The language is specified in BCP-47 format. The translation will provide translated text for each of language.\n     * @member TranslationRecognizer.prototype.targetLanguages\n     * @function\n     * @public\n     * @returns {string[]} Gets target languages for translation that were set when the recognizer was created.\n     */\n    get targetLanguages() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n    }\n    /**\n     * Gets the name of output voice.\n     * @member TranslationRecognizer.prototype.voiceName\n     * @function\n     * @public\n     * @returns {string} the name of output voice.\n     */\n    get voiceName() {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n    }\n    /**\n     * The collection of properties and their values defined for this TranslationRecognizer.\n     * @member TranslationRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this TranslationRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member TranslationRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member TranslationRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} value - Authorization token.\n     */\n    set authorizationToken(value) {\n        this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    /**\n     * Starts recognition and translation, and stops after the first utterance is recognized.\n     * The task returns the translation text as result.\n     * Note: recognizeOnceAsync returns when the first utterance has been recognized, so it is suitable only\n     * for single shot recognition like command or query. For long-running recognition,\n     * use startContinuousRecognitionAsync() instead.\n     * @member TranslationRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the result when the translation has completed.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(cb, err) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        Exports_js_2.marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(Exports_js_1.RecognitionMode.Interactive), cb, err);\n    }\n    /**\n     * Starts recognition and translation, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive translation results.\n     * @member TranslationRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the translation has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startContinuousRecognitionAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(Exports_js_1.RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops continuous recognition and translation.\n     * @member TranslationRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the translation has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopContinuousRecognitionAsync(cb, err) {\n        Exports_js_2.marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * dynamically remove a language from list of target language\n     * (can be used while recognition is ongoing)\n     * @member TranslationRecognizer.prototype.removeTargetLanguage\n     * @function\n     * @param lang - language to be removed\n     * @public\n     */\n    removeTargetLanguage(lang) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(lang, \"language to be removed\");\n        if (this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n            const languages = this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n            const index = languages.indexOf(lang);\n            if (index > -1) {\n                languages.splice(index, 1);\n                this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\n                this.updateLanguages(languages);\n            }\n        }\n    }\n    /**\n     * dynamically add a language to list of target language\n     * (can be used while recognition is ongoing)\n     * @member TranslationRecognizer.prototype.addTargetLanguage\n     * @function\n     * @param lang - language to be added\n     * @public\n     */\n    addTargetLanguage(lang) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(lang, \"language to be added\");\n        let languages = [];\n        if (this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n            languages = this.properties.getProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n            if (!languages.includes(lang)) {\n                languages.push(lang);\n                this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\n            }\n        }\n        else {\n            this.properties.setProperty(Exports_js_3.PropertyId.SpeechServiceConnection_TranslationToLanguages, lang);\n            languages = [lang];\n        }\n        this.updateLanguages(languages);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member TranslationRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts_js_1.Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        Exports_js_2.marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * handles ConnectionEstablishedEvent for conversation translation scenarios.\n     * @member TranslationRecognizer.prototype.onConnection\n     * @function\n     * @public\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onConnection() { }\n    async dispose(disposing) {\n        if (this.privDisposedTranslationRecognizer) {\n            return;\n        }\n        this.privDisposedTranslationRecognizer = true;\n        if (disposing) {\n            await this.implRecognizerStop();\n            await super.dispose(disposing);\n        }\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        return new Exports_js_1.TranslationServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n    updateLanguages(languages) {\n        const conn = Connection_js_1.Connection.fromRecognizer(this);\n        if (!!conn) {\n            conn.setMessageProperty(\"speech.context\", \"translationcontext\", { to: languages });\n            conn.sendMessageAsync(\"event\", JSON.stringify({\n                id: \"translation\",\n                name: \"updateLanguage\",\n                to: languages\n            }));\n        }\n    }\n}\nexports.TranslationRecognizer = TranslationRecognizer;\n\n//# sourceMappingURL=TranslationRecognizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationRecognizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisEventArgs.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisEventArgs.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranslationSynthesisEventArgs = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Translation Synthesis event arguments\n * @class TranslationSynthesisEventArgs\n */\nclass TranslationSynthesisEventArgs extends Exports_js_1.SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {TranslationSynthesisResult} result - The translation synthesis result.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, sessionId) {\n        super(sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the translation synthesis result.\n     * @member TranslationSynthesisEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {TranslationSynthesisResult} Specifies the translation synthesis result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\nexports.TranslationSynthesisEventArgs = TranslationSynthesisEventArgs;\n\n//# sourceMappingURL=TranslationSynthesisEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2xhdGlvblN5bnRoZXNpc0V2ZW50QXJncy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUNBQXFDO0FBQ3JDLHFCQUFxQixtQkFBTyxDQUFDLGdIQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDRCQUE0QjtBQUMzQyxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNEJBQTRCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7O0FBRXJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2xhdGlvblN5bnRoZXNpc0V2ZW50QXJncy5qcz8zNzdlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRyYW5zbGF0aW9uU3ludGhlc2lzRXZlbnRBcmdzID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbi8qKlxuICogVHJhbnNsYXRpb24gU3ludGhlc2lzIGV2ZW50IGFyZ3VtZW50c1xuICogQGNsYXNzIFRyYW5zbGF0aW9uU3ludGhlc2lzRXZlbnRBcmdzXG4gKi9cbmNsYXNzIFRyYW5zbGF0aW9uU3ludGhlc2lzRXZlbnRBcmdzIGV4dGVuZHMgRXhwb3J0c19qc18xLlNlc3Npb25FdmVudEFyZ3Mge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtUcmFuc2xhdGlvblN5bnRoZXNpc1Jlc3VsdH0gcmVzdWx0IC0gVGhlIHRyYW5zbGF0aW9uIHN5bnRoZXNpcyByZXN1bHQuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHNlc3Npb25JZCAtIFRoZSBzZXNzaW9uIGlkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHJlc3VsdCwgc2Vzc2lvbklkKSB7XG4gICAgICAgIHN1cGVyKHNlc3Npb25JZCk7XG4gICAgICAgIHRoaXMucHJpdlJlc3VsdCA9IHJlc3VsdDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSB0cmFuc2xhdGlvbiBzeW50aGVzaXMgcmVzdWx0LlxuICAgICAqIEBtZW1iZXIgVHJhbnNsYXRpb25TeW50aGVzaXNFdmVudEFyZ3MucHJvdG90eXBlLnJlc3VsdFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7VHJhbnNsYXRpb25TeW50aGVzaXNSZXN1bHR9IFNwZWNpZmllcyB0aGUgdHJhbnNsYXRpb24gc3ludGhlc2lzIHJlc3VsdC5cbiAgICAgKi9cbiAgICBnZXQgcmVzdWx0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVzdWx0O1xuICAgIH1cbn1cbmV4cG9ydHMuVHJhbnNsYXRpb25TeW50aGVzaXNFdmVudEFyZ3MgPSBUcmFuc2xhdGlvblN5bnRoZXNpc0V2ZW50QXJncztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJhbnNsYXRpb25TeW50aGVzaXNFdmVudEFyZ3MuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisResult.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisResult.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TranslationSynthesisResult = void 0;\n/**\n * Defines translation synthesis result, i.e. the voice output of the translated\n * text in the target language.\n * @class TranslationSynthesisResult\n */\nclass TranslationSynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ResultReason} reason - The synthesis reason.\n     * @param {ArrayBuffer} audio - The audio data.\n     */\n    constructor(reason, audio) {\n        this.privReason = reason;\n        this.privAudio = audio;\n    }\n    /**\n     * Translated text in the target language.\n     * @member TranslationSynthesisResult.prototype.audio\n     * @function\n     * @public\n     * @returns {ArrayBuffer} Translated audio in the target language.\n     */\n    get audio() {\n        return this.privAudio;\n    }\n    /**\n     * The synthesis status.\n     * @member TranslationSynthesisResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} The synthesis status.\n     */\n    get reason() {\n        return this.privReason;\n    }\n}\nexports.TranslationSynthesisResult = TranslationSynthesisResult;\n\n//# sourceMappingURL=TranslationSynthesisResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2xhdGlvblN5bnRoZXNpc1Jlc3VsdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsY0FBYztBQUM3QixlQUFlLGFBQWE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsYUFBYTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsY0FBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDOztBQUVsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvVHJhbnNsYXRpb25TeW50aGVzaXNSZXN1bHQuanM/M2EzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmFuc2xhdGlvblN5bnRoZXNpc1Jlc3VsdCA9IHZvaWQgMDtcbi8qKlxuICogRGVmaW5lcyB0cmFuc2xhdGlvbiBzeW50aGVzaXMgcmVzdWx0LCBpLmUuIHRoZSB2b2ljZSBvdXRwdXQgb2YgdGhlIHRyYW5zbGF0ZWRcbiAqIHRleHQgaW4gdGhlIHRhcmdldCBsYW5ndWFnZS5cbiAqIEBjbGFzcyBUcmFuc2xhdGlvblN5bnRoZXNpc1Jlc3VsdFxuICovXG5jbGFzcyBUcmFuc2xhdGlvblN5bnRoZXNpc1Jlc3VsdCB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbmQgaW5pdGlhbGl6ZXMgYW4gaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcy5cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge1Jlc3VsdFJlYXNvbn0gcmVhc29uIC0gVGhlIHN5bnRoZXNpcyByZWFzb24uXG4gICAgICogQHBhcmFtIHtBcnJheUJ1ZmZlcn0gYXVkaW8gLSBUaGUgYXVkaW8gZGF0YS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihyZWFzb24sIGF1ZGlvKSB7XG4gICAgICAgIHRoaXMucHJpdlJlYXNvbiA9IHJlYXNvbjtcbiAgICAgICAgdGhpcy5wcml2QXVkaW8gPSBhdWRpbztcbiAgICB9XG4gICAgLyoqXG4gICAgICogVHJhbnNsYXRlZCB0ZXh0IGluIHRoZSB0YXJnZXQgbGFuZ3VhZ2UuXG4gICAgICogQG1lbWJlciBUcmFuc2xhdGlvblN5bnRoZXNpc1Jlc3VsdC5wcm90b3R5cGUuYXVkaW9cbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge0FycmF5QnVmZmVyfSBUcmFuc2xhdGVkIGF1ZGlvIGluIHRoZSB0YXJnZXQgbGFuZ3VhZ2UuXG4gICAgICovXG4gICAgZ2V0IGF1ZGlvKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2QXVkaW87XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBzeW50aGVzaXMgc3RhdHVzLlxuICAgICAqIEBtZW1iZXIgVHJhbnNsYXRpb25TeW50aGVzaXNSZXN1bHQucHJvdG90eXBlLnJlYXNvblxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7UmVzdWx0UmVhc29ufSBUaGUgc3ludGhlc2lzIHN0YXR1cy5cbiAgICAgKi9cbiAgICBnZXQgcmVhc29uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVhc29uO1xuICAgIH1cbn1cbmV4cG9ydHMuVHJhbnNsYXRpb25TeW50aGVzaXNSZXN1bHQgPSBUcmFuc2xhdGlvblN5bnRoZXNpc1Jlc3VsdDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJhbnNsYXRpb25TeW50aGVzaXNSZXN1bHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TranslationSynthesisResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Translations.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Translations.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Translations = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Represents collection of parameters and their values.\n * @class Translations\n */\nclass Translations {\n    constructor() {\n        // Use an PropertyCollection internally, just wrapping it to hide the | enum syntax it has.\n        this.privMap = new Exports_js_1.PropertyCollection();\n    }\n    /**\n     * Get the languages in the object in a String array.\n     * @member Translations.prototype.languages\n     * @function\n     * @public\n     * @returns {string[]} languages in translations object.\n     */\n    get languages() {\n        return this.privMap.keys;\n    }\n    /**\n     * Returns the parameter value in type String. The parameter must have the same type as String.\n     * Currently only String, int and bool are allowed.\n     * If the name is not available, the specified defaultValue is returned.\n     * @member Translations.prototype.get\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} def - The default value which is returned if the parameter is not available in the collection.\n     * @returns {string} value of the parameter.\n     */\n    get(key, def) {\n        return this.privMap.getProperty(key, def);\n    }\n    /**\n     * Sets the String value of the parameter specified by name.\n     * @member Translations.prototype.set\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} value - The value of the parameter.\n     */\n    set(key, value) {\n        this.privMap.setProperty(key, value);\n    }\n}\nexports.Translations = Translations;\n\n//# sourceMappingURL=Translations.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UcmFuc2xhdGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixxQkFBcUIsbUJBQU8sQ0FBQyxnSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFVBQVU7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9COztBQUVwQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvVHJhbnNsYXRpb25zLmpzPzAwMmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVHJhbnNsYXRpb25zID0gdm9pZCAwO1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4vRXhwb3J0cy5qc1wiKTtcbi8qKlxuICogUmVwcmVzZW50cyBjb2xsZWN0aW9uIG9mIHBhcmFtZXRlcnMgYW5kIHRoZWlyIHZhbHVlcy5cbiAqIEBjbGFzcyBUcmFuc2xhdGlvbnNcbiAqL1xuY2xhc3MgVHJhbnNsYXRpb25zIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLy8gVXNlIGFuIFByb3BlcnR5Q29sbGVjdGlvbiBpbnRlcm5hbGx5LCBqdXN0IHdyYXBwaW5nIGl0IHRvIGhpZGUgdGhlIHwgZW51bSBzeW50YXggaXQgaGFzLlxuICAgICAgICB0aGlzLnByaXZNYXAgPSBuZXcgRXhwb3J0c19qc18xLlByb3BlcnR5Q29sbGVjdGlvbigpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGxhbmd1YWdlcyBpbiB0aGUgb2JqZWN0IGluIGEgU3RyaW5nIGFycmF5LlxuICAgICAqIEBtZW1iZXIgVHJhbnNsYXRpb25zLnByb3RvdHlwZS5sYW5ndWFnZXNcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge3N0cmluZ1tdfSBsYW5ndWFnZXMgaW4gdHJhbnNsYXRpb25zIG9iamVjdC5cbiAgICAgKi9cbiAgICBnZXQgbGFuZ3VhZ2VzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2TWFwLmtleXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHBhcmFtZXRlciB2YWx1ZSBpbiB0eXBlIFN0cmluZy4gVGhlIHBhcmFtZXRlciBtdXN0IGhhdmUgdGhlIHNhbWUgdHlwZSBhcyBTdHJpbmcuXG4gICAgICogQ3VycmVudGx5IG9ubHkgU3RyaW5nLCBpbnQgYW5kIGJvb2wgYXJlIGFsbG93ZWQuXG4gICAgICogSWYgdGhlIG5hbWUgaXMgbm90IGF2YWlsYWJsZSwgdGhlIHNwZWNpZmllZCBkZWZhdWx0VmFsdWUgaXMgcmV0dXJuZWQuXG4gICAgICogQG1lbWJlciBUcmFuc2xhdGlvbnMucHJvdG90eXBlLmdldFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IC0gVGhlIHBhcmFtZXRlciBuYW1lLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkZWYgLSBUaGUgZGVmYXVsdCB2YWx1ZSB3aGljaCBpcyByZXR1cm5lZCBpZiB0aGUgcGFyYW1ldGVyIGlzIG5vdCBhdmFpbGFibGUgaW4gdGhlIGNvbGxlY3Rpb24uXG4gICAgICogQHJldHVybnMge3N0cmluZ30gdmFsdWUgb2YgdGhlIHBhcmFtZXRlci5cbiAgICAgKi9cbiAgICBnZXQoa2V5LCBkZWYpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdk1hcC5nZXRQcm9wZXJ0eShrZXksIGRlZik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIFN0cmluZyB2YWx1ZSBvZiB0aGUgcGFyYW1ldGVyIHNwZWNpZmllZCBieSBuYW1lLlxuICAgICAqIEBtZW1iZXIgVHJhbnNsYXRpb25zLnByb3RvdHlwZS5zZXRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleSAtIFRoZSBwYXJhbWV0ZXIgbmFtZS5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgLSBUaGUgdmFsdWUgb2YgdGhlIHBhcmFtZXRlci5cbiAgICAgKi9cbiAgICBzZXQoa2V5LCB2YWx1ZSkge1xuICAgICAgICB0aGlzLnByaXZNYXAuc2V0UHJvcGVydHkoa2V5LCB2YWx1ZSk7XG4gICAgfVxufVxuZXhwb3J0cy5UcmFuc2xhdGlvbnMgPSBUcmFuc2xhdGlvbnM7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyYW5zbGF0aW9ucy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Translations.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TurnStatusReceivedEventArgs.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TurnStatusReceivedEventArgs.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TurnStatusReceivedEventArgs = void 0;\nconst TurnStatusPayload_js_1 = __webpack_require__(/*! ../common.speech/ServiceMessages/TurnStatusPayload.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/TurnStatusPayload.js\");\n/**\n * Defines contents of received message/events.\n * @class TurnStatusReceivedEventArgs\n */\nclass TurnStatusReceivedEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} turnStatus - The JSON-encoded turn status message.\n     */\n    constructor(turnStatus) {\n        this.privTurnStatus = TurnStatusPayload_js_1.TurnStatusResponsePayload.fromJSON(turnStatus);\n    }\n    /**\n     * Gets the interaction identifier associated with this turn status event.\n     * @member TurnStatusReceivedEventArgs.prototype.interactionId\n     * @function\n     * @public\n     * @returns {any} the received interaction id.\n     */\n    get interactionId() {\n        return this.privTurnStatus.interactionId;\n    }\n    /**\n     * Gets the conversation identifier associated with this turn status event.\n     * @member TurnStatusReceivedEventArgs.prototype.conversationId\n     * @function\n     * @public\n     * @returns {any} the received conversation id.\n     */\n    get conversationId() {\n        return this.privTurnStatus.conversationId;\n    }\n    /**\n     * Gets the received turn status code.\n     * @member TurnStatusReceivedEventArgs.prototype.statusCode\n     * @function\n     * @public\n     * @returns {number} the received turn status.\n     */\n    get statusCode() {\n        return this.privTurnStatus.statusCode; // eslint-disable-line @typescript-eslint/no-unsafe-return\n    }\n}\nexports.TurnStatusReceivedEventArgs = TurnStatusReceivedEventArgs;\n\n//# sourceMappingURL=TurnStatusReceivedEventArgs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UdXJuU3RhdHVzUmVjZWl2ZWRFdmVudEFyZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQztBQUNuQywrQkFBK0IsbUJBQU8sQ0FBQyw2TEFBdUQ7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsS0FBSztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsS0FBSztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQSxtQ0FBbUM7O0FBRW5DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9UdXJuU3RhdHVzUmVjZWl2ZWRFdmVudEFyZ3MuanM/ZGFmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UdXJuU3RhdHVzUmVjZWl2ZWRFdmVudEFyZ3MgPSB2b2lkIDA7XG5jb25zdCBUdXJuU3RhdHVzUGF5bG9hZF9qc18xID0gcmVxdWlyZShcIi4uL2NvbW1vbi5zcGVlY2gvU2VydmljZU1lc3NhZ2VzL1R1cm5TdGF0dXNQYXlsb2FkLmpzXCIpO1xuLyoqXG4gKiBEZWZpbmVzIGNvbnRlbnRzIG9mIHJlY2VpdmVkIG1lc3NhZ2UvZXZlbnRzLlxuICogQGNsYXNzIFR1cm5TdGF0dXNSZWNlaXZlZEV2ZW50QXJnc1xuICovXG5jbGFzcyBUdXJuU3RhdHVzUmVjZWl2ZWRFdmVudEFyZ3Mge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIGluaXRpYWxpemVzIGFuIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MuXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHR1cm5TdGF0dXMgLSBUaGUgSlNPTi1lbmNvZGVkIHR1cm4gc3RhdHVzIG1lc3NhZ2UuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IodHVyblN0YXR1cykge1xuICAgICAgICB0aGlzLnByaXZUdXJuU3RhdHVzID0gVHVyblN0YXR1c1BheWxvYWRfanNfMS5UdXJuU3RhdHVzUmVzcG9uc2VQYXlsb2FkLmZyb21KU09OKHR1cm5TdGF0dXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBpbnRlcmFjdGlvbiBpZGVudGlmaWVyIGFzc29jaWF0ZWQgd2l0aCB0aGlzIHR1cm4gc3RhdHVzIGV2ZW50LlxuICAgICAqIEBtZW1iZXIgVHVyblN0YXR1c1JlY2VpdmVkRXZlbnRBcmdzLnByb3RvdHlwZS5pbnRlcmFjdGlvbklkXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHthbnl9IHRoZSByZWNlaXZlZCBpbnRlcmFjdGlvbiBpZC5cbiAgICAgKi9cbiAgICBnZXQgaW50ZXJhY3Rpb25JZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlR1cm5TdGF0dXMuaW50ZXJhY3Rpb25JZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgY29udmVyc2F0aW9uIGlkZW50aWZpZXIgYXNzb2NpYXRlZCB3aXRoIHRoaXMgdHVybiBzdGF0dXMgZXZlbnQuXG4gICAgICogQG1lbWJlciBUdXJuU3RhdHVzUmVjZWl2ZWRFdmVudEFyZ3MucHJvdG90eXBlLmNvbnZlcnNhdGlvbklkXG4gICAgICogQGZ1bmN0aW9uXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHthbnl9IHRoZSByZWNlaXZlZCBjb252ZXJzYXRpb24gaWQuXG4gICAgICovXG4gICAgZ2V0IGNvbnZlcnNhdGlvbklkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2VHVyblN0YXR1cy5jb252ZXJzYXRpb25JZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgcmVjZWl2ZWQgdHVybiBzdGF0dXMgY29kZS5cbiAgICAgKiBAbWVtYmVyIFR1cm5TdGF0dXNSZWNlaXZlZEV2ZW50QXJncy5wcm90b3R5cGUuc3RhdHVzQ29kZVxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSB0aGUgcmVjZWl2ZWQgdHVybiBzdGF0dXMuXG4gICAgICovXG4gICAgZ2V0IHN0YXR1c0NvZGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZUdXJuU3RhdHVzLnN0YXR1c0NvZGU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1yZXR1cm5cbiAgICB9XG59XG5leHBvcnRzLlR1cm5TdGF0dXNSZWNlaXZlZEV2ZW50QXJncyA9IFR1cm5TdGF0dXNSZWNlaXZlZEV2ZW50QXJncztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHVyblN0YXR1c1JlY2VpdmVkRXZlbnRBcmdzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/TurnStatusReceivedEventArgs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceInfo.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceInfo.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoiceInfo = exports.SynthesisVoiceType = exports.SynthesisVoiceGender = void 0;\n/**\n * Defines the gender of synthesis voices.\n * Added in version 1.20.0.\n */\nvar SynthesisVoiceGender;\n(function (SynthesisVoiceGender) {\n    /** Gender unknown */\n    SynthesisVoiceGender[SynthesisVoiceGender[\"Unknown\"] = 0] = \"Unknown\";\n    /** Female voice */\n    SynthesisVoiceGender[SynthesisVoiceGender[\"Female\"] = 1] = \"Female\";\n    /** Male voice */\n    SynthesisVoiceGender[SynthesisVoiceGender[\"Male\"] = 2] = \"Male\";\n    /** Neutral voice */\n    SynthesisVoiceGender[SynthesisVoiceGender[\"Neutral\"] = 3] = \"Neutral\";\n})(SynthesisVoiceGender = exports.SynthesisVoiceGender || (exports.SynthesisVoiceGender = {}));\nvar SynthesisVoiceType;\n(function (SynthesisVoiceType) {\n    SynthesisVoiceType[SynthesisVoiceType[\"OnlineNeural\"] = 1] = \"OnlineNeural\";\n    SynthesisVoiceType[SynthesisVoiceType[\"OnlineStandard\"] = 2] = \"OnlineStandard\";\n    SynthesisVoiceType[SynthesisVoiceType[\"OfflineNeural\"] = 3] = \"OfflineNeural\";\n    SynthesisVoiceType[SynthesisVoiceType[\"OfflineStandard\"] = 4] = \"OfflineStandard\";\n})(SynthesisVoiceType = exports.SynthesisVoiceType || (exports.SynthesisVoiceType = {}));\nconst GENDER_LOOKUP = {\n    [SynthesisVoiceGender[SynthesisVoiceGender.Neutral]]: SynthesisVoiceGender.Neutral,\n    [SynthesisVoiceGender[SynthesisVoiceGender.Male]]: SynthesisVoiceGender.Male,\n    [SynthesisVoiceGender[SynthesisVoiceGender.Female]]: SynthesisVoiceGender.Female,\n};\n/**\n * Information about Speech Synthesis voice\n * Added in version 1.20.0.\n * @class VoiceInfo\n */\nclass VoiceInfo {\n    constructor(json) {\n        this.privStyleList = [];\n        if (!!json) {\n            this.privName = json.Name;\n            this.privLocale = json.Locale;\n            this.privShortName = json.ShortName;\n            this.privLocaleName = json.LocaleName;\n            this.privDisplayName = json.DisplayName;\n            this.privLocalName = json.LocalName;\n            this.privVoiceType = json.VoiceType.endsWith(\"Standard\") ? SynthesisVoiceType.OnlineStandard : SynthesisVoiceType.OnlineNeural;\n            this.privGender = GENDER_LOOKUP[json.Gender] || SynthesisVoiceGender.Unknown;\n            if (!!json.StyleList && Array.isArray(json.StyleList)) {\n                for (const style of json.StyleList) {\n                    this.privStyleList.push(style);\n                }\n            }\n            this.privSampleRateHertz = json.SampleRateHertz;\n            this.privStatus = json.Status;\n            if (json.ExtendedPropertyMap) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.privExtendedPropertyMap = json.ExtendedPropertyMap;\n            }\n            this.privWordsPerMinute = json.WordsPerMinute;\n            if (Array.isArray(json.SecondaryLocaleList)) {\n                this.privSecondaryLocaleList = [...json.SecondaryLocaleList];\n            }\n            if (Array.isArray(json.RolePlayList)) {\n                this.privRolePlayList = [...json.RolePlayList];\n            }\n        }\n    }\n    get name() {\n        return this.privName;\n    }\n    get locale() {\n        return this.privLocale;\n    }\n    get shortName() {\n        return this.privShortName;\n    }\n    get displayName() {\n        return this.privDisplayName;\n    }\n    get localName() {\n        return this.privLocalName;\n    }\n    get localeName() {\n        return this.privLocaleName;\n    }\n    get gender() {\n        return this.privGender;\n    }\n    get voiceType() {\n        return this.privVoiceType;\n    }\n    get styleList() {\n        return this.privStyleList;\n    }\n    get sampleRateHertz() {\n        return this.privSampleRateHertz;\n    }\n    get status() {\n        return this.privStatus;\n    }\n    get extendedPropertyMap() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return this.privExtendedPropertyMap;\n    }\n    get wordsPerMinute() {\n        return this.privWordsPerMinute;\n    }\n    get secondaryLocaleList() {\n        return this.privSecondaryLocaleList;\n    }\n    get rolePlayList() {\n        return this.privRolePlayList;\n    }\n}\nexports.VoiceInfo = VoiceInfo;\n\n//# sourceMappingURL=VoiceInfo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Wb2ljZUluZm8uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLDBCQUEwQixHQUFHLDRCQUE0QjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwREFBMEQsNEJBQTRCLEtBQUs7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzREFBc0QsMEJBQTBCLEtBQUs7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjs7QUFFakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1ZvaWNlSW5mby5qcz8wYWZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZvaWNlSW5mbyA9IGV4cG9ydHMuU3ludGhlc2lzVm9pY2VUeXBlID0gZXhwb3J0cy5TeW50aGVzaXNWb2ljZUdlbmRlciA9IHZvaWQgMDtcbi8qKlxuICogRGVmaW5lcyB0aGUgZ2VuZGVyIG9mIHN5bnRoZXNpcyB2b2ljZXMuXG4gKiBBZGRlZCBpbiB2ZXJzaW9uIDEuMjAuMC5cbiAqL1xudmFyIFN5bnRoZXNpc1ZvaWNlR2VuZGVyO1xuKGZ1bmN0aW9uIChTeW50aGVzaXNWb2ljZUdlbmRlcikge1xuICAgIC8qKiBHZW5kZXIgdW5rbm93biAqL1xuICAgIFN5bnRoZXNpc1ZvaWNlR2VuZGVyW1N5bnRoZXNpc1ZvaWNlR2VuZGVyW1wiVW5rbm93blwiXSA9IDBdID0gXCJVbmtub3duXCI7XG4gICAgLyoqIEZlbWFsZSB2b2ljZSAqL1xuICAgIFN5bnRoZXNpc1ZvaWNlR2VuZGVyW1N5bnRoZXNpc1ZvaWNlR2VuZGVyW1wiRmVtYWxlXCJdID0gMV0gPSBcIkZlbWFsZVwiO1xuICAgIC8qKiBNYWxlIHZvaWNlICovXG4gICAgU3ludGhlc2lzVm9pY2VHZW5kZXJbU3ludGhlc2lzVm9pY2VHZW5kZXJbXCJNYWxlXCJdID0gMl0gPSBcIk1hbGVcIjtcbiAgICAvKiogTmV1dHJhbCB2b2ljZSAqL1xuICAgIFN5bnRoZXNpc1ZvaWNlR2VuZGVyW1N5bnRoZXNpc1ZvaWNlR2VuZGVyW1wiTmV1dHJhbFwiXSA9IDNdID0gXCJOZXV0cmFsXCI7XG59KShTeW50aGVzaXNWb2ljZUdlbmRlciA9IGV4cG9ydHMuU3ludGhlc2lzVm9pY2VHZW5kZXIgfHwgKGV4cG9ydHMuU3ludGhlc2lzVm9pY2VHZW5kZXIgPSB7fSkpO1xudmFyIFN5bnRoZXNpc1ZvaWNlVHlwZTtcbihmdW5jdGlvbiAoU3ludGhlc2lzVm9pY2VUeXBlKSB7XG4gICAgU3ludGhlc2lzVm9pY2VUeXBlW1N5bnRoZXNpc1ZvaWNlVHlwZVtcIk9ubGluZU5ldXJhbFwiXSA9IDFdID0gXCJPbmxpbmVOZXVyYWxcIjtcbiAgICBTeW50aGVzaXNWb2ljZVR5cGVbU3ludGhlc2lzVm9pY2VUeXBlW1wiT25saW5lU3RhbmRhcmRcIl0gPSAyXSA9IFwiT25saW5lU3RhbmRhcmRcIjtcbiAgICBTeW50aGVzaXNWb2ljZVR5cGVbU3ludGhlc2lzVm9pY2VUeXBlW1wiT2ZmbGluZU5ldXJhbFwiXSA9IDNdID0gXCJPZmZsaW5lTmV1cmFsXCI7XG4gICAgU3ludGhlc2lzVm9pY2VUeXBlW1N5bnRoZXNpc1ZvaWNlVHlwZVtcIk9mZmxpbmVTdGFuZGFyZFwiXSA9IDRdID0gXCJPZmZsaW5lU3RhbmRhcmRcIjtcbn0pKFN5bnRoZXNpc1ZvaWNlVHlwZSA9IGV4cG9ydHMuU3ludGhlc2lzVm9pY2VUeXBlIHx8IChleHBvcnRzLlN5bnRoZXNpc1ZvaWNlVHlwZSA9IHt9KSk7XG5jb25zdCBHRU5ERVJfTE9PS1VQID0ge1xuICAgIFtTeW50aGVzaXNWb2ljZUdlbmRlcltTeW50aGVzaXNWb2ljZUdlbmRlci5OZXV0cmFsXV06IFN5bnRoZXNpc1ZvaWNlR2VuZGVyLk5ldXRyYWwsXG4gICAgW1N5bnRoZXNpc1ZvaWNlR2VuZGVyW1N5bnRoZXNpc1ZvaWNlR2VuZGVyLk1hbGVdXTogU3ludGhlc2lzVm9pY2VHZW5kZXIuTWFsZSxcbiAgICBbU3ludGhlc2lzVm9pY2VHZW5kZXJbU3ludGhlc2lzVm9pY2VHZW5kZXIuRmVtYWxlXV06IFN5bnRoZXNpc1ZvaWNlR2VuZGVyLkZlbWFsZSxcbn07XG4vKipcbiAqIEluZm9ybWF0aW9uIGFib3V0IFNwZWVjaCBTeW50aGVzaXMgdm9pY2VcbiAqIEFkZGVkIGluIHZlcnNpb24gMS4yMC4wLlxuICogQGNsYXNzIFZvaWNlSW5mb1xuICovXG5jbGFzcyBWb2ljZUluZm8ge1xuICAgIGNvbnN0cnVjdG9yKGpzb24pIHtcbiAgICAgICAgdGhpcy5wcml2U3R5bGVMaXN0ID0gW107XG4gICAgICAgIGlmICghIWpzb24pIHtcbiAgICAgICAgICAgIHRoaXMucHJpdk5hbWUgPSBqc29uLk5hbWU7XG4gICAgICAgICAgICB0aGlzLnByaXZMb2NhbGUgPSBqc29uLkxvY2FsZTtcbiAgICAgICAgICAgIHRoaXMucHJpdlNob3J0TmFtZSA9IGpzb24uU2hvcnROYW1lO1xuICAgICAgICAgICAgdGhpcy5wcml2TG9jYWxlTmFtZSA9IGpzb24uTG9jYWxlTmFtZTtcbiAgICAgICAgICAgIHRoaXMucHJpdkRpc3BsYXlOYW1lID0ganNvbi5EaXNwbGF5TmFtZTtcbiAgICAgICAgICAgIHRoaXMucHJpdkxvY2FsTmFtZSA9IGpzb24uTG9jYWxOYW1lO1xuICAgICAgICAgICAgdGhpcy5wcml2Vm9pY2VUeXBlID0ganNvbi5Wb2ljZVR5cGUuZW5kc1dpdGgoXCJTdGFuZGFyZFwiKSA/IFN5bnRoZXNpc1ZvaWNlVHlwZS5PbmxpbmVTdGFuZGFyZCA6IFN5bnRoZXNpc1ZvaWNlVHlwZS5PbmxpbmVOZXVyYWw7XG4gICAgICAgICAgICB0aGlzLnByaXZHZW5kZXIgPSBHRU5ERVJfTE9PS1VQW2pzb24uR2VuZGVyXSB8fCBTeW50aGVzaXNWb2ljZUdlbmRlci5Vbmtub3duO1xuICAgICAgICAgICAgaWYgKCEhanNvbi5TdHlsZUxpc3QgJiYgQXJyYXkuaXNBcnJheShqc29uLlN0eWxlTGlzdCkpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHN0eWxlIG9mIGpzb24uU3R5bGVMaXN0KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJpdlN0eWxlTGlzdC5wdXNoKHN0eWxlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnByaXZTYW1wbGVSYXRlSGVydHogPSBqc29uLlNhbXBsZVJhdGVIZXJ0ejtcbiAgICAgICAgICAgIHRoaXMucHJpdlN0YXR1cyA9IGpzb24uU3RhdHVzO1xuICAgICAgICAgICAgaWYgKGpzb24uRXh0ZW5kZWRQcm9wZXJ0eU1hcCkge1xuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFzc2lnbm1lbnRcbiAgICAgICAgICAgICAgICB0aGlzLnByaXZFeHRlbmRlZFByb3BlcnR5TWFwID0ganNvbi5FeHRlbmRlZFByb3BlcnR5TWFwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5wcml2V29yZHNQZXJNaW51dGUgPSBqc29uLldvcmRzUGVyTWludXRlO1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoanNvbi5TZWNvbmRhcnlMb2NhbGVMaXN0KSkge1xuICAgICAgICAgICAgICAgIHRoaXMucHJpdlNlY29uZGFyeUxvY2FsZUxpc3QgPSBbLi4uanNvbi5TZWNvbmRhcnlMb2NhbGVMaXN0XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGpzb24uUm9sZVBsYXlMaXN0KSkge1xuICAgICAgICAgICAgICAgIHRoaXMucHJpdlJvbGVQbGF5TGlzdCA9IFsuLi5qc29uLlJvbGVQbGF5TGlzdF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZOYW1lO1xuICAgIH1cbiAgICBnZXQgbG9jYWxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2TG9jYWxlO1xuICAgIH1cbiAgICBnZXQgc2hvcnROYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U2hvcnROYW1lO1xuICAgIH1cbiAgICBnZXQgZGlzcGxheU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZEaXNwbGF5TmFtZTtcbiAgICB9XG4gICAgZ2V0IGxvY2FsTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkxvY2FsTmFtZTtcbiAgICB9XG4gICAgZ2V0IGxvY2FsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZMb2NhbGVOYW1lO1xuICAgIH1cbiAgICBnZXQgZ2VuZGVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2R2VuZGVyO1xuICAgIH1cbiAgICBnZXQgdm9pY2VUeXBlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2Vm9pY2VUeXBlO1xuICAgIH1cbiAgICBnZXQgc3R5bGVMaXN0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3R5bGVMaXN0O1xuICAgIH1cbiAgICBnZXQgc2FtcGxlUmF0ZUhlcnR6KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U2FtcGxlUmF0ZUhlcnR6O1xuICAgIH1cbiAgICBnZXQgc3RhdHVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2U3RhdHVzO1xuICAgIH1cbiAgICBnZXQgZXh0ZW5kZWRQcm9wZXJ0eU1hcCgpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtcmV0dXJuXG4gICAgICAgIHJldHVybiB0aGlzLnByaXZFeHRlbmRlZFByb3BlcnR5TWFwO1xuICAgIH1cbiAgICBnZXQgd29yZHNQZXJNaW51dGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZXb3Jkc1Blck1pbnV0ZTtcbiAgICB9XG4gICAgZ2V0IHNlY29uZGFyeUxvY2FsZUxpc3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZTZWNvbmRhcnlMb2NhbGVMaXN0O1xuICAgIH1cbiAgICBnZXQgcm9sZVBsYXlMaXN0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2Um9sZVBsYXlMaXN0O1xuICAgIH1cbn1cbmV4cG9ydHMuVm9pY2VJbmZvID0gVm9pY2VJbmZvO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Wb2ljZUluZm8uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceInfo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfile.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfile.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoiceProfile = void 0;\n/**\n * Defines Voice Profile class for Speaker Recognition\n * @class VoiceProfile\n */\nclass VoiceProfile {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} profileId - profileId of this Voice Profile.\n     * @param {VoiceProfileType} profileType - profileType of this Voice Profile.\n     */\n    constructor(profileId, profileType) {\n        this.privId = profileId;\n        this.privProfileType = profileType;\n    }\n    /**\n     * profileId of this Voice Profile instance\n     * @member VoiceProfile.prototype.profileId\n     * @function\n     * @public\n     * @returns {string} profileId of this Voice Profile instance.\n     */\n    get profileId() {\n        return this.privId;\n    }\n    /**\n     * profileType of this Voice Profile instance\n     * @member VoiceProfile.prototype.profileType\n     * @function\n     * @public\n     * @returns {VoiceProfileType} profile type of this Voice Profile instance.\n     */\n    get profileType() {\n        return this.privProfileType;\n    }\n}\nexports.VoiceProfile = VoiceProfile;\n\n//# sourceMappingURL=VoiceProfile.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Wb2ljZVByb2ZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsa0JBQWtCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9COztBQUVwQiIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvVm9pY2VQcm9maWxlLmpzPzEwYmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVm9pY2VQcm9maWxlID0gdm9pZCAwO1xuLyoqXG4gKiBEZWZpbmVzIFZvaWNlIFByb2ZpbGUgY2xhc3MgZm9yIFNwZWFrZXIgUmVjb2duaXRpb25cbiAqIEBjbGFzcyBWb2ljZVByb2ZpbGVcbiAqL1xuY2xhc3MgVm9pY2VQcm9maWxlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCBpbml0aWFsaXplcyBhbiBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzLlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwcm9maWxlSWQgLSBwcm9maWxlSWQgb2YgdGhpcyBWb2ljZSBQcm9maWxlLlxuICAgICAqIEBwYXJhbSB7Vm9pY2VQcm9maWxlVHlwZX0gcHJvZmlsZVR5cGUgLSBwcm9maWxlVHlwZSBvZiB0aGlzIFZvaWNlIFByb2ZpbGUuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocHJvZmlsZUlkLCBwcm9maWxlVHlwZSkge1xuICAgICAgICB0aGlzLnByaXZJZCA9IHByb2ZpbGVJZDtcbiAgICAgICAgdGhpcy5wcml2UHJvZmlsZVR5cGUgPSBwcm9maWxlVHlwZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogcHJvZmlsZUlkIG9mIHRoaXMgVm9pY2UgUHJvZmlsZSBpbnN0YW5jZVxuICAgICAqIEBtZW1iZXIgVm9pY2VQcm9maWxlLnByb3RvdHlwZS5wcm9maWxlSWRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge3N0cmluZ30gcHJvZmlsZUlkIG9mIHRoaXMgVm9pY2UgUHJvZmlsZSBpbnN0YW5jZS5cbiAgICAgKi9cbiAgICBnZXQgcHJvZmlsZUlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2SWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHByb2ZpbGVUeXBlIG9mIHRoaXMgVm9pY2UgUHJvZmlsZSBpbnN0YW5jZVxuICAgICAqIEBtZW1iZXIgVm9pY2VQcm9maWxlLnByb3RvdHlwZS5wcm9maWxlVHlwZVxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcmV0dXJucyB7Vm9pY2VQcm9maWxlVHlwZX0gcHJvZmlsZSB0eXBlIG9mIHRoaXMgVm9pY2UgUHJvZmlsZSBpbnN0YW5jZS5cbiAgICAgKi9cbiAgICBnZXQgcHJvZmlsZVR5cGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQcm9maWxlVHlwZTtcbiAgICB9XG59XG5leHBvcnRzLlZvaWNlUHJvZmlsZSA9IFZvaWNlUHJvZmlsZTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Vm9pY2VQcm9maWxlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfile.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileClient.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileClient.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoiceProfileClient = void 0;\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst AudioConfig_js_1 = __webpack_require__(/*! ./Audio/AudioConfig.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/AudioConfig.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Defines VoiceProfileClient class for Speaker Recognition\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\n * @class VoiceProfileClient\n */\nclass VoiceProfileClient extends Exports_js_2.Recognizer {\n    /**\n     * VoiceProfileClient constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer (authentication key, region, &c)\n     */\n    constructor(speechConfig) {\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\n        const speechConfigImpl = speechConfig;\n        Contracts_js_1.Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        super(AudioConfig_js_1.AudioConfig.fromStreamInput(Exports_js_2.AudioInputStream.createPushStream()), speechConfigImpl.properties, new Exports_js_1.VoiceProfileConnectionFactory());\n        this.privProperties = speechConfigImpl.properties.clone();\n        this.privVoiceAdapter = this.privReco;\n        this.privDisposedVoiceAdapter = false;\n    }\n    /**\n     * The collection of properties and their values defined for this VoiceProfileClient.\n     * @member VoiceProfileClient.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this VoiceProfileClient.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member VoiceProfileClient.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member VoiceProfileClient.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts_js_1.Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(Exports_js_2.PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * Create a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.createProfileAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfileType} profileType Type of Voice Profile to be created\n     * @param {string} lang Language string (locale) for Voice Profile\n     * @return {Promise<VoiceProfile>} - Promise of a VoiceProfile.\n     */\n    async createProfileAsync(profileType, lang) {\n        const profileIds = await this.privVoiceAdapter.createProfile(profileType, lang);\n        return new Exports_js_2.VoiceProfile(profileIds[0], profileType);\n    }\n    /**\n     * Get current information of a voice profile\n     * @member VoiceProfileClient.prototype.retrieveEnrollmentResultAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfile} profile Voice Profile to retrieve info for\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\n     */\n    async retrieveEnrollmentResultAsync(profile) {\n        return this.privVoiceAdapter.retrieveEnrollmentResult(profile);\n    }\n    /**\n     * Get all voice profiles on account with given voice profile type\n     * @member VoiceProfileClient.prototype.getAllProfilesAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfileType} profileType profile type (identification/verification) for which to list profiles\n     * @return {Promise<VoiceProfileEnrollmentResult[]>} - Promise of an array of VoiceProfileEnrollmentResults.\n     */\n    async getAllProfilesAsync(profileType) {\n        return this.privVoiceAdapter.getAllProfiles(profileType);\n        /*\n        const result: { json: { value: EnrollmentResultJSON[] } } = await this.privAdapter.getProfiles(profileType);\n        if (profileType === VoiceProfileType.TextIndependentIdentification) {\n            return VoiceProfileEnrollmentResult.FromIdentificationProfileList(result.json);\n        }\n        return VoiceProfileEnrollmentResult.FromVerificationProfileList(result.json);\n        */\n    }\n    /**\n     * Get valid authorization phrases for voice profile enrollment\n     * @member VoiceProfileClient.prototype.getActivationPhrasesAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfileType} profileType Profile Type to get activation phrases for\n     * @param {string} lang Language string (locale) for Voice Profile\n     */\n    async getActivationPhrasesAsync(profileType, lang) {\n        return this.privVoiceAdapter.getActivationPhrases(profileType, lang);\n    }\n    /**\n     * Create a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.enrollProfileAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfile} profile Voice Profile to create enrollment for\n     * @param {AudioConfig} audioConfig source info from which to create enrollment\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\n     */\n    async enrollProfileAsync(profile, audioConfig) {\n        const configImpl = audioConfig;\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(configImpl, \"audioConfig\");\n        this.audioConfig = audioConfig;\n        this.privVoiceAdapter.SpeakerAudioSource = configImpl;\n        return this.privVoiceAdapter.enrollProfile(profile);\n    }\n    /**\n     * Delete a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.deleteProfileAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfile} profile Voice Profile to be deleted\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\n     */\n    async deleteProfileAsync(profile) {\n        return this.privVoiceAdapter.deleteProfile(profile);\n    }\n    /**\n     * Remove all enrollments for a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.resetProfileAsync\n     * @function\n     * @public\n     * @async\n     * @param {VoiceProfile} profile Voice Profile to be reset\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\n     */\n    async resetProfileAsync(profile) {\n        return this.privVoiceAdapter.resetProfile(profile);\n    }\n    /**\n     * Clean up object and close underlying connection\n     * @member VoiceProfileClient.prototype.close\n     * @function\n     * @async\n     * @public\n     */\n    async close() {\n        await this.dispose(true);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioImpl = audioConfig;\n        return new Exports_js_1.VoiceServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\n    }\n    async dispose(disposing) {\n        if (this.privDisposedVoiceAdapter) {\n            return;\n        }\n        this.privDisposedVoiceAdapter = true;\n        if (disposing) {\n            await super.dispose(disposing);\n        }\n    }\n    createRecognizerConfig(speechConfig) {\n        return new Exports_js_1.RecognizerConfig(speechConfig, this.properties);\n    }\n    getResult(result, successReason) {\n        const response = new Exports_js_2.VoiceProfileResult(result.ok ? successReason : Exports_js_2.ResultReason.Canceled, result.statusText);\n        return (response);\n    }\n}\nexports.VoiceProfileClient = VoiceProfileClient;\n\n//# sourceMappingURL=VoiceProfileClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileEnrollmentResult.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileEnrollmentResult.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoiceProfileEnrollmentCancellationDetails = exports.VoiceProfileEnrollmentResult = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Output format\n * @class VoiceProfileEnrollmentResult\n */\nclass VoiceProfileEnrollmentResult {\n    constructor(reason, json, statusText) {\n        this.privReason = reason;\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        if (this.privReason !== Exports_js_2.ResultReason.Canceled) {\n            if (!!json) {\n                this.privDetails = JSON.parse(json);\n                if (this.privDetails.enrollmentStatus.toLowerCase() === \"enrolling\") {\n                    this.privReason = Exports_js_2.ResultReason.EnrollingVoiceProfile;\n                }\n            }\n        }\n        else {\n            this.privErrorDetails = statusText;\n            this.privProperties.setProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.ServiceError]);\n        }\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get enrollmentsCount() {\n        return this.privDetails.enrollmentsCount;\n    }\n    get enrollmentsLength() {\n        return this.privDetails.enrollmentsLength;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get enrollmentResultDetails() {\n        return this.privDetails;\n    }\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    static FromIdentificationProfileList(json) {\n        const results = [];\n        for (const item of json.value) {\n            const reason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\n                Exports_js_2.ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\n                Exports_js_2.ResultReason.EnrolledVoiceProfile : Exports_js_2.ResultReason.Canceled;\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\n            result.privDetails = this.getIdentificationDetails(item);\n            results.push(result);\n        }\n        return results;\n    }\n    static FromVerificationProfileList(json) {\n        const results = [];\n        for (const item of json.value) {\n            const reason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\n                Exports_js_2.ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\n                Exports_js_2.ResultReason.EnrolledVoiceProfile : Exports_js_2.ResultReason.Canceled;\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\n            result.privDetails = this.getVerificationDetails(item);\n            results.push(result);\n        }\n        return results;\n    }\n    static getIdentificationDetails(json) {\n        return {\n            audioLength: json.audioLength ? parseFloat(json.audioLength) : 0,\n            audioSpeechLength: json.audioSpeechLength ? parseFloat(json.audioSpeechLength) : 0,\n            enrollmentStatus: json.enrollmentStatus,\n            enrollmentsCount: json.enrollmentsCount || 0,\n            enrollmentsLength: json.enrollmentsLength ? parseFloat(json.enrollmentsLength) : 0,\n            enrollmentsSpeechLength: json.enrollmentsSpeechLength ? parseFloat(json.enrollmentsSpeechLength) : 0,\n            profileId: json.profileId || json.identificationProfileId,\n            remainingEnrollmentsSpeechLength: json.remainingEnrollmentsSpeechLength ? parseFloat(json.remainingEnrollmentsSpeechLength) : 0\n        };\n    }\n    static getVerificationDetails(json) {\n        return {\n            audioLength: json.audioLength ? parseFloat(json.audioLength) : 0,\n            audioSpeechLength: json.audioSpeechLength ? parseFloat(json.audioSpeechLength) : 0,\n            enrollmentStatus: json.enrollmentStatus,\n            enrollmentsCount: json.enrollmentsCount,\n            enrollmentsLength: json.enrollmentsLength ? parseFloat(json.enrollmentsLength) : 0,\n            enrollmentsSpeechLength: json.enrollmentsSpeechLength ? parseFloat(json.enrollmentsSpeechLength) : 0,\n            profileId: json.profileId || json.verificationProfileId,\n            remainingEnrollmentsCount: json.remainingEnrollments || json.remainingEnrollmentsCount,\n            remainingEnrollmentsSpeechLength: json.remainingEnrollmentsSpeechLength ? parseFloat(json.remainingEnrollmentsSpeechLength) : 0\n        };\n    }\n}\nexports.VoiceProfileEnrollmentResult = VoiceProfileEnrollmentResult;\n/**\n * @class VoiceProfileEnrollmentCancellationDetails\n */\nclass VoiceProfileEnrollmentCancellationDetails extends Exports_js_2.CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of VoiceProfileEnrollmentCancellationDetails object for the canceled VoiceProfileEnrollmentResult.\n     * @member VoiceProfileEnrollmentCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {VoiceProfileEnrollmentResult} result - The result that was canceled.\n     * @returns {VoiceProfileEnrollmentCancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        const reason = Exports_js_2.CancellationReason.Error;\n        let errorCode = Exports_js_2.CancellationErrorCode.NoError;\n        if (!!result.properties) {\n            errorCode = Exports_js_2.CancellationErrorCode[result.properties.getProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.NoError])]; //eslint-disable-line\n        }\n        return new VoiceProfileEnrollmentCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\nexports.VoiceProfileEnrollmentCancellationDetails = VoiceProfileEnrollmentCancellationDetails;\n\n//# sourceMappingURL=VoiceProfileEnrollmentResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Wb2ljZVByb2ZpbGVFbnJvbGxtZW50UmVzdWx0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpREFBaUQsR0FBRyxvQ0FBb0M7QUFDeEY7QUFDQSxxQkFBcUIsbUJBQU8sQ0FBQyx5SUFBNkI7QUFDMUQscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhCQUE4QjtBQUM3QyxpQkFBaUIsMkNBQTJDO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyTkFBMk47QUFDM047QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQ7O0FBRWpEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Wb2ljZVByb2ZpbGVFbnJvbGxtZW50UmVzdWx0LmpzPzFkOGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVm9pY2VQcm9maWxlRW5yb2xsbWVudENhbmNlbGxhdGlvbkRldGFpbHMgPSBleHBvcnRzLlZvaWNlUHJvZmlsZUVucm9sbG1lbnRSZXN1bHQgPSB2b2lkIDA7XG4vKiBlc2xpbnQtZGlzYWJsZSBtYXgtY2xhc3Nlcy1wZXItZmlsZSAqL1xuY29uc3QgRXhwb3J0c19qc18xID0gcmVxdWlyZShcIi4uL2NvbW1vbi5zcGVlY2gvRXhwb3J0cy5qc1wiKTtcbmNvbnN0IEV4cG9ydHNfanNfMiA9IHJlcXVpcmUoXCIuL0V4cG9ydHMuanNcIik7XG4vKipcbiAqIE91dHB1dCBmb3JtYXRcbiAqIEBjbGFzcyBWb2ljZVByb2ZpbGVFbnJvbGxtZW50UmVzdWx0XG4gKi9cbmNsYXNzIFZvaWNlUHJvZmlsZUVucm9sbG1lbnRSZXN1bHQge1xuICAgIGNvbnN0cnVjdG9yKHJlYXNvbiwganNvbiwgc3RhdHVzVGV4dCkge1xuICAgICAgICB0aGlzLnByaXZSZWFzb24gPSByZWFzb247XG4gICAgICAgIHRoaXMucHJpdlByb3BlcnRpZXMgPSBuZXcgRXhwb3J0c19qc18yLlByb3BlcnR5Q29sbGVjdGlvbigpO1xuICAgICAgICBpZiAodGhpcy5wcml2UmVhc29uICE9PSBFeHBvcnRzX2pzXzIuUmVzdWx0UmVhc29uLkNhbmNlbGVkKSB7XG4gICAgICAgICAgICBpZiAoISFqc29uKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wcml2RGV0YWlscyA9IEpTT04ucGFyc2UoanNvbik7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucHJpdkRldGFpbHMuZW5yb2xsbWVudFN0YXR1cy50b0xvd2VyQ2FzZSgpID09PSBcImVucm9sbGluZ1wiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJpdlJlYXNvbiA9IEV4cG9ydHNfanNfMi5SZXN1bHRSZWFzb24uRW5yb2xsaW5nVm9pY2VQcm9maWxlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucHJpdkVycm9yRGV0YWlscyA9IHN0YXR1c1RleHQ7XG4gICAgICAgICAgICB0aGlzLnByaXZQcm9wZXJ0aWVzLnNldFByb3BlcnR5KEV4cG9ydHNfanNfMS5DYW5jZWxsYXRpb25FcnJvckNvZGVQcm9wZXJ0eU5hbWUsIEV4cG9ydHNfanNfMi5DYW5jZWxsYXRpb25FcnJvckNvZGVbRXhwb3J0c19qc18yLkNhbmNlbGxhdGlvbkVycm9yQ29kZS5TZXJ2aWNlRXJyb3JdKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgcmVhc29uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVhc29uO1xuICAgIH1cbiAgICBnZXQgZW5yb2xsbWVudHNDb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdkRldGFpbHMuZW5yb2xsbWVudHNDb3VudDtcbiAgICB9XG4gICAgZ2V0IGVucm9sbG1lbnRzTGVuZ3RoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RGV0YWlscy5lbnJvbGxtZW50c0xlbmd0aDtcbiAgICB9XG4gICAgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQcm9wZXJ0aWVzO1xuICAgIH1cbiAgICBnZXQgZW5yb2xsbWVudFJlc3VsdERldGFpbHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZEZXRhaWxzO1xuICAgIH1cbiAgICBnZXQgZXJyb3JEZXRhaWxzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2RXJyb3JEZXRhaWxzO1xuICAgIH1cbiAgICBzdGF0aWMgRnJvbUlkZW50aWZpY2F0aW9uUHJvZmlsZUxpc3QoanNvbikge1xuICAgICAgICBjb25zdCByZXN1bHRzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBqc29uLnZhbHVlKSB7XG4gICAgICAgICAgICBjb25zdCByZWFzb24gPSBpdGVtLmVucm9sbG1lbnRTdGF0dXMudG9Mb3dlckNhc2UoKSA9PT0gXCJlbnJvbGxpbmdcIiA/XG4gICAgICAgICAgICAgICAgRXhwb3J0c19qc18yLlJlc3VsdFJlYXNvbi5FbnJvbGxpbmdWb2ljZVByb2ZpbGUgOiBpdGVtLmVucm9sbG1lbnRTdGF0dXMudG9Mb3dlckNhc2UoKSA9PT0gXCJlbnJvbGxlZFwiID9cbiAgICAgICAgICAgICAgICBFeHBvcnRzX2pzXzIuUmVzdWx0UmVhc29uLkVucm9sbGVkVm9pY2VQcm9maWxlIDogRXhwb3J0c19qc18yLlJlc3VsdFJlYXNvbi5DYW5jZWxlZDtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBWb2ljZVByb2ZpbGVFbnJvbGxtZW50UmVzdWx0KHJlYXNvbiwgbnVsbCwgbnVsbCk7XG4gICAgICAgICAgICByZXN1bHQucHJpdkRldGFpbHMgPSB0aGlzLmdldElkZW50aWZpY2F0aW9uRGV0YWlscyhpdGVtKTtcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaChyZXN1bHQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH1cbiAgICBzdGF0aWMgRnJvbVZlcmlmaWNhdGlvblByb2ZpbGVMaXN0KGpzb24pIHtcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YganNvbi52YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgcmVhc29uID0gaXRlbS5lbnJvbGxtZW50U3RhdHVzLnRvTG93ZXJDYXNlKCkgPT09IFwiZW5yb2xsaW5nXCIgP1xuICAgICAgICAgICAgICAgIEV4cG9ydHNfanNfMi5SZXN1bHRSZWFzb24uRW5yb2xsaW5nVm9pY2VQcm9maWxlIDogaXRlbS5lbnJvbGxtZW50U3RhdHVzLnRvTG93ZXJDYXNlKCkgPT09IFwiZW5yb2xsZWRcIiA/XG4gICAgICAgICAgICAgICAgRXhwb3J0c19qc18yLlJlc3VsdFJlYXNvbi5FbnJvbGxlZFZvaWNlUHJvZmlsZSA6IEV4cG9ydHNfanNfMi5SZXN1bHRSZWFzb24uQ2FuY2VsZWQ7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgVm9pY2VQcm9maWxlRW5yb2xsbWVudFJlc3VsdChyZWFzb24sIG51bGwsIG51bGwpO1xuICAgICAgICAgICAgcmVzdWx0LnByaXZEZXRhaWxzID0gdGhpcy5nZXRWZXJpZmljYXRpb25EZXRhaWxzKGl0ZW0pO1xuICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgfVxuICAgIHN0YXRpYyBnZXRJZGVudGlmaWNhdGlvbkRldGFpbHMoanNvbikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYXVkaW9MZW5ndGg6IGpzb24uYXVkaW9MZW5ndGggPyBwYXJzZUZsb2F0KGpzb24uYXVkaW9MZW5ndGgpIDogMCxcbiAgICAgICAgICAgIGF1ZGlvU3BlZWNoTGVuZ3RoOiBqc29uLmF1ZGlvU3BlZWNoTGVuZ3RoID8gcGFyc2VGbG9hdChqc29uLmF1ZGlvU3BlZWNoTGVuZ3RoKSA6IDAsXG4gICAgICAgICAgICBlbnJvbGxtZW50U3RhdHVzOiBqc29uLmVucm9sbG1lbnRTdGF0dXMsXG4gICAgICAgICAgICBlbnJvbGxtZW50c0NvdW50OiBqc29uLmVucm9sbG1lbnRzQ291bnQgfHwgMCxcbiAgICAgICAgICAgIGVucm9sbG1lbnRzTGVuZ3RoOiBqc29uLmVucm9sbG1lbnRzTGVuZ3RoID8gcGFyc2VGbG9hdChqc29uLmVucm9sbG1lbnRzTGVuZ3RoKSA6IDAsXG4gICAgICAgICAgICBlbnJvbGxtZW50c1NwZWVjaExlbmd0aDoganNvbi5lbnJvbGxtZW50c1NwZWVjaExlbmd0aCA/IHBhcnNlRmxvYXQoanNvbi5lbnJvbGxtZW50c1NwZWVjaExlbmd0aCkgOiAwLFxuICAgICAgICAgICAgcHJvZmlsZUlkOiBqc29uLnByb2ZpbGVJZCB8fCBqc29uLmlkZW50aWZpY2F0aW9uUHJvZmlsZUlkLFxuICAgICAgICAgICAgcmVtYWluaW5nRW5yb2xsbWVudHNTcGVlY2hMZW5ndGg6IGpzb24ucmVtYWluaW5nRW5yb2xsbWVudHNTcGVlY2hMZW5ndGggPyBwYXJzZUZsb2F0KGpzb24ucmVtYWluaW5nRW5yb2xsbWVudHNTcGVlY2hMZW5ndGgpIDogMFxuICAgICAgICB9O1xuICAgIH1cbiAgICBzdGF0aWMgZ2V0VmVyaWZpY2F0aW9uRGV0YWlscyhqc29uKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBhdWRpb0xlbmd0aDoganNvbi5hdWRpb0xlbmd0aCA/IHBhcnNlRmxvYXQoanNvbi5hdWRpb0xlbmd0aCkgOiAwLFxuICAgICAgICAgICAgYXVkaW9TcGVlY2hMZW5ndGg6IGpzb24uYXVkaW9TcGVlY2hMZW5ndGggPyBwYXJzZUZsb2F0KGpzb24uYXVkaW9TcGVlY2hMZW5ndGgpIDogMCxcbiAgICAgICAgICAgIGVucm9sbG1lbnRTdGF0dXM6IGpzb24uZW5yb2xsbWVudFN0YXR1cyxcbiAgICAgICAgICAgIGVucm9sbG1lbnRzQ291bnQ6IGpzb24uZW5yb2xsbWVudHNDb3VudCxcbiAgICAgICAgICAgIGVucm9sbG1lbnRzTGVuZ3RoOiBqc29uLmVucm9sbG1lbnRzTGVuZ3RoID8gcGFyc2VGbG9hdChqc29uLmVucm9sbG1lbnRzTGVuZ3RoKSA6IDAsXG4gICAgICAgICAgICBlbnJvbGxtZW50c1NwZWVjaExlbmd0aDoganNvbi5lbnJvbGxtZW50c1NwZWVjaExlbmd0aCA/IHBhcnNlRmxvYXQoanNvbi5lbnJvbGxtZW50c1NwZWVjaExlbmd0aCkgOiAwLFxuICAgICAgICAgICAgcHJvZmlsZUlkOiBqc29uLnByb2ZpbGVJZCB8fCBqc29uLnZlcmlmaWNhdGlvblByb2ZpbGVJZCxcbiAgICAgICAgICAgIHJlbWFpbmluZ0Vucm9sbG1lbnRzQ291bnQ6IGpzb24ucmVtYWluaW5nRW5yb2xsbWVudHMgfHwganNvbi5yZW1haW5pbmdFbnJvbGxtZW50c0NvdW50LFxuICAgICAgICAgICAgcmVtYWluaW5nRW5yb2xsbWVudHNTcGVlY2hMZW5ndGg6IGpzb24ucmVtYWluaW5nRW5yb2xsbWVudHNTcGVlY2hMZW5ndGggPyBwYXJzZUZsb2F0KGpzb24ucmVtYWluaW5nRW5yb2xsbWVudHNTcGVlY2hMZW5ndGgpIDogMFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydHMuVm9pY2VQcm9maWxlRW5yb2xsbWVudFJlc3VsdCA9IFZvaWNlUHJvZmlsZUVucm9sbG1lbnRSZXN1bHQ7XG4vKipcbiAqIEBjbGFzcyBWb2ljZVByb2ZpbGVFbnJvbGxtZW50Q2FuY2VsbGF0aW9uRGV0YWlsc1xuICovXG5jbGFzcyBWb2ljZVByb2ZpbGVFbnJvbGxtZW50Q2FuY2VsbGF0aW9uRGV0YWlscyBleHRlbmRzIEV4cG9ydHNfanNfMi5DYW5jZWxsYXRpb25EZXRhaWxzQmFzZSB7XG4gICAgY29uc3RydWN0b3IocmVhc29uLCBlcnJvckRldGFpbHMsIGVycm9yQ29kZSkge1xuICAgICAgICBzdXBlcihyZWFzb24sIGVycm9yRGV0YWlscywgZXJyb3JDb2RlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiBWb2ljZVByb2ZpbGVFbnJvbGxtZW50Q2FuY2VsbGF0aW9uRGV0YWlscyBvYmplY3QgZm9yIHRoZSBjYW5jZWxlZCBWb2ljZVByb2ZpbGVFbnJvbGxtZW50UmVzdWx0LlxuICAgICAqIEBtZW1iZXIgVm9pY2VQcm9maWxlRW5yb2xsbWVudENhbmNlbGxhdGlvbkRldGFpbHMuZnJvbVJlc3VsdFxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge1ZvaWNlUHJvZmlsZUVucm9sbG1lbnRSZXN1bHR9IHJlc3VsdCAtIFRoZSByZXN1bHQgdGhhdCB3YXMgY2FuY2VsZWQuXG4gICAgICogQHJldHVybnMge1ZvaWNlUHJvZmlsZUVucm9sbG1lbnRDYW5jZWxsYXRpb25EZXRhaWxzfSBUaGUgY2FuY2VsbGF0aW9uIGRldGFpbHMgb2JqZWN0IGJlaW5nIGNyZWF0ZWQuXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SZXN1bHQocmVzdWx0KSB7XG4gICAgICAgIGNvbnN0IHJlYXNvbiA9IEV4cG9ydHNfanNfMi5DYW5jZWxsYXRpb25SZWFzb24uRXJyb3I7XG4gICAgICAgIGxldCBlcnJvckNvZGUgPSBFeHBvcnRzX2pzXzIuQ2FuY2VsbGF0aW9uRXJyb3JDb2RlLk5vRXJyb3I7XG4gICAgICAgIGlmICghIXJlc3VsdC5wcm9wZXJ0aWVzKSB7XG4gICAgICAgICAgICBlcnJvckNvZGUgPSBFeHBvcnRzX2pzXzIuQ2FuY2VsbGF0aW9uRXJyb3JDb2RlW3Jlc3VsdC5wcm9wZXJ0aWVzLmdldFByb3BlcnR5KEV4cG9ydHNfanNfMS5DYW5jZWxsYXRpb25FcnJvckNvZGVQcm9wZXJ0eU5hbWUsIEV4cG9ydHNfanNfMi5DYW5jZWxsYXRpb25FcnJvckNvZGVbRXhwb3J0c19qc18yLkNhbmNlbGxhdGlvbkVycm9yQ29kZS5Ob0Vycm9yXSldOyAvL2VzbGludC1kaXNhYmxlLWxpbmVcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFZvaWNlUHJvZmlsZUVucm9sbG1lbnRDYW5jZWxsYXRpb25EZXRhaWxzKHJlYXNvbiwgcmVzdWx0LmVycm9yRGV0YWlscywgZXJyb3JDb2RlKTtcbiAgICB9XG59XG5leHBvcnRzLlZvaWNlUHJvZmlsZUVucm9sbG1lbnRDYW5jZWxsYXRpb25EZXRhaWxzID0gVm9pY2VQcm9maWxlRW5yb2xsbWVudENhbmNlbGxhdGlvbkRldGFpbHM7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZvaWNlUHJvZmlsZUVucm9sbG1lbnRSZXN1bHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileEnrollmentResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfilePhraseResult.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfilePhraseResult.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoiceProfilePhraseResult = void 0;\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_1 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Output format\n * @class VoiceProfilePhraseResult\n */\nclass VoiceProfilePhraseResult extends Exports_js_1.VoiceProfileResult {\n    constructor(reason, statusText, type, phraseArray) {\n        super(reason, statusText);\n        this.privPhrases = [];\n        Contracts_js_1.Contracts.throwIfNullOrUndefined(phraseArray, \"phrase array\");\n        this.privType = type;\n        if (!!phraseArray && !!phraseArray[0]) {\n            this.privPhrases = phraseArray;\n        }\n    }\n    get phrases() {\n        return this.privPhrases;\n    }\n    get type() {\n        return this.privType;\n    }\n}\nexports.VoiceProfilePhraseResult = VoiceProfilePhraseResult;\n\n//# sourceMappingURL=VoiceProfilePhraseResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Wb2ljZVByb2ZpbGVQaHJhc2VSZXN1bHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdDQUFnQztBQUNoQyx1QkFBdUIsbUJBQU8sQ0FBQyxvSEFBZ0I7QUFDL0MscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDOztBQUVoQyIsInNvdXJjZXMiOlsid2VicGFjazovL2R4dy1haS1sYW5ndWFnZS10ZWFjaGVyLy4vbm9kZV9tb2R1bGVzL21pY3Jvc29mdC1jb2duaXRpdmVzZXJ2aWNlcy1zcGVlY2gtc2RrL2Rpc3RyaWIvbGliL3NyYy9zZGsvVm9pY2VQcm9maWxlUGhyYXNlUmVzdWx0LmpzP2MxMzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVm9pY2VQcm9maWxlUGhyYXNlUmVzdWx0ID0gdm9pZCAwO1xuY29uc3QgQ29udHJhY3RzX2pzXzEgPSByZXF1aXJlKFwiLi9Db250cmFjdHMuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuLyoqXG4gKiBPdXRwdXQgZm9ybWF0XG4gKiBAY2xhc3MgVm9pY2VQcm9maWxlUGhyYXNlUmVzdWx0XG4gKi9cbmNsYXNzIFZvaWNlUHJvZmlsZVBocmFzZVJlc3VsdCBleHRlbmRzIEV4cG9ydHNfanNfMS5Wb2ljZVByb2ZpbGVSZXN1bHQge1xuICAgIGNvbnN0cnVjdG9yKHJlYXNvbiwgc3RhdHVzVGV4dCwgdHlwZSwgcGhyYXNlQXJyYXkpIHtcbiAgICAgICAgc3VwZXIocmVhc29uLCBzdGF0dXNUZXh0KTtcbiAgICAgICAgdGhpcy5wcml2UGhyYXNlcyA9IFtdO1xuICAgICAgICBDb250cmFjdHNfanNfMS5Db250cmFjdHMudGhyb3dJZk51bGxPclVuZGVmaW5lZChwaHJhc2VBcnJheSwgXCJwaHJhc2UgYXJyYXlcIik7XG4gICAgICAgIHRoaXMucHJpdlR5cGUgPSB0eXBlO1xuICAgICAgICBpZiAoISFwaHJhc2VBcnJheSAmJiAhIXBocmFzZUFycmF5WzBdKSB7XG4gICAgICAgICAgICB0aGlzLnByaXZQaHJhc2VzID0gcGhyYXNlQXJyYXk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IHBocmFzZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZQaHJhc2VzO1xuICAgIH1cbiAgICBnZXQgdHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlR5cGU7XG4gICAgfVxufVxuZXhwb3J0cy5Wb2ljZVByb2ZpbGVQaHJhc2VSZXN1bHQgPSBWb2ljZVByb2ZpbGVQaHJhc2VSZXN1bHQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZvaWNlUHJvZmlsZVBocmFzZVJlc3VsdC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfilePhraseResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileResult.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileResult.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoiceProfileCancellationDetails = exports.VoiceProfileResult = void 0;\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = __webpack_require__(/*! ../common.speech/Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Exports.js\");\nconst Contracts_js_1 = __webpack_require__(/*! ./Contracts.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Contracts.js\");\nconst Exports_js_2 = __webpack_require__(/*! ./Exports.js */ \"(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Exports.js\");\n/**\n * Output format\n * @class VoiceProfileResult\n */\nclass VoiceProfileResult {\n    constructor(reason, statusText) {\n        this.privReason = reason;\n        this.privProperties = new Exports_js_2.PropertyCollection();\n        if (reason === Exports_js_2.ResultReason.Canceled) {\n            Contracts_js_1.Contracts.throwIfNullOrUndefined(statusText, \"statusText\");\n            this.privErrorDetails = statusText;\n            this.privProperties.setProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.ServiceError]);\n        }\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\nexports.VoiceProfileResult = VoiceProfileResult;\n/**\n * @class VoiceProfileCancellationDetails\n */\nclass VoiceProfileCancellationDetails extends Exports_js_2.CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of VoiceProfileCancellationDetails object for the canceled VoiceProfileResult.\n     * @member VoiceProfileCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {VoiceProfileResult} result - The result that was canceled.\n     * @returns {VoiceProfileCancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        const reason = Exports_js_2.CancellationReason.Error;\n        let errorCode = Exports_js_2.CancellationErrorCode.NoError;\n        if (!!result.properties) {\n            errorCode = Exports_js_2.CancellationErrorCode[result.properties.getProperty(Exports_js_1.CancellationErrorCodePropertyName, Exports_js_2.CancellationErrorCode[Exports_js_2.CancellationErrorCode.NoError])]; //eslint-disable-line\n        }\n        return new VoiceProfileCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\nexports.VoiceProfileCancellationDetails = VoiceProfileCancellationDetails;\n\n//# sourceMappingURL=VoiceProfileResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Wb2ljZVByb2ZpbGVSZXN1bHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVDQUF1QyxHQUFHLDBCQUEwQjtBQUNwRTtBQUNBLHFCQUFxQixtQkFBTyxDQUFDLHlJQUE2QjtBQUMxRCx1QkFBdUIsbUJBQU8sQ0FBQyxvSEFBZ0I7QUFDL0MscUJBQXFCLG1CQUFPLENBQUMsZ0hBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0JBQW9CO0FBQ25DLGlCQUFpQixpQ0FBaUM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJOQUEyTjtBQUMzTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qzs7QUFFdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9keHctYWktbGFuZ3VhZ2UtdGVhY2hlci8uL25vZGVfbW9kdWxlcy9taWNyb3NvZnQtY29nbml0aXZlc2VydmljZXMtc3BlZWNoLXNkay9kaXN0cmliL2xpYi9zcmMvc2RrL1ZvaWNlUHJvZmlsZVJlc3VsdC5qcz8wNTAwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZvaWNlUHJvZmlsZUNhbmNlbGxhdGlvbkRldGFpbHMgPSBleHBvcnRzLlZvaWNlUHJvZmlsZVJlc3VsdCA9IHZvaWQgMDtcbi8qIGVzbGludC1kaXNhYmxlIG1heC1jbGFzc2VzLXBlci1maWxlICovXG5jb25zdCBFeHBvcnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vY29tbW9uLnNwZWVjaC9FeHBvcnRzLmpzXCIpO1xuY29uc3QgQ29udHJhY3RzX2pzXzEgPSByZXF1aXJlKFwiLi9Db250cmFjdHMuanNcIik7XG5jb25zdCBFeHBvcnRzX2pzXzIgPSByZXF1aXJlKFwiLi9FeHBvcnRzLmpzXCIpO1xuLyoqXG4gKiBPdXRwdXQgZm9ybWF0XG4gKiBAY2xhc3MgVm9pY2VQcm9maWxlUmVzdWx0XG4gKi9cbmNsYXNzIFZvaWNlUHJvZmlsZVJlc3VsdCB7XG4gICAgY29uc3RydWN0b3IocmVhc29uLCBzdGF0dXNUZXh0KSB7XG4gICAgICAgIHRoaXMucHJpdlJlYXNvbiA9IHJlYXNvbjtcbiAgICAgICAgdGhpcy5wcml2UHJvcGVydGllcyA9IG5ldyBFeHBvcnRzX2pzXzIuUHJvcGVydHlDb2xsZWN0aW9uKCk7XG4gICAgICAgIGlmIChyZWFzb24gPT09IEV4cG9ydHNfanNfMi5SZXN1bHRSZWFzb24uQ2FuY2VsZWQpIHtcbiAgICAgICAgICAgIENvbnRyYWN0c19qc18xLkNvbnRyYWN0cy50aHJvd0lmTnVsbE9yVW5kZWZpbmVkKHN0YXR1c1RleHQsIFwic3RhdHVzVGV4dFwiKTtcbiAgICAgICAgICAgIHRoaXMucHJpdkVycm9yRGV0YWlscyA9IHN0YXR1c1RleHQ7XG4gICAgICAgICAgICB0aGlzLnByaXZQcm9wZXJ0aWVzLnNldFByb3BlcnR5KEV4cG9ydHNfanNfMS5DYW5jZWxsYXRpb25FcnJvckNvZGVQcm9wZXJ0eU5hbWUsIEV4cG9ydHNfanNfMi5DYW5jZWxsYXRpb25FcnJvckNvZGVbRXhwb3J0c19qc18yLkNhbmNlbGxhdGlvbkVycm9yQ29kZS5TZXJ2aWNlRXJyb3JdKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgcmVhc29uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcml2UmVhc29uO1xuICAgIH1cbiAgICBnZXQgcHJvcGVydGllcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpdlByb3BlcnRpZXM7XG4gICAgfVxuICAgIGdldCBlcnJvckRldGFpbHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByaXZFcnJvckRldGFpbHM7XG4gICAgfVxufVxuZXhwb3J0cy5Wb2ljZVByb2ZpbGVSZXN1bHQgPSBWb2ljZVByb2ZpbGVSZXN1bHQ7XG4vKipcbiAqIEBjbGFzcyBWb2ljZVByb2ZpbGVDYW5jZWxsYXRpb25EZXRhaWxzXG4gKi9cbmNsYXNzIFZvaWNlUHJvZmlsZUNhbmNlbGxhdGlvbkRldGFpbHMgZXh0ZW5kcyBFeHBvcnRzX2pzXzIuQ2FuY2VsbGF0aW9uRGV0YWlsc0Jhc2Uge1xuICAgIGNvbnN0cnVjdG9yKHJlYXNvbiwgZXJyb3JEZXRhaWxzLCBlcnJvckNvZGUpIHtcbiAgICAgICAgc3VwZXIocmVhc29uLCBlcnJvckRldGFpbHMsIGVycm9yQ29kZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgVm9pY2VQcm9maWxlQ2FuY2VsbGF0aW9uRGV0YWlscyBvYmplY3QgZm9yIHRoZSBjYW5jZWxlZCBWb2ljZVByb2ZpbGVSZXN1bHQuXG4gICAgICogQG1lbWJlciBWb2ljZVByb2ZpbGVDYW5jZWxsYXRpb25EZXRhaWxzLmZyb21SZXN1bHRcbiAgICAgKiBAZnVuY3Rpb25cbiAgICAgKiBAcHVibGljXG4gICAgICogQHBhcmFtIHtWb2ljZVByb2ZpbGVSZXN1bHR9IHJlc3VsdCAtIFRoZSByZXN1bHQgdGhhdCB3YXMgY2FuY2VsZWQuXG4gICAgICogQHJldHVybnMge1ZvaWNlUHJvZmlsZUNhbmNlbGxhdGlvbkRldGFpbHN9IFRoZSBjYW5jZWxsYXRpb24gZGV0YWlscyBvYmplY3QgYmVpbmcgY3JlYXRlZC5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVJlc3VsdChyZXN1bHQpIHtcbiAgICAgICAgY29uc3QgcmVhc29uID0gRXhwb3J0c19qc18yLkNhbmNlbGxhdGlvblJlYXNvbi5FcnJvcjtcbiAgICAgICAgbGV0IGVycm9yQ29kZSA9IEV4cG9ydHNfanNfMi5DYW5jZWxsYXRpb25FcnJvckNvZGUuTm9FcnJvcjtcbiAgICAgICAgaWYgKCEhcmVzdWx0LnByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgIGVycm9yQ29kZSA9IEV4cG9ydHNfanNfMi5DYW5jZWxsYXRpb25FcnJvckNvZGVbcmVzdWx0LnByb3BlcnRpZXMuZ2V0UHJvcGVydHkoRXhwb3J0c19qc18xLkNhbmNlbGxhdGlvbkVycm9yQ29kZVByb3BlcnR5TmFtZSwgRXhwb3J0c19qc18yLkNhbmNlbGxhdGlvbkVycm9yQ29kZVtFeHBvcnRzX2pzXzIuQ2FuY2VsbGF0aW9uRXJyb3JDb2RlLk5vRXJyb3JdKV07IC8vZXNsaW50LWRpc2FibGUtbGluZVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgVm9pY2VQcm9maWxlQ2FuY2VsbGF0aW9uRGV0YWlscyhyZWFzb24sIHJlc3VsdC5lcnJvckRldGFpbHMsIGVycm9yQ29kZSk7XG4gICAgfVxufVxuZXhwb3J0cy5Wb2ljZVByb2ZpbGVDYW5jZWxsYXRpb25EZXRhaWxzID0gVm9pY2VQcm9maWxlQ2FuY2VsbGF0aW9uRGV0YWlscztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Vm9pY2VQcm9maWxlUmVzdWx0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileType.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileType.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoiceProfileType = void 0;\n/**\n * Output format\n * @class VoiceProfileType\n */\nvar VoiceProfileType;\n(function (VoiceProfileType) {\n    /**\n     * Text independent speaker identification\n     * @member VoiceProfileType.TextIndependentIdentification\n     */\n    VoiceProfileType[VoiceProfileType[\"TextIndependentIdentification\"] = 0] = \"TextIndependentIdentification\";\n    /**\n     * Text dependent speaker verification\n     * @member VoiceProfileType.TextDependentVerification\n     */\n    VoiceProfileType[VoiceProfileType[\"TextDependentVerification\"] = 1] = \"TextDependentVerification\";\n    /**\n     * Text independent speaker verification\n     * @member VoiceProfileType.TextIndependentVerification\n     */\n    VoiceProfileType[VoiceProfileType[\"TextIndependentVerification\"] = 2] = \"TextIndependentVerification\";\n})(VoiceProfileType = exports.VoiceProfileType || (exports.VoiceProfileType = {}));\n\n//# sourceMappingURL=VoiceProfileType.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Wb2ljZVByb2ZpbGVUeXBlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrREFBa0Qsd0JBQXdCLEtBQUs7O0FBRWhGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHh3LWFpLWxhbmd1YWdlLXRlYWNoZXIvLi9ub2RlX21vZHVsZXMvbWljcm9zb2Z0LWNvZ25pdGl2ZXNlcnZpY2VzLXNwZWVjaC1zZGsvZGlzdHJpYi9saWIvc3JjL3Nkay9Wb2ljZVByb2ZpbGVUeXBlLmpzPzdjOGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVm9pY2VQcm9maWxlVHlwZSA9IHZvaWQgMDtcbi8qKlxuICogT3V0cHV0IGZvcm1hdFxuICogQGNsYXNzIFZvaWNlUHJvZmlsZVR5cGVcbiAqL1xudmFyIFZvaWNlUHJvZmlsZVR5cGU7XG4oZnVuY3Rpb24gKFZvaWNlUHJvZmlsZVR5cGUpIHtcbiAgICAvKipcbiAgICAgKiBUZXh0IGluZGVwZW5kZW50IHNwZWFrZXIgaWRlbnRpZmljYXRpb25cbiAgICAgKiBAbWVtYmVyIFZvaWNlUHJvZmlsZVR5cGUuVGV4dEluZGVwZW5kZW50SWRlbnRpZmljYXRpb25cbiAgICAgKi9cbiAgICBWb2ljZVByb2ZpbGVUeXBlW1ZvaWNlUHJvZmlsZVR5cGVbXCJUZXh0SW5kZXBlbmRlbnRJZGVudGlmaWNhdGlvblwiXSA9IDBdID0gXCJUZXh0SW5kZXBlbmRlbnRJZGVudGlmaWNhdGlvblwiO1xuICAgIC8qKlxuICAgICAqIFRleHQgZGVwZW5kZW50IHNwZWFrZXIgdmVyaWZpY2F0aW9uXG4gICAgICogQG1lbWJlciBWb2ljZVByb2ZpbGVUeXBlLlRleHREZXBlbmRlbnRWZXJpZmljYXRpb25cbiAgICAgKi9cbiAgICBWb2ljZVByb2ZpbGVUeXBlW1ZvaWNlUHJvZmlsZVR5cGVbXCJUZXh0RGVwZW5kZW50VmVyaWZpY2F0aW9uXCJdID0gMV0gPSBcIlRleHREZXBlbmRlbnRWZXJpZmljYXRpb25cIjtcbiAgICAvKipcbiAgICAgKiBUZXh0IGluZGVwZW5kZW50IHNwZWFrZXIgdmVyaWZpY2F0aW9uXG4gICAgICogQG1lbWJlciBWb2ljZVByb2ZpbGVUeXBlLlRleHRJbmRlcGVuZGVudFZlcmlmaWNhdGlvblxuICAgICAqL1xuICAgIFZvaWNlUHJvZmlsZVR5cGVbVm9pY2VQcm9maWxlVHlwZVtcIlRleHRJbmRlcGVuZGVudFZlcmlmaWNhdGlvblwiXSA9IDJdID0gXCJUZXh0SW5kZXBlbmRlbnRWZXJpZmljYXRpb25cIjtcbn0pKFZvaWNlUHJvZmlsZVR5cGUgPSBleHBvcnRzLlZvaWNlUHJvZmlsZVR5cGUgfHwgKGV4cG9ydHMuVm9pY2VQcm9maWxlVHlwZSA9IHt9KSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZvaWNlUHJvZmlsZVR5cGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/VoiceProfileType.js\n");

/***/ })

};
;